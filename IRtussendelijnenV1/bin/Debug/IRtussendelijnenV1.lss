
bin\Debug\IRtussendelijnenV1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000034  00800200  000018ee  00001982  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000018ee  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .fuse         00000003  00820000  00820000  000019b6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .comment      00000012  00000000  00000000  000019b9  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000019cc  2**2
                  CONTENTS, READONLY, OCTETS
  5 .debug_aranges 000000f8  00000000  00000000  00001a10  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_info   000014c8  00000000  00000000  00001b08  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_abbrev 00000f02  00000000  00000000  00002fd0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_line   00000f4c  00000000  00000000  00003ed2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_frame  000002dc  00000000  00000000  00004e20  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_str    00000699  00000000  00000000  000050fc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_line_str 00000186  00000000  00000000  00005795  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
       4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
       8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
       c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      10:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      14:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      18:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      1c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      20:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      24:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      28:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      2c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      30:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      34:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      38:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      3c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      40:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      44:	0c 94 04 08 	jmp	0x1008	; 0x1008 <__vector_17>
      48:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      4c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      50:	0c 94 d9 07 	jmp	0xfb2	; 0xfb2 <__vector_20>
      54:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      58:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      5c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      60:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      64:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      68:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      6c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      70:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      74:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      78:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      7c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      80:	0c 94 57 08 	jmp	0x10ae	; 0x10ae <__vector_32>
      84:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      88:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      8c:	0c 94 2c 08 	jmp	0x1058	; 0x1058 <__vector_35>
      90:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      94:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      98:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      9c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      a0:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      a4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      a8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      ac:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      b0:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      b4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      b8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      bc:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      c0:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      c4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      c8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      cc:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      d0:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      d4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      d8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      dc:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      e0:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2

000000f6 <.Loc.1>:
      f6:	a0 e0       	ldi	r26, 0x00	; 0

000000f8 <.Loc.2>:
      f8:	b2 e0       	ldi	r27, 0x02	; 2

000000fa <.Loc.3>:
      fa:	ee ee       	ldi	r30, 0xEE	; 238

000000fc <.Loc.4>:
      fc:	f8 e1       	ldi	r31, 0x18	; 24

000000fe <.Loc.5>:
      fe:	00 e0       	ldi	r16, 0x00	; 0

00000100 <.Loc.6>:
     100:	0b bf       	out	0x3b, r16	; 59

00000102 <.Loc.7>:
     102:	02 c0       	rjmp	.+4      	; 0x108 <.L__do_copy_data_start>

00000104 <.L__do_copy_data_loop>:
     104:	07 90       	elpm	r0, Z+

00000106 <.Loc.9>:
     106:	0d 92       	st	X+, r0

00000108 <.L__do_copy_data_start>:
     108:	a4 33       	cpi	r26, 0x34	; 52

0000010a <.Loc.11>:
     10a:	b1 07       	cpc	r27, r17

0000010c <.Loc.12>:
     10c:	d9 f7       	brne	.-10     	; 0x104 <.L__do_copy_data_loop>

0000010e <L0^A>:
     10e:	0e 94 7f 08 	call	0x10fe	; 0x10fe <main>
     112:	0c 94 75 0c 	jmp	0x18ea	; 0x18ea <_exit>

00000116 <__bad_interrupt>:
     116:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000011a <init_LCDscherm>:
void Check_LCD_isbezig(void);
void LCD_Aan_Uit(void);
void Stuur_LCD_Character(unsigned char LCD_character);

void init_LCDscherm(void)
{
     11a:	0f 93       	push	r16
     11c:	1f 93       	push	r17
     11e:	cf 93       	push	r28
     120:	df 93       	push	r29
     122:	cd b7       	in	r28, 0x3d	; 61
     124:	de b7       	in	r29, 0x3e	; 62
     126:	c2 5b       	subi	r28, 0xB2	; 178
     128:	d1 09       	sbc	r29, r1
     12a:	0f b6       	in	r0, 0x3f	; 63
     12c:	f8 94       	cli
     12e:	de bf       	out	0x3e, r29	; 62
     130:	0f be       	out	0x3f, r0	; 63
     132:	cd bf       	out	0x3d, r28	; 61

00000134 <.Loc.1>:
    DataDir_LCDControl |= (1 << LCDEnable) | (1 << ReadWrite) | (1 << LCDRS);//Data directory register goed zetten
     134:	8a e0       	ldi	r24, 0x0A	; 10
     136:	91 e0       	ldi	r25, 0x01	; 1
     138:	dc 01       	movw	r26, r24
     13a:	2c 91       	ld	r18, X
     13c:	8a e0       	ldi	r24, 0x0A	; 10
     13e:	91 e0       	ldi	r25, 0x01	; 1

00000140 <.Loc.2>:
     140:	27 60       	ori	r18, 0x07	; 7
     142:	fc 01       	movw	r30, r24
     144:	20 83       	st	Z, r18
     146:	9e 01       	movw	r18, r28
     148:	2f 5b       	subi	r18, 0xBF	; 191
     14a:	3f 4f       	sbci	r19, 0xFF	; 255
     14c:	80 e0       	ldi	r24, 0x00	; 0
     14e:	90 e0       	ldi	r25, 0x00	; 0
     150:	a0 e7       	ldi	r26, 0x70	; 112
     152:	b1 e4       	ldi	r27, 0x41	; 65
     154:	f9 01       	movw	r30, r18
     156:	80 83       	st	Z, r24
     158:	91 83       	std	Z+1, r25	; 0x01
     15a:	a2 83       	std	Z+2, r26	; 0x02
     15c:	b3 83       	std	Z+3, r27	; 0x03

0000015e <.LBB68>:

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     15e:	8e 01       	movw	r16, r28
     160:	0b 5b       	subi	r16, 0xBB	; 187
     162:	1f 4f       	sbci	r17, 0xFF	; 255
     164:	ce 01       	movw	r24, r28
     166:	8f 5b       	subi	r24, 0xBF	; 191
     168:	9f 4f       	sbci	r25, 0xFF	; 255
     16a:	20 e0       	ldi	r18, 0x00	; 0
     16c:	30 e0       	ldi	r19, 0x00	; 0
     16e:	4a e7       	ldi	r20, 0x7A	; 122
     170:	55 e4       	ldi	r21, 0x45	; 69
     172:	dc 01       	movw	r26, r24
     174:	6d 91       	ld	r22, X+
     176:	7d 91       	ld	r23, X+
     178:	8d 91       	ld	r24, X+
     17a:	9c 91       	ld	r25, X
     17c:	0e 94 08 0c 	call	0x1810	; 0x1810 <__mulsf3>
     180:	6f 96       	adiw	r28, 0x1f	; 31
     182:	6c af       	std	Y+60, r22	; 0x3c
     184:	7d af       	std	Y+61, r23	; 0x3d
     186:	8e af       	std	Y+62, r24	; 0x3e
     188:	9f af       	std	Y+63, r25	; 0x3f
     18a:	6f 97       	sbiw	r28, 0x1f	; 31
     18c:	6f 96       	adiw	r28, 0x1f	; 31
     18e:	8c ad       	ldd	r24, Y+60	; 0x3c
     190:	9d ad       	ldd	r25, Y+61	; 0x3d
     192:	ae ad       	ldd	r26, Y+62	; 0x3e
     194:	bf ad       	ldd	r27, Y+63	; 0x3f
     196:	6f 97       	sbiw	r28, 0x1f	; 31
     198:	f8 01       	movw	r30, r16
     19a:	80 83       	st	Z, r24
     19c:	91 83       	std	Z+1, r25	; 0x01
     19e:	a2 83       	std	Z+2, r26	; 0x02
     1a0:	b3 83       	std	Z+3, r27	; 0x03

000001a2 <.Loc.4>:
	if (__tmp < 1.0)
     1a2:	ce 01       	movw	r24, r28
     1a4:	8b 5b       	subi	r24, 0xBB	; 187
     1a6:	9f 4f       	sbci	r25, 0xFF	; 255
     1a8:	20 e0       	ldi	r18, 0x00	; 0
     1aa:	30 e0       	ldi	r19, 0x00	; 0
     1ac:	40 e8       	ldi	r20, 0x80	; 128
     1ae:	5f e3       	ldi	r21, 0x3F	; 63
     1b0:	dc 01       	movw	r26, r24
     1b2:	6d 91       	ld	r22, X+
     1b4:	7d 91       	ld	r23, X+
     1b6:	8d 91       	ld	r24, X+
     1b8:	9c 91       	ld	r25, X
     1ba:	0e 94 e8 0a 	call	0x15d0	; 0x15d0 <__cmpsf2>
     1be:	88 23       	and	r24, r24
     1c0:	4c f4       	brge	.+18     	; 0x1d4 <.L54>

000001c2 <.Loc.5>:
		__ticks = 1;
     1c2:	ce 01       	movw	r24, r28
     1c4:	87 5b       	subi	r24, 0xB7	; 183
     1c6:	9f 4f       	sbci	r25, 0xFF	; 255
     1c8:	21 e0       	ldi	r18, 0x01	; 1
     1ca:	30 e0       	ldi	r19, 0x00	; 0
     1cc:	fc 01       	movw	r30, r24
     1ce:	31 83       	std	Z+1, r19	; 0x01
     1d0:	20 83       	st	Z, r18
     1d2:	95 c0       	rjmp	.+298    	; 0x2fe <.L4>

000001d4 <.L54>:
	else if (__tmp > 65535)
     1d4:	ce 01       	movw	r24, r28
     1d6:	8b 5b       	subi	r24, 0xBB	; 187
     1d8:	9f 4f       	sbci	r25, 0xFF	; 255
     1da:	20 e0       	ldi	r18, 0x00	; 0
     1dc:	3f ef       	ldi	r19, 0xFF	; 255
     1de:	4f e7       	ldi	r20, 0x7F	; 127
     1e0:	57 e4       	ldi	r21, 0x47	; 71
     1e2:	dc 01       	movw	r26, r24
     1e4:	6d 91       	ld	r22, X+
     1e6:	7d 91       	ld	r23, X+
     1e8:	8d 91       	ld	r24, X+
     1ea:	9c 91       	ld	r25, X
     1ec:	0e 94 03 0c 	call	0x1806	; 0x1806 <__gesf2>
     1f0:	88 23       	and	r24, r24
     1f2:	09 f0       	breq	.+2      	; 0x1f6 <L0^A>

000001f4 <L0^A>:
     1f4:	0c f4       	brge	.+2      	; 0x1f8 <.Loc.7>

000001f6 <L0^A>:
     1f6:	69 c0       	rjmp	.+210    	; 0x2ca <.L55>

000001f8 <.Loc.7>:
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     1f8:	ce 01       	movw	r24, r28
     1fa:	8f 5b       	subi	r24, 0xBF	; 191
     1fc:	9f 4f       	sbci	r25, 0xFF	; 255
     1fe:	20 e0       	ldi	r18, 0x00	; 0
     200:	30 e0       	ldi	r19, 0x00	; 0
     202:	40 e2       	ldi	r20, 0x20	; 32
     204:	51 e4       	ldi	r21, 0x41	; 65
     206:	fc 01       	movw	r30, r24
     208:	60 81       	ld	r22, Z
     20a:	71 81       	ldd	r23, Z+1	; 0x01
     20c:	82 81       	ldd	r24, Z+2	; 0x02
     20e:	93 81       	ldd	r25, Z+3	; 0x03
     210:	0e 94 08 0c 	call	0x1810	; 0x1810 <__mulsf3>
     214:	a3 96       	adiw	r28, 0x23	; 35
     216:	6c af       	std	Y+60, r22	; 0x3c
     218:	7d af       	std	Y+61, r23	; 0x3d
     21a:	8e af       	std	Y+62, r24	; 0x3e
     21c:	9f af       	std	Y+63, r25	; 0x3f
     21e:	a3 97       	sbiw	r28, 0x23	; 35
     220:	a3 96       	adiw	r28, 0x23	; 35
     222:	8c ad       	ldd	r24, Y+60	; 0x3c
     224:	9d ad       	ldd	r25, Y+61	; 0x3d
     226:	ae ad       	ldd	r26, Y+62	; 0x3e
     228:	bf ad       	ldd	r27, Y+63	; 0x3f
     22a:	a3 97       	sbiw	r28, 0x23	; 35
     22c:	6b 96       	adiw	r28, 0x1b	; 27
     22e:	8c af       	std	Y+60, r24	; 0x3c
     230:	9d af       	std	Y+61, r25	; 0x3d
     232:	ae af       	std	Y+62, r26	; 0x3e
     234:	bf af       	std	Y+63, r27	; 0x3f
     236:	6b 97       	sbiw	r28, 0x1b	; 27

00000238 <.Loc.8>:
     238:	8e 01       	movw	r16, r28
     23a:	07 5b       	subi	r16, 0xB7	; 183
     23c:	1f 4f       	sbci	r17, 0xFF	; 255
     23e:	6b 96       	adiw	r28, 0x1b	; 27
     240:	6c ad       	ldd	r22, Y+60	; 0x3c
     242:	7d ad       	ldd	r23, Y+61	; 0x3d
     244:	8e ad       	ldd	r24, Y+62	; 0x3e
     246:	9f ad       	ldd	r25, Y+63	; 0x3f
     248:	6b 97       	sbiw	r28, 0x1b	; 27
     24a:	0e 94 5f 0b 	call	0x16be	; 0x16be <__fixunssfsi>
     24e:	a7 96       	adiw	r28, 0x27	; 39
     250:	6c af       	std	Y+60, r22	; 0x3c
     252:	7d af       	std	Y+61, r23	; 0x3d
     254:	8e af       	std	Y+62, r24	; 0x3e
     256:	9f af       	std	Y+63, r25	; 0x3f
     258:	a7 97       	sbiw	r28, 0x27	; 39
     25a:	a5 96       	adiw	r28, 0x25	; 37
     25c:	ee ad       	ldd	r30, Y+62	; 0x3e
     25e:	ff ad       	ldd	r31, Y+63	; 0x3f
     260:	a5 97       	sbiw	r28, 0x25	; 37
     262:	d8 01       	movw	r26, r16
     264:	11 96       	adiw	r26, 0x01	; 1
     266:	fc 93       	st	X, r31
     268:	ee 93       	st	-X, r30

0000026a <.Loc.9>:
		while(__ticks)
     26a:	26 c0       	rjmp	.+76     	; 0x2b8 <.L7>

0000026c <.L8>:
     26c:	ce 01       	movw	r24, r28
     26e:	85 5b       	subi	r24, 0xB5	; 181
     270:	9f 4f       	sbci	r25, 0xFF	; 255
     272:	20 e9       	ldi	r18, 0x90	; 144
     274:	31 e0       	ldi	r19, 0x01	; 1
     276:	dc 01       	movw	r26, r24
     278:	2d 93       	st	X+, r18
     27a:	3c 93       	st	X, r19

0000027c <.LBB70>:
		"sbc %B0,__zero_reg__"    "\n\t"
		"brne 1b"
		: "+d" (__count)
	);
#else
	__asm__ volatile (
     27c:	ce 01       	movw	r24, r28
     27e:	85 5b       	subi	r24, 0xB5	; 181
     280:	9f 4f       	sbci	r25, 0xFF	; 255
     282:	fc 01       	movw	r30, r24
     284:	80 81       	ld	r24, Z
     286:	91 81       	ldd	r25, Z+1	; 0x01

00000288 <.L1^B1>:
     288:	01 97       	sbiw	r24, 0x01	; 1
     28a:	f1 f7       	brne	.-4      	; 0x288 <.L1^B1>
     28c:	9e 01       	movw	r18, r28
     28e:	25 5b       	subi	r18, 0xB5	; 181
     290:	3f 4f       	sbci	r19, 0xFF	; 255
     292:	d9 01       	movw	r26, r18
     294:	8d 93       	st	X+, r24
     296:	9c 93       	st	X, r25

00000298 <.Loc.11>:
	...

0000029a <.LBE70>:
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     29a:	ce 01       	movw	r24, r28
     29c:	87 5b       	subi	r24, 0xB7	; 183
     29e:	9f 4f       	sbci	r25, 0xFF	; 255
     2a0:	9e 01       	movw	r18, r28
     2a2:	27 5b       	subi	r18, 0xB7	; 183
     2a4:	3f 4f       	sbci	r19, 0xFF	; 255
     2a6:	f9 01       	movw	r30, r18
     2a8:	20 81       	ld	r18, Z
     2aa:	31 81       	ldd	r19, Z+1	; 0x01
     2ac:	21 50       	subi	r18, 0x01	; 1
     2ae:	31 09       	sbc	r19, r1
     2b0:	dc 01       	movw	r26, r24
     2b2:	11 96       	adiw	r26, 0x01	; 1
     2b4:	3c 93       	st	X, r19
     2b6:	2e 93       	st	-X, r18

000002b8 <.L7>:
		while(__ticks)
     2b8:	ce 01       	movw	r24, r28
     2ba:	87 5b       	subi	r24, 0xB7	; 183
     2bc:	9f 4f       	sbci	r25, 0xFF	; 255
     2be:	fc 01       	movw	r30, r24
     2c0:	80 81       	ld	r24, Z
     2c2:	91 81       	ldd	r25, Z+1	; 0x01
     2c4:	00 97       	sbiw	r24, 0x00	; 0
     2c6:	91 f6       	brne	.-92     	; 0x26c <.L8>

000002c8 <.Loc.14>:
		}
		return;
     2c8:	35 c0       	rjmp	.+106    	; 0x334 <.L9>

000002ca <.L55>:
	}
	else
		__ticks = (uint16_t)__tmp;
     2ca:	8e 01       	movw	r16, r28
     2cc:	07 5b       	subi	r16, 0xB7	; 183
     2ce:	1f 4f       	sbci	r17, 0xFF	; 255
     2d0:	ce 01       	movw	r24, r28
     2d2:	8b 5b       	subi	r24, 0xBB	; 187
     2d4:	9f 4f       	sbci	r25, 0xFF	; 255
     2d6:	dc 01       	movw	r26, r24
     2d8:	6d 91       	ld	r22, X+
     2da:	7d 91       	ld	r23, X+
     2dc:	8d 91       	ld	r24, X+
     2de:	9c 91       	ld	r25, X
     2e0:	0e 94 5f 0b 	call	0x16be	; 0x16be <__fixunssfsi>
     2e4:	ab 96       	adiw	r28, 0x2b	; 43
     2e6:	6c af       	std	Y+60, r22	; 0x3c
     2e8:	7d af       	std	Y+61, r23	; 0x3d
     2ea:	8e af       	std	Y+62, r24	; 0x3e
     2ec:	9f af       	std	Y+63, r25	; 0x3f
     2ee:	ab 97       	sbiw	r28, 0x2b	; 43
     2f0:	a9 96       	adiw	r28, 0x29	; 41
     2f2:	8e ad       	ldd	r24, Y+62	; 0x3e
     2f4:	9f ad       	ldd	r25, Y+63	; 0x3f
     2f6:	a9 97       	sbiw	r28, 0x29	; 41
     2f8:	f8 01       	movw	r30, r16
     2fa:	91 83       	std	Z+1, r25	; 0x01
     2fc:	80 83       	st	Z, r24

000002fe <.L4>:
     2fe:	ce 01       	movw	r24, r28
     300:	83 5b       	subi	r24, 0xB3	; 179
     302:	9f 4f       	sbci	r25, 0xFF	; 255
     304:	9e 01       	movw	r18, r28
     306:	27 5b       	subi	r18, 0xB7	; 183
     308:	3f 4f       	sbci	r19, 0xFF	; 255
     30a:	d9 01       	movw	r26, r18
     30c:	2d 91       	ld	r18, X+
     30e:	3c 91       	ld	r19, X
     310:	fc 01       	movw	r30, r24
     312:	31 83       	std	Z+1, r19	; 0x01
     314:	20 83       	st	Z, r18

00000316 <.LBB72>:
     316:	ce 01       	movw	r24, r28
     318:	83 5b       	subi	r24, 0xB3	; 179
     31a:	9f 4f       	sbci	r25, 0xFF	; 255
     31c:	dc 01       	movw	r26, r24
     31e:	8d 91       	ld	r24, X+
     320:	9c 91       	ld	r25, X

00000322 <.L1^B2>:
     322:	01 97       	sbiw	r24, 0x01	; 1
     324:	f1 f7       	brne	.-4      	; 0x322 <.L1^B2>
     326:	9e 01       	movw	r18, r28
     328:	23 5b       	subi	r18, 0xB3	; 179
     32a:	3f 4f       	sbci	r19, 0xFF	; 255
     32c:	f9 01       	movw	r30, r18
     32e:	91 83       	std	Z+1, r25	; 0x01
     330:	80 83       	st	Z, r24

00000332 <.Loc.17>:
	...

00000334 <.L9>:
    _delay_ms(15);//delay moet volgens datasheet

    LCD_Scherm_Leeg();
     334:	0e 94 a1 06 	call	0xd42	; 0xd42 <LCD_Scherm_Leeg>

00000338 <.Loc.19>:
    Stuur_LCD_Opdracht(0x38);//opdracht voor LCD in 8bit mode
     338:	88 e3       	ldi	r24, 0x38	; 56
     33a:	0e 94 18 06 	call	0xc30	; 0xc30 <Stuur_LCD_Opdracht>
     33e:	80 e0       	ldi	r24, 0x00	; 0
     340:	90 e0       	ldi	r25, 0x00	; 0
     342:	a8 e4       	ldi	r26, 0x48	; 72
     344:	b2 e4       	ldi	r27, 0x42	; 66
     346:	89 a3       	std	Y+33, r24	; 0x21
     348:	9a a3       	std	Y+34, r25	; 0x22
     34a:	ab a3       	std	Y+35, r26	; 0x23
     34c:	bc a3       	std	Y+36, r27	; 0x24

0000034e <.LBB74>:
	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint8_t __ticks;
	double __tmp2 ;
	__tmp = ((F_CPU) / 3e6) * __us;
     34e:	2b ea       	ldi	r18, 0xAB	; 171
     350:	3a ea       	ldi	r19, 0xAA	; 170
     352:	4a ea       	ldi	r20, 0xAA	; 170
     354:	50 e4       	ldi	r21, 0x40	; 64
     356:	69 a1       	ldd	r22, Y+33	; 0x21
     358:	7a a1       	ldd	r23, Y+34	; 0x22
     35a:	8b a1       	ldd	r24, Y+35	; 0x23
     35c:	9c a1       	ldd	r25, Y+36	; 0x24
     35e:	0e 94 08 0c 	call	0x1810	; 0x1810 <__mulsf3>
     362:	af 96       	adiw	r28, 0x2f	; 47
     364:	6c af       	std	Y+60, r22	; 0x3c
     366:	7d af       	std	Y+61, r23	; 0x3d
     368:	8e af       	std	Y+62, r24	; 0x3e
     36a:	9f af       	std	Y+63, r25	; 0x3f
     36c:	af 97       	sbiw	r28, 0x2f	; 47
     36e:	af 96       	adiw	r28, 0x2f	; 47
     370:	8c ad       	ldd	r24, Y+60	; 0x3c
     372:	9d ad       	ldd	r25, Y+61	; 0x3d
     374:	ae ad       	ldd	r26, Y+62	; 0x3e
     376:	bf ad       	ldd	r27, Y+63	; 0x3f
     378:	af 97       	sbiw	r28, 0x2f	; 47
     37a:	8d a3       	std	Y+37, r24	; 0x25
     37c:	9e a3       	std	Y+38, r25	; 0x26
     37e:	af a3       	std	Y+39, r26	; 0x27
     380:	b8 a7       	std	Y+40, r27	; 0x28

00000382 <.Loc.21>:
	__tmp2 = ((F_CPU) / 4e6) * __us;
     382:	20 e0       	ldi	r18, 0x00	; 0
     384:	30 e0       	ldi	r19, 0x00	; 0
     386:	40 e8       	ldi	r20, 0x80	; 128
     388:	50 e4       	ldi	r21, 0x40	; 64
     38a:	69 a1       	ldd	r22, Y+33	; 0x21
     38c:	7a a1       	ldd	r23, Y+34	; 0x22
     38e:	8b a1       	ldd	r24, Y+35	; 0x23
     390:	9c a1       	ldd	r25, Y+36	; 0x24
     392:	0e 94 08 0c 	call	0x1810	; 0x1810 <__mulsf3>
     396:	e3 96       	adiw	r28, 0x33	; 51
     398:	6c af       	std	Y+60, r22	; 0x3c
     39a:	7d af       	std	Y+61, r23	; 0x3d
     39c:	8e af       	std	Y+62, r24	; 0x3e
     39e:	9f af       	std	Y+63, r25	; 0x3f
     3a0:	e3 97       	sbiw	r28, 0x33	; 51
     3a2:	e3 96       	adiw	r28, 0x33	; 51
     3a4:	8c ad       	ldd	r24, Y+60	; 0x3c
     3a6:	9d ad       	ldd	r25, Y+61	; 0x3d
     3a8:	ae ad       	ldd	r26, Y+62	; 0x3e
     3aa:	bf ad       	ldd	r27, Y+63	; 0x3f
     3ac:	e3 97       	sbiw	r28, 0x33	; 51
     3ae:	89 a7       	std	Y+41, r24	; 0x29
     3b0:	9a a7       	std	Y+42, r25	; 0x2a
     3b2:	ab a7       	std	Y+43, r26	; 0x2b
     3b4:	bc a7       	std	Y+44, r27	; 0x2c

000003b6 <.Loc.22>:
	if (__tmp < 1.0)
     3b6:	20 e0       	ldi	r18, 0x00	; 0
     3b8:	30 e0       	ldi	r19, 0x00	; 0
     3ba:	40 e8       	ldi	r20, 0x80	; 128
     3bc:	5f e3       	ldi	r21, 0x3F	; 63
     3be:	6d a1       	ldd	r22, Y+37	; 0x25
     3c0:	7e a1       	ldd	r23, Y+38	; 0x26
     3c2:	8f a1       	ldd	r24, Y+39	; 0x27
     3c4:	98 a5       	ldd	r25, Y+40	; 0x28
     3c6:	0e 94 e8 0a 	call	0x15d0	; 0x15d0 <__cmpsf2>
     3ca:	88 23       	and	r24, r24
     3cc:	1c f4       	brge	.+6      	; 0x3d4 <.L56>

000003ce <.Loc.23>:
		__ticks = 1;
     3ce:	81 e0       	ldi	r24, 0x01	; 1
     3d0:	8d a7       	std	Y+45, r24	; 0x2d
     3d2:	0f c1       	rjmp	.+542    	; 0x5f2 <.L12>

000003d4 <.L56>:
	else if (__tmp2 > 65535)
     3d4:	20 e0       	ldi	r18, 0x00	; 0
     3d6:	3f ef       	ldi	r19, 0xFF	; 255
     3d8:	4f e7       	ldi	r20, 0x7F	; 127
     3da:	57 e4       	ldi	r21, 0x47	; 71
     3dc:	69 a5       	ldd	r22, Y+41	; 0x29
     3de:	7a a5       	ldd	r23, Y+42	; 0x2a
     3e0:	8b a5       	ldd	r24, Y+43	; 0x2b
     3e2:	9c a5       	ldd	r25, Y+44	; 0x2c
     3e4:	0e 94 03 0c 	call	0x1806	; 0x1806 <__gesf2>
     3e8:	88 23       	and	r24, r24
     3ea:	09 f0       	breq	.+2      	; 0x3ee <L0^A>

000003ec <L0^A>:
     3ec:	0c f4       	brge	.+2      	; 0x3f0 <.Loc.25>

000003ee <L0^A>:
     3ee:	be c0       	rjmp	.+380    	; 0x56c <.L57>

000003f0 <.Loc.25>:
	{
		_delay_ms(__us / 1000.0);
     3f0:	20 e0       	ldi	r18, 0x00	; 0
     3f2:	30 e0       	ldi	r19, 0x00	; 0
     3f4:	4a e7       	ldi	r20, 0x7A	; 122
     3f6:	54 e4       	ldi	r21, 0x44	; 68
     3f8:	69 a1       	ldd	r22, Y+33	; 0x21
     3fa:	7a a1       	ldd	r23, Y+34	; 0x22
     3fc:	8b a1       	ldd	r24, Y+35	; 0x23
     3fe:	9c a1       	ldd	r25, Y+36	; 0x24
     400:	0e 94 ed 0a 	call	0x15da	; 0x15da <__divsf3>
     404:	e7 96       	adiw	r28, 0x37	; 55
     406:	6c af       	std	Y+60, r22	; 0x3c
     408:	7d af       	std	Y+61, r23	; 0x3d
     40a:	8e af       	std	Y+62, r24	; 0x3e
     40c:	9f af       	std	Y+63, r25	; 0x3f
     40e:	e7 97       	sbiw	r28, 0x37	; 55
     410:	e7 96       	adiw	r28, 0x37	; 55
     412:	8c ad       	ldd	r24, Y+60	; 0x3c
     414:	9d ad       	ldd	r25, Y+61	; 0x3d
     416:	ae ad       	ldd	r26, Y+62	; 0x3e
     418:	bf ad       	ldd	r27, Y+63	; 0x3f
     41a:	e7 97       	sbiw	r28, 0x37	; 55
     41c:	8e a7       	std	Y+46, r24	; 0x2e
     41e:	9f a7       	std	Y+47, r25	; 0x2f
     420:	a8 ab       	std	Y+48, r26	; 0x30
     422:	b9 ab       	std	Y+49, r27	; 0x31

00000424 <.LBB76>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     424:	20 e0       	ldi	r18, 0x00	; 0
     426:	30 e0       	ldi	r19, 0x00	; 0
     428:	4a e7       	ldi	r20, 0x7A	; 122
     42a:	55 e4       	ldi	r21, 0x45	; 69
     42c:	6e a5       	ldd	r22, Y+46	; 0x2e
     42e:	7f a5       	ldd	r23, Y+47	; 0x2f
     430:	88 a9       	ldd	r24, Y+48	; 0x30
     432:	99 a9       	ldd	r25, Y+49	; 0x31
     434:	0e 94 08 0c 	call	0x1810	; 0x1810 <__mulsf3>
     438:	eb 96       	adiw	r28, 0x3b	; 59
     43a:	6c af       	std	Y+60, r22	; 0x3c
     43c:	7d af       	std	Y+61, r23	; 0x3d
     43e:	8e af       	std	Y+62, r24	; 0x3e
     440:	9f af       	std	Y+63, r25	; 0x3f
     442:	eb 97       	sbiw	r28, 0x3b	; 59
     444:	eb 96       	adiw	r28, 0x3b	; 59
     446:	8c ad       	ldd	r24, Y+60	; 0x3c
     448:	9d ad       	ldd	r25, Y+61	; 0x3d
     44a:	ae ad       	ldd	r26, Y+62	; 0x3e
     44c:	bf ad       	ldd	r27, Y+63	; 0x3f
     44e:	eb 97       	sbiw	r28, 0x3b	; 59
     450:	8a ab       	std	Y+50, r24	; 0x32
     452:	9b ab       	std	Y+51, r25	; 0x33
     454:	ac ab       	std	Y+52, r26	; 0x34
     456:	bd ab       	std	Y+53, r27	; 0x35

00000458 <.Loc.27>:
	if (__tmp < 1.0)
     458:	20 e0       	ldi	r18, 0x00	; 0
     45a:	30 e0       	ldi	r19, 0x00	; 0
     45c:	40 e8       	ldi	r20, 0x80	; 128
     45e:	5f e3       	ldi	r21, 0x3F	; 63
     460:	6a a9       	ldd	r22, Y+50	; 0x32
     462:	7b a9       	ldd	r23, Y+51	; 0x33
     464:	8c a9       	ldd	r24, Y+52	; 0x34
     466:	9d a9       	ldd	r25, Y+53	; 0x35
     468:	0e 94 e8 0a 	call	0x15d0	; 0x15d0 <__cmpsf2>
     46c:	88 23       	and	r24, r24
     46e:	2c f4       	brge	.+10     	; 0x47a <.L58>

00000470 <.Loc.28>:
		__ticks = 1;
     470:	81 e0       	ldi	r24, 0x01	; 1
     472:	90 e0       	ldi	r25, 0x00	; 0
     474:	9f ab       	std	Y+55, r25	; 0x37
     476:	8e ab       	std	Y+54, r24	; 0x36
     478:	6e c0       	rjmp	.+220    	; 0x556 <.L17>

0000047a <.L58>:
	else if (__tmp > 65535)
     47a:	20 e0       	ldi	r18, 0x00	; 0
     47c:	3f ef       	ldi	r19, 0xFF	; 255
     47e:	4f e7       	ldi	r20, 0x7F	; 127
     480:	57 e4       	ldi	r21, 0x47	; 71
     482:	6a a9       	ldd	r22, Y+50	; 0x32
     484:	7b a9       	ldd	r23, Y+51	; 0x33
     486:	8c a9       	ldd	r24, Y+52	; 0x34
     488:	9d a9       	ldd	r25, Y+53	; 0x35
     48a:	0e 94 03 0c 	call	0x1806	; 0x1806 <__gesf2>
     48e:	88 23       	and	r24, r24
     490:	09 f0       	breq	.+2      	; 0x494 <L0^A>

00000492 <L0^A>:
     492:	0c f4       	brge	.+2      	; 0x496 <.Loc.30>

00000494 <L0^A>:
     494:	4a c0       	rjmp	.+148    	; 0x52a <.L59>

00000496 <.Loc.30>:
		__ticks = (uint16_t) (__ms * 10.0);
     496:	20 e0       	ldi	r18, 0x00	; 0
     498:	30 e0       	ldi	r19, 0x00	; 0
     49a:	40 e2       	ldi	r20, 0x20	; 32
     49c:	51 e4       	ldi	r21, 0x41	; 65
     49e:	6e a5       	ldd	r22, Y+46	; 0x2e
     4a0:	7f a5       	ldd	r23, Y+47	; 0x2f
     4a2:	88 a9       	ldd	r24, Y+48	; 0x30
     4a4:	99 a9       	ldd	r25, Y+49	; 0x31
     4a6:	0e 94 08 0c 	call	0x1810	; 0x1810 <__mulsf3>
     4aa:	ef 96       	adiw	r28, 0x3f	; 63
     4ac:	6c af       	std	Y+60, r22	; 0x3c
     4ae:	7d af       	std	Y+61, r23	; 0x3d
     4b0:	8e af       	std	Y+62, r24	; 0x3e
     4b2:	9f af       	std	Y+63, r25	; 0x3f
     4b4:	ef 97       	sbiw	r28, 0x3f	; 63
     4b6:	ef 96       	adiw	r28, 0x3f	; 63
     4b8:	8c ad       	ldd	r24, Y+60	; 0x3c
     4ba:	9d ad       	ldd	r25, Y+61	; 0x3d
     4bc:	ae ad       	ldd	r26, Y+62	; 0x3e
     4be:	bf ad       	ldd	r27, Y+63	; 0x3f
     4c0:	ef 97       	sbiw	r28, 0x3f	; 63
     4c2:	67 96       	adiw	r28, 0x17	; 23
     4c4:	8c af       	std	Y+60, r24	; 0x3c
     4c6:	9d af       	std	Y+61, r25	; 0x3d
     4c8:	ae af       	std	Y+62, r26	; 0x3e
     4ca:	bf af       	std	Y+63, r27	; 0x3f
     4cc:	67 97       	sbiw	r28, 0x17	; 23

000004ce <.Loc.31>:
     4ce:	67 96       	adiw	r28, 0x17	; 23
     4d0:	6c ad       	ldd	r22, Y+60	; 0x3c
     4d2:	7d ad       	ldd	r23, Y+61	; 0x3d
     4d4:	8e ad       	ldd	r24, Y+62	; 0x3e
     4d6:	9f ad       	ldd	r25, Y+63	; 0x3f
     4d8:	67 97       	sbiw	r28, 0x17	; 23
     4da:	0e 94 5f 0b 	call	0x16be	; 0x16be <__fixunssfsi>
     4de:	c1 58       	subi	r28, 0x81	; 129
     4e0:	df 4f       	sbci	r29, 0xFF	; 255
     4e2:	68 83       	st	Y, r22
     4e4:	79 83       	std	Y+1, r23	; 0x01
     4e6:	8a 83       	std	Y+2, r24	; 0x02
     4e8:	9b 83       	std	Y+3, r25	; 0x03
     4ea:	cf 57       	subi	r28, 0x7F	; 127
     4ec:	d0 40       	sbci	r29, 0x00	; 0
     4ee:	c1 58       	subi	r28, 0x81	; 129
     4f0:	df 4f       	sbci	r29, 0xFF	; 255
     4f2:	a8 81       	ld	r26, Y
     4f4:	b9 81       	ldd	r27, Y+1	; 0x01
     4f6:	cf 57       	subi	r28, 0x7F	; 127
     4f8:	d0 40       	sbci	r29, 0x00	; 0
     4fa:	bf ab       	std	Y+55, r27	; 0x37
     4fc:	ae ab       	std	Y+54, r26	; 0x36

000004fe <.Loc.32>:
		while(__ticks)
     4fe:	10 c0       	rjmp	.+32     	; 0x520 <.L20>

00000500 <.L21>:
     500:	80 e9       	ldi	r24, 0x90	; 144
     502:	91 e0       	ldi	r25, 0x01	; 1
     504:	99 af       	std	Y+57, r25	; 0x39
     506:	88 af       	std	Y+56, r24	; 0x38

00000508 <.LBB78>:
     508:	88 ad       	ldd	r24, Y+56	; 0x38
     50a:	99 ad       	ldd	r25, Y+57	; 0x39

0000050c <.L1^B3>:
     50c:	01 97       	sbiw	r24, 0x01	; 1
     50e:	f1 f7       	brne	.-4      	; 0x50c <.L1^B3>
     510:	99 af       	std	Y+57, r25	; 0x39
     512:	88 af       	std	Y+56, r24	; 0x38

00000514 <.Loc.34>:
	...

00000516 <.LBE78>:
			__ticks --;
     516:	8e a9       	ldd	r24, Y+54	; 0x36
     518:	9f a9       	ldd	r25, Y+55	; 0x37
     51a:	01 97       	sbiw	r24, 0x01	; 1
     51c:	9f ab       	std	Y+55, r25	; 0x37
     51e:	8e ab       	std	Y+54, r24	; 0x36

00000520 <.L20>:
		while(__ticks)
     520:	8e a9       	ldd	r24, Y+54	; 0x36
     522:	9f a9       	ldd	r25, Y+55	; 0x37
     524:	00 97       	sbiw	r24, 0x00	; 0
     526:	61 f7       	brne	.-40     	; 0x500 <.L21>

00000528 <.Loc.37>:
		return;
     528:	64 c0       	rjmp	.+200    	; 0x5f2 <.L12>

0000052a <.L59>:
		__ticks = (uint16_t)__tmp;
     52a:	6a a9       	ldd	r22, Y+50	; 0x32
     52c:	7b a9       	ldd	r23, Y+51	; 0x33
     52e:	8c a9       	ldd	r24, Y+52	; 0x34
     530:	9d a9       	ldd	r25, Y+53	; 0x35
     532:	0e 94 5f 0b 	call	0x16be	; 0x16be <__fixunssfsi>
     536:	cd 57       	subi	r28, 0x7D	; 125
     538:	df 4f       	sbci	r29, 0xFF	; 255
     53a:	68 83       	st	Y, r22
     53c:	79 83       	std	Y+1, r23	; 0x01
     53e:	8a 83       	std	Y+2, r24	; 0x02
     540:	9b 83       	std	Y+3, r25	; 0x03
     542:	c3 58       	subi	r28, 0x83	; 131
     544:	d0 40       	sbci	r29, 0x00	; 0
     546:	cd 57       	subi	r28, 0x7D	; 125
     548:	df 4f       	sbci	r29, 0xFF	; 255
     54a:	e8 81       	ld	r30, Y
     54c:	f9 81       	ldd	r31, Y+1	; 0x01
     54e:	c3 58       	subi	r28, 0x83	; 131
     550:	d0 40       	sbci	r29, 0x00	; 0
     552:	ff ab       	std	Y+55, r31	; 0x37
     554:	ee ab       	std	Y+54, r30	; 0x36

00000556 <.L17>:
     556:	8e a9       	ldd	r24, Y+54	; 0x36
     558:	9f a9       	ldd	r25, Y+55	; 0x37
     55a:	9b af       	std	Y+59, r25	; 0x3b
     55c:	8a af       	std	Y+58, r24	; 0x3a

0000055e <.LBB80>:
     55e:	8a ad       	ldd	r24, Y+58	; 0x3a
     560:	9b ad       	ldd	r25, Y+59	; 0x3b

00000562 <.L1^B4>:
     562:	01 97       	sbiw	r24, 0x01	; 1
     564:	f1 f7       	brne	.-4      	; 0x562 <.L1^B4>
     566:	9b af       	std	Y+59, r25	; 0x3b
     568:	8a af       	std	Y+58, r24	; 0x3a

0000056a <.Loc.40>:
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
#endif /* __AVR_TINY__ */
}
     56a:	43 c0       	rjmp	.+134    	; 0x5f2 <.L12>

0000056c <.L57>:
	}
	else if (__tmp > 255)
     56c:	20 e0       	ldi	r18, 0x00	; 0
     56e:	30 e0       	ldi	r19, 0x00	; 0
     570:	4f e7       	ldi	r20, 0x7F	; 127
     572:	53 e4       	ldi	r21, 0x43	; 67
     574:	6d a1       	ldd	r22, Y+37	; 0x25
     576:	7e a1       	ldd	r23, Y+38	; 0x26
     578:	8f a1       	ldd	r24, Y+39	; 0x27
     57a:	98 a5       	ldd	r25, Y+40	; 0x28
     57c:	0e 94 03 0c 	call	0x1806	; 0x1806 <__gesf2>
     580:	88 23       	and	r24, r24
     582:	19 f1       	breq	.+70     	; 0x5ca <.L60>
     584:	14 f1       	brlt	.+68     	; 0x5ca <.L60>

00000586 <.LBB82>:
	{
		uint16_t __ticks=(uint16_t)__tmp2;
     586:	69 a5       	ldd	r22, Y+41	; 0x29
     588:	7a a5       	ldd	r23, Y+42	; 0x2a
     58a:	8b a5       	ldd	r24, Y+43	; 0x2b
     58c:	9c a5       	ldd	r25, Y+44	; 0x2c
     58e:	0e 94 5f 0b 	call	0x16be	; 0x16be <__fixunssfsi>
     592:	c9 57       	subi	r28, 0x79	; 121
     594:	df 4f       	sbci	r29, 0xFF	; 255
     596:	68 83       	st	Y, r22
     598:	79 83       	std	Y+1, r23	; 0x01
     59a:	8a 83       	std	Y+2, r24	; 0x02
     59c:	9b 83       	std	Y+3, r25	; 0x03
     59e:	c7 58       	subi	r28, 0x87	; 135
     5a0:	d0 40       	sbci	r29, 0x00	; 0
     5a2:	c9 57       	subi	r28, 0x79	; 121
     5a4:	df 4f       	sbci	r29, 0xFF	; 255
     5a6:	88 81       	ld	r24, Y
     5a8:	99 81       	ldd	r25, Y+1	; 0x01
     5aa:	c7 58       	subi	r28, 0x87	; 135
     5ac:	d0 40       	sbci	r29, 0x00	; 0
     5ae:	9d af       	std	Y+61, r25	; 0x3d
     5b0:	8c af       	std	Y+60, r24	; 0x3c
     5b2:	8c ad       	ldd	r24, Y+60	; 0x3c
     5b4:	9d ad       	ldd	r25, Y+61	; 0x3d
     5b6:	9f af       	std	Y+63, r25	; 0x3f
     5b8:	8e af       	std	Y+62, r24	; 0x3e

000005ba <.LBB83>:
	__asm__ volatile (
     5ba:	8e ad       	ldd	r24, Y+62	; 0x3e
     5bc:	9f ad       	ldd	r25, Y+63	; 0x3f

000005be <.L1^B5>:
     5be:	01 97       	sbiw	r24, 0x01	; 1
     5c0:	f1 f7       	brne	.-4      	; 0x5be <.L1^B5>
     5c2:	9f af       	std	Y+63, r25	; 0x3f
     5c4:	8e af       	std	Y+62, r24	; 0x3e

000005c6 <.Loc.44>:
	...

000005c8 <.LBE83>:
		_delay_loop_2(__ticks);
		return;
     5c8:	28 c0       	rjmp	.+80     	; 0x61a <.L25>

000005ca <.L60>:
	}
	else
		__ticks = (uint8_t)__tmp;
     5ca:	6d a1       	ldd	r22, Y+37	; 0x25
     5cc:	7e a1       	ldd	r23, Y+38	; 0x26
     5ce:	8f a1       	ldd	r24, Y+39	; 0x27
     5d0:	98 a5       	ldd	r25, Y+40	; 0x28
     5d2:	0e 94 5f 0b 	call	0x16be	; 0x16be <__fixunssfsi>
     5d6:	c5 57       	subi	r28, 0x75	; 117
     5d8:	df 4f       	sbci	r29, 0xFF	; 255
     5da:	68 83       	st	Y, r22
     5dc:	79 83       	std	Y+1, r23	; 0x01
     5de:	8a 83       	std	Y+2, r24	; 0x02
     5e0:	9b 83       	std	Y+3, r25	; 0x03
     5e2:	cb 58       	subi	r28, 0x8B	; 139
     5e4:	d0 40       	sbci	r29, 0x00	; 0
     5e6:	c5 57       	subi	r28, 0x75	; 117
     5e8:	df 4f       	sbci	r29, 0xFF	; 255
     5ea:	98 81       	ld	r25, Y
     5ec:	cb 58       	subi	r28, 0x8B	; 139
     5ee:	d0 40       	sbci	r29, 0x00	; 0
     5f0:	9d a7       	std	Y+45, r25	; 0x2d

000005f2 <.L12>:
     5f2:	2d a5       	ldd	r18, Y+45	; 0x2d
     5f4:	ce 01       	movw	r24, r28
     5f6:	80 5c       	subi	r24, 0xC0	; 192
     5f8:	9f 4f       	sbci	r25, 0xFF	; 255
     5fa:	dc 01       	movw	r26, r24
     5fc:	2c 93       	st	X, r18

000005fe <.LBB85>:
	__asm__ volatile (
     5fe:	ce 01       	movw	r24, r28
     600:	80 5c       	subi	r24, 0xC0	; 192
     602:	9f 4f       	sbci	r25, 0xFF	; 255
     604:	fc 01       	movw	r30, r24
     606:	80 81       	ld	r24, Z
     608:	28 2f       	mov	r18, r24

0000060a <.L1^B6>:
     60a:	2a 95       	dec	r18
     60c:	f1 f7       	brne	.-4      	; 0x60a <.L1^B6>
     60e:	ce 01       	movw	r24, r28
     610:	80 5c       	subi	r24, 0xC0	; 192
     612:	9f 4f       	sbci	r25, 0xFF	; 255
     614:	dc 01       	movw	r26, r24
     616:	2c 93       	st	X, r18

00000618 <.Loc.48>:
	...

0000061a <.L25>:
    _delay_us(50);//delay moet volgens datasheet
    Stuur_LCD_Opdracht(0b00001100);//scherm een beetje aanpassen
     61a:	8c e0       	ldi	r24, 0x0C	; 12
     61c:	0e 94 18 06 	call	0xc30	; 0xc30 <Stuur_LCD_Opdracht>
     620:	80 e0       	ldi	r24, 0x00	; 0
     622:	90 e0       	ldi	r25, 0x00	; 0
     624:	a8 e4       	ldi	r26, 0x48	; 72
     626:	b2 e4       	ldi	r27, 0x42	; 66
     628:	89 83       	std	Y+1, r24	; 0x01
     62a:	9a 83       	std	Y+2, r25	; 0x02
     62c:	ab 83       	std	Y+3, r26	; 0x03
     62e:	bc 83       	std	Y+4, r27	; 0x04

00000630 <.LBB87>:
	__tmp = ((F_CPU) / 3e6) * __us;
     630:	2b ea       	ldi	r18, 0xAB	; 171
     632:	3a ea       	ldi	r19, 0xAA	; 170
     634:	4a ea       	ldi	r20, 0xAA	; 170
     636:	50 e4       	ldi	r21, 0x40	; 64
     638:	69 81       	ldd	r22, Y+1	; 0x01
     63a:	7a 81       	ldd	r23, Y+2	; 0x02
     63c:	8b 81       	ldd	r24, Y+3	; 0x03
     63e:	9c 81       	ldd	r25, Y+4	; 0x04
     640:	0e 94 08 0c 	call	0x1810	; 0x1810 <__mulsf3>
     644:	c1 57       	subi	r28, 0x71	; 113
     646:	df 4f       	sbci	r29, 0xFF	; 255
     648:	68 83       	st	Y, r22
     64a:	79 83       	std	Y+1, r23	; 0x01
     64c:	8a 83       	std	Y+2, r24	; 0x02
     64e:	9b 83       	std	Y+3, r25	; 0x03
     650:	cf 58       	subi	r28, 0x8F	; 143
     652:	d0 40       	sbci	r29, 0x00	; 0
     654:	c1 57       	subi	r28, 0x71	; 113
     656:	df 4f       	sbci	r29, 0xFF	; 255
     658:	88 81       	ld	r24, Y
     65a:	99 81       	ldd	r25, Y+1	; 0x01
     65c:	aa 81       	ldd	r26, Y+2	; 0x02
     65e:	bb 81       	ldd	r27, Y+3	; 0x03
     660:	cf 58       	subi	r28, 0x8F	; 143
     662:	d0 40       	sbci	r29, 0x00	; 0
     664:	8d 83       	std	Y+5, r24	; 0x05
     666:	9e 83       	std	Y+6, r25	; 0x06
     668:	af 83       	std	Y+7, r26	; 0x07
     66a:	b8 87       	std	Y+8, r27	; 0x08

0000066c <.Loc.51>:
	__tmp2 = ((F_CPU) / 4e6) * __us;
     66c:	20 e0       	ldi	r18, 0x00	; 0
     66e:	30 e0       	ldi	r19, 0x00	; 0
     670:	40 e8       	ldi	r20, 0x80	; 128
     672:	50 e4       	ldi	r21, 0x40	; 64
     674:	69 81       	ldd	r22, Y+1	; 0x01
     676:	7a 81       	ldd	r23, Y+2	; 0x02
     678:	8b 81       	ldd	r24, Y+3	; 0x03
     67a:	9c 81       	ldd	r25, Y+4	; 0x04
     67c:	0e 94 08 0c 	call	0x1810	; 0x1810 <__mulsf3>
     680:	cd 56       	subi	r28, 0x6D	; 109
     682:	df 4f       	sbci	r29, 0xFF	; 255
     684:	68 83       	st	Y, r22
     686:	79 83       	std	Y+1, r23	; 0x01
     688:	8a 83       	std	Y+2, r24	; 0x02
     68a:	9b 83       	std	Y+3, r25	; 0x03
     68c:	c3 59       	subi	r28, 0x93	; 147
     68e:	d0 40       	sbci	r29, 0x00	; 0
     690:	cd 56       	subi	r28, 0x6D	; 109
     692:	df 4f       	sbci	r29, 0xFF	; 255
     694:	88 81       	ld	r24, Y
     696:	99 81       	ldd	r25, Y+1	; 0x01
     698:	aa 81       	ldd	r26, Y+2	; 0x02
     69a:	bb 81       	ldd	r27, Y+3	; 0x03
     69c:	c3 59       	subi	r28, 0x93	; 147
     69e:	d0 40       	sbci	r29, 0x00	; 0
     6a0:	89 87       	std	Y+9, r24	; 0x09
     6a2:	9a 87       	std	Y+10, r25	; 0x0a
     6a4:	ab 87       	std	Y+11, r26	; 0x0b
     6a6:	bc 87       	std	Y+12, r27	; 0x0c

000006a8 <.Loc.52>:
	if (__tmp < 1.0)
     6a8:	20 e0       	ldi	r18, 0x00	; 0
     6aa:	30 e0       	ldi	r19, 0x00	; 0
     6ac:	40 e8       	ldi	r20, 0x80	; 128
     6ae:	5f e3       	ldi	r21, 0x3F	; 63
     6b0:	6d 81       	ldd	r22, Y+5	; 0x05
     6b2:	7e 81       	ldd	r23, Y+6	; 0x06
     6b4:	8f 81       	ldd	r24, Y+7	; 0x07
     6b6:	98 85       	ldd	r25, Y+8	; 0x08
     6b8:	0e 94 e8 0a 	call	0x15d0	; 0x15d0 <__cmpsf2>
     6bc:	88 23       	and	r24, r24
     6be:	1c f4       	brge	.+6      	; 0x6c6 <.L61>

000006c0 <.Loc.53>:
		__ticks = 1;
     6c0:	81 e0       	ldi	r24, 0x01	; 1
     6c2:	8d 87       	std	Y+13, r24	; 0x0d
     6c4:	1b c1       	rjmp	.+566    	; 0x8fc <.L28>

000006c6 <.L61>:
	else if (__tmp2 > 65535)
     6c6:	20 e0       	ldi	r18, 0x00	; 0
     6c8:	3f ef       	ldi	r19, 0xFF	; 255
     6ca:	4f e7       	ldi	r20, 0x7F	; 127
     6cc:	57 e4       	ldi	r21, 0x47	; 71
     6ce:	69 85       	ldd	r22, Y+9	; 0x09
     6d0:	7a 85       	ldd	r23, Y+10	; 0x0a
     6d2:	8b 85       	ldd	r24, Y+11	; 0x0b
     6d4:	9c 85       	ldd	r25, Y+12	; 0x0c
     6d6:	0e 94 03 0c 	call	0x1806	; 0x1806 <__gesf2>
     6da:	88 23       	and	r24, r24
     6dc:	09 f0       	breq	.+2      	; 0x6e0 <L0^A>

000006de <L0^A>:
     6de:	0c f4       	brge	.+2      	; 0x6e2 <.Loc.55>

000006e0 <L0^A>:
     6e0:	ca c0       	rjmp	.+404    	; 0x876 <.L62>

000006e2 <.Loc.55>:
		_delay_ms(__us / 1000.0);
     6e2:	20 e0       	ldi	r18, 0x00	; 0
     6e4:	30 e0       	ldi	r19, 0x00	; 0
     6e6:	4a e7       	ldi	r20, 0x7A	; 122
     6e8:	54 e4       	ldi	r21, 0x44	; 68
     6ea:	69 81       	ldd	r22, Y+1	; 0x01
     6ec:	7a 81       	ldd	r23, Y+2	; 0x02
     6ee:	8b 81       	ldd	r24, Y+3	; 0x03
     6f0:	9c 81       	ldd	r25, Y+4	; 0x04
     6f2:	0e 94 ed 0a 	call	0x15da	; 0x15da <__divsf3>
     6f6:	c9 56       	subi	r28, 0x69	; 105
     6f8:	df 4f       	sbci	r29, 0xFF	; 255
     6fa:	68 83       	st	Y, r22
     6fc:	79 83       	std	Y+1, r23	; 0x01
     6fe:	8a 83       	std	Y+2, r24	; 0x02
     700:	9b 83       	std	Y+3, r25	; 0x03
     702:	c7 59       	subi	r28, 0x97	; 151
     704:	d0 40       	sbci	r29, 0x00	; 0
     706:	c9 56       	subi	r28, 0x69	; 105
     708:	df 4f       	sbci	r29, 0xFF	; 255
     70a:	88 81       	ld	r24, Y
     70c:	99 81       	ldd	r25, Y+1	; 0x01
     70e:	aa 81       	ldd	r26, Y+2	; 0x02
     710:	bb 81       	ldd	r27, Y+3	; 0x03
     712:	c7 59       	subi	r28, 0x97	; 151
     714:	d0 40       	sbci	r29, 0x00	; 0
     716:	8e 87       	std	Y+14, r24	; 0x0e
     718:	9f 87       	std	Y+15, r25	; 0x0f
     71a:	a8 8b       	std	Y+16, r26	; 0x10
     71c:	b9 8b       	std	Y+17, r27	; 0x11

0000071e <.LBB89>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     71e:	20 e0       	ldi	r18, 0x00	; 0
     720:	30 e0       	ldi	r19, 0x00	; 0
     722:	4a e7       	ldi	r20, 0x7A	; 122
     724:	55 e4       	ldi	r21, 0x45	; 69
     726:	6e 85       	ldd	r22, Y+14	; 0x0e
     728:	7f 85       	ldd	r23, Y+15	; 0x0f
     72a:	88 89       	ldd	r24, Y+16	; 0x10
     72c:	99 89       	ldd	r25, Y+17	; 0x11
     72e:	0e 94 08 0c 	call	0x1810	; 0x1810 <__mulsf3>
     732:	c5 56       	subi	r28, 0x65	; 101
     734:	df 4f       	sbci	r29, 0xFF	; 255
     736:	68 83       	st	Y, r22
     738:	79 83       	std	Y+1, r23	; 0x01
     73a:	8a 83       	std	Y+2, r24	; 0x02
     73c:	9b 83       	std	Y+3, r25	; 0x03
     73e:	cb 59       	subi	r28, 0x9B	; 155
     740:	d0 40       	sbci	r29, 0x00	; 0
     742:	c5 56       	subi	r28, 0x65	; 101
     744:	df 4f       	sbci	r29, 0xFF	; 255
     746:	88 81       	ld	r24, Y
     748:	99 81       	ldd	r25, Y+1	; 0x01
     74a:	aa 81       	ldd	r26, Y+2	; 0x02
     74c:	bb 81       	ldd	r27, Y+3	; 0x03
     74e:	cb 59       	subi	r28, 0x9B	; 155
     750:	d0 40       	sbci	r29, 0x00	; 0
     752:	8a 8b       	std	Y+18, r24	; 0x12
     754:	9b 8b       	std	Y+19, r25	; 0x13
     756:	ac 8b       	std	Y+20, r26	; 0x14
     758:	bd 8b       	std	Y+21, r27	; 0x15

0000075a <.Loc.57>:
	if (__tmp < 1.0)
     75a:	20 e0       	ldi	r18, 0x00	; 0
     75c:	30 e0       	ldi	r19, 0x00	; 0
     75e:	40 e8       	ldi	r20, 0x80	; 128
     760:	5f e3       	ldi	r21, 0x3F	; 63
     762:	6a 89       	ldd	r22, Y+18	; 0x12
     764:	7b 89       	ldd	r23, Y+19	; 0x13
     766:	8c 89       	ldd	r24, Y+20	; 0x14
     768:	9d 89       	ldd	r25, Y+21	; 0x15
     76a:	0e 94 e8 0a 	call	0x15d0	; 0x15d0 <__cmpsf2>
     76e:	88 23       	and	r24, r24
     770:	2c f4       	brge	.+10     	; 0x77c <.L63>

00000772 <.Loc.58>:
		__ticks = 1;
     772:	81 e0       	ldi	r24, 0x01	; 1
     774:	90 e0       	ldi	r25, 0x00	; 0
     776:	9f 8b       	std	Y+23, r25	; 0x17
     778:	8e 8b       	std	Y+22, r24	; 0x16
     77a:	72 c0       	rjmp	.+228    	; 0x860 <.L33>

0000077c <.L63>:
	else if (__tmp > 65535)
     77c:	20 e0       	ldi	r18, 0x00	; 0
     77e:	3f ef       	ldi	r19, 0xFF	; 255
     780:	4f e7       	ldi	r20, 0x7F	; 127
     782:	57 e4       	ldi	r21, 0x47	; 71
     784:	6a 89       	ldd	r22, Y+18	; 0x12
     786:	7b 89       	ldd	r23, Y+19	; 0x13
     788:	8c 89       	ldd	r24, Y+20	; 0x14
     78a:	9d 89       	ldd	r25, Y+21	; 0x15
     78c:	0e 94 03 0c 	call	0x1806	; 0x1806 <__gesf2>
     790:	88 23       	and	r24, r24
     792:	09 f0       	breq	.+2      	; 0x796 <L0^A>

00000794 <L0^A>:
     794:	0c f4       	brge	.+2      	; 0x798 <.Loc.60>

00000796 <L0^A>:
     796:	4e c0       	rjmp	.+156    	; 0x834 <.L64>

00000798 <.Loc.60>:
		__ticks = (uint16_t) (__ms * 10.0);
     798:	20 e0       	ldi	r18, 0x00	; 0
     79a:	30 e0       	ldi	r19, 0x00	; 0
     79c:	40 e2       	ldi	r20, 0x20	; 32
     79e:	51 e4       	ldi	r21, 0x41	; 65
     7a0:	6e 85       	ldd	r22, Y+14	; 0x0e
     7a2:	7f 85       	ldd	r23, Y+15	; 0x0f
     7a4:	88 89       	ldd	r24, Y+16	; 0x10
     7a6:	99 89       	ldd	r25, Y+17	; 0x11
     7a8:	0e 94 08 0c 	call	0x1810	; 0x1810 <__mulsf3>
     7ac:	c1 56       	subi	r28, 0x61	; 97
     7ae:	df 4f       	sbci	r29, 0xFF	; 255
     7b0:	68 83       	st	Y, r22
     7b2:	79 83       	std	Y+1, r23	; 0x01
     7b4:	8a 83       	std	Y+2, r24	; 0x02
     7b6:	9b 83       	std	Y+3, r25	; 0x03
     7b8:	cf 59       	subi	r28, 0x9F	; 159
     7ba:	d0 40       	sbci	r29, 0x00	; 0
     7bc:	c1 56       	subi	r28, 0x61	; 97
     7be:	df 4f       	sbci	r29, 0xFF	; 255
     7c0:	88 81       	ld	r24, Y
     7c2:	99 81       	ldd	r25, Y+1	; 0x01
     7c4:	aa 81       	ldd	r26, Y+2	; 0x02
     7c6:	bb 81       	ldd	r27, Y+3	; 0x03
     7c8:	cf 59       	subi	r28, 0x9F	; 159
     7ca:	d0 40       	sbci	r29, 0x00	; 0
     7cc:	63 96       	adiw	r28, 0x13	; 19
     7ce:	8c af       	std	Y+60, r24	; 0x3c
     7d0:	9d af       	std	Y+61, r25	; 0x3d
     7d2:	ae af       	std	Y+62, r26	; 0x3e
     7d4:	bf af       	std	Y+63, r27	; 0x3f
     7d6:	63 97       	sbiw	r28, 0x13	; 19

000007d8 <.Loc.61>:
     7d8:	63 96       	adiw	r28, 0x13	; 19
     7da:	6c ad       	ldd	r22, Y+60	; 0x3c
     7dc:	7d ad       	ldd	r23, Y+61	; 0x3d
     7de:	8e ad       	ldd	r24, Y+62	; 0x3e
     7e0:	9f ad       	ldd	r25, Y+63	; 0x3f
     7e2:	63 97       	sbiw	r28, 0x13	; 19
     7e4:	0e 94 5f 0b 	call	0x16be	; 0x16be <__fixunssfsi>
     7e8:	cd 55       	subi	r28, 0x5D	; 93
     7ea:	df 4f       	sbci	r29, 0xFF	; 255
     7ec:	68 83       	st	Y, r22
     7ee:	79 83       	std	Y+1, r23	; 0x01
     7f0:	8a 83       	std	Y+2, r24	; 0x02
     7f2:	9b 83       	std	Y+3, r25	; 0x03
     7f4:	c3 5a       	subi	r28, 0xA3	; 163
     7f6:	d0 40       	sbci	r29, 0x00	; 0
     7f8:	cd 55       	subi	r28, 0x5D	; 93
     7fa:	df 4f       	sbci	r29, 0xFF	; 255
     7fc:	a8 81       	ld	r26, Y
     7fe:	b9 81       	ldd	r27, Y+1	; 0x01
     800:	c3 5a       	subi	r28, 0xA3	; 163
     802:	d0 40       	sbci	r29, 0x00	; 0
     804:	bf 8b       	std	Y+23, r27	; 0x17
     806:	ae 8b       	std	Y+22, r26	; 0x16

00000808 <.Loc.62>:
		while(__ticks)
     808:	10 c0       	rjmp	.+32     	; 0x82a <.L36>

0000080a <.L37>:
     80a:	80 e9       	ldi	r24, 0x90	; 144
     80c:	91 e0       	ldi	r25, 0x01	; 1
     80e:	99 8f       	std	Y+25, r25	; 0x19
     810:	88 8f       	std	Y+24, r24	; 0x18

00000812 <.LBB91>:
	__asm__ volatile (
     812:	88 8d       	ldd	r24, Y+24	; 0x18
     814:	99 8d       	ldd	r25, Y+25	; 0x19

00000816 <.L1^B7>:
     816:	01 97       	sbiw	r24, 0x01	; 1
     818:	f1 f7       	brne	.-4      	; 0x816 <.L1^B7>
     81a:	99 8f       	std	Y+25, r25	; 0x19
     81c:	88 8f       	std	Y+24, r24	; 0x18

0000081e <.Loc.64>:
	...

00000820 <.LBE91>:
			__ticks --;
     820:	8e 89       	ldd	r24, Y+22	; 0x16
     822:	9f 89       	ldd	r25, Y+23	; 0x17
     824:	01 97       	sbiw	r24, 0x01	; 1
     826:	9f 8b       	std	Y+23, r25	; 0x17
     828:	8e 8b       	std	Y+22, r24	; 0x16

0000082a <.L36>:
		while(__ticks)
     82a:	8e 89       	ldd	r24, Y+22	; 0x16
     82c:	9f 89       	ldd	r25, Y+23	; 0x17
     82e:	00 97       	sbiw	r24, 0x00	; 0
     830:	61 f7       	brne	.-40     	; 0x80a <.L37>

00000832 <.Loc.67>:
		return;
     832:	64 c0       	rjmp	.+200    	; 0x8fc <.L28>

00000834 <.L64>:
		__ticks = (uint16_t)__tmp;
     834:	6a 89       	ldd	r22, Y+18	; 0x12
     836:	7b 89       	ldd	r23, Y+19	; 0x13
     838:	8c 89       	ldd	r24, Y+20	; 0x14
     83a:	9d 89       	ldd	r25, Y+21	; 0x15
     83c:	0e 94 5f 0b 	call	0x16be	; 0x16be <__fixunssfsi>
     840:	c9 55       	subi	r28, 0x59	; 89
     842:	df 4f       	sbci	r29, 0xFF	; 255
     844:	68 83       	st	Y, r22
     846:	79 83       	std	Y+1, r23	; 0x01
     848:	8a 83       	std	Y+2, r24	; 0x02
     84a:	9b 83       	std	Y+3, r25	; 0x03
     84c:	c7 5a       	subi	r28, 0xA7	; 167
     84e:	d0 40       	sbci	r29, 0x00	; 0
     850:	c9 55       	subi	r28, 0x59	; 89
     852:	df 4f       	sbci	r29, 0xFF	; 255
     854:	e8 81       	ld	r30, Y
     856:	f9 81       	ldd	r31, Y+1	; 0x01
     858:	c7 5a       	subi	r28, 0xA7	; 167
     85a:	d0 40       	sbci	r29, 0x00	; 0
     85c:	ff 8b       	std	Y+23, r31	; 0x17
     85e:	ee 8b       	std	Y+22, r30	; 0x16

00000860 <.L33>:
     860:	8e 89       	ldd	r24, Y+22	; 0x16
     862:	9f 89       	ldd	r25, Y+23	; 0x17
     864:	9b 8f       	std	Y+27, r25	; 0x1b
     866:	8a 8f       	std	Y+26, r24	; 0x1a

00000868 <.LBB93>:
     868:	8a 8d       	ldd	r24, Y+26	; 0x1a
     86a:	9b 8d       	ldd	r25, Y+27	; 0x1b

0000086c <.L1^B8>:
     86c:	01 97       	sbiw	r24, 0x01	; 1
     86e:	f1 f7       	brne	.-4      	; 0x86c <.L1^B8>
     870:	9b 8f       	std	Y+27, r25	; 0x1b
     872:	8a 8f       	std	Y+26, r24	; 0x1a

00000874 <.Loc.70>:
}
     874:	43 c0       	rjmp	.+134    	; 0x8fc <.L28>

00000876 <.L62>:
	else if (__tmp > 255)
     876:	20 e0       	ldi	r18, 0x00	; 0
     878:	30 e0       	ldi	r19, 0x00	; 0
     87a:	4f e7       	ldi	r20, 0x7F	; 127
     87c:	53 e4       	ldi	r21, 0x43	; 67
     87e:	6d 81       	ldd	r22, Y+5	; 0x05
     880:	7e 81       	ldd	r23, Y+6	; 0x06
     882:	8f 81       	ldd	r24, Y+7	; 0x07
     884:	98 85       	ldd	r25, Y+8	; 0x08
     886:	0e 94 03 0c 	call	0x1806	; 0x1806 <__gesf2>
     88a:	88 23       	and	r24, r24
     88c:	19 f1       	breq	.+70     	; 0x8d4 <.L65>
     88e:	14 f1       	brlt	.+68     	; 0x8d4 <.L65>

00000890 <.LBB95>:
		uint16_t __ticks=(uint16_t)__tmp2;
     890:	69 85       	ldd	r22, Y+9	; 0x09
     892:	7a 85       	ldd	r23, Y+10	; 0x0a
     894:	8b 85       	ldd	r24, Y+11	; 0x0b
     896:	9c 85       	ldd	r25, Y+12	; 0x0c
     898:	0e 94 5f 0b 	call	0x16be	; 0x16be <__fixunssfsi>
     89c:	c5 55       	subi	r28, 0x55	; 85
     89e:	df 4f       	sbci	r29, 0xFF	; 255
     8a0:	68 83       	st	Y, r22
     8a2:	79 83       	std	Y+1, r23	; 0x01
     8a4:	8a 83       	std	Y+2, r24	; 0x02
     8a6:	9b 83       	std	Y+3, r25	; 0x03
     8a8:	cb 5a       	subi	r28, 0xAB	; 171
     8aa:	d0 40       	sbci	r29, 0x00	; 0
     8ac:	c5 55       	subi	r28, 0x55	; 85
     8ae:	df 4f       	sbci	r29, 0xFF	; 255
     8b0:	88 81       	ld	r24, Y
     8b2:	99 81       	ldd	r25, Y+1	; 0x01
     8b4:	cb 5a       	subi	r28, 0xAB	; 171
     8b6:	d0 40       	sbci	r29, 0x00	; 0
     8b8:	9d 8f       	std	Y+29, r25	; 0x1d
     8ba:	8c 8f       	std	Y+28, r24	; 0x1c
     8bc:	8c 8d       	ldd	r24, Y+28	; 0x1c
     8be:	9d 8d       	ldd	r25, Y+29	; 0x1d
     8c0:	9f 8f       	std	Y+31, r25	; 0x1f
     8c2:	8e 8f       	std	Y+30, r24	; 0x1e

000008c4 <.LBB96>:
	__asm__ volatile (
     8c4:	8e 8d       	ldd	r24, Y+30	; 0x1e
     8c6:	9f 8d       	ldd	r25, Y+31	; 0x1f

000008c8 <.L1^B9>:
     8c8:	01 97       	sbiw	r24, 0x01	; 1
     8ca:	f1 f7       	brne	.-4      	; 0x8c8 <.L1^B9>
     8cc:	9f 8f       	std	Y+31, r25	; 0x1f
     8ce:	8e 8f       	std	Y+30, r24	; 0x1e

000008d0 <.Loc.74>:
	...

000008d2 <.LBE96>:
		return;
     8d2:	1b c0       	rjmp	.+54     	; 0x90a <.L41>

000008d4 <.L65>:
		__ticks = (uint8_t)__tmp;
     8d4:	6d 81       	ldd	r22, Y+5	; 0x05
     8d6:	7e 81       	ldd	r23, Y+6	; 0x06
     8d8:	8f 81       	ldd	r24, Y+7	; 0x07
     8da:	98 85       	ldd	r25, Y+8	; 0x08
     8dc:	0e 94 5f 0b 	call	0x16be	; 0x16be <__fixunssfsi>
     8e0:	c1 55       	subi	r28, 0x51	; 81
     8e2:	df 4f       	sbci	r29, 0xFF	; 255
     8e4:	68 83       	st	Y, r22
     8e6:	79 83       	std	Y+1, r23	; 0x01
     8e8:	8a 83       	std	Y+2, r24	; 0x02
     8ea:	9b 83       	std	Y+3, r25	; 0x03
     8ec:	cf 5a       	subi	r28, 0xAF	; 175
     8ee:	d0 40       	sbci	r29, 0x00	; 0
     8f0:	c1 55       	subi	r28, 0x51	; 81
     8f2:	df 4f       	sbci	r29, 0xFF	; 255
     8f4:	98 81       	ld	r25, Y
     8f6:	cf 5a       	subi	r28, 0xAF	; 175
     8f8:	d0 40       	sbci	r29, 0x00	; 0
     8fa:	9d 87       	std	Y+13, r25	; 0x0d

000008fc <.L28>:
     8fc:	8d 85       	ldd	r24, Y+13	; 0x0d
     8fe:	88 a3       	std	Y+32, r24	; 0x20

00000900 <.LBB98>:
	__asm__ volatile (
     900:	88 a1       	ldd	r24, Y+32	; 0x20

00000902 <.L1^B10>:
     902:	8a 95       	dec	r24
     904:	f1 f7       	brne	.-4      	; 0x902 <.L1^B10>
     906:	88 a3       	std	Y+32, r24	; 0x20

00000908 <.Loc.78>:
	...

0000090a <.L41>:
    _delay_us(50);//delay moet volgens datasheet
}
     90a:	00 00       	nop
     90c:	ce 54       	subi	r28, 0x4E	; 78
     90e:	df 4f       	sbci	r29, 0xFF	; 255
     910:	0f b6       	in	r0, 0x3f	; 63
     912:	f8 94       	cli
     914:	de bf       	out	0x3e, r29	; 62
     916:	0f be       	out	0x3f, r0	; 63
     918:	cd bf       	out	0x3d, r28	; 61
     91a:	df 91       	pop	r29
     91c:	cf 91       	pop	r28
     91e:	1f 91       	pop	r17
     920:	0f 91       	pop	r16
     922:	08 95       	ret

00000924 <Check_LCD_isbezig>:

void Check_LCD_isbezig(void)//wachten tot LCD informatie kan opnemen
{
     924:	cf 93       	push	r28
     926:	df 93       	push	r29
     928:	cd b7       	in	r28, 0x3d	; 61
     92a:	de b7       	in	r29, 0x3e	; 62

0000092c <.Loc.81>:
    DataDir_LCDpoort = 0;
     92c:	87 e2       	ldi	r24, 0x27	; 39
     92e:	90 e0       	ldi	r25, 0x00	; 0

00000930 <.Loc.82>:
     930:	fc 01       	movw	r30, r24
     932:	10 82       	st	Z, r1

00000934 <.Loc.83>:
    LCDControl |= (1 << ReadWrite);
     934:	8b e0       	ldi	r24, 0x0B	; 11
     936:	91 e0       	ldi	r25, 0x01	; 1
     938:	fc 01       	movw	r30, r24
     93a:	20 81       	ld	r18, Z
     93c:	8b e0       	ldi	r24, 0x0B	; 11
     93e:	91 e0       	ldi	r25, 0x01	; 1

00000940 <.Loc.84>:
     940:	22 60       	ori	r18, 0x02	; 2
     942:	fc 01       	movw	r30, r24
     944:	20 83       	st	Z, r18

00000946 <.Loc.85>:
    LCDControl &= ~(1 << LCDRS);
     946:	8b e0       	ldi	r24, 0x0B	; 11
     948:	91 e0       	ldi	r25, 0x01	; 1
     94a:	fc 01       	movw	r30, r24
     94c:	20 81       	ld	r18, Z

0000094e <.Loc.86>:
     94e:	8b e0       	ldi	r24, 0x0B	; 11
     950:	91 e0       	ldi	r25, 0x01	; 1

00000952 <.Loc.87>:
     952:	2e 7f       	andi	r18, 0xFE	; 254
     954:	fc 01       	movw	r30, r24
     956:	20 83       	st	Z, r18

00000958 <.Loc.88>:

    while(LCDpoort >= 0x80)
     958:	02 c0       	rjmp	.+4      	; 0x95e <.L67>

0000095a <.L68>:
    {
        LCD_Aan_Uit();
     95a:	0e 94 be 04 	call	0x97c	; 0x97c <LCD_Aan_Uit>

0000095e <.L67>:
    while(LCDpoort >= 0x80)
     95e:	88 e2       	ldi	r24, 0x28	; 40
     960:	90 e0       	ldi	r25, 0x00	; 0
     962:	fc 01       	movw	r30, r24
     964:	80 81       	ld	r24, Z

00000966 <.Loc.91>:
     966:	88 23       	and	r24, r24
     968:	c4 f3       	brlt	.-16     	; 0x95a <.L68>

0000096a <.Loc.92>:
    }

    DataDir_LCDpoort = 0xFF;
     96a:	87 e2       	ldi	r24, 0x27	; 39
     96c:	90 e0       	ldi	r25, 0x00	; 0

0000096e <.Loc.93>:
     96e:	2f ef       	ldi	r18, 0xFF	; 255
     970:	fc 01       	movw	r30, r24
     972:	20 83       	st	Z, r18

00000974 <.Loc.94>:
}
     974:	00 00       	nop
     976:	df 91       	pop	r29
     978:	cf 91       	pop	r28
     97a:	08 95       	ret

0000097c <LCD_Aan_Uit>:

void LCD_Aan_Uit(void)//LCD(enable) snel aan en uit zetten
{
     97c:	cf 93       	push	r28
     97e:	df 93       	push	r29
     980:	cd b7       	in	r28, 0x3d	; 61
     982:	de b7       	in	r29, 0x3e	; 62
     984:	c8 54       	subi	r28, 0x48	; 72
     986:	d1 09       	sbc	r29, r1
     988:	0f b6       	in	r0, 0x3f	; 63
     98a:	f8 94       	cli
     98c:	de bf       	out	0x3e, r29	; 62
     98e:	0f be       	out	0x3f, r0	; 63
     990:	cd bf       	out	0x3d, r28	; 61

00000992 <.Loc.96>:
    LCDControl |= 1 << (LCDEnable);
     992:	8b e0       	ldi	r24, 0x0B	; 11
     994:	91 e0       	ldi	r25, 0x01	; 1
     996:	dc 01       	movw	r26, r24
     998:	2c 91       	ld	r18, X
     99a:	8b e0       	ldi	r24, 0x0B	; 11
     99c:	91 e0       	ldi	r25, 0x01	; 1

0000099e <.Loc.97>:
     99e:	24 60       	ori	r18, 0x04	; 4
     9a0:	fc 01       	movw	r30, r24
     9a2:	20 83       	st	Z, r18
     9a4:	80 e0       	ldi	r24, 0x00	; 0
     9a6:	90 e0       	ldi	r25, 0x00	; 0
     9a8:	a8 e4       	ldi	r26, 0x48	; 72
     9aa:	b2 e4       	ldi	r27, 0x42	; 66
     9ac:	89 83       	std	Y+1, r24	; 0x01
     9ae:	9a 83       	std	Y+2, r25	; 0x02
     9b0:	ab 83       	std	Y+3, r26	; 0x03
     9b2:	bc 83       	std	Y+4, r27	; 0x04

000009b4 <.LBB100>:
	__tmp = ((F_CPU) / 3e6) * __us;
     9b4:	2b ea       	ldi	r18, 0xAB	; 171
     9b6:	3a ea       	ldi	r19, 0xAA	; 170
     9b8:	4a ea       	ldi	r20, 0xAA	; 170
     9ba:	50 e4       	ldi	r21, 0x40	; 64
     9bc:	69 81       	ldd	r22, Y+1	; 0x01
     9be:	7a 81       	ldd	r23, Y+2	; 0x02
     9c0:	8b 81       	ldd	r24, Y+3	; 0x03
     9c2:	9c 81       	ldd	r25, Y+4	; 0x04
     9c4:	0e 94 08 0c 	call	0x1810	; 0x1810 <__mulsf3>
     9c8:	6d a3       	std	Y+37, r22	; 0x25
     9ca:	7e a3       	std	Y+38, r23	; 0x26
     9cc:	8f a3       	std	Y+39, r24	; 0x27
     9ce:	98 a7       	std	Y+40, r25	; 0x28
     9d0:	8d a1       	ldd	r24, Y+37	; 0x25
     9d2:	9e a1       	ldd	r25, Y+38	; 0x26
     9d4:	af a1       	ldd	r26, Y+39	; 0x27
     9d6:	b8 a5       	ldd	r27, Y+40	; 0x28
     9d8:	8d 83       	std	Y+5, r24	; 0x05
     9da:	9e 83       	std	Y+6, r25	; 0x06
     9dc:	af 83       	std	Y+7, r26	; 0x07
     9de:	b8 87       	std	Y+8, r27	; 0x08

000009e0 <.Loc.99>:
	__tmp2 = ((F_CPU) / 4e6) * __us;
     9e0:	20 e0       	ldi	r18, 0x00	; 0
     9e2:	30 e0       	ldi	r19, 0x00	; 0
     9e4:	40 e8       	ldi	r20, 0x80	; 128
     9e6:	50 e4       	ldi	r21, 0x40	; 64
     9e8:	69 81       	ldd	r22, Y+1	; 0x01
     9ea:	7a 81       	ldd	r23, Y+2	; 0x02
     9ec:	8b 81       	ldd	r24, Y+3	; 0x03
     9ee:	9c 81       	ldd	r25, Y+4	; 0x04
     9f0:	0e 94 08 0c 	call	0x1810	; 0x1810 <__mulsf3>
     9f4:	69 a7       	std	Y+41, r22	; 0x29
     9f6:	7a a7       	std	Y+42, r23	; 0x2a
     9f8:	8b a7       	std	Y+43, r24	; 0x2b
     9fa:	9c a7       	std	Y+44, r25	; 0x2c
     9fc:	89 a5       	ldd	r24, Y+41	; 0x29
     9fe:	9a a5       	ldd	r25, Y+42	; 0x2a
     a00:	ab a5       	ldd	r26, Y+43	; 0x2b
     a02:	bc a5       	ldd	r27, Y+44	; 0x2c
     a04:	89 87       	std	Y+9, r24	; 0x09
     a06:	9a 87       	std	Y+10, r25	; 0x0a
     a08:	ab 87       	std	Y+11, r26	; 0x0b
     a0a:	bc 87       	std	Y+12, r27	; 0x0c

00000a0c <.Loc.100>:
	if (__tmp < 1.0)
     a0c:	20 e0       	ldi	r18, 0x00	; 0
     a0e:	30 e0       	ldi	r19, 0x00	; 0
     a10:	40 e8       	ldi	r20, 0x80	; 128
     a12:	5f e3       	ldi	r21, 0x3F	; 63
     a14:	6d 81       	ldd	r22, Y+5	; 0x05
     a16:	7e 81       	ldd	r23, Y+6	; 0x06
     a18:	8f 81       	ldd	r24, Y+7	; 0x07
     a1a:	98 85       	ldd	r25, Y+8	; 0x08
     a1c:	0e 94 e8 0a 	call	0x15d0	; 0x15d0 <__cmpsf2>
     a20:	88 23       	and	r24, r24
     a22:	1c f4       	brge	.+6      	; 0xa2a <.L91>

00000a24 <.Loc.101>:
		__ticks = 1;
     a24:	81 e0       	ldi	r24, 0x01	; 1
     a26:	8d 87       	std	Y+13, r24	; 0x0d
     a28:	e8 c0       	rjmp	.+464    	; 0xbfa <.L72>

00000a2a <.L91>:
	else if (__tmp2 > 65535)
     a2a:	20 e0       	ldi	r18, 0x00	; 0
     a2c:	3f ef       	ldi	r19, 0xFF	; 255
     a2e:	4f e7       	ldi	r20, 0x7F	; 127
     a30:	57 e4       	ldi	r21, 0x47	; 71
     a32:	69 85       	ldd	r22, Y+9	; 0x09
     a34:	7a 85       	ldd	r23, Y+10	; 0x0a
     a36:	8b 85       	ldd	r24, Y+11	; 0x0b
     a38:	9c 85       	ldd	r25, Y+12	; 0x0c
     a3a:	0e 94 03 0c 	call	0x1806	; 0x1806 <__gesf2>
     a3e:	88 23       	and	r24, r24
     a40:	09 f0       	breq	.+2      	; 0xa44 <L0^A>

00000a42 <L0^A>:
     a42:	0c f4       	brge	.+2      	; 0xa46 <.Loc.103>

00000a44 <L0^A>:
     a44:	9f c0       	rjmp	.+318    	; 0xb84 <.L92>

00000a46 <.Loc.103>:
		_delay_ms(__us / 1000.0);
     a46:	20 e0       	ldi	r18, 0x00	; 0
     a48:	30 e0       	ldi	r19, 0x00	; 0
     a4a:	4a e7       	ldi	r20, 0x7A	; 122
     a4c:	54 e4       	ldi	r21, 0x44	; 68
     a4e:	69 81       	ldd	r22, Y+1	; 0x01
     a50:	7a 81       	ldd	r23, Y+2	; 0x02
     a52:	8b 81       	ldd	r24, Y+3	; 0x03
     a54:	9c 81       	ldd	r25, Y+4	; 0x04
     a56:	0e 94 ed 0a 	call	0x15da	; 0x15da <__divsf3>
     a5a:	6d a7       	std	Y+45, r22	; 0x2d
     a5c:	7e a7       	std	Y+46, r23	; 0x2e
     a5e:	8f a7       	std	Y+47, r24	; 0x2f
     a60:	98 ab       	std	Y+48, r25	; 0x30
     a62:	8d a5       	ldd	r24, Y+45	; 0x2d
     a64:	9e a5       	ldd	r25, Y+46	; 0x2e
     a66:	af a5       	ldd	r26, Y+47	; 0x2f
     a68:	b8 a9       	ldd	r27, Y+48	; 0x30
     a6a:	8e 87       	std	Y+14, r24	; 0x0e
     a6c:	9f 87       	std	Y+15, r25	; 0x0f
     a6e:	a8 8b       	std	Y+16, r26	; 0x10
     a70:	b9 8b       	std	Y+17, r27	; 0x11

00000a72 <.LBB102>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     a72:	20 e0       	ldi	r18, 0x00	; 0
     a74:	30 e0       	ldi	r19, 0x00	; 0
     a76:	4a e7       	ldi	r20, 0x7A	; 122
     a78:	55 e4       	ldi	r21, 0x45	; 69
     a7a:	6e 85       	ldd	r22, Y+14	; 0x0e
     a7c:	7f 85       	ldd	r23, Y+15	; 0x0f
     a7e:	88 89       	ldd	r24, Y+16	; 0x10
     a80:	99 89       	ldd	r25, Y+17	; 0x11
     a82:	0e 94 08 0c 	call	0x1810	; 0x1810 <__mulsf3>
     a86:	69 ab       	std	Y+49, r22	; 0x31
     a88:	7a ab       	std	Y+50, r23	; 0x32
     a8a:	8b ab       	std	Y+51, r24	; 0x33
     a8c:	9c ab       	std	Y+52, r25	; 0x34
     a8e:	89 a9       	ldd	r24, Y+49	; 0x31
     a90:	9a a9       	ldd	r25, Y+50	; 0x32
     a92:	ab a9       	ldd	r26, Y+51	; 0x33
     a94:	bc a9       	ldd	r27, Y+52	; 0x34
     a96:	8a 8b       	std	Y+18, r24	; 0x12
     a98:	9b 8b       	std	Y+19, r25	; 0x13
     a9a:	ac 8b       	std	Y+20, r26	; 0x14
     a9c:	bd 8b       	std	Y+21, r27	; 0x15

00000a9e <.Loc.105>:
	if (__tmp < 1.0)
     a9e:	20 e0       	ldi	r18, 0x00	; 0
     aa0:	30 e0       	ldi	r19, 0x00	; 0
     aa2:	40 e8       	ldi	r20, 0x80	; 128
     aa4:	5f e3       	ldi	r21, 0x3F	; 63
     aa6:	6a 89       	ldd	r22, Y+18	; 0x12
     aa8:	7b 89       	ldd	r23, Y+19	; 0x13
     aaa:	8c 89       	ldd	r24, Y+20	; 0x14
     aac:	9d 89       	ldd	r25, Y+21	; 0x15
     aae:	0e 94 e8 0a 	call	0x15d0	; 0x15d0 <__cmpsf2>
     ab2:	88 23       	and	r24, r24
     ab4:	2c f4       	brge	.+10     	; 0xac0 <.L93>

00000ab6 <.Loc.106>:
		__ticks = 1;
     ab6:	81 e0       	ldi	r24, 0x01	; 1
     ab8:	90 e0       	ldi	r25, 0x00	; 0
     aba:	9f 8b       	std	Y+23, r25	; 0x17
     abc:	8e 8b       	std	Y+22, r24	; 0x16
     abe:	57 c0       	rjmp	.+174    	; 0xb6e <.L77>

00000ac0 <.L93>:
	else if (__tmp > 65535)
     ac0:	20 e0       	ldi	r18, 0x00	; 0
     ac2:	3f ef       	ldi	r19, 0xFF	; 255
     ac4:	4f e7       	ldi	r20, 0x7F	; 127
     ac6:	57 e4       	ldi	r21, 0x47	; 71
     ac8:	6a 89       	ldd	r22, Y+18	; 0x12
     aca:	7b 89       	ldd	r23, Y+19	; 0x13
     acc:	8c 89       	ldd	r24, Y+20	; 0x14
     ace:	9d 89       	ldd	r25, Y+21	; 0x15
     ad0:	0e 94 03 0c 	call	0x1806	; 0x1806 <__gesf2>
     ad4:	88 23       	and	r24, r24
     ad6:	d9 f1       	breq	.+118    	; 0xb4e <.L94>
     ad8:	d4 f1       	brlt	.+116    	; 0xb4e <.L94>

00000ada <.Loc.108>:
		__ticks = (uint16_t) (__ms * 10.0);
     ada:	20 e0       	ldi	r18, 0x00	; 0
     adc:	30 e0       	ldi	r19, 0x00	; 0
     ade:	40 e2       	ldi	r20, 0x20	; 32
     ae0:	51 e4       	ldi	r21, 0x41	; 65
     ae2:	6e 85       	ldd	r22, Y+14	; 0x0e
     ae4:	7f 85       	ldd	r23, Y+15	; 0x0f
     ae6:	88 89       	ldd	r24, Y+16	; 0x10
     ae8:	99 89       	ldd	r25, Y+17	; 0x11
     aea:	0e 94 08 0c 	call	0x1810	; 0x1810 <__mulsf3>
     aee:	6d ab       	std	Y+53, r22	; 0x35
     af0:	7e ab       	std	Y+54, r23	; 0x36
     af2:	8f ab       	std	Y+55, r24	; 0x37
     af4:	98 af       	std	Y+56, r25	; 0x38
     af6:	8d a9       	ldd	r24, Y+53	; 0x35
     af8:	9e a9       	ldd	r25, Y+54	; 0x36
     afa:	af a9       	ldd	r26, Y+55	; 0x37
     afc:	b8 ad       	ldd	r27, Y+56	; 0x38
     afe:	89 a3       	std	Y+33, r24	; 0x21
     b00:	9a a3       	std	Y+34, r25	; 0x22
     b02:	ab a3       	std	Y+35, r26	; 0x23
     b04:	bc a3       	std	Y+36, r27	; 0x24

00000b06 <.Loc.109>:
     b06:	69 a1       	ldd	r22, Y+33	; 0x21
     b08:	7a a1       	ldd	r23, Y+34	; 0x22
     b0a:	8b a1       	ldd	r24, Y+35	; 0x23
     b0c:	9c a1       	ldd	r25, Y+36	; 0x24
     b0e:	0e 94 5f 0b 	call	0x16be	; 0x16be <__fixunssfsi>
     b12:	69 af       	std	Y+57, r22	; 0x39
     b14:	7a af       	std	Y+58, r23	; 0x3a
     b16:	8b af       	std	Y+59, r24	; 0x3b
     b18:	9c af       	std	Y+60, r25	; 0x3c
     b1a:	a9 ad       	ldd	r26, Y+57	; 0x39
     b1c:	ba ad       	ldd	r27, Y+58	; 0x3a
     b1e:	bf 8b       	std	Y+23, r27	; 0x17
     b20:	ae 8b       	std	Y+22, r26	; 0x16

00000b22 <.Loc.110>:
		while(__ticks)
     b22:	10 c0       	rjmp	.+32     	; 0xb44 <.L80>

00000b24 <.L81>:
     b24:	80 e9       	ldi	r24, 0x90	; 144
     b26:	91 e0       	ldi	r25, 0x01	; 1
     b28:	99 8f       	std	Y+25, r25	; 0x19
     b2a:	88 8f       	std	Y+24, r24	; 0x18

00000b2c <.LBB104>:
	__asm__ volatile (
     b2c:	88 8d       	ldd	r24, Y+24	; 0x18
     b2e:	99 8d       	ldd	r25, Y+25	; 0x19

00000b30 <.L1^B11>:
     b30:	01 97       	sbiw	r24, 0x01	; 1
     b32:	f1 f7       	brne	.-4      	; 0xb30 <.L1^B11>
     b34:	99 8f       	std	Y+25, r25	; 0x19
     b36:	88 8f       	std	Y+24, r24	; 0x18

00000b38 <.Loc.112>:
	...

00000b3a <.LBE104>:
			__ticks --;
     b3a:	8e 89       	ldd	r24, Y+22	; 0x16
     b3c:	9f 89       	ldd	r25, Y+23	; 0x17
     b3e:	01 97       	sbiw	r24, 0x01	; 1
     b40:	9f 8b       	std	Y+23, r25	; 0x17
     b42:	8e 8b       	std	Y+22, r24	; 0x16

00000b44 <.L80>:
		while(__ticks)
     b44:	8e 89       	ldd	r24, Y+22	; 0x16
     b46:	9f 89       	ldd	r25, Y+23	; 0x17
     b48:	00 97       	sbiw	r24, 0x00	; 0
     b4a:	61 f7       	brne	.-40     	; 0xb24 <.L81>

00000b4c <.Loc.115>:
		return;
     b4c:	56 c0       	rjmp	.+172    	; 0xbfa <.L72>

00000b4e <.L94>:
		__ticks = (uint16_t)__tmp;
     b4e:	6a 89       	ldd	r22, Y+18	; 0x12
     b50:	7b 89       	ldd	r23, Y+19	; 0x13
     b52:	8c 89       	ldd	r24, Y+20	; 0x14
     b54:	9d 89       	ldd	r25, Y+21	; 0x15
     b56:	0e 94 5f 0b 	call	0x16be	; 0x16be <__fixunssfsi>
     b5a:	21 96       	adiw	r28, 0x01	; 1
     b5c:	6c af       	std	Y+60, r22	; 0x3c
     b5e:	7d af       	std	Y+61, r23	; 0x3d
     b60:	8e af       	std	Y+62, r24	; 0x3e
     b62:	9f af       	std	Y+63, r25	; 0x3f
     b64:	21 97       	sbiw	r28, 0x01	; 1
     b66:	ed ad       	ldd	r30, Y+61	; 0x3d
     b68:	fe ad       	ldd	r31, Y+62	; 0x3e
     b6a:	ff 8b       	std	Y+23, r31	; 0x17
     b6c:	ee 8b       	std	Y+22, r30	; 0x16

00000b6e <.L77>:
     b6e:	8e 89       	ldd	r24, Y+22	; 0x16
     b70:	9f 89       	ldd	r25, Y+23	; 0x17
     b72:	9b 8f       	std	Y+27, r25	; 0x1b
     b74:	8a 8f       	std	Y+26, r24	; 0x1a

00000b76 <.LBB106>:
     b76:	8a 8d       	ldd	r24, Y+26	; 0x1a
     b78:	9b 8d       	ldd	r25, Y+27	; 0x1b

00000b7a <.L1^B12>:
     b7a:	01 97       	sbiw	r24, 0x01	; 1
     b7c:	f1 f7       	brne	.-4      	; 0xb7a <.L1^B12>
     b7e:	9b 8f       	std	Y+27, r25	; 0x1b
     b80:	8a 8f       	std	Y+26, r24	; 0x1a

00000b82 <.Loc.118>:
}
     b82:	3b c0       	rjmp	.+118    	; 0xbfa <.L72>

00000b84 <.L92>:
	else if (__tmp > 255)
     b84:	20 e0       	ldi	r18, 0x00	; 0
     b86:	30 e0       	ldi	r19, 0x00	; 0
     b88:	4f e7       	ldi	r20, 0x7F	; 127
     b8a:	53 e4       	ldi	r21, 0x43	; 67
     b8c:	6d 81       	ldd	r22, Y+5	; 0x05
     b8e:	7e 81       	ldd	r23, Y+6	; 0x06
     b90:	8f 81       	ldd	r24, Y+7	; 0x07
     b92:	98 85       	ldd	r25, Y+8	; 0x08
     b94:	0e 94 03 0c 	call	0x1806	; 0x1806 <__gesf2>
     b98:	88 23       	and	r24, r24
     b9a:	f9 f0       	breq	.+62     	; 0xbda <.L95>
     b9c:	f4 f0       	brlt	.+60     	; 0xbda <.L95>

00000b9e <.LBB108>:
		uint16_t __ticks=(uint16_t)__tmp2;
     b9e:	69 85       	ldd	r22, Y+9	; 0x09
     ba0:	7a 85       	ldd	r23, Y+10	; 0x0a
     ba2:	8b 85       	ldd	r24, Y+11	; 0x0b
     ba4:	9c 85       	ldd	r25, Y+12	; 0x0c
     ba6:	0e 94 5f 0b 	call	0x16be	; 0x16be <__fixunssfsi>
     baa:	25 96       	adiw	r28, 0x05	; 5
     bac:	6c af       	std	Y+60, r22	; 0x3c
     bae:	7d af       	std	Y+61, r23	; 0x3d
     bb0:	8e af       	std	Y+62, r24	; 0x3e
     bb2:	9f af       	std	Y+63, r25	; 0x3f
     bb4:	25 97       	sbiw	r28, 0x05	; 5
     bb6:	23 96       	adiw	r28, 0x03	; 3
     bb8:	8e ad       	ldd	r24, Y+62	; 0x3e
     bba:	9f ad       	ldd	r25, Y+63	; 0x3f
     bbc:	23 97       	sbiw	r28, 0x03	; 3
     bbe:	9d 8f       	std	Y+29, r25	; 0x1d
     bc0:	8c 8f       	std	Y+28, r24	; 0x1c
     bc2:	8c 8d       	ldd	r24, Y+28	; 0x1c
     bc4:	9d 8d       	ldd	r25, Y+29	; 0x1d
     bc6:	9f 8f       	std	Y+31, r25	; 0x1f
     bc8:	8e 8f       	std	Y+30, r24	; 0x1e

00000bca <.LBB109>:
	__asm__ volatile (
     bca:	8e 8d       	ldd	r24, Y+30	; 0x1e
     bcc:	9f 8d       	ldd	r25, Y+31	; 0x1f

00000bce <.L1^B13>:
     bce:	01 97       	sbiw	r24, 0x01	; 1
     bd0:	f1 f7       	brne	.-4      	; 0xbce <.L1^B13>
     bd2:	9f 8f       	std	Y+31, r25	; 0x1f
     bd4:	8e 8f       	std	Y+30, r24	; 0x1e

00000bd6 <.Loc.122>:
	...

00000bd8 <.LBE109>:
		return;
     bd8:	17 c0       	rjmp	.+46     	; 0xc08 <.L85>

00000bda <.L95>:
		__ticks = (uint8_t)__tmp;
     bda:	6d 81       	ldd	r22, Y+5	; 0x05
     bdc:	7e 81       	ldd	r23, Y+6	; 0x06
     bde:	8f 81       	ldd	r24, Y+7	; 0x07
     be0:	98 85       	ldd	r25, Y+8	; 0x08
     be2:	0e 94 5f 0b 	call	0x16be	; 0x16be <__fixunssfsi>
     be6:	29 96       	adiw	r28, 0x09	; 9
     be8:	6c af       	std	Y+60, r22	; 0x3c
     bea:	7d af       	std	Y+61, r23	; 0x3d
     bec:	8e af       	std	Y+62, r24	; 0x3e
     bee:	9f af       	std	Y+63, r25	; 0x3f
     bf0:	29 97       	sbiw	r28, 0x09	; 9
     bf2:	26 96       	adiw	r28, 0x06	; 6
     bf4:	9f ad       	ldd	r25, Y+63	; 0x3f
     bf6:	26 97       	sbiw	r28, 0x06	; 6
     bf8:	9d 87       	std	Y+13, r25	; 0x0d

00000bfa <.L72>:
     bfa:	8d 85       	ldd	r24, Y+13	; 0x0d
     bfc:	88 a3       	std	Y+32, r24	; 0x20

00000bfe <.LBB111>:
	__asm__ volatile (
     bfe:	88 a1       	ldd	r24, Y+32	; 0x20

00000c00 <.L1^B14>:
     c00:	8a 95       	dec	r24
     c02:	f1 f7       	brne	.-4      	; 0xc00 <.L1^B14>
     c04:	88 a3       	std	Y+32, r24	; 0x20

00000c06 <.Loc.126>:
	...

00000c08 <.L85>:
    _delay_us(50);
    LCDControl &= ~(1 << LCDEnable);
     c08:	8b e0       	ldi	r24, 0x0B	; 11
     c0a:	91 e0       	ldi	r25, 0x01	; 1
     c0c:	dc 01       	movw	r26, r24
     c0e:	2c 91       	ld	r18, X

00000c10 <.Loc.128>:
     c10:	8b e0       	ldi	r24, 0x0B	; 11
     c12:	91 e0       	ldi	r25, 0x01	; 1

00000c14 <.Loc.129>:
     c14:	2b 7f       	andi	r18, 0xFB	; 251
     c16:	fc 01       	movw	r30, r24
     c18:	20 83       	st	Z, r18

00000c1a <.Loc.130>:
}
     c1a:	00 00       	nop
     c1c:	c8 5b       	subi	r28, 0xB8	; 184
     c1e:	df 4f       	sbci	r29, 0xFF	; 255
     c20:	0f b6       	in	r0, 0x3f	; 63
     c22:	f8 94       	cli
     c24:	de bf       	out	0x3e, r29	; 62
     c26:	0f be       	out	0x3f, r0	; 63
     c28:	cd bf       	out	0x3d, r28	; 61
     c2a:	df 91       	pop	r29
     c2c:	cf 91       	pop	r28
     c2e:	08 95       	ret

00000c30 <Stuur_LCD_Opdracht>:

void Stuur_LCD_Opdracht(unsigned char LCD_opdracht)//opdracht naar de LCD sturen
{
     c30:	cf 93       	push	r28
     c32:	df 93       	push	r29
     c34:	0f 92       	push	r0
     c36:	cd b7       	in	r28, 0x3d	; 61
     c38:	de b7       	in	r29, 0x3e	; 62
     c3a:	89 83       	std	Y+1, r24	; 0x01

00000c3c <.Loc.132>:
    Check_LCD_isbezig();
     c3c:	0e 94 92 04 	call	0x924	; 0x924 <Check_LCD_isbezig>

00000c40 <.Loc.133>:
    LCDpoort = LCD_opdracht;
     c40:	88 e2       	ldi	r24, 0x28	; 40
     c42:	90 e0       	ldi	r25, 0x00	; 0

00000c44 <.Loc.134>:
     c44:	29 81       	ldd	r18, Y+1	; 0x01
     c46:	fc 01       	movw	r30, r24
     c48:	20 83       	st	Z, r18

00000c4a <.Loc.135>:
    LCDControl &= ~((1 << ReadWrite) | (1 << LCDRS));
     c4a:	8b e0       	ldi	r24, 0x0B	; 11
     c4c:	91 e0       	ldi	r25, 0x01	; 1
     c4e:	fc 01       	movw	r30, r24
     c50:	20 81       	ld	r18, Z

00000c52 <.Loc.136>:
     c52:	8b e0       	ldi	r24, 0x0B	; 11
     c54:	91 e0       	ldi	r25, 0x01	; 1

00000c56 <.Loc.137>:
     c56:	2c 7f       	andi	r18, 0xFC	; 252
     c58:	fc 01       	movw	r30, r24
     c5a:	20 83       	st	Z, r18

00000c5c <.Loc.138>:
    LCD_Aan_Uit();
     c5c:	0e 94 be 04 	call	0x97c	; 0x97c <LCD_Aan_Uit>

00000c60 <.Loc.139>:
    LCDpoort = 0;
     c60:	88 e2       	ldi	r24, 0x28	; 40
     c62:	90 e0       	ldi	r25, 0x00	; 0

00000c64 <.Loc.140>:
     c64:	fc 01       	movw	r30, r24
     c66:	10 82       	st	Z, r1

00000c68 <.Loc.141>:
}
     c68:	00 00       	nop
     c6a:	0f 90       	pop	r0
     c6c:	df 91       	pop	r29
     c6e:	cf 91       	pop	r28
     c70:	08 95       	ret

00000c72 <Stuur_LCD_Character>:

void Stuur_LCD_Character(unsigned char LCD_character)//character naar de LCD sturen
{
     c72:	cf 93       	push	r28
     c74:	df 93       	push	r29
     c76:	0f 92       	push	r0
     c78:	cd b7       	in	r28, 0x3d	; 61
     c7a:	de b7       	in	r29, 0x3e	; 62
     c7c:	89 83       	std	Y+1, r24	; 0x01

00000c7e <.Loc.143>:
    Check_LCD_isbezig();
     c7e:	0e 94 92 04 	call	0x924	; 0x924 <Check_LCD_isbezig>

00000c82 <.Loc.144>:
    LCDpoort = LCD_character;
     c82:	88 e2       	ldi	r24, 0x28	; 40
     c84:	90 e0       	ldi	r25, 0x00	; 0

00000c86 <.Loc.145>:
     c86:	29 81       	ldd	r18, Y+1	; 0x01
     c88:	fc 01       	movw	r30, r24
     c8a:	20 83       	st	Z, r18

00000c8c <.Loc.146>:
    LCDControl &= ~(1 << ReadWrite);
     c8c:	8b e0       	ldi	r24, 0x0B	; 11
     c8e:	91 e0       	ldi	r25, 0x01	; 1
     c90:	fc 01       	movw	r30, r24
     c92:	20 81       	ld	r18, Z

00000c94 <.Loc.147>:
     c94:	8b e0       	ldi	r24, 0x0B	; 11
     c96:	91 e0       	ldi	r25, 0x01	; 1

00000c98 <.Loc.148>:
     c98:	2d 7f       	andi	r18, 0xFD	; 253
     c9a:	fc 01       	movw	r30, r24
     c9c:	20 83       	st	Z, r18

00000c9e <.Loc.149>:
    LCDControl |= (1 << LCDRS);
     c9e:	8b e0       	ldi	r24, 0x0B	; 11
     ca0:	91 e0       	ldi	r25, 0x01	; 1
     ca2:	fc 01       	movw	r30, r24
     ca4:	20 81       	ld	r18, Z
     ca6:	8b e0       	ldi	r24, 0x0B	; 11
     ca8:	91 e0       	ldi	r25, 0x01	; 1

00000caa <.Loc.150>:
     caa:	21 60       	ori	r18, 0x01	; 1
     cac:	fc 01       	movw	r30, r24
     cae:	20 83       	st	Z, r18

00000cb0 <.Loc.151>:
    LCD_Aan_Uit();
     cb0:	0e 94 be 04 	call	0x97c	; 0x97c <LCD_Aan_Uit>

00000cb4 <.Loc.152>:
    LCDpoort = 0;
     cb4:	88 e2       	ldi	r24, 0x28	; 40
     cb6:	90 e0       	ldi	r25, 0x00	; 0

00000cb8 <.Loc.153>:
     cb8:	fc 01       	movw	r30, r24
     cba:	10 82       	st	Z, r1

00000cbc <.Loc.154>:
}
     cbc:	00 00       	nop
     cbe:	0f 90       	pop	r0
     cc0:	df 91       	pop	r29
     cc2:	cf 91       	pop	r28
     cc4:	08 95       	ret

00000cc6 <Stuur_LCD_String>:

void Stuur_LCD_String(char *stringcharacters)//dit is zodat je characters in string kunnen sturen
{
     cc6:	cf 93       	push	r28
     cc8:	df 93       	push	r29
     cca:	0f 92       	push	r0
     ccc:	0f 92       	push	r0
     cce:	cd b7       	in	r28, 0x3d	; 61
     cd0:	de b7       	in	r29, 0x3e	; 62
     cd2:	9a 83       	std	Y+2, r25	; 0x02
     cd4:	89 83       	std	Y+1, r24	; 0x01

00000cd6 <.Loc.156>:
    while(*stringcharacters > 0)
     cd6:	0b c0       	rjmp	.+22     	; 0xcee <.L99>

00000cd8 <.L100>:
    {
        Stuur_LCD_Character(*stringcharacters++);
     cd8:	89 81       	ldd	r24, Y+1	; 0x01
     cda:	9a 81       	ldd	r25, Y+2	; 0x02
     cdc:	9c 01       	movw	r18, r24
     cde:	2f 5f       	subi	r18, 0xFF	; 255
     ce0:	3f 4f       	sbci	r19, 0xFF	; 255
     ce2:	3a 83       	std	Y+2, r19	; 0x02
     ce4:	29 83       	std	Y+1, r18	; 0x01

00000ce6 <.Loc.158>:
     ce6:	fc 01       	movw	r30, r24
     ce8:	80 81       	ld	r24, Z

00000cea <.Loc.159>:
     cea:	0e 94 39 06 	call	0xc72	; 0xc72 <Stuur_LCD_Character>

00000cee <.L99>:
    while(*stringcharacters > 0)
     cee:	89 81       	ldd	r24, Y+1	; 0x01
     cf0:	9a 81       	ldd	r25, Y+2	; 0x02
     cf2:	fc 01       	movw	r30, r24
     cf4:	80 81       	ld	r24, Z

00000cf6 <.Loc.161>:
     cf6:	88 23       	and	r24, r24
     cf8:	09 f0       	breq	.+2      	; 0xcfc <.Loc.162>

00000cfa <L0^A>:
     cfa:	74 f7       	brge	.-36     	; 0xcd8 <.L100>

00000cfc <.Loc.162>:
    }
}
     cfc:	00 00       	nop
     cfe:	00 00       	nop
     d00:	0f 90       	pop	r0
     d02:	0f 90       	pop	r0
     d04:	df 91       	pop	r29
     d06:	cf 91       	pop	r28
     d08:	08 95       	ret

00000d0a <LCD_Naar_Locatie>:

void LCD_Naar_Locatie(uint8_t x, uint8_t y)//opdracht voor cursor verplaatsing maken
{
     d0a:	cf 93       	push	r28
     d0c:	df 93       	push	r29
     d0e:	0f 92       	push	r0
     d10:	0f 92       	push	r0
     d12:	cd b7       	in	r28, 0x3d	; 61
     d14:	de b7       	in	r29, 0x3e	; 62
     d16:	89 83       	std	Y+1, r24	; 0x01
     d18:	6a 83       	std	Y+2, r22	; 0x02

00000d1a <.Loc.164>:
    Stuur_LCD_Opdracht(0x80 + LCD_Pos_Eerste_Vakje[y-1] + (x-1));
     d1a:	8a 81       	ldd	r24, Y+2	; 0x02
     d1c:	88 2f       	mov	r24, r24
     d1e:	90 e0       	ldi	r25, 0x00	; 0
     d20:	01 97       	sbiw	r24, 0x01	; 1

00000d22 <.Loc.165>:
     d22:	80 50       	subi	r24, 0x00	; 0
     d24:	9e 4f       	sbci	r25, 0xFE	; 254
     d26:	fc 01       	movw	r30, r24
     d28:	80 81       	ld	r24, Z
     d2a:	98 2f       	mov	r25, r24

00000d2c <.Loc.166>:
     d2c:	89 81       	ldd	r24, Y+1	; 0x01
     d2e:	89 0f       	add	r24, r25

00000d30 <.Loc.167>:
     d30:	81 58       	subi	r24, 0x81	; 129
     d32:	0e 94 18 06 	call	0xc30	; 0xc30 <Stuur_LCD_Opdracht>

00000d36 <.Loc.168>:
}
     d36:	00 00       	nop
     d38:	0f 90       	pop	r0
     d3a:	0f 90       	pop	r0
     d3c:	df 91       	pop	r29
     d3e:	cf 91       	pop	r28
     d40:	08 95       	ret

00000d42 <LCD_Scherm_Leeg>:

void LCD_Scherm_Leeg(void)//Maakt het scherm leeg
{
     d42:	cf 93       	push	r28
     d44:	df 93       	push	r29
     d46:	cd b7       	in	r28, 0x3d	; 61
     d48:	de b7       	in	r29, 0x3e	; 62
     d4a:	a2 97       	sbiw	r28, 0x22	; 34
     d4c:	0f b6       	in	r0, 0x3f	; 63
     d4e:	f8 94       	cli
     d50:	de bf       	out	0x3e, r29	; 62
     d52:	0f be       	out	0x3f, r0	; 63
     d54:	cd bf       	out	0x3d, r28	; 61

00000d56 <.Loc.170>:
    Stuur_LCD_Opdracht(0x01);//Leeg scherm 0x01
     d56:	81 e0       	ldi	r24, 0x01	; 1
     d58:	0e 94 18 06 	call	0xc30	; 0xc30 <Stuur_LCD_Opdracht>
     d5c:	80 e0       	ldi	r24, 0x00	; 0
     d5e:	90 e0       	ldi	r25, 0x00	; 0
     d60:	a0 e0       	ldi	r26, 0x00	; 0
     d62:	b0 e4       	ldi	r27, 0x40	; 64
     d64:	89 83       	std	Y+1, r24	; 0x01
     d66:	9a 83       	std	Y+2, r25	; 0x02
     d68:	ab 83       	std	Y+3, r26	; 0x03
     d6a:	bc 83       	std	Y+4, r27	; 0x04

00000d6c <.LBB113>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     d6c:	20 e0       	ldi	r18, 0x00	; 0
     d6e:	30 e0       	ldi	r19, 0x00	; 0
     d70:	4a e7       	ldi	r20, 0x7A	; 122
     d72:	55 e4       	ldi	r21, 0x45	; 69
     d74:	69 81       	ldd	r22, Y+1	; 0x01
     d76:	7a 81       	ldd	r23, Y+2	; 0x02
     d78:	8b 81       	ldd	r24, Y+3	; 0x03
     d7a:	9c 81       	ldd	r25, Y+4	; 0x04
     d7c:	0e 94 08 0c 	call	0x1810	; 0x1810 <__mulsf3>
     d80:	6b 8b       	std	Y+19, r22	; 0x13
     d82:	7c 8b       	std	Y+20, r23	; 0x14
     d84:	8d 8b       	std	Y+21, r24	; 0x15
     d86:	9e 8b       	std	Y+22, r25	; 0x16
     d88:	8b 89       	ldd	r24, Y+19	; 0x13
     d8a:	9c 89       	ldd	r25, Y+20	; 0x14
     d8c:	ad 89       	ldd	r26, Y+21	; 0x15
     d8e:	be 89       	ldd	r27, Y+22	; 0x16
     d90:	8d 83       	std	Y+5, r24	; 0x05
     d92:	9e 83       	std	Y+6, r25	; 0x06
     d94:	af 83       	std	Y+7, r26	; 0x07
     d96:	b8 87       	std	Y+8, r27	; 0x08

00000d98 <.Loc.172>:
	if (__tmp < 1.0)
     d98:	20 e0       	ldi	r18, 0x00	; 0
     d9a:	30 e0       	ldi	r19, 0x00	; 0
     d9c:	40 e8       	ldi	r20, 0x80	; 128
     d9e:	5f e3       	ldi	r21, 0x3F	; 63
     da0:	6d 81       	ldd	r22, Y+5	; 0x05
     da2:	7e 81       	ldd	r23, Y+6	; 0x06
     da4:	8f 81       	ldd	r24, Y+7	; 0x07
     da6:	98 85       	ldd	r25, Y+8	; 0x08
     da8:	0e 94 e8 0a 	call	0x15d0	; 0x15d0 <__cmpsf2>
     dac:	88 23       	and	r24, r24
     dae:	2c f4       	brge	.+10     	; 0xdba <.L113>

00000db0 <.Loc.173>:
		__ticks = 1;
     db0:	81 e0       	ldi	r24, 0x01	; 1
     db2:	90 e0       	ldi	r25, 0x00	; 0
     db4:	9a 87       	std	Y+10, r25	; 0x0a
     db6:	89 87       	std	Y+9, r24	; 0x09
     db8:	55 c0       	rjmp	.+170    	; 0xe64 <.L105>

00000dba <.L113>:
	else if (__tmp > 65535)
     dba:	20 e0       	ldi	r18, 0x00	; 0
     dbc:	3f ef       	ldi	r19, 0xFF	; 255
     dbe:	4f e7       	ldi	r20, 0x7F	; 127
     dc0:	57 e4       	ldi	r21, 0x47	; 71
     dc2:	6d 81       	ldd	r22, Y+5	; 0x05
     dc4:	7e 81       	ldd	r23, Y+6	; 0x06
     dc6:	8f 81       	ldd	r24, Y+7	; 0x07
     dc8:	98 85       	ldd	r25, Y+8	; 0x08
     dca:	0e 94 03 0c 	call	0x1806	; 0x1806 <__gesf2>
     dce:	88 23       	and	r24, r24
     dd0:	d9 f1       	breq	.+118    	; 0xe48 <.L114>
     dd2:	d4 f1       	brlt	.+116    	; 0xe48 <.L114>

00000dd4 <.Loc.175>:
		__ticks = (uint16_t) (__ms * 10.0);
     dd4:	20 e0       	ldi	r18, 0x00	; 0
     dd6:	30 e0       	ldi	r19, 0x00	; 0
     dd8:	40 e2       	ldi	r20, 0x20	; 32
     dda:	51 e4       	ldi	r21, 0x41	; 65
     ddc:	69 81       	ldd	r22, Y+1	; 0x01
     dde:	7a 81       	ldd	r23, Y+2	; 0x02
     de0:	8b 81       	ldd	r24, Y+3	; 0x03
     de2:	9c 81       	ldd	r25, Y+4	; 0x04
     de4:	0e 94 08 0c 	call	0x1810	; 0x1810 <__mulsf3>
     de8:	6f 8b       	std	Y+23, r22	; 0x17
     dea:	78 8f       	std	Y+24, r23	; 0x18
     dec:	89 8f       	std	Y+25, r24	; 0x19
     dee:	9a 8f       	std	Y+26, r25	; 0x1a
     df0:	8f 89       	ldd	r24, Y+23	; 0x17
     df2:	98 8d       	ldd	r25, Y+24	; 0x18
     df4:	a9 8d       	ldd	r26, Y+25	; 0x19
     df6:	ba 8d       	ldd	r27, Y+26	; 0x1a
     df8:	8f 87       	std	Y+15, r24	; 0x0f
     dfa:	98 8b       	std	Y+16, r25	; 0x10
     dfc:	a9 8b       	std	Y+17, r26	; 0x11
     dfe:	ba 8b       	std	Y+18, r27	; 0x12

00000e00 <.Loc.176>:
     e00:	6f 85       	ldd	r22, Y+15	; 0x0f
     e02:	78 89       	ldd	r23, Y+16	; 0x10
     e04:	89 89       	ldd	r24, Y+17	; 0x11
     e06:	9a 89       	ldd	r25, Y+18	; 0x12
     e08:	0e 94 5f 0b 	call	0x16be	; 0x16be <__fixunssfsi>
     e0c:	6b 8f       	std	Y+27, r22	; 0x1b
     e0e:	7c 8f       	std	Y+28, r23	; 0x1c
     e10:	8d 8f       	std	Y+29, r24	; 0x1d
     e12:	9e 8f       	std	Y+30, r25	; 0x1e
     e14:	ab 8d       	ldd	r26, Y+27	; 0x1b
     e16:	bc 8d       	ldd	r27, Y+28	; 0x1c
     e18:	ba 87       	std	Y+10, r27	; 0x0a
     e1a:	a9 87       	std	Y+9, r26	; 0x09

00000e1c <.Loc.177>:
		while(__ticks)
     e1c:	10 c0       	rjmp	.+32     	; 0xe3e <.L108>

00000e1e <.L109>:
     e1e:	80 e9       	ldi	r24, 0x90	; 144
     e20:	91 e0       	ldi	r25, 0x01	; 1
     e22:	9c 87       	std	Y+12, r25	; 0x0c
     e24:	8b 87       	std	Y+11, r24	; 0x0b

00000e26 <.LBB115>:
	__asm__ volatile (
     e26:	8b 85       	ldd	r24, Y+11	; 0x0b
     e28:	9c 85       	ldd	r25, Y+12	; 0x0c

00000e2a <.L1^B15>:
     e2a:	01 97       	sbiw	r24, 0x01	; 1
     e2c:	f1 f7       	brne	.-4      	; 0xe2a <.L1^B15>
     e2e:	9c 87       	std	Y+12, r25	; 0x0c
     e30:	8b 87       	std	Y+11, r24	; 0x0b

00000e32 <.Loc.179>:
	...

00000e34 <.LBE115>:
			__ticks --;
     e34:	89 85       	ldd	r24, Y+9	; 0x09
     e36:	9a 85       	ldd	r25, Y+10	; 0x0a
     e38:	01 97       	sbiw	r24, 0x01	; 1
     e3a:	9a 87       	std	Y+10, r25	; 0x0a
     e3c:	89 87       	std	Y+9, r24	; 0x09

00000e3e <.L108>:
		while(__ticks)
     e3e:	89 85       	ldd	r24, Y+9	; 0x09
     e40:	9a 85       	ldd	r25, Y+10	; 0x0a
     e42:	00 97       	sbiw	r24, 0x00	; 0
     e44:	61 f7       	brne	.-40     	; 0xe1e <.L109>

00000e46 <.Loc.182>:
		return;
     e46:	19 c0       	rjmp	.+50     	; 0xe7a <.L110>

00000e48 <.L114>:
		__ticks = (uint16_t)__tmp;
     e48:	6d 81       	ldd	r22, Y+5	; 0x05
     e4a:	7e 81       	ldd	r23, Y+6	; 0x06
     e4c:	8f 81       	ldd	r24, Y+7	; 0x07
     e4e:	98 85       	ldd	r25, Y+8	; 0x08
     e50:	0e 94 5f 0b 	call	0x16be	; 0x16be <__fixunssfsi>
     e54:	6f 8f       	std	Y+31, r22	; 0x1f
     e56:	78 a3       	std	Y+32, r23	; 0x20
     e58:	89 a3       	std	Y+33, r24	; 0x21
     e5a:	9a a3       	std	Y+34, r25	; 0x22
     e5c:	8f 8d       	ldd	r24, Y+31	; 0x1f
     e5e:	98 a1       	ldd	r25, Y+32	; 0x20
     e60:	9a 87       	std	Y+10, r25	; 0x0a
     e62:	89 87       	std	Y+9, r24	; 0x09

00000e64 <.L105>:
     e64:	89 85       	ldd	r24, Y+9	; 0x09
     e66:	9a 85       	ldd	r25, Y+10	; 0x0a
     e68:	9e 87       	std	Y+14, r25	; 0x0e
     e6a:	8d 87       	std	Y+13, r24	; 0x0d

00000e6c <.LBB117>:
     e6c:	8d 85       	ldd	r24, Y+13	; 0x0d
     e6e:	9e 85       	ldd	r25, Y+14	; 0x0e

00000e70 <.L1^B16>:
     e70:	01 97       	sbiw	r24, 0x01	; 1
     e72:	f1 f7       	brne	.-4      	; 0xe70 <.L1^B16>
     e74:	9e 87       	std	Y+14, r25	; 0x0e
     e76:	8d 87       	std	Y+13, r24	; 0x0d

00000e78 <.Loc.185>:
	...

00000e7a <.L110>:
    _delay_ms(2);//altijd 2ms delay na scherm leegmaken
}
     e7a:	00 00       	nop
     e7c:	a2 96       	adiw	r28, 0x22	; 34
     e7e:	0f b6       	in	r0, 0x3f	; 63
     e80:	f8 94       	cli
     e82:	de bf       	out	0x3e, r29	; 62
     e84:	0f be       	out	0x3f, r0	; 63
     e86:	cd bf       	out	0x3d, r28	; 61
     e88:	df 91       	pop	r29
     e8a:	cf 91       	pop	r28
     e8c:	08 95       	ret

00000e8e <initding>:

void h_bridgeR_set_percentage(signed char percentage);
void h_bridgeL_set_percentage(signed char percentage);

void initding()
{
     e8e:	cf 93       	push	r28
     e90:	df 93       	push	r29
     e92:	cd b7       	in	r28, 0x3d	; 61
     e94:	de b7       	in	r29, 0x3e	; 62

00000e96 <.Loc.1>:
    //timer PWM motorenR
    TCCR1B = (0 << CS12) | (0 << CS11) | (1 << CS10);
     e96:	81 e8       	ldi	r24, 0x81	; 129
     e98:	90 e0       	ldi	r25, 0x00	; 0

00000e9a <.Loc.2>:
     e9a:	21 e0       	ldi	r18, 0x01	; 1
     e9c:	fc 01       	movw	r30, r24
     e9e:	20 83       	st	Z, r18

00000ea0 <.Loc.3>:
    TIMSK1 = (1 << OCIE1A) | (1 << TOIE1);
     ea0:	8f e6       	ldi	r24, 0x6F	; 111
     ea2:	90 e0       	ldi	r25, 0x00	; 0

00000ea4 <.Loc.4>:
     ea4:	23 e0       	ldi	r18, 0x03	; 3
     ea6:	fc 01       	movw	r30, r24
     ea8:	20 83       	st	Z, r18

00000eaa <.Loc.5>:

    OCR1A = 0;
     eaa:	88 e8       	ldi	r24, 0x88	; 136
     eac:	90 e0       	ldi	r25, 0x00	; 0

00000eae <.Loc.6>:
     eae:	fc 01       	movw	r30, r24
     eb0:	11 82       	std	Z+1, r1	; 0x01
     eb2:	10 82       	st	Z, r1

00000eb4 <.Loc.7>:
    //timer PWM motorenL
    TCCR3B = (0 << CS32) | (0 << CS31) | (1 << CS30);
     eb4:	81 e9       	ldi	r24, 0x91	; 145
     eb6:	90 e0       	ldi	r25, 0x00	; 0

00000eb8 <.Loc.8>:
     eb8:	21 e0       	ldi	r18, 0x01	; 1
     eba:	fc 01       	movw	r30, r24
     ebc:	20 83       	st	Z, r18

00000ebe <.Loc.9>:
    TIMSK3 = (1 << OCIE3A) | (1 << TOIE3);
     ebe:	81 e7       	ldi	r24, 0x71	; 113
     ec0:	90 e0       	ldi	r25, 0x00	; 0

00000ec2 <.Loc.10>:
     ec2:	23 e0       	ldi	r18, 0x03	; 3
     ec4:	fc 01       	movw	r30, r24
     ec6:	20 83       	st	Z, r18

00000ec8 <.Loc.11>:

    OCR3A = 0;
     ec8:	88 e9       	ldi	r24, 0x98	; 152
     eca:	90 e0       	ldi	r25, 0x00	; 0

00000ecc <.Loc.12>:
     ecc:	fc 01       	movw	r30, r24
     ece:	11 82       	std	Z+1, r1	; 0x01
     ed0:	10 82       	st	Z, r1

00000ed2 <.Loc.13>:

    //pinout h-brug
    DDR |= (1 << PEN1);
     ed2:	81 e2       	ldi	r24, 0x21	; 33
     ed4:	90 e0       	ldi	r25, 0x00	; 0
     ed6:	fc 01       	movw	r30, r24
     ed8:	20 81       	ld	r18, Z
     eda:	81 e2       	ldi	r24, 0x21	; 33
     edc:	90 e0       	ldi	r25, 0x00	; 0

00000ede <.Loc.14>:
     ede:	20 68       	ori	r18, 0x80	; 128
     ee0:	fc 01       	movw	r30, r24
     ee2:	20 83       	st	Z, r18

00000ee4 <.Loc.15>:
    DDR |= (1 << PIN11);
     ee4:	81 e2       	ldi	r24, 0x21	; 33
     ee6:	90 e0       	ldi	r25, 0x00	; 0
     ee8:	fc 01       	movw	r30, r24
     eea:	20 81       	ld	r18, Z
     eec:	81 e2       	ldi	r24, 0x21	; 33
     eee:	90 e0       	ldi	r25, 0x00	; 0

00000ef0 <.Loc.16>:
     ef0:	20 64       	ori	r18, 0x40	; 64
     ef2:	fc 01       	movw	r30, r24
     ef4:	20 83       	st	Z, r18

00000ef6 <.Loc.17>:
    DDR |= (1 << PIN12);
     ef6:	81 e2       	ldi	r24, 0x21	; 33
     ef8:	90 e0       	ldi	r25, 0x00	; 0
     efa:	fc 01       	movw	r30, r24
     efc:	20 81       	ld	r18, Z
     efe:	81 e2       	ldi	r24, 0x21	; 33
     f00:	90 e0       	ldi	r25, 0x00	; 0

00000f02 <.Loc.18>:
     f02:	20 62       	ori	r18, 0x20	; 32
     f04:	fc 01       	movw	r30, r24
     f06:	20 83       	st	Z, r18

00000f08 <.Loc.19>:
    DDR |= (1 << PIN21);
     f08:	81 e2       	ldi	r24, 0x21	; 33
     f0a:	90 e0       	ldi	r25, 0x00	; 0
     f0c:	fc 01       	movw	r30, r24
     f0e:	20 81       	ld	r18, Z
     f10:	81 e2       	ldi	r24, 0x21	; 33
     f12:	90 e0       	ldi	r25, 0x00	; 0

00000f14 <.Loc.20>:
     f14:	20 61       	ori	r18, 0x10	; 16
     f16:	fc 01       	movw	r30, r24
     f18:	20 83       	st	Z, r18

00000f1a <.Loc.21>:
    DDR |= (1 << PIN22);
     f1a:	81 e2       	ldi	r24, 0x21	; 33
     f1c:	90 e0       	ldi	r25, 0x00	; 0
     f1e:	fc 01       	movw	r30, r24
     f20:	20 81       	ld	r18, Z
     f22:	81 e2       	ldi	r24, 0x21	; 33
     f24:	90 e0       	ldi	r25, 0x00	; 0

00000f26 <.Loc.22>:
     f26:	28 60       	ori	r18, 0x08	; 8
     f28:	fc 01       	movw	r30, r24
     f2a:	20 83       	st	Z, r18

00000f2c <.Loc.23>:
    DDR |= (1 << PEN2);
     f2c:	81 e2       	ldi	r24, 0x21	; 33
     f2e:	90 e0       	ldi	r25, 0x00	; 0
     f30:	fc 01       	movw	r30, r24
     f32:	20 81       	ld	r18, Z
     f34:	81 e2       	ldi	r24, 0x21	; 33
     f36:	90 e0       	ldi	r25, 0x00	; 0

00000f38 <.Loc.24>:
     f38:	24 60       	ori	r18, 0x04	; 4
     f3a:	fc 01       	movw	r30, r24
     f3c:	20 83       	st	Z, r18

00000f3e <.Loc.25>:

    //H-brug pinnen LOW
    PORT &= ~(1 << PEN1);
     f3e:	82 e2       	ldi	r24, 0x22	; 34
     f40:	90 e0       	ldi	r25, 0x00	; 0
     f42:	fc 01       	movw	r30, r24
     f44:	20 81       	ld	r18, Z

00000f46 <.Loc.26>:
     f46:	82 e2       	ldi	r24, 0x22	; 34
     f48:	90 e0       	ldi	r25, 0x00	; 0

00000f4a <.Loc.27>:
     f4a:	2f 77       	andi	r18, 0x7F	; 127
     f4c:	fc 01       	movw	r30, r24
     f4e:	20 83       	st	Z, r18

00000f50 <.Loc.28>:
	PORT &= ~(1 << PIN11);
     f50:	82 e2       	ldi	r24, 0x22	; 34
     f52:	90 e0       	ldi	r25, 0x00	; 0
     f54:	fc 01       	movw	r30, r24
     f56:	20 81       	ld	r18, Z

00000f58 <.Loc.29>:
     f58:	82 e2       	ldi	r24, 0x22	; 34
     f5a:	90 e0       	ldi	r25, 0x00	; 0

00000f5c <.Loc.30>:
     f5c:	2f 7b       	andi	r18, 0xBF	; 191
     f5e:	fc 01       	movw	r30, r24
     f60:	20 83       	st	Z, r18

00000f62 <.Loc.31>:
	PORT &= ~(1 << PIN12);
     f62:	82 e2       	ldi	r24, 0x22	; 34
     f64:	90 e0       	ldi	r25, 0x00	; 0
     f66:	fc 01       	movw	r30, r24
     f68:	20 81       	ld	r18, Z

00000f6a <.Loc.32>:
     f6a:	82 e2       	ldi	r24, 0x22	; 34
     f6c:	90 e0       	ldi	r25, 0x00	; 0

00000f6e <.Loc.33>:
     f6e:	2f 7d       	andi	r18, 0xDF	; 223
     f70:	fc 01       	movw	r30, r24
     f72:	20 83       	st	Z, r18

00000f74 <.Loc.34>:
	PORT &= ~(1 << PIN21);
     f74:	82 e2       	ldi	r24, 0x22	; 34
     f76:	90 e0       	ldi	r25, 0x00	; 0
     f78:	fc 01       	movw	r30, r24
     f7a:	20 81       	ld	r18, Z

00000f7c <.Loc.35>:
     f7c:	82 e2       	ldi	r24, 0x22	; 34
     f7e:	90 e0       	ldi	r25, 0x00	; 0

00000f80 <.Loc.36>:
     f80:	2f 7e       	andi	r18, 0xEF	; 239
     f82:	fc 01       	movw	r30, r24
     f84:	20 83       	st	Z, r18

00000f86 <.Loc.37>:
	PORT &= ~(1 << PIN22);
     f86:	82 e2       	ldi	r24, 0x22	; 34
     f88:	90 e0       	ldi	r25, 0x00	; 0
     f8a:	fc 01       	movw	r30, r24
     f8c:	20 81       	ld	r18, Z

00000f8e <.Loc.38>:
     f8e:	82 e2       	ldi	r24, 0x22	; 34
     f90:	90 e0       	ldi	r25, 0x00	; 0

00000f92 <.Loc.39>:
     f92:	27 7f       	andi	r18, 0xF7	; 247
     f94:	fc 01       	movw	r30, r24
     f96:	20 83       	st	Z, r18

00000f98 <.Loc.40>:
	PORT &= ~(1 << PEN2);
     f98:	82 e2       	ldi	r24, 0x22	; 34
     f9a:	90 e0       	ldi	r25, 0x00	; 0
     f9c:	fc 01       	movw	r30, r24
     f9e:	20 81       	ld	r18, Z

00000fa0 <.Loc.41>:
     fa0:	82 e2       	ldi	r24, 0x22	; 34
     fa2:	90 e0       	ldi	r25, 0x00	; 0

00000fa4 <.Loc.42>:
     fa4:	2b 7f       	andi	r18, 0xFB	; 251
     fa6:	fc 01       	movw	r30, r24
     fa8:	20 83       	st	Z, r18

00000faa <.Loc.43>:
}
     faa:	00 00       	nop
     fac:	df 91       	pop	r29
     fae:	cf 91       	pop	r28
     fb0:	08 95       	ret

00000fb2 <__vector_20>:

//H-brug PWMR
ISR(TIMER1_OVF_vect)
{
     fb2:	1f 92       	push	r1
     fb4:	0f 92       	push	r0
     fb6:	0f b6       	in	r0, 0x3f	; 63
     fb8:	0f 92       	push	r0
     fba:	11 24       	eor	r1, r1
     fbc:	0b b6       	in	r0, 0x3b	; 59
     fbe:	0f 92       	push	r0
     fc0:	2f 93       	push	r18
     fc2:	3f 93       	push	r19
     fc4:	8f 93       	push	r24
     fc6:	9f 93       	push	r25
     fc8:	ef 93       	push	r30
     fca:	ff 93       	push	r31
     fcc:	cf 93       	push	r28
     fce:	df 93       	push	r29
     fd0:	cd b7       	in	r28, 0x3d	; 61
     fd2:	de b7       	in	r29, 0x3e	; 62

00000fd4 <.Loc.45>:
    PORT ^= (1 << PEN1);
     fd4:	82 e2       	ldi	r24, 0x22	; 34
     fd6:	90 e0       	ldi	r25, 0x00	; 0
     fd8:	fc 01       	movw	r30, r24
     fda:	30 81       	ld	r19, Z
     fdc:	82 e2       	ldi	r24, 0x22	; 34
     fde:	90 e0       	ldi	r25, 0x00	; 0

00000fe0 <.Loc.46>:
     fe0:	20 e8       	ldi	r18, 0x80	; 128
     fe2:	23 27       	eor	r18, r19
     fe4:	fc 01       	movw	r30, r24
     fe6:	20 83       	st	Z, r18

00000fe8 <.Loc.47>:
}
     fe8:	00 00       	nop
     fea:	df 91       	pop	r29
     fec:	cf 91       	pop	r28
     fee:	ff 91       	pop	r31
     ff0:	ef 91       	pop	r30
     ff2:	9f 91       	pop	r25
     ff4:	8f 91       	pop	r24
     ff6:	3f 91       	pop	r19
     ff8:	2f 91       	pop	r18
     ffa:	0f 90       	pop	r0
     ffc:	0b be       	out	0x3b, r0	; 59
     ffe:	0f 90       	pop	r0
    1000:	0f be       	out	0x3f, r0	; 63
    1002:	0f 90       	pop	r0
    1004:	1f 90       	pop	r1
    1006:	18 95       	reti

00001008 <__vector_17>:
//H-brug PWMR
ISR(TIMER1_COMPA_vect)
{
    1008:	1f 92       	push	r1
    100a:	0f 92       	push	r0
    100c:	0f b6       	in	r0, 0x3f	; 63
    100e:	0f 92       	push	r0
    1010:	11 24       	eor	r1, r1
    1012:	0b b6       	in	r0, 0x3b	; 59
    1014:	0f 92       	push	r0
    1016:	2f 93       	push	r18
    1018:	8f 93       	push	r24
    101a:	9f 93       	push	r25
    101c:	ef 93       	push	r30
    101e:	ff 93       	push	r31
    1020:	cf 93       	push	r28
    1022:	df 93       	push	r29
    1024:	cd b7       	in	r28, 0x3d	; 61
    1026:	de b7       	in	r29, 0x3e	; 62

00001028 <.Loc.49>:
    PORT |= (1 << PEN1);
    1028:	82 e2       	ldi	r24, 0x22	; 34
    102a:	90 e0       	ldi	r25, 0x00	; 0
    102c:	fc 01       	movw	r30, r24
    102e:	20 81       	ld	r18, Z
    1030:	82 e2       	ldi	r24, 0x22	; 34
    1032:	90 e0       	ldi	r25, 0x00	; 0

00001034 <.Loc.50>:
    1034:	20 68       	ori	r18, 0x80	; 128
    1036:	fc 01       	movw	r30, r24
    1038:	20 83       	st	Z, r18

0000103a <.Loc.51>:
}
    103a:	00 00       	nop
    103c:	df 91       	pop	r29
    103e:	cf 91       	pop	r28
    1040:	ff 91       	pop	r31
    1042:	ef 91       	pop	r30
    1044:	9f 91       	pop	r25
    1046:	8f 91       	pop	r24
    1048:	2f 91       	pop	r18
    104a:	0f 90       	pop	r0
    104c:	0b be       	out	0x3b, r0	; 59
    104e:	0f 90       	pop	r0
    1050:	0f be       	out	0x3f, r0	; 63
    1052:	0f 90       	pop	r0
    1054:	1f 90       	pop	r1
    1056:	18 95       	reti

00001058 <__vector_35>:

//H-brug PWML
ISR(TIMER3_OVF_vect)
{
    1058:	1f 92       	push	r1
    105a:	0f 92       	push	r0
    105c:	0f b6       	in	r0, 0x3f	; 63
    105e:	0f 92       	push	r0
    1060:	11 24       	eor	r1, r1
    1062:	0b b6       	in	r0, 0x3b	; 59
    1064:	0f 92       	push	r0
    1066:	2f 93       	push	r18
    1068:	3f 93       	push	r19
    106a:	8f 93       	push	r24
    106c:	9f 93       	push	r25
    106e:	ef 93       	push	r30
    1070:	ff 93       	push	r31
    1072:	cf 93       	push	r28
    1074:	df 93       	push	r29
    1076:	cd b7       	in	r28, 0x3d	; 61
    1078:	de b7       	in	r29, 0x3e	; 62

0000107a <.Loc.53>:
    PORT ^= (1 << PEN2);
    107a:	82 e2       	ldi	r24, 0x22	; 34
    107c:	90 e0       	ldi	r25, 0x00	; 0
    107e:	fc 01       	movw	r30, r24
    1080:	30 81       	ld	r19, Z
    1082:	82 e2       	ldi	r24, 0x22	; 34
    1084:	90 e0       	ldi	r25, 0x00	; 0

00001086 <.Loc.54>:
    1086:	24 e0       	ldi	r18, 0x04	; 4
    1088:	23 27       	eor	r18, r19
    108a:	fc 01       	movw	r30, r24
    108c:	20 83       	st	Z, r18

0000108e <.Loc.55>:
}
    108e:	00 00       	nop
    1090:	df 91       	pop	r29
    1092:	cf 91       	pop	r28
    1094:	ff 91       	pop	r31
    1096:	ef 91       	pop	r30
    1098:	9f 91       	pop	r25
    109a:	8f 91       	pop	r24
    109c:	3f 91       	pop	r19
    109e:	2f 91       	pop	r18
    10a0:	0f 90       	pop	r0
    10a2:	0b be       	out	0x3b, r0	; 59
    10a4:	0f 90       	pop	r0
    10a6:	0f be       	out	0x3f, r0	; 63
    10a8:	0f 90       	pop	r0
    10aa:	1f 90       	pop	r1
    10ac:	18 95       	reti

000010ae <__vector_32>:
//H-brug PWML
ISR(TIMER3_COMPA_vect)
{
    10ae:	1f 92       	push	r1
    10b0:	0f 92       	push	r0
    10b2:	0f b6       	in	r0, 0x3f	; 63
    10b4:	0f 92       	push	r0
    10b6:	11 24       	eor	r1, r1
    10b8:	0b b6       	in	r0, 0x3b	; 59
    10ba:	0f 92       	push	r0
    10bc:	2f 93       	push	r18
    10be:	8f 93       	push	r24
    10c0:	9f 93       	push	r25
    10c2:	ef 93       	push	r30
    10c4:	ff 93       	push	r31
    10c6:	cf 93       	push	r28
    10c8:	df 93       	push	r29
    10ca:	cd b7       	in	r28, 0x3d	; 61
    10cc:	de b7       	in	r29, 0x3e	; 62

000010ce <.Loc.57>:
    PORT |= (1 << PEN2);
    10ce:	82 e2       	ldi	r24, 0x22	; 34
    10d0:	90 e0       	ldi	r25, 0x00	; 0
    10d2:	fc 01       	movw	r30, r24
    10d4:	20 81       	ld	r18, Z
    10d6:	82 e2       	ldi	r24, 0x22	; 34
    10d8:	90 e0       	ldi	r25, 0x00	; 0

000010da <.Loc.58>:
    10da:	24 60       	ori	r18, 0x04	; 4
    10dc:	fc 01       	movw	r30, r24
    10de:	20 83       	st	Z, r18

000010e0 <.Loc.59>:
}
    10e0:	00 00       	nop
    10e2:	df 91       	pop	r29
    10e4:	cf 91       	pop	r28
    10e6:	ff 91       	pop	r31
    10e8:	ef 91       	pop	r30
    10ea:	9f 91       	pop	r25
    10ec:	8f 91       	pop	r24
    10ee:	2f 91       	pop	r18
    10f0:	0f 90       	pop	r0
    10f2:	0b be       	out	0x3b, r0	; 59
    10f4:	0f 90       	pop	r0
    10f6:	0f be       	out	0x3f, r0	; 63
    10f8:	0f 90       	pop	r0
    10fa:	1f 90       	pop	r1
    10fc:	18 95       	reti

000010fe <main>:

int main(void)
{
    10fe:	cf 93       	push	r28
    1100:	df 93       	push	r29
    1102:	cd b7       	in	r28, 0x3d	; 61
    1104:	de b7       	in	r29, 0x3e	; 62
    1106:	a4 97       	sbiw	r28, 0x24	; 36
    1108:	0f b6       	in	r0, 0x3f	; 63
    110a:	f8 94       	cli
    110c:	de bf       	out	0x3e, r29	; 62
    110e:	0f be       	out	0x3f, r0	; 63
    1110:	cd bf       	out	0x3d, r28	; 61

00001112 <.Loc.61>:
    initding();
    1112:	0e 94 47 07 	call	0xe8e	; 0xe8e <initding>

00001116 <.Loc.62>:
    sei();
    1116:	78 94       	sei

00001118 <.Loc.63>:
    init_LCDscherm();
    1118:	0e 94 8d 00 	call	0x11a	; 0x11a <init_LCDscherm>

0000111c <.Loc.64>:
    int getal = 3;
    111c:	83 e0       	ldi	r24, 0x03	; 3
    111e:	90 e0       	ldi	r25, 0x00	; 0
    1120:	9a 83       	std	Y+2, r25	; 0x02
    1122:	89 83       	std	Y+1, r24	; 0x01

00001124 <.Loc.65>:

    h_bridgeR_set_percentage(0);
    1124:	80 e0       	ldi	r24, 0x00	; 0
    1126:	0e 94 29 0a 	call	0x1452	; 0x1452 <h_bridgeR_set_percentage>

0000112a <.Loc.66>:
    h_bridgeL_set_percentage(0);
    112a:	80 e0       	ldi	r24, 0x00	; 0
    112c:	0e 94 68 0a 	call	0x14d0	; 0x14d0 <h_bridgeL_set_percentage>

00001130 <.L26>:
        PORT &= ~(1 << PIN21);
*/

    while(1)
    {
        switch(getal)
    1130:	89 81       	ldd	r24, Y+1	; 0x01
    1132:	9a 81       	ldd	r25, Y+2	; 0x02
    1134:	83 30       	cpi	r24, 0x03	; 3
    1136:	91 05       	cpc	r25, r1
    1138:	09 f4       	brne	.+2      	; 0x113c <L0^A+0x2>

0000113a <L0^A>:
    113a:	5c c0       	rjmp	.+184    	; 0x11f4 <.L7>
    113c:	89 81       	ldd	r24, Y+1	; 0x01
    113e:	9a 81       	ldd	r25, Y+2	; 0x02
    1140:	83 30       	cpi	r24, 0x03	; 3
    1142:	91 05       	cpc	r25, r1
    1144:	11 f0       	breq	.+4      	; 0x114a <L0^A+0x2>

00001146 <L0^A>:
    1146:	0c f0       	brlt	.+2      	; 0x114a <L0^A+0x2>

00001148 <L0^A>:
    1148:	a6 c0       	rjmp	.+332    	; 0x1296 <.L8>
    114a:	89 81       	ldd	r24, Y+1	; 0x01
    114c:	9a 81       	ldd	r25, Y+2	; 0x02
    114e:	81 30       	cpi	r24, 0x01	; 1
    1150:	91 05       	cpc	r25, r1
    1152:	31 f0       	breq	.+12     	; 0x1160 <.L9>
    1154:	89 81       	ldd	r24, Y+1	; 0x01
    1156:	9a 81       	ldd	r25, Y+2	; 0x02
    1158:	82 30       	cpi	r24, 0x02	; 2
    115a:	91 05       	cpc	r25, r1
    115c:	31 f1       	breq	.+76     	; 0x11aa <.L10>
    115e:	9b c0       	rjmp	.+310    	; 0x1296 <.L8>

00001160 <.L9>:
        {
        case 1://naar links(te dichtbij rechts)
            //Motoren naar links
            h_bridgeR_set_percentage(20);
    1160:	84 e1       	ldi	r24, 0x14	; 20
    1162:	0e 94 29 0a 	call	0x1452	; 0x1452 <h_bridgeR_set_percentage>

00001166 <.Loc.69>:
            h_bridgeL_set_percentage(80);
    1166:	80 e5       	ldi	r24, 0x50	; 80
    1168:	0e 94 68 0a 	call	0x14d0	; 0x14d0 <h_bridgeL_set_percentage>

0000116c <.Loc.70>:
            LCD_Naar_Locatie(1, 1);
    116c:	61 e0       	ldi	r22, 0x01	; 1
    116e:	81 e0       	ldi	r24, 0x01	; 1
    1170:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Naar_Locatie>

00001174 <.Loc.71>:
            Stuur_LCD_String("Naar links");
    1174:	82 e0       	ldi	r24, 0x02	; 2
    1176:	92 e0       	ldi	r25, 0x02	; 2
    1178:	0e 94 63 06 	call	0xcc6	; 0xcc6 <Stuur_LCD_String>

0000117c <.Loc.72>:
            if(((PINB & (1 << PB7)) == 0) && ((PINB & (1 << PB6)) == 0))
    117c:	83 e2       	ldi	r24, 0x23	; 35
    117e:	90 e0       	ldi	r25, 0x00	; 0
    1180:	dc 01       	movw	r26, r24
    1182:	8c 91       	ld	r24, X

00001184 <.Loc.73>:
    1184:	88 23       	and	r24, r24
    1186:	0c f4       	brge	.+2      	; 0x118a <.Loc.74>

00001188 <L0^A>:
    1188:	81 c0       	rjmp	.+258    	; 0x128c <.L31>

0000118a <.Loc.74>:
    118a:	83 e2       	ldi	r24, 0x23	; 35
    118c:	90 e0       	ldi	r25, 0x00	; 0
    118e:	fc 01       	movw	r30, r24
    1190:	80 81       	ld	r24, Z

00001192 <.Loc.75>:
    1192:	88 2f       	mov	r24, r24
    1194:	90 e0       	ldi	r25, 0x00	; 0
    1196:	80 74       	andi	r24, 0x40	; 64
    1198:	99 27       	eor	r25, r25

0000119a <.Loc.76>:
    119a:	00 97       	sbiw	r24, 0x00	; 0
    119c:	09 f0       	breq	.+2      	; 0x11a0 <.Loc.77>

0000119e <L0^A>:
    119e:	76 c0       	rjmp	.+236    	; 0x128c <.L31>

000011a0 <.Loc.77>:
            {
                getal = 3;
    11a0:	83 e0       	ldi	r24, 0x03	; 3
    11a2:	90 e0       	ldi	r25, 0x00	; 0
    11a4:	9a 83       	std	Y+2, r25	; 0x02
    11a6:	89 83       	std	Y+1, r24	; 0x01

000011a8 <.Loc.78>:

            }
            break;
    11a8:	71 c0       	rjmp	.+226    	; 0x128c <.L31>

000011aa <.L10>:
        case 2://naar rechts(te dichtbij links)
            //Motoren naar rechts
            h_bridgeR_set_percentage(80);
    11aa:	80 e5       	ldi	r24, 0x50	; 80
    11ac:	0e 94 29 0a 	call	0x1452	; 0x1452 <h_bridgeR_set_percentage>

000011b0 <.Loc.80>:
            h_bridgeL_set_percentage(20);
    11b0:	84 e1       	ldi	r24, 0x14	; 20
    11b2:	0e 94 68 0a 	call	0x14d0	; 0x14d0 <h_bridgeL_set_percentage>

000011b6 <.Loc.81>:
            LCD_Naar_Locatie(1, 1);
    11b6:	61 e0       	ldi	r22, 0x01	; 1
    11b8:	81 e0       	ldi	r24, 0x01	; 1
    11ba:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Naar_Locatie>

000011be <.Loc.82>:
            Stuur_LCD_String("Naar rechts");
    11be:	8d e0       	ldi	r24, 0x0D	; 13
    11c0:	92 e0       	ldi	r25, 0x02	; 2
    11c2:	0e 94 63 06 	call	0xcc6	; 0xcc6 <Stuur_LCD_String>

000011c6 <.Loc.83>:
            if(((PINB & (1 << PB7)) == 0) && ((PINB & (1 << PB6)) == 0))
    11c6:	83 e2       	ldi	r24, 0x23	; 35
    11c8:	90 e0       	ldi	r25, 0x00	; 0
    11ca:	dc 01       	movw	r26, r24
    11cc:	8c 91       	ld	r24, X

000011ce <.Loc.84>:
    11ce:	88 23       	and	r24, r24
    11d0:	0c f4       	brge	.+2      	; 0x11d4 <.Loc.85>

000011d2 <L0^A>:
    11d2:	5e c0       	rjmp	.+188    	; 0x1290 <.L32>

000011d4 <.Loc.85>:
    11d4:	83 e2       	ldi	r24, 0x23	; 35
    11d6:	90 e0       	ldi	r25, 0x00	; 0
    11d8:	fc 01       	movw	r30, r24
    11da:	80 81       	ld	r24, Z

000011dc <.Loc.86>:
    11dc:	88 2f       	mov	r24, r24
    11de:	90 e0       	ldi	r25, 0x00	; 0
    11e0:	80 74       	andi	r24, 0x40	; 64
    11e2:	99 27       	eor	r25, r25

000011e4 <.Loc.87>:
    11e4:	00 97       	sbiw	r24, 0x00	; 0
    11e6:	09 f0       	breq	.+2      	; 0x11ea <.Loc.88>

000011e8 <L0^A>:
    11e8:	53 c0       	rjmp	.+166    	; 0x1290 <.L32>

000011ea <.Loc.88>:
            {
                getal = 3;
    11ea:	83 e0       	ldi	r24, 0x03	; 3
    11ec:	90 e0       	ldi	r25, 0x00	; 0
    11ee:	9a 83       	std	Y+2, r25	; 0x02
    11f0:	89 83       	std	Y+1, r24	; 0x01

000011f2 <.Loc.89>:

            }
            break;
    11f2:	4e c0       	rjmp	.+156    	; 0x1290 <.L32>

000011f4 <.L7>:
        case 3://rechtdoor
            //Motoren naar rechtdoor
            h_bridgeR_set_percentage(50);
    11f4:	82 e3       	ldi	r24, 0x32	; 50
    11f6:	0e 94 29 0a 	call	0x1452	; 0x1452 <h_bridgeR_set_percentage>

000011fa <.Loc.91>:
            h_bridgeL_set_percentage(50);
    11fa:	82 e3       	ldi	r24, 0x32	; 50
    11fc:	0e 94 68 0a 	call	0x14d0	; 0x14d0 <h_bridgeL_set_percentage>

00001200 <.Loc.92>:
            LCD_Naar_Locatie(1, 1);
    1200:	61 e0       	ldi	r22, 0x01	; 1
    1202:	81 e0       	ldi	r24, 0x01	; 1
    1204:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Naar_Locatie>

00001208 <.Loc.93>:
            Stuur_LCD_String("Rechtdoor");
    1208:	89 e1       	ldi	r24, 0x19	; 25
    120a:	92 e0       	ldi	r25, 0x02	; 2
    120c:	0e 94 63 06 	call	0xcc6	; 0xcc6 <Stuur_LCD_String>

00001210 <.Loc.94>:
            PORT |= (1 << PIN12);
    1210:	82 e2       	ldi	r24, 0x22	; 34
    1212:	90 e0       	ldi	r25, 0x00	; 0
    1214:	dc 01       	movw	r26, r24
    1216:	2c 91       	ld	r18, X
    1218:	82 e2       	ldi	r24, 0x22	; 34
    121a:	90 e0       	ldi	r25, 0x00	; 0

0000121c <.Loc.95>:
    121c:	20 62       	ori	r18, 0x20	; 32
    121e:	fc 01       	movw	r30, r24
    1220:	20 83       	st	Z, r18

00001222 <.Loc.96>:
            PORT &= ~(1 << PIN11);
    1222:	82 e2       	ldi	r24, 0x22	; 34
    1224:	90 e0       	ldi	r25, 0x00	; 0
    1226:	dc 01       	movw	r26, r24
    1228:	2c 91       	ld	r18, X

0000122a <.Loc.97>:
    122a:	82 e2       	ldi	r24, 0x22	; 34
    122c:	90 e0       	ldi	r25, 0x00	; 0

0000122e <.Loc.98>:
    122e:	2f 7b       	andi	r18, 0xBF	; 191
    1230:	fc 01       	movw	r30, r24
    1232:	20 83       	st	Z, r18

00001234 <.Loc.99>:
            PORT &= ~(1 << PIN22);
    1234:	82 e2       	ldi	r24, 0x22	; 34
    1236:	90 e0       	ldi	r25, 0x00	; 0
    1238:	dc 01       	movw	r26, r24
    123a:	2c 91       	ld	r18, X

0000123c <.Loc.100>:
    123c:	82 e2       	ldi	r24, 0x22	; 34
    123e:	90 e0       	ldi	r25, 0x00	; 0

00001240 <.Loc.101>:
    1240:	27 7f       	andi	r18, 0xF7	; 247
    1242:	fc 01       	movw	r30, r24
    1244:	20 83       	st	Z, r18

00001246 <.Loc.102>:
            PORT |= (1 << PIN21);
    1246:	82 e2       	ldi	r24, 0x22	; 34
    1248:	90 e0       	ldi	r25, 0x00	; 0
    124a:	dc 01       	movw	r26, r24
    124c:	2c 91       	ld	r18, X
    124e:	82 e2       	ldi	r24, 0x22	; 34
    1250:	90 e0       	ldi	r25, 0x00	; 0

00001252 <.Loc.103>:
    1252:	20 61       	ori	r18, 0x10	; 16
    1254:	fc 01       	movw	r30, r24
    1256:	20 83       	st	Z, r18

00001258 <.Loc.104>:
            if(PINB & (1 << PB7))
    1258:	83 e2       	ldi	r24, 0x23	; 35
    125a:	90 e0       	ldi	r25, 0x00	; 0
    125c:	dc 01       	movw	r26, r24
    125e:	8c 91       	ld	r24, X

00001260 <.Loc.105>:
    1260:	88 23       	and	r24, r24
    1262:	2c f4       	brge	.+10     	; 0x126e <.L13>

00001264 <.Loc.106>:
            {
                getal = 1;
    1264:	81 e0       	ldi	r24, 0x01	; 1
    1266:	90 e0       	ldi	r25, 0x00	; 0
    1268:	9a 83       	std	Y+2, r25	; 0x02
    126a:	89 83       	std	Y+1, r24	; 0x01

0000126c <.Loc.107>:
            }
            else if(PINB & (1 << PB6))
            {
                getal = 2;
            }
            break;
    126c:	13 c0       	rjmp	.+38     	; 0x1294 <.L33>

0000126e <.L13>:
            else if(PINB & (1 << PB6))
    126e:	83 e2       	ldi	r24, 0x23	; 35
    1270:	90 e0       	ldi	r25, 0x00	; 0
    1272:	fc 01       	movw	r30, r24
    1274:	80 81       	ld	r24, Z

00001276 <.Loc.109>:
    1276:	88 2f       	mov	r24, r24
    1278:	90 e0       	ldi	r25, 0x00	; 0
    127a:	80 74       	andi	r24, 0x40	; 64
    127c:	99 27       	eor	r25, r25

0000127e <.Loc.110>:
    127e:	00 97       	sbiw	r24, 0x00	; 0
    1280:	49 f0       	breq	.+18     	; 0x1294 <.L33>

00001282 <.Loc.111>:
                getal = 2;
    1282:	82 e0       	ldi	r24, 0x02	; 2
    1284:	90 e0       	ldi	r25, 0x00	; 0
    1286:	9a 83       	std	Y+2, r25	; 0x02
    1288:	89 83       	std	Y+1, r24	; 0x01

0000128a <.Loc.112>:
            break;
    128a:	04 c0       	rjmp	.+8      	; 0x1294 <.L33>

0000128c <.L31>:
            break;
    128c:	00 00       	nop
    128e:	03 c0       	rjmp	.+6      	; 0x1296 <.L8>

00001290 <.L32>:
            break;
    1290:	00 00       	nop
    1292:	01 c0       	rjmp	.+2      	; 0x1296 <.L8>

00001294 <.L33>:
	...

00001296 <.L8>:
        }
        LCD_Naar_Locatie(1, 2);
    1296:	62 e0       	ldi	r22, 0x02	; 2
    1298:	81 e0       	ldi	r24, 0x01	; 1
    129a:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Naar_Locatie>

0000129e <.Loc.117>:
        Stuur_LCD_String("IR1");
    129e:	83 e2       	ldi	r24, 0x23	; 35
    12a0:	92 e0       	ldi	r25, 0x02	; 2
    12a2:	0e 94 63 06 	call	0xcc6	; 0xcc6 <Stuur_LCD_String>

000012a6 <.Loc.118>:

        LCD_Naar_Locatie(8, 2);
    12a6:	62 e0       	ldi	r22, 0x02	; 2
    12a8:	88 e0       	ldi	r24, 0x08	; 8
    12aa:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Naar_Locatie>

000012ae <.Loc.119>:
        Stuur_LCD_String("IR2");
    12ae:	87 e2       	ldi	r24, 0x27	; 39
    12b0:	92 e0       	ldi	r25, 0x02	; 2
    12b2:	0e 94 63 06 	call	0xcc6	; 0xcc6 <Stuur_LCD_String>

000012b6 <.Loc.120>:

        if(getal == 1)
    12b6:	89 81       	ldd	r24, Y+1	; 0x01
    12b8:	9a 81       	ldd	r25, Y+2	; 0x02
    12ba:	81 30       	cpi	r24, 0x01	; 1
    12bc:	91 05       	cpc	r25, r1
    12be:	89 f4       	brne	.+34     	; 0x12e2 <.L15>

000012c0 <.Loc.121>:
        {
            LCD_Naar_Locatie(4, 2);
    12c0:	62 e0       	ldi	r22, 0x02	; 2
    12c2:	84 e0       	ldi	r24, 0x04	; 4
    12c4:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Naar_Locatie>

000012c8 <.Loc.122>:
            Stuur_LCD_String("AAN");
    12c8:	8b e2       	ldi	r24, 0x2B	; 43
    12ca:	92 e0       	ldi	r25, 0x02	; 2
    12cc:	0e 94 63 06 	call	0xcc6	; 0xcc6 <Stuur_LCD_String>

000012d0 <.Loc.123>:

            LCD_Naar_Locatie(11, 2);
    12d0:	62 e0       	ldi	r22, 0x02	; 2
    12d2:	8b e0       	ldi	r24, 0x0B	; 11
    12d4:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Naar_Locatie>

000012d8 <.Loc.124>:
            Stuur_LCD_String("UIT");
    12d8:	8f e2       	ldi	r24, 0x2F	; 47
    12da:	92 e0       	ldi	r25, 0x02	; 2
    12dc:	0e 94 63 06 	call	0xcc6	; 0xcc6 <Stuur_LCD_String>
    12e0:	26 c0       	rjmp	.+76     	; 0x132e <.L16>

000012e2 <.L15>:
        }
        else if(getal == 2)
    12e2:	89 81       	ldd	r24, Y+1	; 0x01
    12e4:	9a 81       	ldd	r25, Y+2	; 0x02
    12e6:	82 30       	cpi	r24, 0x02	; 2
    12e8:	91 05       	cpc	r25, r1
    12ea:	89 f4       	brne	.+34     	; 0x130e <.L17>

000012ec <.Loc.126>:
        {
            LCD_Naar_Locatie(4, 2);
    12ec:	62 e0       	ldi	r22, 0x02	; 2
    12ee:	84 e0       	ldi	r24, 0x04	; 4
    12f0:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Naar_Locatie>

000012f4 <.Loc.127>:
            Stuur_LCD_String("UIT");
    12f4:	8f e2       	ldi	r24, 0x2F	; 47
    12f6:	92 e0       	ldi	r25, 0x02	; 2
    12f8:	0e 94 63 06 	call	0xcc6	; 0xcc6 <Stuur_LCD_String>

000012fc <.Loc.128>:

            LCD_Naar_Locatie(11, 2);
    12fc:	62 e0       	ldi	r22, 0x02	; 2
    12fe:	8b e0       	ldi	r24, 0x0B	; 11
    1300:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Naar_Locatie>

00001304 <.Loc.129>:
            Stuur_LCD_String("AAN");
    1304:	8b e2       	ldi	r24, 0x2B	; 43
    1306:	92 e0       	ldi	r25, 0x02	; 2
    1308:	0e 94 63 06 	call	0xcc6	; 0xcc6 <Stuur_LCD_String>
    130c:	10 c0       	rjmp	.+32     	; 0x132e <.L16>

0000130e <.L17>:
        }
        else
        {
            LCD_Naar_Locatie(4, 2);
    130e:	62 e0       	ldi	r22, 0x02	; 2
    1310:	84 e0       	ldi	r24, 0x04	; 4
    1312:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Naar_Locatie>

00001316 <.Loc.131>:
            Stuur_LCD_String("UIT");
    1316:	8f e2       	ldi	r24, 0x2F	; 47
    1318:	92 e0       	ldi	r25, 0x02	; 2
    131a:	0e 94 63 06 	call	0xcc6	; 0xcc6 <Stuur_LCD_String>

0000131e <.Loc.132>:

            LCD_Naar_Locatie(11, 2);
    131e:	62 e0       	ldi	r22, 0x02	; 2
    1320:	8b e0       	ldi	r24, 0x0B	; 11
    1322:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Naar_Locatie>

00001326 <.Loc.133>:
            Stuur_LCD_String("UIT");
    1326:	8f e2       	ldi	r24, 0x2F	; 47
    1328:	92 e0       	ldi	r25, 0x02	; 2
    132a:	0e 94 63 06 	call	0xcc6	; 0xcc6 <Stuur_LCD_String>

0000132e <.L16>:
    132e:	80 e0       	ldi	r24, 0x00	; 0
    1330:	90 e0       	ldi	r25, 0x00	; 0
    1332:	a0 e2       	ldi	r26, 0x20	; 32
    1334:	b1 e4       	ldi	r27, 0x41	; 65
    1336:	8b 83       	std	Y+3, r24	; 0x03
    1338:	9c 83       	std	Y+4, r25	; 0x04
    133a:	ad 83       	std	Y+5, r26	; 0x05
    133c:	be 83       	std	Y+6, r27	; 0x06

0000133e <.LBB12>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    133e:	20 e0       	ldi	r18, 0x00	; 0
    1340:	30 e0       	ldi	r19, 0x00	; 0
    1342:	4a e7       	ldi	r20, 0x7A	; 122
    1344:	55 e4       	ldi	r21, 0x45	; 69
    1346:	6b 81       	ldd	r22, Y+3	; 0x03
    1348:	7c 81       	ldd	r23, Y+4	; 0x04
    134a:	8d 81       	ldd	r24, Y+5	; 0x05
    134c:	9e 81       	ldd	r25, Y+6	; 0x06
    134e:	0e 94 08 0c 	call	0x1810	; 0x1810 <__mulsf3>
    1352:	6d 8b       	std	Y+21, r22	; 0x15
    1354:	7e 8b       	std	Y+22, r23	; 0x16
    1356:	8f 8b       	std	Y+23, r24	; 0x17
    1358:	98 8f       	std	Y+24, r25	; 0x18
    135a:	8d 89       	ldd	r24, Y+21	; 0x15
    135c:	9e 89       	ldd	r25, Y+22	; 0x16
    135e:	af 89       	ldd	r26, Y+23	; 0x17
    1360:	b8 8d       	ldd	r27, Y+24	; 0x18
    1362:	8f 83       	std	Y+7, r24	; 0x07
    1364:	98 87       	std	Y+8, r25	; 0x08
    1366:	a9 87       	std	Y+9, r26	; 0x09
    1368:	ba 87       	std	Y+10, r27	; 0x0a

0000136a <.Loc.135>:
	if (__tmp < 1.0)
    136a:	20 e0       	ldi	r18, 0x00	; 0
    136c:	30 e0       	ldi	r19, 0x00	; 0
    136e:	40 e8       	ldi	r20, 0x80	; 128
    1370:	5f e3       	ldi	r21, 0x3F	; 63
    1372:	6f 81       	ldd	r22, Y+7	; 0x07
    1374:	78 85       	ldd	r23, Y+8	; 0x08
    1376:	89 85       	ldd	r24, Y+9	; 0x09
    1378:	9a 85       	ldd	r25, Y+10	; 0x0a
    137a:	0e 94 e8 0a 	call	0x15d0	; 0x15d0 <__cmpsf2>
    137e:	88 23       	and	r24, r24
    1380:	2c f4       	brge	.+10     	; 0x138c <.L29>

00001382 <.Loc.136>:
		__ticks = 1;
    1382:	81 e0       	ldi	r24, 0x01	; 1
    1384:	90 e0       	ldi	r25, 0x00	; 0
    1386:	9c 87       	std	Y+12, r25	; 0x0c
    1388:	8b 87       	std	Y+11, r24	; 0x0b
    138a:	55 c0       	rjmp	.+170    	; 0x1436 <.L20>

0000138c <.L29>:
	else if (__tmp > 65535)
    138c:	20 e0       	ldi	r18, 0x00	; 0
    138e:	3f ef       	ldi	r19, 0xFF	; 255
    1390:	4f e7       	ldi	r20, 0x7F	; 127
    1392:	57 e4       	ldi	r21, 0x47	; 71
    1394:	6f 81       	ldd	r22, Y+7	; 0x07
    1396:	78 85       	ldd	r23, Y+8	; 0x08
    1398:	89 85       	ldd	r24, Y+9	; 0x09
    139a:	9a 85       	ldd	r25, Y+10	; 0x0a
    139c:	0e 94 03 0c 	call	0x1806	; 0x1806 <__gesf2>
    13a0:	88 23       	and	r24, r24
    13a2:	d9 f1       	breq	.+118    	; 0x141a <.L30>
    13a4:	d4 f1       	brlt	.+116    	; 0x141a <.L30>

000013a6 <.Loc.138>:
		__ticks = (uint16_t) (__ms * 10.0);
    13a6:	20 e0       	ldi	r18, 0x00	; 0
    13a8:	30 e0       	ldi	r19, 0x00	; 0
    13aa:	40 e2       	ldi	r20, 0x20	; 32
    13ac:	51 e4       	ldi	r21, 0x41	; 65
    13ae:	6b 81       	ldd	r22, Y+3	; 0x03
    13b0:	7c 81       	ldd	r23, Y+4	; 0x04
    13b2:	8d 81       	ldd	r24, Y+5	; 0x05
    13b4:	9e 81       	ldd	r25, Y+6	; 0x06
    13b6:	0e 94 08 0c 	call	0x1810	; 0x1810 <__mulsf3>
    13ba:	69 8f       	std	Y+25, r22	; 0x19
    13bc:	7a 8f       	std	Y+26, r23	; 0x1a
    13be:	8b 8f       	std	Y+27, r24	; 0x1b
    13c0:	9c 8f       	std	Y+28, r25	; 0x1c
    13c2:	89 8d       	ldd	r24, Y+25	; 0x19
    13c4:	9a 8d       	ldd	r25, Y+26	; 0x1a
    13c6:	ab 8d       	ldd	r26, Y+27	; 0x1b
    13c8:	bc 8d       	ldd	r27, Y+28	; 0x1c
    13ca:	89 8b       	std	Y+17, r24	; 0x11
    13cc:	9a 8b       	std	Y+18, r25	; 0x12
    13ce:	ab 8b       	std	Y+19, r26	; 0x13
    13d0:	bc 8b       	std	Y+20, r27	; 0x14

000013d2 <.Loc.139>:
    13d2:	69 89       	ldd	r22, Y+17	; 0x11
    13d4:	7a 89       	ldd	r23, Y+18	; 0x12
    13d6:	8b 89       	ldd	r24, Y+19	; 0x13
    13d8:	9c 89       	ldd	r25, Y+20	; 0x14
    13da:	0e 94 5f 0b 	call	0x16be	; 0x16be <__fixunssfsi>
    13de:	6d 8f       	std	Y+29, r22	; 0x1d
    13e0:	7e 8f       	std	Y+30, r23	; 0x1e
    13e2:	8f 8f       	std	Y+31, r24	; 0x1f
    13e4:	98 a3       	std	Y+32, r25	; 0x20
    13e6:	ad 8d       	ldd	r26, Y+29	; 0x1d
    13e8:	be 8d       	ldd	r27, Y+30	; 0x1e
    13ea:	bc 87       	std	Y+12, r27	; 0x0c
    13ec:	ab 87       	std	Y+11, r26	; 0x0b

000013ee <.Loc.140>:
		while(__ticks)
    13ee:	10 c0       	rjmp	.+32     	; 0x1410 <.L23>

000013f0 <.L24>:
    13f0:	80 e9       	ldi	r24, 0x90	; 144
    13f2:	91 e0       	ldi	r25, 0x01	; 1
    13f4:	9e 87       	std	Y+14, r25	; 0x0e
    13f6:	8d 87       	std	Y+13, r24	; 0x0d

000013f8 <.LBB14>:
    13f8:	8d 85       	ldd	r24, Y+13	; 0x0d
    13fa:	9e 85       	ldd	r25, Y+14	; 0x0e

000013fc <.L1^B1>:
    13fc:	01 97       	sbiw	r24, 0x01	; 1
    13fe:	f1 f7       	brne	.-4      	; 0x13fc <.L1^B1>
    1400:	9e 87       	std	Y+14, r25	; 0x0e
    1402:	8d 87       	std	Y+13, r24	; 0x0d

00001404 <.Loc.142>:
	...

00001406 <.LBE14>:
			__ticks --;
    1406:	8b 85       	ldd	r24, Y+11	; 0x0b
    1408:	9c 85       	ldd	r25, Y+12	; 0x0c
    140a:	01 97       	sbiw	r24, 0x01	; 1
    140c:	9c 87       	std	Y+12, r25	; 0x0c
    140e:	8b 87       	std	Y+11, r24	; 0x0b

00001410 <.L23>:
		while(__ticks)
    1410:	8b 85       	ldd	r24, Y+11	; 0x0b
    1412:	9c 85       	ldd	r25, Y+12	; 0x0c
    1414:	00 97       	sbiw	r24, 0x00	; 0
    1416:	61 f7       	brne	.-40     	; 0x13f0 <.L24>

00001418 <.Loc.145>:
		return;
    1418:	19 c0       	rjmp	.+50     	; 0x144c <.L25>

0000141a <.L30>:
		__ticks = (uint16_t)__tmp;
    141a:	6f 81       	ldd	r22, Y+7	; 0x07
    141c:	78 85       	ldd	r23, Y+8	; 0x08
    141e:	89 85       	ldd	r24, Y+9	; 0x09
    1420:	9a 85       	ldd	r25, Y+10	; 0x0a
    1422:	0e 94 5f 0b 	call	0x16be	; 0x16be <__fixunssfsi>
    1426:	69 a3       	std	Y+33, r22	; 0x21
    1428:	7a a3       	std	Y+34, r23	; 0x22
    142a:	8b a3       	std	Y+35, r24	; 0x23
    142c:	9c a3       	std	Y+36, r25	; 0x24
    142e:	e9 a1       	ldd	r30, Y+33	; 0x21
    1430:	fa a1       	ldd	r31, Y+34	; 0x22
    1432:	fc 87       	std	Y+12, r31	; 0x0c
    1434:	eb 87       	std	Y+11, r30	; 0x0b

00001436 <.L20>:
    1436:	8b 85       	ldd	r24, Y+11	; 0x0b
    1438:	9c 85       	ldd	r25, Y+12	; 0x0c
    143a:	98 8b       	std	Y+16, r25	; 0x10
    143c:	8f 87       	std	Y+15, r24	; 0x0f

0000143e <.LBB16>:
    143e:	8f 85       	ldd	r24, Y+15	; 0x0f
    1440:	98 89       	ldd	r25, Y+16	; 0x10

00001442 <.L1^B2>:
    1442:	01 97       	sbiw	r24, 0x01	; 1
    1444:	f1 f7       	brne	.-4      	; 0x1442 <.L1^B2>
    1446:	98 8b       	std	Y+16, r25	; 0x10
    1448:	8f 87       	std	Y+15, r24	; 0x0f

0000144a <.Loc.148>:
	...

0000144c <.L25>:
        }


        _delay_ms(10);
        LCD_Scherm_Leeg();
    144c:	0e 94 a1 06 	call	0xd42	; 0xd42 <LCD_Scherm_Leeg>

00001450 <.Loc.150>:
        switch(getal)
    1450:	6f ce       	rjmp	.-802    	; 0x1130 <.L26>

00001452 <h_bridgeR_set_percentage>:

    return 0;
}

void h_bridgeR_set_percentage(signed char percentage)
{
    1452:	0f 93       	push	r16
    1454:	1f 93       	push	r17
    1456:	cf 93       	push	r28
    1458:	df 93       	push	r29
    145a:	00 d0       	rcall	.+0      	; 0x145c <L0^A>

0000145c <L0^A>:
    145c:	0f 92       	push	r0
    145e:	0f 92       	push	r0
    1460:	cd b7       	in	r28, 0x3d	; 61
    1462:	de b7       	in	r29, 0x3e	; 62
    1464:	89 83       	std	Y+1, r24	; 0x01

00001466 <.Loc.152>:
	if (percentage >= 0 && percentage <= 100)
    1466:	89 81       	ldd	r24, Y+1	; 0x01
    1468:	88 23       	and	r24, r24
    146a:	3c f1       	brlt	.+78     	; 0x14ba <.L36>

0000146c <.Loc.153>:
    146c:	89 81       	ldd	r24, Y+1	; 0x01
    146e:	84 36       	cpi	r24, 0x64	; 100
    1470:	09 f0       	breq	.+2      	; 0x1474 <.Loc.154>

00001472 <L0^A>:
    1472:	1c f5       	brge	.+70     	; 0x14ba <.L36>

00001474 <.Loc.154>:
	{
			OCR1A = (65536*percentage)/100;
    1474:	89 81       	ldd	r24, Y+1	; 0x01
    1476:	08 2e       	mov	r0, r24
    1478:	00 0c       	add	r0, r0
    147a:	99 0b       	sbc	r25, r25
    147c:	aa 0b       	sbc	r26, r26
    147e:	bb 0b       	sbc	r27, r27
    1480:	ac 01       	movw	r20, r24
    1482:	33 27       	eor	r19, r19
    1484:	22 27       	eor	r18, r18
    1486:	2a 83       	std	Y+2, r18	; 0x02
    1488:	3b 83       	std	Y+3, r19	; 0x03
    148a:	4c 83       	std	Y+4, r20	; 0x04
    148c:	5d 83       	std	Y+5, r21	; 0x05

0000148e <.Loc.155>:
    148e:	04 e6       	ldi	r16, 0x64	; 100
    1490:	10 e0       	ldi	r17, 0x00	; 0
    1492:	20 e0       	ldi	r18, 0x00	; 0
    1494:	30 e0       	ldi	r19, 0x00	; 0
    1496:	6a 81       	ldd	r22, Y+2	; 0x02
    1498:	7b 81       	ldd	r23, Y+3	; 0x03
    149a:	8c 81       	ldd	r24, Y+4	; 0x04
    149c:	9d 81       	ldd	r25, Y+5	; 0x05
    149e:	a9 01       	movw	r20, r18
    14a0:	98 01       	movw	r18, r16
    14a2:	0e 94 a7 0a 	call	0x154e	; 0x154e <__divmodsi4>
    14a6:	da 01       	movw	r26, r20
    14a8:	c9 01       	movw	r24, r18
    14aa:	ac 01       	movw	r20, r24
    14ac:	bd 01       	movw	r22, r26

000014ae <.Loc.156>:
    14ae:	88 e8       	ldi	r24, 0x88	; 136
    14b0:	90 e0       	ldi	r25, 0x00	; 0

000014b2 <.Loc.157>:
    14b2:	9a 01       	movw	r18, r20
    14b4:	fc 01       	movw	r30, r24
    14b6:	31 83       	std	Z+1, r19	; 0x01
    14b8:	20 83       	st	Z, r18

000014ba <.L36>:
	}
}
    14ba:	00 00       	nop
    14bc:	0f 90       	pop	r0
    14be:	0f 90       	pop	r0
    14c0:	0f 90       	pop	r0
    14c2:	0f 90       	pop	r0
    14c4:	0f 90       	pop	r0
    14c6:	df 91       	pop	r29
    14c8:	cf 91       	pop	r28
    14ca:	1f 91       	pop	r17
    14cc:	0f 91       	pop	r16
    14ce:	08 95       	ret

000014d0 <h_bridgeL_set_percentage>:

void h_bridgeL_set_percentage(signed char percentage)
{
    14d0:	0f 93       	push	r16
    14d2:	1f 93       	push	r17
    14d4:	cf 93       	push	r28
    14d6:	df 93       	push	r29
    14d8:	00 d0       	rcall	.+0      	; 0x14da <L0^A>

000014da <L0^A>:
    14da:	0f 92       	push	r0
    14dc:	0f 92       	push	r0
    14de:	cd b7       	in	r28, 0x3d	; 61
    14e0:	de b7       	in	r29, 0x3e	; 62
    14e2:	89 83       	std	Y+1, r24	; 0x01

000014e4 <.Loc.160>:
	if (percentage >= 0 && percentage <= 100)
    14e4:	89 81       	ldd	r24, Y+1	; 0x01
    14e6:	88 23       	and	r24, r24
    14e8:	3c f1       	brlt	.+78     	; 0x1538 <.L39>

000014ea <.Loc.161>:
    14ea:	89 81       	ldd	r24, Y+1	; 0x01
    14ec:	84 36       	cpi	r24, 0x64	; 100
    14ee:	09 f0       	breq	.+2      	; 0x14f2 <.Loc.162>

000014f0 <L0^A>:
    14f0:	1c f5       	brge	.+70     	; 0x1538 <.L39>

000014f2 <.Loc.162>:
	{
			OCR3A = (65536*percentage)/100;
    14f2:	89 81       	ldd	r24, Y+1	; 0x01
    14f4:	08 2e       	mov	r0, r24
    14f6:	00 0c       	add	r0, r0
    14f8:	99 0b       	sbc	r25, r25
    14fa:	aa 0b       	sbc	r26, r26
    14fc:	bb 0b       	sbc	r27, r27
    14fe:	ac 01       	movw	r20, r24
    1500:	33 27       	eor	r19, r19
    1502:	22 27       	eor	r18, r18
    1504:	2a 83       	std	Y+2, r18	; 0x02
    1506:	3b 83       	std	Y+3, r19	; 0x03
    1508:	4c 83       	std	Y+4, r20	; 0x04
    150a:	5d 83       	std	Y+5, r21	; 0x05

0000150c <.Loc.163>:
    150c:	04 e6       	ldi	r16, 0x64	; 100
    150e:	10 e0       	ldi	r17, 0x00	; 0
    1510:	20 e0       	ldi	r18, 0x00	; 0
    1512:	30 e0       	ldi	r19, 0x00	; 0
    1514:	6a 81       	ldd	r22, Y+2	; 0x02
    1516:	7b 81       	ldd	r23, Y+3	; 0x03
    1518:	8c 81       	ldd	r24, Y+4	; 0x04
    151a:	9d 81       	ldd	r25, Y+5	; 0x05
    151c:	a9 01       	movw	r20, r18
    151e:	98 01       	movw	r18, r16
    1520:	0e 94 a7 0a 	call	0x154e	; 0x154e <__divmodsi4>
    1524:	da 01       	movw	r26, r20
    1526:	c9 01       	movw	r24, r18
    1528:	ac 01       	movw	r20, r24
    152a:	bd 01       	movw	r22, r26

0000152c <.Loc.164>:
    152c:	88 e9       	ldi	r24, 0x98	; 152
    152e:	90 e0       	ldi	r25, 0x00	; 0

00001530 <.Loc.165>:
    1530:	9a 01       	movw	r18, r20
    1532:	fc 01       	movw	r30, r24
    1534:	31 83       	std	Z+1, r19	; 0x01
    1536:	20 83       	st	Z, r18

00001538 <.L39>:
	}
}
    1538:	00 00       	nop
    153a:	0f 90       	pop	r0
    153c:	0f 90       	pop	r0
    153e:	0f 90       	pop	r0
    1540:	0f 90       	pop	r0
    1542:	0f 90       	pop	r0
    1544:	df 91       	pop	r29
    1546:	cf 91       	pop	r28
    1548:	1f 91       	pop	r17
    154a:	0f 91       	pop	r16
    154c:	08 95       	ret

0000154e <__divmodsi4>:
    154e:	05 2e       	mov	r0, r21

00001550 <.Loc.1>:
    1550:	97 fb       	bst	r25, 7

00001552 <.Loc.2>:
    1552:	1e f4       	brtc	.+6      	; 0x155a <.L^B1>

00001554 <.Loc.3>:
    1554:	00 94       	com	r0

00001556 <.Loc.4>:
    1556:	0e 94 be 0a 	call	0x157c	; 0x157c <__negsi2>

0000155a <.L^B1>:
    155a:	57 fd       	sbrc	r21, 7

0000155c <.Loc.6>:
    155c:	07 d0       	rcall	.+14     	; 0x156c <__divmodsi4_neg2>

0000155e <.Loc.7>:
    155e:	0e 94 c6 0a 	call	0x158c	; 0x158c <__udivmodsi4>

00001562 <.Loc.8>:
    1562:	07 fc       	sbrc	r0, 7

00001564 <.Loc.9>:
    1564:	03 d0       	rcall	.+6      	; 0x156c <__divmodsi4_neg2>

00001566 <.Loc.10>:
    1566:	4e f4       	brtc	.+18     	; 0x157a <__divmodsi4_exit>

00001568 <.Loc.11>:
    1568:	0c 94 be 0a 	jmp	0x157c	; 0x157c <__negsi2>

0000156c <__divmodsi4_neg2>:
    156c:	50 95       	com	r21

0000156e <.Loc.13>:
    156e:	40 95       	com	r20

00001570 <.Loc.14>:
    1570:	30 95       	com	r19

00001572 <.Loc.15>:
    1572:	21 95       	neg	r18

00001574 <.Loc.16>:
    1574:	3f 4f       	sbci	r19, 0xFF	; 255

00001576 <.Loc.17>:
    1576:	4f 4f       	sbci	r20, 0xFF	; 255

00001578 <.Loc.18>:
    1578:	5f 4f       	sbci	r21, 0xFF	; 255

0000157a <__divmodsi4_exit>:
    157a:	08 95       	ret

0000157c <__negsi2>:
    157c:	90 95       	com	r25
    157e:	80 95       	com	r24
    1580:	70 95       	com	r23
    1582:	61 95       	neg	r22
    1584:	7f 4f       	sbci	r23, 0xFF	; 255
    1586:	8f 4f       	sbci	r24, 0xFF	; 255
    1588:	9f 4f       	sbci	r25, 0xFF	; 255

0000158a <.Loc.1>:
    158a:	08 95       	ret

0000158c <__udivmodsi4>:
    158c:	a1 e2       	ldi	r26, 0x21	; 33

0000158e <.Loc.1>:
    158e:	1a 2e       	mov	r1, r26

00001590 <.Loc.2>:
    1590:	aa 1b       	sub	r26, r26

00001592 <.Loc.3>:
    1592:	bb 1b       	sub	r27, r27

00001594 <.Loc.4>:
    1594:	fd 01       	movw	r30, r26

00001596 <.Loc.5>:
    1596:	0d c0       	rjmp	.+26     	; 0x15b2 <__udivmodsi4_ep>

00001598 <__udivmodsi4_loop>:
    1598:	aa 1f       	adc	r26, r26

0000159a <.Loc.7>:
    159a:	bb 1f       	adc	r27, r27

0000159c <.Loc.8>:
    159c:	ee 1f       	adc	r30, r30

0000159e <.Loc.9>:
    159e:	ff 1f       	adc	r31, r31

000015a0 <.Loc.10>:
    15a0:	a2 17       	cp	r26, r18

000015a2 <.Loc.11>:
    15a2:	b3 07       	cpc	r27, r19

000015a4 <.Loc.12>:
    15a4:	e4 07       	cpc	r30, r20

000015a6 <.Loc.13>:
    15a6:	f5 07       	cpc	r31, r21

000015a8 <.Loc.14>:
    15a8:	20 f0       	brcs	.+8      	; 0x15b2 <__udivmodsi4_ep>

000015aa <.Loc.15>:
    15aa:	a2 1b       	sub	r26, r18

000015ac <.Loc.16>:
    15ac:	b3 0b       	sbc	r27, r19

000015ae <.Loc.17>:
    15ae:	e4 0b       	sbc	r30, r20

000015b0 <.Loc.18>:
    15b0:	f5 0b       	sbc	r31, r21

000015b2 <__udivmodsi4_ep>:
    15b2:	66 1f       	adc	r22, r22

000015b4 <.Loc.20>:
    15b4:	77 1f       	adc	r23, r23

000015b6 <.Loc.21>:
    15b6:	88 1f       	adc	r24, r24

000015b8 <.Loc.22>:
    15b8:	99 1f       	adc	r25, r25

000015ba <.Loc.23>:
    15ba:	1a 94       	dec	r1

000015bc <.Loc.24>:
    15bc:	69 f7       	brne	.-38     	; 0x1598 <__udivmodsi4_loop>

000015be <.Loc.25>:
    15be:	60 95       	com	r22

000015c0 <.Loc.26>:
    15c0:	70 95       	com	r23

000015c2 <.Loc.27>:
    15c2:	80 95       	com	r24

000015c4 <.Loc.28>:
    15c4:	90 95       	com	r25

000015c6 <.Loc.29>:
    15c6:	9b 01       	movw	r18, r22

000015c8 <.Loc.30>:
    15c8:	ac 01       	movw	r20, r24

000015ca <.Loc.31>:
    15ca:	bd 01       	movw	r22, r26

000015cc <.Loc.32>:
    15cc:	cf 01       	movw	r24, r30

000015ce <.Loc.33>:
    15ce:	08 95       	ret

000015d0 <__cmpsf2>:
    15d0:	0e 94 8e 0b 	call	0x171c	; 0x171c <__fp_cmp>
    15d4:	08 f4       	brcc	.+2      	; 0x15d8 <.L1^B1>
    15d6:	81 e0       	ldi	r24, 0x01	; 1

000015d8 <.L1^B1>:
    15d8:	08 95       	ret

000015da <__divsf3>:
    15da:	0e 94 01 0b 	call	0x1602	; 0x1602 <__divsf3x>
    15de:	0c 94 c9 0b 	jmp	0x1792	; 0x1792 <__fp_round>

000015e2 <.L^B1>:
    15e2:	0e 94 c2 0b 	call	0x1784	; 0x1784 <__fp_pscB>
    15e6:	58 f0       	brcs	.+22     	; 0x15fe <.L_nan>
    15e8:	0e 94 bb 0b 	call	0x1776	; 0x1776 <__fp_pscA>
    15ec:	40 f0       	brcs	.+16     	; 0x15fe <.L_nan>
    15ee:	29 f4       	brne	.+10     	; 0x15fa <.L_zr>
    15f0:	5f 3f       	cpi	r21, 0xFF	; 255
    15f2:	29 f0       	breq	.+10     	; 0x15fe <.L_nan>

000015f4 <.L_inf>:
    15f4:	0c 94 b2 0b 	jmp	0x1764	; 0x1764 <__fp_inf>

000015f8 <.L1^B1>:
    15f8:	51 11       	cpse	r21, r1

000015fa <.L_zr>:
    15fa:	0c 94 fd 0b 	jmp	0x17fa	; 0x17fa <__fp_szero>

000015fe <.L_nan>:
    15fe:	0c 94 b8 0b 	jmp	0x1770	; 0x1770 <__fp_nan>

00001602 <__divsf3x>:
    1602:	0e 94 da 0b 	call	0x17b4	; 0x17b4 <__fp_split3>
    1606:	68 f3       	brcs	.-38     	; 0x15e2 <.L^B1>

00001608 <__divsf3_pse>:
    1608:	99 23       	and	r25, r25
    160a:	b1 f3       	breq	.-20     	; 0x15f8 <.L1^B1>
    160c:	55 23       	and	r21, r21
    160e:	91 f3       	breq	.-28     	; 0x15f4 <.L_inf>
    1610:	95 1b       	sub	r25, r21
    1612:	55 0b       	sbc	r21, r21
    1614:	bb 27       	eor	r27, r27
    1616:	aa 27       	eor	r26, r26

00001618 <.L2^B1>:
    1618:	62 17       	cp	r22, r18
    161a:	73 07       	cpc	r23, r19
    161c:	84 07       	cpc	r24, r20
    161e:	38 f0       	brcs	.+14     	; 0x162e <.L3^B1>
    1620:	9f 5f       	subi	r25, 0xFF	; 255
    1622:	5f 4f       	sbci	r21, 0xFF	; 255
    1624:	22 0f       	add	r18, r18
    1626:	33 1f       	adc	r19, r19
    1628:	44 1f       	adc	r20, r20
    162a:	aa 1f       	adc	r26, r26
    162c:	a9 f3       	breq	.-22     	; 0x1618 <.L2^B1>

0000162e <.L3^B1>:
    162e:	35 d0       	rcall	.+106    	; 0x169a <.L_div>
    1630:	0e 2e       	mov	r0, r30
    1632:	3a f0       	brmi	.+14     	; 0x1642 <.L5^B1>

00001634 <.L4^B1>:
    1634:	e0 e8       	ldi	r30, 0x80	; 128
    1636:	32 d0       	rcall	.+100    	; 0x169c <.L_div1>
    1638:	91 50       	subi	r25, 0x01	; 1
    163a:	50 40       	sbci	r21, 0x00	; 0
    163c:	e6 95       	lsr	r30
    163e:	00 1c       	adc	r0, r0
    1640:	ca f7       	brpl	.-14     	; 0x1634 <.L4^B1>

00001642 <.L5^B1>:
    1642:	2b d0       	rcall	.+86     	; 0x169a <.L_div>
    1644:	fe 2f       	mov	r31, r30
    1646:	29 d0       	rcall	.+82     	; 0x169a <.L_div>
    1648:	66 0f       	add	r22, r22
    164a:	77 1f       	adc	r23, r23
    164c:	88 1f       	adc	r24, r24
    164e:	bb 1f       	adc	r27, r27
    1650:	26 17       	cp	r18, r22
    1652:	37 07       	cpc	r19, r23
    1654:	48 07       	cpc	r20, r24
    1656:	ab 07       	cpc	r26, r27
    1658:	b0 e8       	ldi	r27, 0x80	; 128
    165a:	09 f0       	breq	.+2      	; 0x165e <.L4^B2>
    165c:	bb 0b       	sbc	r27, r27

0000165e <.L4^B2>:
    165e:	80 2d       	mov	r24, r0
    1660:	bf 01       	movw	r22, r30
    1662:	ff 27       	eor	r31, r31
    1664:	93 58       	subi	r25, 0x83	; 131
    1666:	5f 4f       	sbci	r21, 0xFF	; 255
    1668:	3a f0       	brmi	.+14     	; 0x1678 <.L13^B1>
    166a:	9e 3f       	cpi	r25, 0xFE	; 254
    166c:	51 05       	cpc	r21, r1
    166e:	78 f0       	brcs	.+30     	; 0x168e <.L15^B1>
    1670:	0c 94 b2 0b 	jmp	0x1764	; 0x1764 <__fp_inf>

00001674 <.L12^B1>:
    1674:	0c 94 fd 0b 	jmp	0x17fa	; 0x17fa <__fp_szero>

00001678 <.L13^B1>:
    1678:	5f 3f       	cpi	r21, 0xFF	; 255
    167a:	e4 f3       	brlt	.-8      	; 0x1674 <.L12^B1>
    167c:	98 3e       	cpi	r25, 0xE8	; 232
    167e:	d4 f3       	brlt	.-12     	; 0x1674 <.L12^B1>

00001680 <.L14^B1>:
    1680:	86 95       	lsr	r24
    1682:	77 95       	ror	r23
    1684:	67 95       	ror	r22
    1686:	b7 95       	ror	r27
    1688:	f7 95       	ror	r31
    168a:	9f 5f       	subi	r25, 0xFF	; 255
    168c:	c9 f7       	brne	.-14     	; 0x1680 <.L14^B1>

0000168e <.L15^B1>:
    168e:	88 0f       	add	r24, r24
    1690:	91 1d       	adc	r25, r1
    1692:	96 95       	lsr	r25
    1694:	87 95       	ror	r24
    1696:	97 f9       	bld	r25, 7
    1698:	08 95       	ret

0000169a <.L_div>:
    169a:	e1 e0       	ldi	r30, 0x01	; 1

0000169c <.L_div1>:
    169c:	66 0f       	add	r22, r22
    169e:	77 1f       	adc	r23, r23
    16a0:	88 1f       	adc	r24, r24
    16a2:	bb 1f       	adc	r27, r27
    16a4:	62 17       	cp	r22, r18
    16a6:	73 07       	cpc	r23, r19
    16a8:	84 07       	cpc	r24, r20
    16aa:	ba 07       	cpc	r27, r26
    16ac:	20 f0       	brcs	.+8      	; 0x16b6 <.L2^B2>
    16ae:	62 1b       	sub	r22, r18
    16b0:	73 0b       	sbc	r23, r19
    16b2:	84 0b       	sbc	r24, r20
    16b4:	ba 0b       	sbc	r27, r26

000016b6 <.L2^B2>:
    16b6:	ee 1f       	adc	r30, r30
    16b8:	88 f7       	brcc	.-30     	; 0x169c <.L_div1>
    16ba:	e0 95       	com	r30
    16bc:	08 95       	ret

000016be <__fixunssfsi>:
    16be:	0e 94 e2 0b 	call	0x17c4	; 0x17c4 <__fp_splitA>
    16c2:	88 f0       	brcs	.+34     	; 0x16e6 <.L_err>
    16c4:	9f 57       	subi	r25, 0x7F	; 127
    16c6:	98 f0       	brcs	.+38     	; 0x16ee <.L_zr>
    16c8:	b9 2f       	mov	r27, r25
    16ca:	99 27       	eor	r25, r25
    16cc:	b7 51       	subi	r27, 0x17	; 23
    16ce:	b0 f0       	brcs	.+44     	; 0x16fc <.L4^B1>
    16d0:	e1 f0       	breq	.+56     	; 0x170a <.L_sign>

000016d2 <.L1^B1>:
    16d2:	66 0f       	add	r22, r22
    16d4:	77 1f       	adc	r23, r23
    16d6:	88 1f       	adc	r24, r24
    16d8:	99 1f       	adc	r25, r25
    16da:	1a f0       	brmi	.+6      	; 0x16e2 <.L2^B1>
    16dc:	ba 95       	dec	r27
    16de:	c9 f7       	brne	.-14     	; 0x16d2 <.L1^B1>
    16e0:	14 c0       	rjmp	.+40     	; 0x170a <.L_sign>

000016e2 <.L2^B1>:
    16e2:	b1 30       	cpi	r27, 0x01	; 1
    16e4:	91 f0       	breq	.+36     	; 0x170a <.L_sign>

000016e6 <.L_err>:
    16e6:	0e 94 fc 0b 	call	0x17f8	; 0x17f8 <__fp_zero>
    16ea:	b1 e0       	ldi	r27, 0x01	; 1
    16ec:	08 95       	ret

000016ee <.L_zr>:
    16ee:	0c 94 fc 0b 	jmp	0x17f8	; 0x17f8 <__fp_zero>

000016f2 <.L3^B1>:
    16f2:	67 2f       	mov	r22, r23
    16f4:	78 2f       	mov	r23, r24
    16f6:	88 27       	eor	r24, r24
    16f8:	b8 5f       	subi	r27, 0xF8	; 248
    16fa:	39 f0       	breq	.+14     	; 0x170a <.L_sign>

000016fc <.L4^B1>:
    16fc:	b9 3f       	cpi	r27, 0xF9	; 249
    16fe:	cc f3       	brlt	.-14     	; 0x16f2 <.L3^B1>

00001700 <.L5^B1>:
    1700:	86 95       	lsr	r24
    1702:	77 95       	ror	r23
    1704:	67 95       	ror	r22
    1706:	b3 95       	inc	r27
    1708:	d9 f7       	brne	.-10     	; 0x1700 <.L5^B1>

0000170a <.L_sign>:
    170a:	3e f4       	brtc	.+14     	; 0x171a <.L6^B1>
    170c:	90 95       	com	r25
    170e:	80 95       	com	r24
    1710:	70 95       	com	r23
    1712:	61 95       	neg	r22
    1714:	7f 4f       	sbci	r23, 0xFF	; 255
    1716:	8f 4f       	sbci	r24, 0xFF	; 255
    1718:	9f 4f       	sbci	r25, 0xFF	; 255

0000171a <.L6^B1>:
    171a:	08 95       	ret

0000171c <__fp_cmp>:
    171c:	99 0f       	add	r25, r25
    171e:	00 08       	sbc	r0, r0
    1720:	55 0f       	add	r21, r21
    1722:	aa 0b       	sbc	r26, r26
    1724:	e0 e8       	ldi	r30, 0x80	; 128
    1726:	fe ef       	ldi	r31, 0xFE	; 254
    1728:	16 16       	cp	r1, r22
    172a:	17 06       	cpc	r1, r23
    172c:	e8 07       	cpc	r30, r24
    172e:	f9 07       	cpc	r31, r25
    1730:	c0 f0       	brcs	.+48     	; 0x1762 <.L9^B1>
    1732:	12 16       	cp	r1, r18
    1734:	13 06       	cpc	r1, r19
    1736:	e4 07       	cpc	r30, r20
    1738:	f5 07       	cpc	r31, r21
    173a:	98 f0       	brcs	.+38     	; 0x1762 <.L9^B1>
    173c:	62 1b       	sub	r22, r18
    173e:	73 0b       	sbc	r23, r19
    1740:	84 0b       	sbc	r24, r20
    1742:	95 0b       	sbc	r25, r21
    1744:	39 f4       	brne	.+14     	; 0x1754 <.L1^B1>
    1746:	0a 26       	eor	r0, r26
    1748:	61 f0       	breq	.+24     	; 0x1762 <.L9^B1>
    174a:	23 2b       	or	r18, r19
    174c:	24 2b       	or	r18, r20
    174e:	25 2b       	or	r18, r21
    1750:	21 f4       	brne	.+8      	; 0x175a <.L2^B1>
    1752:	08 95       	ret

00001754 <.L1^B1>:
    1754:	0a 26       	eor	r0, r26
    1756:	09 f4       	brne	.+2      	; 0x175a <.L2^B1>
    1758:	a1 40       	sbci	r26, 0x01	; 1

0000175a <.L2^B1>:
    175a:	a6 95       	lsr	r26
    175c:	8f ef       	ldi	r24, 0xFF	; 255
    175e:	81 1d       	adc	r24, r1
    1760:	81 1d       	adc	r24, r1

00001762 <.L9^B1>:
    1762:	08 95       	ret

00001764 <__fp_inf>:
    1764:	97 f9       	bld	r25, 7
    1766:	9f 67       	ori	r25, 0x7F	; 127
    1768:	80 e8       	ldi	r24, 0x80	; 128
    176a:	70 e0       	ldi	r23, 0x00	; 0
    176c:	60 e0       	ldi	r22, 0x00	; 0
    176e:	08 95       	ret

00001770 <__fp_nan>:
    1770:	9f ef       	ldi	r25, 0xFF	; 255
    1772:	80 ec       	ldi	r24, 0xC0	; 192
    1774:	08 95       	ret

00001776 <__fp_pscA>:
    1776:	00 24       	eor	r0, r0
    1778:	0a 94       	dec	r0
    177a:	16 16       	cp	r1, r22
    177c:	17 06       	cpc	r1, r23
    177e:	18 06       	cpc	r1, r24
    1780:	09 06       	cpc	r0, r25
    1782:	08 95       	ret

00001784 <__fp_pscB>:
    1784:	00 24       	eor	r0, r0
    1786:	0a 94       	dec	r0
    1788:	12 16       	cp	r1, r18
    178a:	13 06       	cpc	r1, r19
    178c:	14 06       	cpc	r1, r20
    178e:	05 06       	cpc	r0, r21
    1790:	08 95       	ret

00001792 <__fp_round>:
    1792:	09 2e       	mov	r0, r25
    1794:	03 94       	inc	r0
    1796:	00 0c       	add	r0, r0
    1798:	11 f4       	brne	.+4      	; 0x179e <.L1^B1>
    179a:	88 23       	and	r24, r24
    179c:	52 f0       	brmi	.+20     	; 0x17b2 <.L3^B1>

0000179e <.L1^B1>:
    179e:	bb 0f       	add	r27, r27
    17a0:	40 f4       	brcc	.+16     	; 0x17b2 <.L3^B1>
    17a2:	bf 2b       	or	r27, r31
    17a4:	11 f4       	brne	.+4      	; 0x17aa <.L2^B1>
    17a6:	60 ff       	sbrs	r22, 0
    17a8:	04 c0       	rjmp	.+8      	; 0x17b2 <.L3^B1>

000017aa <.L2^B1>:
    17aa:	6f 5f       	subi	r22, 0xFF	; 255
    17ac:	7f 4f       	sbci	r23, 0xFF	; 255
    17ae:	8f 4f       	sbci	r24, 0xFF	; 255
    17b0:	9f 4f       	sbci	r25, 0xFF	; 255

000017b2 <.L3^B1>:
    17b2:	08 95       	ret

000017b4 <__fp_split3>:
    17b4:	57 fd       	sbrc	r21, 7
    17b6:	90 58       	subi	r25, 0x80	; 128
    17b8:	44 0f       	add	r20, r20
    17ba:	55 1f       	adc	r21, r21
    17bc:	59 f0       	breq	.+22     	; 0x17d4 <.L4^B1>
    17be:	5f 3f       	cpi	r21, 0xFF	; 255
    17c0:	71 f0       	breq	.+28     	; 0x17de <.L5^B1>

000017c2 <.L1^B1>:
    17c2:	47 95       	ror	r20

000017c4 <__fp_splitA>:
    17c4:	88 0f       	add	r24, r24
    17c6:	97 fb       	bst	r25, 7
    17c8:	99 1f       	adc	r25, r25
    17ca:	61 f0       	breq	.+24     	; 0x17e4 <.L6^B1>
    17cc:	9f 3f       	cpi	r25, 0xFF	; 255
    17ce:	79 f0       	breq	.+30     	; 0x17ee <.L7^B1>

000017d0 <.L3^B1>:
    17d0:	87 95       	ror	r24
    17d2:	08 95       	ret

000017d4 <.L4^B1>:
    17d4:	12 16       	cp	r1, r18
    17d6:	13 06       	cpc	r1, r19
    17d8:	14 06       	cpc	r1, r20
    17da:	55 1f       	adc	r21, r21
    17dc:	f2 cf       	rjmp	.-28     	; 0x17c2 <.L1^B1>

000017de <.L5^B1>:
    17de:	46 95       	lsr	r20
    17e0:	f1 df       	rcall	.-30     	; 0x17c4 <__fp_splitA>
    17e2:	08 c0       	rjmp	.+16     	; 0x17f4 <.L8^B1>

000017e4 <.L6^B1>:
    17e4:	16 16       	cp	r1, r22
    17e6:	17 06       	cpc	r1, r23
    17e8:	18 06       	cpc	r1, r24
    17ea:	99 1f       	adc	r25, r25
    17ec:	f1 cf       	rjmp	.-30     	; 0x17d0 <.L3^B1>

000017ee <.L7^B1>:
    17ee:	86 95       	lsr	r24
    17f0:	71 05       	cpc	r23, r1
    17f2:	61 05       	cpc	r22, r1

000017f4 <.L8^B1>:
    17f4:	08 94       	sec
    17f6:	08 95       	ret

000017f8 <__fp_zero>:
    17f8:	e8 94       	clt

000017fa <__fp_szero>:
    17fa:	bb 27       	eor	r27, r27
    17fc:	66 27       	eor	r22, r22
    17fe:	77 27       	eor	r23, r23
    1800:	cb 01       	movw	r24, r22
    1802:	97 f9       	bld	r25, 7
    1804:	08 95       	ret

00001806 <__gesf2>:
    1806:	0e 94 8e 0b 	call	0x171c	; 0x171c <__fp_cmp>
    180a:	08 f4       	brcc	.+2      	; 0x180e <.L1^B1>
    180c:	8f ef       	ldi	r24, 0xFF	; 255

0000180e <.L1^B1>:
    180e:	08 95       	ret

00001810 <__mulsf3>:
    1810:	0e 94 1b 0c 	call	0x1836	; 0x1836 <__mulsf3x>
    1814:	0c 94 c9 0b 	jmp	0x1792	; 0x1792 <__fp_round>

00001818 <.L^B1>:
    1818:	0e 94 bb 0b 	call	0x1776	; 0x1776 <__fp_pscA>
    181c:	38 f0       	brcs	.+14     	; 0x182c <.L1^B1>
    181e:	0e 94 c2 0b 	call	0x1784	; 0x1784 <__fp_pscB>
    1822:	20 f0       	brcs	.+8      	; 0x182c <.L1^B1>
    1824:	95 23       	and	r25, r21
    1826:	11 f0       	breq	.+4      	; 0x182c <.L1^B1>
    1828:	0c 94 b2 0b 	jmp	0x1764	; 0x1764 <__fp_inf>

0000182c <.L1^B1>:
    182c:	0c 94 b8 0b 	jmp	0x1770	; 0x1770 <__fp_nan>

00001830 <.L2^B1>:
    1830:	11 24       	eor	r1, r1
    1832:	0c 94 fd 0b 	jmp	0x17fa	; 0x17fa <__fp_szero>

00001836 <__mulsf3x>:
    1836:	0e 94 da 0b 	call	0x17b4	; 0x17b4 <__fp_split3>
    183a:	70 f3       	brcs	.-36     	; 0x1818 <.L^B1>

0000183c <__mulsf3_pse>:
    183c:	95 9f       	mul	r25, r21
    183e:	c1 f3       	breq	.-16     	; 0x1830 <.L2^B1>
    1840:	95 0f       	add	r25, r21
    1842:	50 e0       	ldi	r21, 0x00	; 0
    1844:	55 1f       	adc	r21, r21
    1846:	62 9f       	mul	r22, r18
    1848:	f0 01       	movw	r30, r0
    184a:	72 9f       	mul	r23, r18
    184c:	bb 27       	eor	r27, r27
    184e:	f0 0d       	add	r31, r0
    1850:	b1 1d       	adc	r27, r1
    1852:	63 9f       	mul	r22, r19
    1854:	aa 27       	eor	r26, r26
    1856:	f0 0d       	add	r31, r0
    1858:	b1 1d       	adc	r27, r1
    185a:	aa 1f       	adc	r26, r26
    185c:	64 9f       	mul	r22, r20
    185e:	66 27       	eor	r22, r22
    1860:	b0 0d       	add	r27, r0
    1862:	a1 1d       	adc	r26, r1
    1864:	66 1f       	adc	r22, r22
    1866:	82 9f       	mul	r24, r18
    1868:	22 27       	eor	r18, r18
    186a:	b0 0d       	add	r27, r0
    186c:	a1 1d       	adc	r26, r1
    186e:	62 1f       	adc	r22, r18
    1870:	73 9f       	mul	r23, r19
    1872:	b0 0d       	add	r27, r0
    1874:	a1 1d       	adc	r26, r1
    1876:	62 1f       	adc	r22, r18
    1878:	83 9f       	mul	r24, r19
    187a:	a0 0d       	add	r26, r0
    187c:	61 1d       	adc	r22, r1
    187e:	22 1f       	adc	r18, r18
    1880:	74 9f       	mul	r23, r20
    1882:	33 27       	eor	r19, r19
    1884:	a0 0d       	add	r26, r0
    1886:	61 1d       	adc	r22, r1
    1888:	23 1f       	adc	r18, r19
    188a:	84 9f       	mul	r24, r20
    188c:	60 0d       	add	r22, r0
    188e:	21 1d       	adc	r18, r1
    1890:	82 2f       	mov	r24, r18
    1892:	76 2f       	mov	r23, r22
    1894:	6a 2f       	mov	r22, r26
    1896:	11 24       	eor	r1, r1
    1898:	9f 57       	subi	r25, 0x7F	; 127
    189a:	50 40       	sbci	r21, 0x00	; 0
    189c:	9a f0       	brmi	.+38     	; 0x18c4 <.L13^B1>
    189e:	f1 f0       	breq	.+60     	; 0x18dc <.L15^B1>

000018a0 <.L10^B1>:
    18a0:	88 23       	and	r24, r24
    18a2:	4a f0       	brmi	.+18     	; 0x18b6 <.L11^B1>
    18a4:	ee 0f       	add	r30, r30
    18a6:	ff 1f       	adc	r31, r31
    18a8:	bb 1f       	adc	r27, r27
    18aa:	66 1f       	adc	r22, r22
    18ac:	77 1f       	adc	r23, r23
    18ae:	88 1f       	adc	r24, r24
    18b0:	91 50       	subi	r25, 0x01	; 1
    18b2:	50 40       	sbci	r21, 0x00	; 0
    18b4:	a9 f7       	brne	.-22     	; 0x18a0 <.L10^B1>

000018b6 <.L11^B1>:
    18b6:	9e 3f       	cpi	r25, 0xFE	; 254
    18b8:	51 05       	cpc	r21, r1
    18ba:	80 f0       	brcs	.+32     	; 0x18dc <.L15^B1>
    18bc:	0c 94 b2 0b 	jmp	0x1764	; 0x1764 <__fp_inf>

000018c0 <.L12^B1>:
    18c0:	0c 94 fd 0b 	jmp	0x17fa	; 0x17fa <__fp_szero>

000018c4 <.L13^B1>:
    18c4:	5f 3f       	cpi	r21, 0xFF	; 255
    18c6:	e4 f3       	brlt	.-8      	; 0x18c0 <.L12^B1>
    18c8:	98 3e       	cpi	r25, 0xE8	; 232
    18ca:	d4 f3       	brlt	.-12     	; 0x18c0 <.L12^B1>

000018cc <.L14^B1>:
    18cc:	86 95       	lsr	r24
    18ce:	77 95       	ror	r23
    18d0:	67 95       	ror	r22
    18d2:	b7 95       	ror	r27
    18d4:	f7 95       	ror	r31
    18d6:	e7 95       	ror	r30
    18d8:	9f 5f       	subi	r25, 0xFF	; 255
    18da:	c1 f7       	brne	.-16     	; 0x18cc <.L14^B1>

000018dc <.L15^B1>:
    18dc:	fe 2b       	or	r31, r30
    18de:	88 0f       	add	r24, r24
    18e0:	91 1d       	adc	r25, r1
    18e2:	96 95       	lsr	r25
    18e4:	87 95       	ror	r24
    18e6:	97 f9       	bld	r25, 7
    18e8:	08 95       	ret

000018ea <_exit>:
    18ea:	f8 94       	cli

000018ec <__stop_program>:
    18ec:	ff cf       	rjmp	.-2      	; 0x18ec <__stop_program>
