
bin\Debug\IRlijnenenbocht.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00000764  000007f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000764  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .fuse         00000003  00820000  00820000  000007f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .comment      00000012  00000000  00000000  000007fb  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000810  2**2
                  CONTENTS, READONLY, OCTETS
  5 .debug_aranges 000000b8  00000000  00000000  00000850  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_info   00000e28  00000000  00000000  00000908  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_abbrev 00000cb0  00000000  00000000  00001730  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_line   0000085b  00000000  00000000  000023e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_frame  000001bc  00000000  00000000  00002c3c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_str    00000574  00000000  00000000  00002df8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_line_str 0000011e  00000000  00000000  0000336c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
   4:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
   8:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
   c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  10:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  14:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  18:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  1c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  20:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  24:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  28:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  2c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  30:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  34:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  38:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  3c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  40:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  44:	0c 94 3d 01 	jmp	0x27a	; 0x27a <__vector_17>
  48:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  4c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  50:	0c 94 12 01 	jmp	0x224	; 0x224 <__vector_20>
  54:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  58:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  5c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  60:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  64:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  68:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  6c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  70:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  74:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  78:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  7c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  80:	0c 94 90 01 	jmp	0x320	; 0x320 <__vector_32>
  84:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  88:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  8c:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__vector_35>
  90:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  94:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  98:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  9c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  a0:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  a4:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  a8:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  ac:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  b0:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  b4:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  b8:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  bc:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  c0:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  c4:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  c8:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  cc:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  d0:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  d4:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  d8:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  dc:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  e0:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60
  f4:	0e 94 b8 01 	call	0x370	; 0x370 <main>
  f8:	0c 94 b0 03 	jmp	0x760	; 0x760 <_exit>

000000fc <__bad_interrupt>:
  fc:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000100 <initding>:

void h_bridgeR_set_percentage(signed char percentage);
void h_bridgeL_set_percentage(signed char percentage);

void initding()
{
 100:	cf 93       	push	r28
 102:	df 93       	push	r29
 104:	cd b7       	in	r28, 0x3d	; 61
 106:	de b7       	in	r29, 0x3e	; 62

00000108 <.Loc.1>:
    //timer PWM motorenR
    TCCR1B = (0 << CS12) | (0 << CS11) | (1 << CS10);
 108:	81 e8       	ldi	r24, 0x81	; 129
 10a:	90 e0       	ldi	r25, 0x00	; 0

0000010c <.Loc.2>:
 10c:	21 e0       	ldi	r18, 0x01	; 1
 10e:	fc 01       	movw	r30, r24
 110:	20 83       	st	Z, r18

00000112 <.Loc.3>:
    TIMSK1 = (1 << OCIE1A) | (1 << TOIE1);
 112:	8f e6       	ldi	r24, 0x6F	; 111
 114:	90 e0       	ldi	r25, 0x00	; 0

00000116 <.Loc.4>:
 116:	23 e0       	ldi	r18, 0x03	; 3
 118:	fc 01       	movw	r30, r24
 11a:	20 83       	st	Z, r18

0000011c <.Loc.5>:

    OCR1A = 0;
 11c:	88 e8       	ldi	r24, 0x88	; 136
 11e:	90 e0       	ldi	r25, 0x00	; 0

00000120 <.Loc.6>:
 120:	fc 01       	movw	r30, r24
 122:	11 82       	std	Z+1, r1	; 0x01
 124:	10 82       	st	Z, r1

00000126 <.Loc.7>:
    //timer PWM motorenL
    TCCR3B = (0 << CS32) | (0 << CS31) | (1 << CS30);
 126:	81 e9       	ldi	r24, 0x91	; 145
 128:	90 e0       	ldi	r25, 0x00	; 0

0000012a <.Loc.8>:
 12a:	21 e0       	ldi	r18, 0x01	; 1
 12c:	fc 01       	movw	r30, r24
 12e:	20 83       	st	Z, r18

00000130 <.Loc.9>:
    TIMSK3 = (1 << OCIE3A) | (1 << TOIE3);
 130:	81 e7       	ldi	r24, 0x71	; 113
 132:	90 e0       	ldi	r25, 0x00	; 0

00000134 <.Loc.10>:
 134:	23 e0       	ldi	r18, 0x03	; 3
 136:	fc 01       	movw	r30, r24
 138:	20 83       	st	Z, r18

0000013a <.Loc.11>:

    OCR3A = 0;
 13a:	88 e9       	ldi	r24, 0x98	; 152
 13c:	90 e0       	ldi	r25, 0x00	; 0

0000013e <.Loc.12>:
 13e:	fc 01       	movw	r30, r24
 140:	11 82       	std	Z+1, r1	; 0x01
 142:	10 82       	st	Z, r1

00000144 <.Loc.13>:

    //pinout h-brug
    DDR |= (1 << PEN1);
 144:	81 e2       	ldi	r24, 0x21	; 33
 146:	90 e0       	ldi	r25, 0x00	; 0
 148:	fc 01       	movw	r30, r24
 14a:	20 81       	ld	r18, Z
 14c:	81 e2       	ldi	r24, 0x21	; 33
 14e:	90 e0       	ldi	r25, 0x00	; 0

00000150 <.Loc.14>:
 150:	20 68       	ori	r18, 0x80	; 128
 152:	fc 01       	movw	r30, r24
 154:	20 83       	st	Z, r18

00000156 <.Loc.15>:
    DDR |= (1 << PIN11);
 156:	81 e2       	ldi	r24, 0x21	; 33
 158:	90 e0       	ldi	r25, 0x00	; 0
 15a:	fc 01       	movw	r30, r24
 15c:	20 81       	ld	r18, Z
 15e:	81 e2       	ldi	r24, 0x21	; 33
 160:	90 e0       	ldi	r25, 0x00	; 0

00000162 <.Loc.16>:
 162:	20 64       	ori	r18, 0x40	; 64
 164:	fc 01       	movw	r30, r24
 166:	20 83       	st	Z, r18

00000168 <.Loc.17>:
    DDR |= (1 << PIN12);
 168:	81 e2       	ldi	r24, 0x21	; 33
 16a:	90 e0       	ldi	r25, 0x00	; 0
 16c:	fc 01       	movw	r30, r24
 16e:	20 81       	ld	r18, Z
 170:	81 e2       	ldi	r24, 0x21	; 33
 172:	90 e0       	ldi	r25, 0x00	; 0

00000174 <.Loc.18>:
 174:	20 62       	ori	r18, 0x20	; 32
 176:	fc 01       	movw	r30, r24
 178:	20 83       	st	Z, r18

0000017a <.Loc.19>:
    DDR |= (1 << PIN21);
 17a:	81 e2       	ldi	r24, 0x21	; 33
 17c:	90 e0       	ldi	r25, 0x00	; 0
 17e:	fc 01       	movw	r30, r24
 180:	20 81       	ld	r18, Z
 182:	81 e2       	ldi	r24, 0x21	; 33
 184:	90 e0       	ldi	r25, 0x00	; 0

00000186 <.Loc.20>:
 186:	20 61       	ori	r18, 0x10	; 16
 188:	fc 01       	movw	r30, r24
 18a:	20 83       	st	Z, r18

0000018c <.Loc.21>:
    DDR |= (1 << PIN22);
 18c:	81 e2       	ldi	r24, 0x21	; 33
 18e:	90 e0       	ldi	r25, 0x00	; 0
 190:	fc 01       	movw	r30, r24
 192:	20 81       	ld	r18, Z
 194:	81 e2       	ldi	r24, 0x21	; 33
 196:	90 e0       	ldi	r25, 0x00	; 0

00000198 <.Loc.22>:
 198:	28 60       	ori	r18, 0x08	; 8
 19a:	fc 01       	movw	r30, r24
 19c:	20 83       	st	Z, r18

0000019e <.Loc.23>:
    DDR |= (1 << PEN2);
 19e:	81 e2       	ldi	r24, 0x21	; 33
 1a0:	90 e0       	ldi	r25, 0x00	; 0
 1a2:	fc 01       	movw	r30, r24
 1a4:	20 81       	ld	r18, Z
 1a6:	81 e2       	ldi	r24, 0x21	; 33
 1a8:	90 e0       	ldi	r25, 0x00	; 0

000001aa <.Loc.24>:
 1aa:	24 60       	ori	r18, 0x04	; 4
 1ac:	fc 01       	movw	r30, r24
 1ae:	20 83       	st	Z, r18

000001b0 <.Loc.25>:

    //H-brug pinnen LOW
    PORT &= ~(1 << PEN1);
 1b0:	82 e2       	ldi	r24, 0x22	; 34
 1b2:	90 e0       	ldi	r25, 0x00	; 0
 1b4:	fc 01       	movw	r30, r24
 1b6:	20 81       	ld	r18, Z

000001b8 <.Loc.26>:
 1b8:	82 e2       	ldi	r24, 0x22	; 34
 1ba:	90 e0       	ldi	r25, 0x00	; 0

000001bc <.Loc.27>:
 1bc:	2f 77       	andi	r18, 0x7F	; 127
 1be:	fc 01       	movw	r30, r24
 1c0:	20 83       	st	Z, r18

000001c2 <.Loc.28>:
	PORT &= ~(1 << PIN11);
 1c2:	82 e2       	ldi	r24, 0x22	; 34
 1c4:	90 e0       	ldi	r25, 0x00	; 0
 1c6:	fc 01       	movw	r30, r24
 1c8:	20 81       	ld	r18, Z

000001ca <.Loc.29>:
 1ca:	82 e2       	ldi	r24, 0x22	; 34
 1cc:	90 e0       	ldi	r25, 0x00	; 0

000001ce <.Loc.30>:
 1ce:	2f 7b       	andi	r18, 0xBF	; 191
 1d0:	fc 01       	movw	r30, r24
 1d2:	20 83       	st	Z, r18

000001d4 <.Loc.31>:
	PORT &= ~(1 << PIN12);
 1d4:	82 e2       	ldi	r24, 0x22	; 34
 1d6:	90 e0       	ldi	r25, 0x00	; 0
 1d8:	fc 01       	movw	r30, r24
 1da:	20 81       	ld	r18, Z

000001dc <.Loc.32>:
 1dc:	82 e2       	ldi	r24, 0x22	; 34
 1de:	90 e0       	ldi	r25, 0x00	; 0

000001e0 <.Loc.33>:
 1e0:	2f 7d       	andi	r18, 0xDF	; 223
 1e2:	fc 01       	movw	r30, r24
 1e4:	20 83       	st	Z, r18

000001e6 <.Loc.34>:
	PORT &= ~(1 << PIN21);
 1e6:	82 e2       	ldi	r24, 0x22	; 34
 1e8:	90 e0       	ldi	r25, 0x00	; 0
 1ea:	fc 01       	movw	r30, r24
 1ec:	20 81       	ld	r18, Z

000001ee <.Loc.35>:
 1ee:	82 e2       	ldi	r24, 0x22	; 34
 1f0:	90 e0       	ldi	r25, 0x00	; 0

000001f2 <.Loc.36>:
 1f2:	2f 7e       	andi	r18, 0xEF	; 239
 1f4:	fc 01       	movw	r30, r24
 1f6:	20 83       	st	Z, r18

000001f8 <.Loc.37>:
	PORT &= ~(1 << PIN22);
 1f8:	82 e2       	ldi	r24, 0x22	; 34
 1fa:	90 e0       	ldi	r25, 0x00	; 0
 1fc:	fc 01       	movw	r30, r24
 1fe:	20 81       	ld	r18, Z

00000200 <.Loc.38>:
 200:	82 e2       	ldi	r24, 0x22	; 34
 202:	90 e0       	ldi	r25, 0x00	; 0

00000204 <.Loc.39>:
 204:	27 7f       	andi	r18, 0xF7	; 247
 206:	fc 01       	movw	r30, r24
 208:	20 83       	st	Z, r18

0000020a <.Loc.40>:
	PORT &= ~(1 << PEN2);
 20a:	82 e2       	ldi	r24, 0x22	; 34
 20c:	90 e0       	ldi	r25, 0x00	; 0
 20e:	fc 01       	movw	r30, r24
 210:	20 81       	ld	r18, Z

00000212 <.Loc.41>:
 212:	82 e2       	ldi	r24, 0x22	; 34
 214:	90 e0       	ldi	r25, 0x00	; 0

00000216 <.Loc.42>:
 216:	2b 7f       	andi	r18, 0xFB	; 251
 218:	fc 01       	movw	r30, r24
 21a:	20 83       	st	Z, r18

0000021c <.Loc.43>:
}
 21c:	00 00       	nop
 21e:	df 91       	pop	r29
 220:	cf 91       	pop	r28
 222:	08 95       	ret

00000224 <__vector_20>:

//H-brug PWMR
ISR(TIMER1_OVF_vect)
{
 224:	1f 92       	push	r1
 226:	0f 92       	push	r0
 228:	0f b6       	in	r0, 0x3f	; 63
 22a:	0f 92       	push	r0
 22c:	11 24       	eor	r1, r1
 22e:	0b b6       	in	r0, 0x3b	; 59
 230:	0f 92       	push	r0
 232:	2f 93       	push	r18
 234:	3f 93       	push	r19
 236:	8f 93       	push	r24
 238:	9f 93       	push	r25
 23a:	ef 93       	push	r30
 23c:	ff 93       	push	r31
 23e:	cf 93       	push	r28
 240:	df 93       	push	r29
 242:	cd b7       	in	r28, 0x3d	; 61
 244:	de b7       	in	r29, 0x3e	; 62

00000246 <.Loc.45>:
    PORT ^= (1 << PEN1);
 246:	82 e2       	ldi	r24, 0x22	; 34
 248:	90 e0       	ldi	r25, 0x00	; 0
 24a:	fc 01       	movw	r30, r24
 24c:	30 81       	ld	r19, Z
 24e:	82 e2       	ldi	r24, 0x22	; 34
 250:	90 e0       	ldi	r25, 0x00	; 0

00000252 <.Loc.46>:
 252:	20 e8       	ldi	r18, 0x80	; 128
 254:	23 27       	eor	r18, r19
 256:	fc 01       	movw	r30, r24
 258:	20 83       	st	Z, r18

0000025a <.Loc.47>:
}
 25a:	00 00       	nop
 25c:	df 91       	pop	r29
 25e:	cf 91       	pop	r28
 260:	ff 91       	pop	r31
 262:	ef 91       	pop	r30
 264:	9f 91       	pop	r25
 266:	8f 91       	pop	r24
 268:	3f 91       	pop	r19
 26a:	2f 91       	pop	r18
 26c:	0f 90       	pop	r0
 26e:	0b be       	out	0x3b, r0	; 59
 270:	0f 90       	pop	r0
 272:	0f be       	out	0x3f, r0	; 63
 274:	0f 90       	pop	r0
 276:	1f 90       	pop	r1
 278:	18 95       	reti

0000027a <__vector_17>:
//H-brug PWMR
ISR(TIMER1_COMPA_vect)
{
 27a:	1f 92       	push	r1
 27c:	0f 92       	push	r0
 27e:	0f b6       	in	r0, 0x3f	; 63
 280:	0f 92       	push	r0
 282:	11 24       	eor	r1, r1
 284:	0b b6       	in	r0, 0x3b	; 59
 286:	0f 92       	push	r0
 288:	2f 93       	push	r18
 28a:	8f 93       	push	r24
 28c:	9f 93       	push	r25
 28e:	ef 93       	push	r30
 290:	ff 93       	push	r31
 292:	cf 93       	push	r28
 294:	df 93       	push	r29
 296:	cd b7       	in	r28, 0x3d	; 61
 298:	de b7       	in	r29, 0x3e	; 62

0000029a <.Loc.49>:
    PORT |= (1 << PEN1);
 29a:	82 e2       	ldi	r24, 0x22	; 34
 29c:	90 e0       	ldi	r25, 0x00	; 0
 29e:	fc 01       	movw	r30, r24
 2a0:	20 81       	ld	r18, Z
 2a2:	82 e2       	ldi	r24, 0x22	; 34
 2a4:	90 e0       	ldi	r25, 0x00	; 0

000002a6 <.Loc.50>:
 2a6:	20 68       	ori	r18, 0x80	; 128
 2a8:	fc 01       	movw	r30, r24
 2aa:	20 83       	st	Z, r18

000002ac <.Loc.51>:
}
 2ac:	00 00       	nop
 2ae:	df 91       	pop	r29
 2b0:	cf 91       	pop	r28
 2b2:	ff 91       	pop	r31
 2b4:	ef 91       	pop	r30
 2b6:	9f 91       	pop	r25
 2b8:	8f 91       	pop	r24
 2ba:	2f 91       	pop	r18
 2bc:	0f 90       	pop	r0
 2be:	0b be       	out	0x3b, r0	; 59
 2c0:	0f 90       	pop	r0
 2c2:	0f be       	out	0x3f, r0	; 63
 2c4:	0f 90       	pop	r0
 2c6:	1f 90       	pop	r1
 2c8:	18 95       	reti

000002ca <__vector_35>:

//H-brug PWML
ISR(TIMER3_OVF_vect)
{
 2ca:	1f 92       	push	r1
 2cc:	0f 92       	push	r0
 2ce:	0f b6       	in	r0, 0x3f	; 63
 2d0:	0f 92       	push	r0
 2d2:	11 24       	eor	r1, r1
 2d4:	0b b6       	in	r0, 0x3b	; 59
 2d6:	0f 92       	push	r0
 2d8:	2f 93       	push	r18
 2da:	3f 93       	push	r19
 2dc:	8f 93       	push	r24
 2de:	9f 93       	push	r25
 2e0:	ef 93       	push	r30
 2e2:	ff 93       	push	r31
 2e4:	cf 93       	push	r28
 2e6:	df 93       	push	r29
 2e8:	cd b7       	in	r28, 0x3d	; 61
 2ea:	de b7       	in	r29, 0x3e	; 62

000002ec <.Loc.53>:
    PORT ^= (1 << PEN2);
 2ec:	82 e2       	ldi	r24, 0x22	; 34
 2ee:	90 e0       	ldi	r25, 0x00	; 0
 2f0:	fc 01       	movw	r30, r24
 2f2:	30 81       	ld	r19, Z
 2f4:	82 e2       	ldi	r24, 0x22	; 34
 2f6:	90 e0       	ldi	r25, 0x00	; 0

000002f8 <.Loc.54>:
 2f8:	24 e0       	ldi	r18, 0x04	; 4
 2fa:	23 27       	eor	r18, r19
 2fc:	fc 01       	movw	r30, r24
 2fe:	20 83       	st	Z, r18

00000300 <.Loc.55>:
}
 300:	00 00       	nop
 302:	df 91       	pop	r29
 304:	cf 91       	pop	r28
 306:	ff 91       	pop	r31
 308:	ef 91       	pop	r30
 30a:	9f 91       	pop	r25
 30c:	8f 91       	pop	r24
 30e:	3f 91       	pop	r19
 310:	2f 91       	pop	r18
 312:	0f 90       	pop	r0
 314:	0b be       	out	0x3b, r0	; 59
 316:	0f 90       	pop	r0
 318:	0f be       	out	0x3f, r0	; 63
 31a:	0f 90       	pop	r0
 31c:	1f 90       	pop	r1
 31e:	18 95       	reti

00000320 <__vector_32>:
//H-brug PWML
ISR(TIMER3_COMPA_vect)
{
 320:	1f 92       	push	r1
 322:	0f 92       	push	r0
 324:	0f b6       	in	r0, 0x3f	; 63
 326:	0f 92       	push	r0
 328:	11 24       	eor	r1, r1
 32a:	0b b6       	in	r0, 0x3b	; 59
 32c:	0f 92       	push	r0
 32e:	2f 93       	push	r18
 330:	8f 93       	push	r24
 332:	9f 93       	push	r25
 334:	ef 93       	push	r30
 336:	ff 93       	push	r31
 338:	cf 93       	push	r28
 33a:	df 93       	push	r29
 33c:	cd b7       	in	r28, 0x3d	; 61
 33e:	de b7       	in	r29, 0x3e	; 62

00000340 <.Loc.57>:
    PORT |= (1 << PEN2);
 340:	82 e2       	ldi	r24, 0x22	; 34
 342:	90 e0       	ldi	r25, 0x00	; 0
 344:	fc 01       	movw	r30, r24
 346:	20 81       	ld	r18, Z
 348:	82 e2       	ldi	r24, 0x22	; 34
 34a:	90 e0       	ldi	r25, 0x00	; 0

0000034c <.Loc.58>:
 34c:	24 60       	ori	r18, 0x04	; 4
 34e:	fc 01       	movw	r30, r24
 350:	20 83       	st	Z, r18

00000352 <.Loc.59>:
}
 352:	00 00       	nop
 354:	df 91       	pop	r29
 356:	cf 91       	pop	r28
 358:	ff 91       	pop	r31
 35a:	ef 91       	pop	r30
 35c:	9f 91       	pop	r25
 35e:	8f 91       	pop	r24
 360:	2f 91       	pop	r18
 362:	0f 90       	pop	r0
 364:	0b be       	out	0x3b, r0	; 59
 366:	0f 90       	pop	r0
 368:	0f be       	out	0x3f, r0	; 63
 36a:	0f 90       	pop	r0
 36c:	1f 90       	pop	r1
 36e:	18 95       	reti

00000370 <main>:

int main(void)
{
 370:	cf 93       	push	r28
 372:	df 93       	push	r29
 374:	0f 92       	push	r0
 376:	0f 92       	push	r0
 378:	cd b7       	in	r28, 0x3d	; 61
 37a:	de b7       	in	r29, 0x3e	; 62

0000037c <.Loc.61>:
    initding();
 37c:	0e 94 80 00 	call	0x100	; 0x100 <initding>

00000380 <.Loc.62>:
    sei();
 380:	78 94       	sei

00000382 <.Loc.63>:
    int getal = 0;
 382:	1a 82       	std	Y+2, r1	; 0x02
 384:	19 82       	std	Y+1, r1	; 0x01

00000386 <.L22>:
        PORT &= ~(1 << PIN21);
*/

    while(1)
    {
        switch(getal)
 386:	89 81       	ldd	r24, Y+1	; 0x01
 388:	9a 81       	ldd	r25, Y+2	; 0x02
 38a:	84 30       	cpi	r24, 0x04	; 4
 38c:	91 05       	cpc	r25, r1
 38e:	09 f4       	brne	.+2      	; 0x392 <L0^A+0x2>

00000390 <L0^A>:
 390:	03 c1       	rjmp	.+518    	; 0x598 <.L7>
 392:	89 81       	ldd	r24, Y+1	; 0x01
 394:	9a 81       	ldd	r25, Y+2	; 0x02
 396:	84 30       	cpi	r24, 0x04	; 4
 398:	91 05       	cpc	r25, r1
 39a:	09 f0       	breq	.+2      	; 0x39e <L0^A+0x2>

0000039c <L0^A>:
 39c:	a4 f7       	brge	.-24     	; 0x386 <.L22>
 39e:	89 81       	ldd	r24, Y+1	; 0x01
 3a0:	9a 81       	ldd	r25, Y+2	; 0x02
 3a2:	83 30       	cpi	r24, 0x03	; 3
 3a4:	91 05       	cpc	r25, r1
 3a6:	09 f4       	brne	.+2      	; 0x3aa <.Lname158+0x1>

000003a8 <L0^A>:
 3a8:	c2 c0       	rjmp	.+388    	; 0x52e <.L9>
 3aa:	89 81       	ldd	r24, Y+1	; 0x01
 3ac:	9a 81       	ldd	r25, Y+2	; 0x02
 3ae:	83 30       	cpi	r24, 0x03	; 3
 3b0:	91 05       	cpc	r25, r1
 3b2:	09 f0       	breq	.+2      	; 0x3b6 <.Lname160+0x1>

000003b4 <L0^A>:
 3b4:	44 f7       	brge	.-48     	; 0x386 <.L22>
 3b6:	89 81       	ldd	r24, Y+1	; 0x01
 3b8:	9a 81       	ldd	r25, Y+2	; 0x02
 3ba:	82 30       	cpi	r24, 0x02	; 2
 3bc:	91 05       	cpc	r25, r1
 3be:	09 f4       	brne	.+2      	; 0x3c2 <L0^A+0x2>

000003c0 <L0^A>:
 3c0:	84 c0       	rjmp	.+264    	; 0x4ca <.L10>
 3c2:	89 81       	ldd	r24, Y+1	; 0x01
 3c4:	9a 81       	ldd	r25, Y+2	; 0x02
 3c6:	82 30       	cpi	r24, 0x02	; 2
 3c8:	91 05       	cpc	r25, r1
 3ca:	09 f0       	breq	.+2      	; 0x3ce <.Lname164>

000003cc <L0^A>:
 3cc:	e4 f6       	brge	.-72     	; 0x386 <.L22>
 3ce:	89 81       	ldd	r24, Y+1	; 0x01
 3d0:	9a 81       	ldd	r25, Y+2	; 0x02
 3d2:	00 97       	sbiw	r24, 0x00	; 0
 3d4:	39 f0       	breq	.+14     	; 0x3e4 <.L11>
 3d6:	89 81       	ldd	r24, Y+1	; 0x01
 3d8:	9a 81       	ldd	r25, Y+2	; 0x02
 3da:	81 30       	cpi	r24, 0x01	; 1
 3dc:	91 05       	cpc	r25, r1
 3de:	09 f4       	brne	.+2      	; 0x3e2 <L0^A+0x2>

000003e0 <L0^A>:
 3e0:	42 c0       	rjmp	.+132    	; 0x466 <.L12>
 3e2:	d1 cf       	rjmp	.-94     	; 0x386 <.L22>

000003e4 <.L11>:
        {
        case 0://begin state
            h_bridgeR_set_percentage(80);
 3e4:	80 e5       	ldi	r24, 0x50	; 80
 3e6:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <h_bridgeR_set_percentage>

000003ea <.Loc.66>:
            h_bridgeL_set_percentage(80);
 3ea:	80 e5       	ldi	r24, 0x50	; 80
 3ec:	0e 94 30 03 	call	0x660	; 0x660 <h_bridgeL_set_percentage>

000003f0 <.Loc.67>:
            PORT |= (1 << PIN11);
 3f0:	82 e2       	ldi	r24, 0x22	; 34
 3f2:	90 e0       	ldi	r25, 0x00	; 0
 3f4:	fc 01       	movw	r30, r24
 3f6:	20 81       	ld	r18, Z
 3f8:	82 e2       	ldi	r24, 0x22	; 34
 3fa:	90 e0       	ldi	r25, 0x00	; 0

000003fc <.Loc.68>:
 3fc:	20 64       	ori	r18, 0x40	; 64
 3fe:	fc 01       	movw	r30, r24
 400:	20 83       	st	Z, r18

00000402 <.Loc.69>:
            PORT &= ~(1 << PIN12);
 402:	82 e2       	ldi	r24, 0x22	; 34
 404:	90 e0       	ldi	r25, 0x00	; 0
 406:	fc 01       	movw	r30, r24
 408:	20 81       	ld	r18, Z

0000040a <.Loc.70>:
 40a:	82 e2       	ldi	r24, 0x22	; 34
 40c:	90 e0       	ldi	r25, 0x00	; 0

0000040e <.Loc.71>:
 40e:	2f 7d       	andi	r18, 0xDF	; 223
 410:	fc 01       	movw	r30, r24
 412:	20 83       	st	Z, r18

00000414 <.Loc.72>:
            PORT &= ~(1 << PIN21);
 414:	82 e2       	ldi	r24, 0x22	; 34
 416:	90 e0       	ldi	r25, 0x00	; 0
 418:	fc 01       	movw	r30, r24
 41a:	20 81       	ld	r18, Z

0000041c <.Loc.73>:
 41c:	82 e2       	ldi	r24, 0x22	; 34
 41e:	90 e0       	ldi	r25, 0x00	; 0

00000420 <.Loc.74>:
 420:	2f 7e       	andi	r18, 0xEF	; 239
 422:	fc 01       	movw	r30, r24
 424:	20 83       	st	Z, r18

00000426 <.Loc.75>:
            PORT |= (1 << PIN22);
 426:	82 e2       	ldi	r24, 0x22	; 34
 428:	90 e0       	ldi	r25, 0x00	; 0
 42a:	fc 01       	movw	r30, r24
 42c:	20 81       	ld	r18, Z
 42e:	82 e2       	ldi	r24, 0x22	; 34
 430:	90 e0       	ldi	r25, 0x00	; 0

00000432 <.Loc.76>:
 432:	28 60       	ori	r18, 0x08	; 8
 434:	fc 01       	movw	r30, r24
 436:	20 83       	st	Z, r18

00000438 <.Loc.77>:
            if(((PINB & (1 << PB7)) == 0) && ((PINB & (1 << PB6)) == 0))
 438:	83 e2       	ldi	r24, 0x23	; 35
 43a:	90 e0       	ldi	r25, 0x00	; 0
 43c:	fc 01       	movw	r30, r24
 43e:	80 81       	ld	r24, Z

00000440 <.Loc.78>:
 440:	88 23       	and	r24, r24
 442:	0c f4       	brge	.+2      	; 0x446 <.Loc.79>

00000444 <L0^A>:
 444:	c4 c0       	rjmp	.+392    	; 0x5ce <.L23>

00000446 <.Loc.79>:
 446:	83 e2       	ldi	r24, 0x23	; 35
 448:	90 e0       	ldi	r25, 0x00	; 0
 44a:	fc 01       	movw	r30, r24
 44c:	80 81       	ld	r24, Z

0000044e <.Loc.80>:
 44e:	88 2f       	mov	r24, r24
 450:	90 e0       	ldi	r25, 0x00	; 0
 452:	80 74       	andi	r24, 0x40	; 64
 454:	99 27       	eor	r25, r25

00000456 <.Loc.81>:
 456:	00 97       	sbiw	r24, 0x00	; 0
 458:	09 f0       	breq	.+2      	; 0x45c <.Loc.82>

0000045a <L0^A>:
 45a:	b9 c0       	rjmp	.+370    	; 0x5ce <.L23>

0000045c <.Loc.82>:
            {
                getal = 3;
 45c:	83 e0       	ldi	r24, 0x03	; 3
 45e:	90 e0       	ldi	r25, 0x00	; 0
 460:	9a 83       	std	Y+2, r25	; 0x02
 462:	89 83       	std	Y+1, r24	; 0x01

00000464 <.Loc.83>:

            }
            break;
 464:	b4 c0       	rjmp	.+360    	; 0x5ce <.L23>

00000466 <.L12>:
        case 1://naar links(te dichtbij rechts)
            //Motoren naar links
            h_bridgeR_set_percentage(75);
 466:	8b e4       	ldi	r24, 0x4B	; 75
 468:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <h_bridgeR_set_percentage>

0000046c <.Loc.85>:
            h_bridgeL_set_percentage(85);
 46c:	85 e5       	ldi	r24, 0x55	; 85
 46e:	0e 94 30 03 	call	0x660	; 0x660 <h_bridgeL_set_percentage>

00000472 <.Loc.86>:
            if(((PINB & (1 << PB7)) == 0) && ((PINB & (1 << PB6)) == 0))
 472:	83 e2       	ldi	r24, 0x23	; 35
 474:	90 e0       	ldi	r25, 0x00	; 0
 476:	fc 01       	movw	r30, r24
 478:	80 81       	ld	r24, Z

0000047a <.Loc.87>:
 47a:	88 23       	and	r24, r24
 47c:	7c f0       	brlt	.+30     	; 0x49c <.L14>

0000047e <.Loc.88>:
 47e:	83 e2       	ldi	r24, 0x23	; 35
 480:	90 e0       	ldi	r25, 0x00	; 0
 482:	fc 01       	movw	r30, r24
 484:	80 81       	ld	r24, Z

00000486 <.Loc.89>:
 486:	88 2f       	mov	r24, r24
 488:	90 e0       	ldi	r25, 0x00	; 0
 48a:	80 74       	andi	r24, 0x40	; 64
 48c:	99 27       	eor	r25, r25

0000048e <.Loc.90>:
 48e:	00 97       	sbiw	r24, 0x00	; 0
 490:	29 f4       	brne	.+10     	; 0x49c <.L14>

00000492 <.Loc.91>:
            {
                getal = 3;
 492:	83 e0       	ldi	r24, 0x03	; 3
 494:	90 e0       	ldi	r25, 0x00	; 0
 496:	9a 83       	std	Y+2, r25	; 0x02
 498:	89 83       	std	Y+1, r24	; 0x01

0000049a <.Loc.92>:
            }
            else if((PINB & (1 << PB7)) && (PINB & (1 << PB6)))
            {
                getal = 4;
            }
            break;
 49a:	9b c0       	rjmp	.+310    	; 0x5d2 <.L24>

0000049c <.L14>:
            else if((PINB & (1 << PB7)) && (PINB & (1 << PB6)))
 49c:	83 e2       	ldi	r24, 0x23	; 35
 49e:	90 e0       	ldi	r25, 0x00	; 0
 4a0:	fc 01       	movw	r30, r24
 4a2:	80 81       	ld	r24, Z

000004a4 <.Loc.94>:
 4a4:	88 23       	and	r24, r24
 4a6:	0c f0       	brlt	.+2      	; 0x4aa <.Loc.95>

000004a8 <L0^A>:
 4a8:	94 c0       	rjmp	.+296    	; 0x5d2 <.L24>

000004aa <.Loc.95>:
 4aa:	83 e2       	ldi	r24, 0x23	; 35
 4ac:	90 e0       	ldi	r25, 0x00	; 0
 4ae:	fc 01       	movw	r30, r24
 4b0:	80 81       	ld	r24, Z

000004b2 <.Loc.96>:
 4b2:	88 2f       	mov	r24, r24
 4b4:	90 e0       	ldi	r25, 0x00	; 0
 4b6:	80 74       	andi	r24, 0x40	; 64
 4b8:	99 27       	eor	r25, r25

000004ba <.Loc.97>:
 4ba:	00 97       	sbiw	r24, 0x00	; 0
 4bc:	09 f4       	brne	.+2      	; 0x4c0 <.Loc.98>

000004be <L0^A>:
 4be:	89 c0       	rjmp	.+274    	; 0x5d2 <.L24>

000004c0 <.Loc.98>:
                getal = 4;
 4c0:	84 e0       	ldi	r24, 0x04	; 4
 4c2:	90 e0       	ldi	r25, 0x00	; 0
 4c4:	9a 83       	std	Y+2, r25	; 0x02
 4c6:	89 83       	std	Y+1, r24	; 0x01

000004c8 <.Loc.99>:
            break;
 4c8:	84 c0       	rjmp	.+264    	; 0x5d2 <.L24>

000004ca <.L10>:
        case 2://naar rechts(te dichtbij links)
            //Motoren naar rechts
            h_bridgeR_set_percentage(85);
 4ca:	85 e5       	ldi	r24, 0x55	; 85
 4cc:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <h_bridgeR_set_percentage>

000004d0 <.Loc.101>:
            h_bridgeL_set_percentage(75);
 4d0:	8b e4       	ldi	r24, 0x4B	; 75
 4d2:	0e 94 30 03 	call	0x660	; 0x660 <h_bridgeL_set_percentage>

000004d6 <.Loc.102>:
            if(((PINB & (1 << PB7)) == 0) && ((PINB & (1 << PB6)) == 0))
 4d6:	83 e2       	ldi	r24, 0x23	; 35
 4d8:	90 e0       	ldi	r25, 0x00	; 0
 4da:	fc 01       	movw	r30, r24
 4dc:	80 81       	ld	r24, Z

000004de <.Loc.103>:
 4de:	88 23       	and	r24, r24
 4e0:	7c f0       	brlt	.+30     	; 0x500 <.L16>

000004e2 <.Loc.104>:
 4e2:	83 e2       	ldi	r24, 0x23	; 35
 4e4:	90 e0       	ldi	r25, 0x00	; 0
 4e6:	fc 01       	movw	r30, r24
 4e8:	80 81       	ld	r24, Z

000004ea <.Loc.105>:
 4ea:	88 2f       	mov	r24, r24
 4ec:	90 e0       	ldi	r25, 0x00	; 0
 4ee:	80 74       	andi	r24, 0x40	; 64
 4f0:	99 27       	eor	r25, r25

000004f2 <.Loc.106>:
 4f2:	00 97       	sbiw	r24, 0x00	; 0
 4f4:	29 f4       	brne	.+10     	; 0x500 <.L16>

000004f6 <.Loc.107>:
            {
                getal = 3;
 4f6:	83 e0       	ldi	r24, 0x03	; 3
 4f8:	90 e0       	ldi	r25, 0x00	; 0
 4fa:	9a 83       	std	Y+2, r25	; 0x02
 4fc:	89 83       	std	Y+1, r24	; 0x01

000004fe <.Loc.108>:
            }
            else if((PINB & (1 << PB7)) && (PINB & (1 << PB6)))
            {
                getal = 4;
            }
            break;
 4fe:	6b c0       	rjmp	.+214    	; 0x5d6 <.L25>

00000500 <.L16>:
            else if((PINB & (1 << PB7)) && (PINB & (1 << PB6)))
 500:	83 e2       	ldi	r24, 0x23	; 35
 502:	90 e0       	ldi	r25, 0x00	; 0
 504:	fc 01       	movw	r30, r24
 506:	80 81       	ld	r24, Z

00000508 <.Loc.110>:
 508:	88 23       	and	r24, r24
 50a:	0c f0       	brlt	.+2      	; 0x50e <.Loc.111>

0000050c <L0^A>:
 50c:	64 c0       	rjmp	.+200    	; 0x5d6 <.L25>

0000050e <.Loc.111>:
 50e:	83 e2       	ldi	r24, 0x23	; 35
 510:	90 e0       	ldi	r25, 0x00	; 0
 512:	fc 01       	movw	r30, r24
 514:	80 81       	ld	r24, Z

00000516 <.Loc.112>:
 516:	88 2f       	mov	r24, r24
 518:	90 e0       	ldi	r25, 0x00	; 0
 51a:	80 74       	andi	r24, 0x40	; 64
 51c:	99 27       	eor	r25, r25

0000051e <.Loc.113>:
 51e:	00 97       	sbiw	r24, 0x00	; 0
 520:	09 f4       	brne	.+2      	; 0x524 <.Loc.114>

00000522 <L0^A>:
 522:	59 c0       	rjmp	.+178    	; 0x5d6 <.L25>

00000524 <.Loc.114>:
                getal = 4;
 524:	84 e0       	ldi	r24, 0x04	; 4
 526:	90 e0       	ldi	r25, 0x00	; 0
 528:	9a 83       	std	Y+2, r25	; 0x02
 52a:	89 83       	std	Y+1, r24	; 0x01

0000052c <.Loc.115>:
            break;
 52c:	54 c0       	rjmp	.+168    	; 0x5d6 <.L25>

0000052e <.L9>:
        case 3://rechtdoor
            //Motoren naar rechtdoor
            h_bridgeR_set_percentage(80);
 52e:	80 e5       	ldi	r24, 0x50	; 80
 530:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <h_bridgeR_set_percentage>

00000534 <.Loc.117>:
            h_bridgeL_set_percentage(80);
 534:	80 e5       	ldi	r24, 0x50	; 80
 536:	0e 94 30 03 	call	0x660	; 0x660 <h_bridgeL_set_percentage>

0000053a <.Loc.118>:
            if(PINB & (1 << PB7))
 53a:	83 e2       	ldi	r24, 0x23	; 35
 53c:	90 e0       	ldi	r25, 0x00	; 0
 53e:	fc 01       	movw	r30, r24
 540:	80 81       	ld	r24, Z

00000542 <.Loc.119>:
 542:	88 23       	and	r24, r24
 544:	2c f4       	brge	.+10     	; 0x550 <.L18>

00000546 <.Loc.120>:
            {
                getal = 1;
 546:	81 e0       	ldi	r24, 0x01	; 1
 548:	90 e0       	ldi	r25, 0x00	; 0
 54a:	9a 83       	std	Y+2, r25	; 0x02
 54c:	89 83       	std	Y+1, r24	; 0x01

0000054e <.Loc.121>:
            }
            else if((PINB & (1 << PB7)) && (PINB & (1 << PB6)))
            {
                getal = 4;
            }
            break;
 54e:	45 c0       	rjmp	.+138    	; 0x5da <.L26>

00000550 <.L18>:
            else if(PINB & (1 << PB6))
 550:	83 e2       	ldi	r24, 0x23	; 35
 552:	90 e0       	ldi	r25, 0x00	; 0
 554:	fc 01       	movw	r30, r24
 556:	80 81       	ld	r24, Z

00000558 <.Loc.123>:
 558:	88 2f       	mov	r24, r24
 55a:	90 e0       	ldi	r25, 0x00	; 0
 55c:	80 74       	andi	r24, 0x40	; 64
 55e:	99 27       	eor	r25, r25

00000560 <.Loc.124>:
 560:	00 97       	sbiw	r24, 0x00	; 0
 562:	29 f0       	breq	.+10     	; 0x56e <.L20>

00000564 <.Loc.125>:
                getal = 2;
 564:	82 e0       	ldi	r24, 0x02	; 2
 566:	90 e0       	ldi	r25, 0x00	; 0
 568:	9a 83       	std	Y+2, r25	; 0x02
 56a:	89 83       	std	Y+1, r24	; 0x01

0000056c <.Loc.126>:
            break;
 56c:	36 c0       	rjmp	.+108    	; 0x5da <.L26>

0000056e <.L20>:
            else if((PINB & (1 << PB7)) && (PINB & (1 << PB6)))
 56e:	83 e2       	ldi	r24, 0x23	; 35
 570:	90 e0       	ldi	r25, 0x00	; 0
 572:	fc 01       	movw	r30, r24
 574:	80 81       	ld	r24, Z

00000576 <.Loc.128>:
 576:	88 23       	and	r24, r24
 578:	84 f5       	brge	.+96     	; 0x5da <.L26>

0000057a <.Loc.129>:
 57a:	83 e2       	ldi	r24, 0x23	; 35
 57c:	90 e0       	ldi	r25, 0x00	; 0
 57e:	fc 01       	movw	r30, r24
 580:	80 81       	ld	r24, Z

00000582 <.Loc.130>:
 582:	88 2f       	mov	r24, r24
 584:	90 e0       	ldi	r25, 0x00	; 0
 586:	80 74       	andi	r24, 0x40	; 64
 588:	99 27       	eor	r25, r25

0000058a <.Loc.131>:
 58a:	00 97       	sbiw	r24, 0x00	; 0
 58c:	31 f1       	breq	.+76     	; 0x5da <.L26>

0000058e <.Loc.132>:
                getal = 4;
 58e:	84 e0       	ldi	r24, 0x04	; 4
 590:	90 e0       	ldi	r25, 0x00	; 0
 592:	9a 83       	std	Y+2, r25	; 0x02
 594:	89 83       	std	Y+1, r24	; 0x01

00000596 <.Loc.133>:
            break;
 596:	21 c0       	rjmp	.+66     	; 0x5da <.L26>

00000598 <.L7>:
        case 4://Rijstrook wisselen naar links
            //Motoren naar rechtdoor
            h_bridgeR_set_percentage(85);
 598:	85 e5       	ldi	r24, 0x55	; 85
 59a:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <h_bridgeR_set_percentage>

0000059e <.Loc.135>:
            h_bridgeL_set_percentage(72);
 59e:	88 e4       	ldi	r24, 0x48	; 72
 5a0:	0e 94 30 03 	call	0x660	; 0x660 <h_bridgeL_set_percentage>

000005a4 <.Loc.136>:
            if(((PINB & (1 << PB6)) == 0) && ((PINB & (1 << PB7)) == 0))
 5a4:	83 e2       	ldi	r24, 0x23	; 35
 5a6:	90 e0       	ldi	r25, 0x00	; 0
 5a8:	fc 01       	movw	r30, r24
 5aa:	80 81       	ld	r24, Z

000005ac <.Loc.137>:
 5ac:	88 2f       	mov	r24, r24
 5ae:	90 e0       	ldi	r25, 0x00	; 0
 5b0:	80 74       	andi	r24, 0x40	; 64
 5b2:	99 27       	eor	r25, r25

000005b4 <.Loc.138>:
 5b4:	00 97       	sbiw	r24, 0x00	; 0
 5b6:	99 f4       	brne	.+38     	; 0x5de <.L27>

000005b8 <.Loc.139>:
 5b8:	83 e2       	ldi	r24, 0x23	; 35
 5ba:	90 e0       	ldi	r25, 0x00	; 0
 5bc:	fc 01       	movw	r30, r24
 5be:	80 81       	ld	r24, Z

000005c0 <.Loc.140>:
 5c0:	88 23       	and	r24, r24
 5c2:	6c f0       	brlt	.+26     	; 0x5de <.L27>

000005c4 <.Loc.141>:
            {
                getal = 3;
 5c4:	83 e0       	ldi	r24, 0x03	; 3
 5c6:	90 e0       	ldi	r25, 0x00	; 0
 5c8:	9a 83       	std	Y+2, r25	; 0x02
 5ca:	89 83       	std	Y+1, r24	; 0x01

000005cc <.Loc.142>:
            }
            break;
 5cc:	08 c0       	rjmp	.+16     	; 0x5de <.L27>

000005ce <.L23>:
            break;
 5ce:	00 00       	nop
 5d0:	da ce       	rjmp	.-588    	; 0x386 <.L22>

000005d2 <.L24>:
            break;
 5d2:	00 00       	nop
 5d4:	d8 ce       	rjmp	.-592    	; 0x386 <.L22>

000005d6 <.L25>:
            break;
 5d6:	00 00       	nop
 5d8:	d6 ce       	rjmp	.-596    	; 0x386 <.L22>

000005da <.L26>:
            break;
 5da:	00 00       	nop
 5dc:	d4 ce       	rjmp	.-600    	; 0x386 <.L22>

000005de <.L27>:
	...

000005e0 <.Loc.148>:
        switch(getal)
 5e0:	d2 ce       	rjmp	.-604    	; 0x386 <.L22>

000005e2 <h_bridgeR_set_percentage>:

    return 0;
}

void h_bridgeR_set_percentage(signed char percentage)
{
 5e2:	0f 93       	push	r16
 5e4:	1f 93       	push	r17
 5e6:	cf 93       	push	r28
 5e8:	df 93       	push	r29
 5ea:	00 d0       	rcall	.+0      	; 0x5ec <L0^A>

000005ec <L0^A>:
 5ec:	0f 92       	push	r0
 5ee:	0f 92       	push	r0
 5f0:	cd b7       	in	r28, 0x3d	; 61
 5f2:	de b7       	in	r29, 0x3e	; 62
 5f4:	89 83       	std	Y+1, r24	; 0x01

000005f6 <.Loc.150>:
	if (percentage >= 0 && percentage <= 100)
 5f6:	89 81       	ldd	r24, Y+1	; 0x01
 5f8:	88 23       	and	r24, r24
 5fa:	3c f1       	brlt	.+78     	; 0x64a <.L30>

000005fc <.Loc.151>:
 5fc:	89 81       	ldd	r24, Y+1	; 0x01
 5fe:	84 36       	cpi	r24, 0x64	; 100
 600:	09 f0       	breq	.+2      	; 0x604 <.Loc.152>

00000602 <L0^A>:
 602:	1c f5       	brge	.+70     	; 0x64a <.L30>

00000604 <.Loc.152>:
	{
			OCR1A = (65536*percentage)/100;
 604:	89 81       	ldd	r24, Y+1	; 0x01
 606:	08 2e       	mov	r0, r24
 608:	00 0c       	add	r0, r0
 60a:	99 0b       	sbc	r25, r25
 60c:	aa 0b       	sbc	r26, r26
 60e:	bb 0b       	sbc	r27, r27
 610:	ac 01       	movw	r20, r24
 612:	33 27       	eor	r19, r19
 614:	22 27       	eor	r18, r18
 616:	2a 83       	std	Y+2, r18	; 0x02
 618:	3b 83       	std	Y+3, r19	; 0x03
 61a:	4c 83       	std	Y+4, r20	; 0x04
 61c:	5d 83       	std	Y+5, r21	; 0x05

0000061e <.Loc.153>:
 61e:	04 e6       	ldi	r16, 0x64	; 100
 620:	10 e0       	ldi	r17, 0x00	; 0
 622:	20 e0       	ldi	r18, 0x00	; 0
 624:	30 e0       	ldi	r19, 0x00	; 0
 626:	6a 81       	ldd	r22, Y+2	; 0x02
 628:	7b 81       	ldd	r23, Y+3	; 0x03
 62a:	8c 81       	ldd	r24, Y+4	; 0x04
 62c:	9d 81       	ldd	r25, Y+5	; 0x05
 62e:	a9 01       	movw	r20, r18
 630:	98 01       	movw	r18, r16
 632:	0e 94 6f 03 	call	0x6de	; 0x6de <__divmodsi4>
 636:	da 01       	movw	r26, r20
 638:	c9 01       	movw	r24, r18
 63a:	ac 01       	movw	r20, r24
 63c:	bd 01       	movw	r22, r26

0000063e <.Loc.154>:
 63e:	88 e8       	ldi	r24, 0x88	; 136
 640:	90 e0       	ldi	r25, 0x00	; 0

00000642 <.Loc.155>:
 642:	9a 01       	movw	r18, r20
 644:	fc 01       	movw	r30, r24
 646:	31 83       	std	Z+1, r19	; 0x01
 648:	20 83       	st	Z, r18

0000064a <.L30>:
	}
}
 64a:	00 00       	nop
 64c:	0f 90       	pop	r0
 64e:	0f 90       	pop	r0
 650:	0f 90       	pop	r0
 652:	0f 90       	pop	r0
 654:	0f 90       	pop	r0
 656:	df 91       	pop	r29
 658:	cf 91       	pop	r28
 65a:	1f 91       	pop	r17
 65c:	0f 91       	pop	r16
 65e:	08 95       	ret

00000660 <h_bridgeL_set_percentage>:

void h_bridgeL_set_percentage(signed char percentage)
{
 660:	0f 93       	push	r16
 662:	1f 93       	push	r17
 664:	cf 93       	push	r28
 666:	df 93       	push	r29
 668:	00 d0       	rcall	.+0      	; 0x66a <L0^A>

0000066a <L0^A>:
 66a:	0f 92       	push	r0
 66c:	0f 92       	push	r0
 66e:	cd b7       	in	r28, 0x3d	; 61
 670:	de b7       	in	r29, 0x3e	; 62
 672:	89 83       	std	Y+1, r24	; 0x01

00000674 <.Loc.158>:
	if (percentage >= 0 && percentage <= 100)
 674:	89 81       	ldd	r24, Y+1	; 0x01
 676:	88 23       	and	r24, r24
 678:	3c f1       	brlt	.+78     	; 0x6c8 <.L33>

0000067a <.Loc.159>:
 67a:	89 81       	ldd	r24, Y+1	; 0x01
 67c:	84 36       	cpi	r24, 0x64	; 100
 67e:	09 f0       	breq	.+2      	; 0x682 <.Loc.160>

00000680 <L0^A>:
 680:	1c f5       	brge	.+70     	; 0x6c8 <.L33>

00000682 <.Loc.160>:
	{
			OCR3A = (65536*percentage)/100;
 682:	89 81       	ldd	r24, Y+1	; 0x01
 684:	08 2e       	mov	r0, r24
 686:	00 0c       	add	r0, r0
 688:	99 0b       	sbc	r25, r25
 68a:	aa 0b       	sbc	r26, r26
 68c:	bb 0b       	sbc	r27, r27
 68e:	ac 01       	movw	r20, r24
 690:	33 27       	eor	r19, r19
 692:	22 27       	eor	r18, r18
 694:	2a 83       	std	Y+2, r18	; 0x02
 696:	3b 83       	std	Y+3, r19	; 0x03
 698:	4c 83       	std	Y+4, r20	; 0x04
 69a:	5d 83       	std	Y+5, r21	; 0x05

0000069c <.Loc.161>:
 69c:	04 e6       	ldi	r16, 0x64	; 100
 69e:	10 e0       	ldi	r17, 0x00	; 0
 6a0:	20 e0       	ldi	r18, 0x00	; 0
 6a2:	30 e0       	ldi	r19, 0x00	; 0
 6a4:	6a 81       	ldd	r22, Y+2	; 0x02
 6a6:	7b 81       	ldd	r23, Y+3	; 0x03
 6a8:	8c 81       	ldd	r24, Y+4	; 0x04
 6aa:	9d 81       	ldd	r25, Y+5	; 0x05
 6ac:	a9 01       	movw	r20, r18
 6ae:	98 01       	movw	r18, r16
 6b0:	0e 94 6f 03 	call	0x6de	; 0x6de <__divmodsi4>
 6b4:	da 01       	movw	r26, r20
 6b6:	c9 01       	movw	r24, r18
 6b8:	ac 01       	movw	r20, r24
 6ba:	bd 01       	movw	r22, r26

000006bc <.Loc.162>:
 6bc:	88 e9       	ldi	r24, 0x98	; 152
 6be:	90 e0       	ldi	r25, 0x00	; 0

000006c0 <.Loc.163>:
 6c0:	9a 01       	movw	r18, r20
 6c2:	fc 01       	movw	r30, r24
 6c4:	31 83       	std	Z+1, r19	; 0x01
 6c6:	20 83       	st	Z, r18

000006c8 <.L33>:
	}
}
 6c8:	00 00       	nop
 6ca:	0f 90       	pop	r0
 6cc:	0f 90       	pop	r0
 6ce:	0f 90       	pop	r0
 6d0:	0f 90       	pop	r0
 6d2:	0f 90       	pop	r0
 6d4:	df 91       	pop	r29
 6d6:	cf 91       	pop	r28
 6d8:	1f 91       	pop	r17
 6da:	0f 91       	pop	r16
 6dc:	08 95       	ret

000006de <__divmodsi4>:
 6de:	05 2e       	mov	r0, r21

000006e0 <.Loc.1>:
 6e0:	97 fb       	bst	r25, 7

000006e2 <.Loc.2>:
 6e2:	1e f4       	brtc	.+6      	; 0x6ea <.L^B1>

000006e4 <.Loc.3>:
 6e4:	00 94       	com	r0

000006e6 <.Loc.4>:
 6e6:	0e 94 86 03 	call	0x70c	; 0x70c <__negsi2>

000006ea <.L^B1>:
 6ea:	57 fd       	sbrc	r21, 7

000006ec <.Loc.6>:
 6ec:	07 d0       	rcall	.+14     	; 0x6fc <__divmodsi4_neg2>

000006ee <.Loc.7>:
 6ee:	0e 94 8e 03 	call	0x71c	; 0x71c <__udivmodsi4>

000006f2 <.Loc.8>:
 6f2:	07 fc       	sbrc	r0, 7

000006f4 <.Loc.9>:
 6f4:	03 d0       	rcall	.+6      	; 0x6fc <__divmodsi4_neg2>

000006f6 <.Loc.10>:
 6f6:	4e f4       	brtc	.+18     	; 0x70a <__divmodsi4_exit>

000006f8 <.Loc.11>:
 6f8:	0c 94 86 03 	jmp	0x70c	; 0x70c <__negsi2>

000006fc <__divmodsi4_neg2>:
 6fc:	50 95       	com	r21

000006fe <.Loc.13>:
 6fe:	40 95       	com	r20

00000700 <.Loc.14>:
 700:	30 95       	com	r19

00000702 <.Loc.15>:
 702:	21 95       	neg	r18

00000704 <.Loc.16>:
 704:	3f 4f       	sbci	r19, 0xFF	; 255

00000706 <.Loc.17>:
 706:	4f 4f       	sbci	r20, 0xFF	; 255

00000708 <.Loc.18>:
 708:	5f 4f       	sbci	r21, 0xFF	; 255

0000070a <__divmodsi4_exit>:
 70a:	08 95       	ret

0000070c <__negsi2>:
 70c:	90 95       	com	r25
 70e:	80 95       	com	r24
 710:	70 95       	com	r23
 712:	61 95       	neg	r22
 714:	7f 4f       	sbci	r23, 0xFF	; 255
 716:	8f 4f       	sbci	r24, 0xFF	; 255
 718:	9f 4f       	sbci	r25, 0xFF	; 255

0000071a <.Loc.1>:
 71a:	08 95       	ret

0000071c <__udivmodsi4>:
 71c:	a1 e2       	ldi	r26, 0x21	; 33

0000071e <.Loc.1>:
 71e:	1a 2e       	mov	r1, r26

00000720 <.Loc.2>:
 720:	aa 1b       	sub	r26, r26

00000722 <.Loc.3>:
 722:	bb 1b       	sub	r27, r27

00000724 <.Loc.4>:
 724:	fd 01       	movw	r30, r26

00000726 <.Loc.5>:
 726:	0d c0       	rjmp	.+26     	; 0x742 <__udivmodsi4_ep>

00000728 <__udivmodsi4_loop>:
 728:	aa 1f       	adc	r26, r26

0000072a <.Loc.7>:
 72a:	bb 1f       	adc	r27, r27

0000072c <.Loc.8>:
 72c:	ee 1f       	adc	r30, r30

0000072e <.Loc.9>:
 72e:	ff 1f       	adc	r31, r31

00000730 <.Loc.10>:
 730:	a2 17       	cp	r26, r18

00000732 <.Loc.11>:
 732:	b3 07       	cpc	r27, r19

00000734 <.Loc.12>:
 734:	e4 07       	cpc	r30, r20

00000736 <.Loc.13>:
 736:	f5 07       	cpc	r31, r21

00000738 <.Loc.14>:
 738:	20 f0       	brcs	.+8      	; 0x742 <__udivmodsi4_ep>

0000073a <.Loc.15>:
 73a:	a2 1b       	sub	r26, r18

0000073c <.Loc.16>:
 73c:	b3 0b       	sbc	r27, r19

0000073e <.Loc.17>:
 73e:	e4 0b       	sbc	r30, r20

00000740 <.Loc.18>:
 740:	f5 0b       	sbc	r31, r21

00000742 <__udivmodsi4_ep>:
 742:	66 1f       	adc	r22, r22

00000744 <.Loc.20>:
 744:	77 1f       	adc	r23, r23

00000746 <.Loc.21>:
 746:	88 1f       	adc	r24, r24

00000748 <.Loc.22>:
 748:	99 1f       	adc	r25, r25

0000074a <.Loc.23>:
 74a:	1a 94       	dec	r1

0000074c <.Loc.24>:
 74c:	69 f7       	brne	.-38     	; 0x728 <__udivmodsi4_loop>

0000074e <.Loc.25>:
 74e:	60 95       	com	r22

00000750 <.Loc.26>:
 750:	70 95       	com	r23

00000752 <.Loc.27>:
 752:	80 95       	com	r24

00000754 <.Loc.28>:
 754:	90 95       	com	r25

00000756 <.Loc.29>:
 756:	9b 01       	movw	r18, r22

00000758 <.Loc.30>:
 758:	ac 01       	movw	r20, r24

0000075a <.Loc.31>:
 75a:	bd 01       	movw	r22, r26

0000075c <.Loc.32>:
 75c:	cf 01       	movw	r24, r30

0000075e <.Loc.33>:
 75e:	08 95       	ret

00000760 <_exit>:
 760:	f8 94       	cli

00000762 <__stop_program>:
 762:	ff cf       	rjmp	.-2      	; 0x762 <__stop_program>
