
bin\Debug\Beetjecodemetapp.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  000017b6  0000186a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000017b6  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800200  00800200  0000186a  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  0000186a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      00000012  00000000  00000000  0000186d  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001880  2**2
                  CONTENTS, READONLY, OCTETS
  6 .debug_aranges 00000138  00000000  00000000  000018c0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_info   000013eb  00000000  00000000  000019f8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_abbrev 00000fe2  00000000  00000000  00002de3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line   000012df  00000000  00000000  00003dc5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_frame  00000328  00000000  00000000  000050a4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_str    00000678  00000000  00000000  000053cc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_line_str 0000017a  00000000  00000000  00005a44  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__ctors_end>
       4:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
       8:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
       c:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      10:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      14:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      18:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      1c:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      20:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      24:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      28:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      2c:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      30:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      34:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      38:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      3c:	0c 94 bb 05 	jmp	0xb76	; 0xb76 <__vector_15>
      40:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      44:	0c 94 0d 03 	jmp	0x61a	; 0x61a <__vector_17>
      48:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      4c:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      50:	0c 94 e2 02 	jmp	0x5c4	; 0x5c4 <__vector_20>
      54:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      58:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      5c:	0c 94 88 03 	jmp	0x710	; 0x710 <__vector_23>
      60:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      64:	0c 94 9c 00 	jmp	0x138	; 0x138 <__vector_25>
      68:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      6c:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      70:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      74:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      78:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      7c:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      80:	0c 94 60 03 	jmp	0x6c0	; 0x6c0 <__vector_32>
      84:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      88:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      8c:	0c 94 35 03 	jmp	0x66a	; 0x66a <__vector_35>
      90:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      94:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      98:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      9c:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      a0:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      a4:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      a8:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      ac:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      b0:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      b4:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      b8:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      bc:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      c0:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      c4:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      c8:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      cc:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      d0:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      d4:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      d8:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      dc:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      e0:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>

000000e4 <__trampolines_start>:
      e4:	0c 94 00 07 	jmp	0xe00	; 0xe00 <.L49>
      e8:	0c 94 ce 07 	jmp	0xf9c	; 0xf9c <.L46>
      ec:	0c 94 00 08 	jmp	0x1000	; 0x1000 <.L45>
      f0:	0c 94 f3 06 	jmp	0xde6	; 0xde6 <.L50>
      f4:	0c 94 c4 06 	jmp	0xd88	; 0xd88 <.L52>
      f8:	0c 94 aa 08 	jmp	0x1154	; 0x1154 <.L44>
      fc:	0c 94 e0 06 	jmp	0xdc0	; 0xdc0 <.L51>
     100:	0c 94 9c 07 	jmp	0xf38	; 0xf38 <.L47>
     104:	0c 94 b7 08 	jmp	0x116e	; 0x116e <.L42>
     108:	0c 94 41 07 	jmp	0xe82	; 0xe82 <.L48>

0000010c <__ctors_end>:
     10c:	11 24       	eor	r1, r1
     10e:	1f be       	out	0x3f, r1	; 63
     110:	cf ef       	ldi	r28, 0xFF	; 255
     112:	d1 e2       	ldi	r29, 0x21	; 33
     114:	de bf       	out	0x3e, r29	; 62
     116:	cd bf       	out	0x3d, r28	; 61
     118:	00 e0       	ldi	r16, 0x00	; 0
     11a:	0c bf       	out	0x3c, r16	; 60

0000011c <__do_clear_bss>:
     11c:	22 e0       	ldi	r18, 0x02	; 2

0000011e <.Loc.1>:
     11e:	a0 e0       	ldi	r26, 0x00	; 0

00000120 <.Loc.2>:
     120:	b2 e0       	ldi	r27, 0x02	; 2

00000122 <.Loc.3>:
     122:	01 c0       	rjmp	.+2      	; 0x126 <.Loc.5>

00000124 <.Loc.4>:
     124:	1d 92       	st	X+, r1

00000126 <.Loc.5>:
     126:	aa 30       	cpi	r26, 0x0A	; 10

00000128 <.Loc.6>:
     128:	b2 07       	cpc	r27, r18

0000012a <.Loc.7>:
     12a:	e1 f7       	brne	.-8      	; 0x124 <.Loc.4>

0000012c <L0^A>:
     12c:	0e 94 d9 05 	call	0xbb2	; 0xbb2 <main>
     130:	0c 94 cf 0b 	jmp	0x179e	; 0x179e <_exit>

00000134 <__bad_interrupt>:
     134:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000138 <__vector_25>:
int Bluetooth_Getal = 0;//BLUETOOTH GETAL
int verandergetal = 0;//ONNODIG
int veranderandergetal = 0;//ONNODIG

ISR(USART0_RX_vect)
{
     138:	1f 92       	push	r1
     13a:	0f 92       	push	r0
     13c:	0f b6       	in	r0, 0x3f	; 63
     13e:	0f 92       	push	r0
     140:	11 24       	eor	r1, r1
     142:	0b b6       	in	r0, 0x3b	; 59
     144:	0f 92       	push	r0
     146:	8f 93       	push	r24
     148:	9f 93       	push	r25
     14a:	ef 93       	push	r30
     14c:	ff 93       	push	r31
     14e:	cf 93       	push	r28
     150:	df 93       	push	r29
     152:	cd b7       	in	r28, 0x3d	; 61
     154:	de b7       	in	r29, 0x3e	; 62

00000156 <.Loc.1>:
    Bluetooth_Getal = UDR0;
     156:	86 ec       	ldi	r24, 0xC6	; 198
     158:	90 e0       	ldi	r25, 0x00	; 0
     15a:	fc 01       	movw	r30, r24
     15c:	80 81       	ld	r24, Z
     15e:	88 2f       	mov	r24, r24
     160:	90 e0       	ldi	r25, 0x00	; 0

00000162 <.Loc.2>:
     162:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <Bluetooth_Getal+0x1>
     166:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <Bluetooth_Getal>

0000016a <.Loc.3>:
    if (verandergetal == 0)//ONNODIG
     16a:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <verandergetal>
     16e:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <verandergetal+0x1>

00000172 <.Loc.4>:
     172:	00 97       	sbiw	r24, 0x00	; 0
     174:	51 f4       	brne	.+20     	; 0x18a <.L2>

00000176 <.Loc.5>:
    {//ONNODIG
        verandergetal++;//ONNODIG
     176:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <verandergetal>
     17a:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <verandergetal+0x1>
     17e:	01 96       	adiw	r24, 0x01	; 1
     180:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <verandergetal+0x1>
     184:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <verandergetal>

00000188 <.Loc.6>:
    }//ONNODIG
    else//ONNODIG
    {//ONNODIG
        verandergetal = 0;//ONNODIG
    }//ONNODIG
}
     188:	04 c0       	rjmp	.+8      	; 0x192 <.L4>

0000018a <.L2>:
        verandergetal = 0;//ONNODIG
     18a:	10 92 03 02 	sts	0x0203, r1	; 0x800203 <verandergetal+0x1>
     18e:	10 92 02 02 	sts	0x0202, r1	; 0x800202 <verandergetal>

00000192 <.L4>:
}
     192:	00 00       	nop
     194:	df 91       	pop	r29
     196:	cf 91       	pop	r28
     198:	ff 91       	pop	r31
     19a:	ef 91       	pop	r30
     19c:	9f 91       	pop	r25
     19e:	8f 91       	pop	r24
     1a0:	0f 90       	pop	r0
     1a2:	0b be       	out	0x3b, r0	; 59
     1a4:	0f 90       	pop	r0
     1a6:	0f be       	out	0x3f, r0	; 63
     1a8:	0f 90       	pop	r0
     1aa:	1f 90       	pop	r1
     1ac:	18 95       	reti

000001ae <initBluetooth>:

void initBluetooth(void)
{
     1ae:	cf 93       	push	r28
     1b0:	df 93       	push	r29
     1b2:	cd b7       	in	r28, 0x3d	; 61
     1b4:	de b7       	in	r29, 0x3e	; 62

000001b6 <.Loc.10>:
    //Bluetooth
    UBRR0H = (BRC >> 8);
     1b6:	85 ec       	ldi	r24, 0xC5	; 197
     1b8:	90 e0       	ldi	r25, 0x00	; 0

000001ba <.Loc.11>:
     1ba:	fc 01       	movw	r30, r24
     1bc:	10 82       	st	Z, r1

000001be <.Loc.12>:
    UBRR0L = BRC;
     1be:	84 ec       	ldi	r24, 0xC4	; 196
     1c0:	90 e0       	ldi	r25, 0x00	; 0

000001c2 <.Loc.13>:
     1c2:	27 e6       	ldi	r18, 0x67	; 103
     1c4:	fc 01       	movw	r30, r24
     1c6:	20 83       	st	Z, r18

000001c8 <.Loc.14>:

    UCSR0B = (1 << RXEN0) |(1 << RXCIE0) |(1 << TXEN0) | (1 << TXCIE0);
     1c8:	81 ec       	ldi	r24, 0xC1	; 193
     1ca:	90 e0       	ldi	r25, 0x00	; 0

000001cc <.Loc.15>:
     1cc:	28 ed       	ldi	r18, 0xD8	; 216
     1ce:	fc 01       	movw	r30, r24
     1d0:	20 83       	st	Z, r18

000001d2 <.Loc.16>:
    UCSR0C = (1 << UCSZ01) | (1 << UCSZ00);
     1d2:	82 ec       	ldi	r24, 0xC2	; 194
     1d4:	90 e0       	ldi	r25, 0x00	; 0

000001d6 <.Loc.17>:
     1d6:	26 e0       	ldi	r18, 0x06	; 6
     1d8:	fc 01       	movw	r30, r24
     1da:	20 83       	st	Z, r18

000001dc <.Loc.18>:

    sei();
     1dc:	78 94       	sei

000001de <.Loc.19>:
}
     1de:	00 00       	nop
     1e0:	df 91       	pop	r29
     1e2:	cf 91       	pop	r28
     1e4:	08 95       	ret

000001e6 <signaal_geven>:
#include "Library.h"

volatile int timerteller = 0;

void signaal_geven()
{
     1e6:	cf 93       	push	r28
     1e8:	df 93       	push	r29
     1ea:	cd b7       	in	r28, 0x3d	; 61
     1ec:	de b7       	in	r29, 0x3e	; 62
     1ee:	c4 54       	subi	r28, 0x44	; 68
     1f0:	d1 09       	sbc	r29, r1
     1f2:	0f b6       	in	r0, 0x3f	; 63
     1f4:	f8 94       	cli
     1f6:	de bf       	out	0x3e, r29	; 62
     1f8:	0f be       	out	0x3f, r0	; 63
     1fa:	cd bf       	out	0x3d, r28	; 61

000001fc <.Loc.1>:
    PORT_LED |= (1<<LED_1);         // LED 1 aan
     1fc:	82 e0       	ldi	r24, 0x02	; 2
     1fe:	91 e0       	ldi	r25, 0x01	; 1
     200:	dc 01       	movw	r26, r24
     202:	2c 91       	ld	r18, X
     204:	82 e0       	ldi	r24, 0x02	; 2
     206:	91 e0       	ldi	r25, 0x01	; 1

00000208 <.Loc.2>:
     208:	20 61       	ori	r18, 0x10	; 16
     20a:	fc 01       	movw	r30, r24
     20c:	20 83       	st	Z, r18

0000020e <.Loc.3>:
    PORT_LED &= ~(1<<LED_2);        // LED 2 uit
     20e:	82 e0       	ldi	r24, 0x02	; 2
     210:	91 e0       	ldi	r25, 0x01	; 1
     212:	dc 01       	movw	r26, r24
     214:	2c 91       	ld	r18, X

00000216 <.Loc.4>:
     216:	82 e0       	ldi	r24, 0x02	; 2
     218:	91 e0       	ldi	r25, 0x01	; 1

0000021a <.Loc.5>:
     21a:	2f 7d       	andi	r18, 0xDF	; 223
     21c:	fc 01       	movw	r30, r24
     21e:	20 83       	st	Z, r18

00000220 <.Loc.6>:
    PORT_buzzer |= (1<<buzzer);     // buzzer aan
     220:	82 e0       	ldi	r24, 0x02	; 2
     222:	91 e0       	ldi	r25, 0x01	; 1
     224:	dc 01       	movw	r26, r24
     226:	2c 91       	ld	r18, X
     228:	82 e0       	ldi	r24, 0x02	; 2
     22a:	91 e0       	ldi	r25, 0x01	; 1

0000022c <.Loc.7>:
     22c:	28 60       	ori	r18, 0x08	; 8
     22e:	fc 01       	movw	r30, r24
     230:	20 83       	st	Z, r18
     232:	80 e0       	ldi	r24, 0x00	; 0
     234:	90 e0       	ldi	r25, 0x00	; 0
     236:	aa ef       	ldi	r26, 0xFA	; 250
     238:	b3 e4       	ldi	r27, 0x43	; 67
     23a:	8f 87       	std	Y+15, r24	; 0x0f
     23c:	98 8b       	std	Y+16, r25	; 0x10
     23e:	a9 8b       	std	Y+17, r26	; 0x11
     240:	ba 8b       	std	Y+18, r27	; 0x12

00000242 <.LBB18>:

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     242:	20 e0       	ldi	r18, 0x00	; 0
     244:	30 e0       	ldi	r19, 0x00	; 0
     246:	4a e7       	ldi	r20, 0x7A	; 122
     248:	55 e4       	ldi	r21, 0x45	; 69
     24a:	6f 85       	ldd	r22, Y+15	; 0x0f
     24c:	78 89       	ldd	r23, Y+16	; 0x10
     24e:	89 89       	ldd	r24, Y+17	; 0x11
     250:	9a 89       	ldd	r25, Y+18	; 0x12
     252:	0e 94 62 0b 	call	0x16c4	; 0x16c4 <__mulsf3>
     256:	6d a3       	std	Y+37, r22	; 0x25
     258:	7e a3       	std	Y+38, r23	; 0x26
     25a:	8f a3       	std	Y+39, r24	; 0x27
     25c:	98 a7       	std	Y+40, r25	; 0x28
     25e:	8d a1       	ldd	r24, Y+37	; 0x25
     260:	9e a1       	ldd	r25, Y+38	; 0x26
     262:	af a1       	ldd	r26, Y+39	; 0x27
     264:	b8 a5       	ldd	r27, Y+40	; 0x28
     266:	8b 8b       	std	Y+19, r24	; 0x13
     268:	9c 8b       	std	Y+20, r25	; 0x14
     26a:	ad 8b       	std	Y+21, r26	; 0x15
     26c:	be 8b       	std	Y+22, r27	; 0x16

0000026e <.Loc.9>:
	if (__tmp < 1.0)
     26e:	20 e0       	ldi	r18, 0x00	; 0
     270:	30 e0       	ldi	r19, 0x00	; 0
     272:	40 e8       	ldi	r20, 0x80	; 128
     274:	5f e3       	ldi	r21, 0x3F	; 63
     276:	6b 89       	ldd	r22, Y+19	; 0x13
     278:	7c 89       	ldd	r23, Y+20	; 0x14
     27a:	8d 89       	ldd	r24, Y+21	; 0x15
     27c:	9e 89       	ldd	r25, Y+22	; 0x16
     27e:	0e 94 fe 09 	call	0x13fc	; 0x13fc <__cmpsf2>
     282:	88 23       	and	r24, r24
     284:	2c f4       	brge	.+10     	; 0x290 <.L22>

00000286 <.Loc.10>:
		__ticks = 1;
     286:	81 e0       	ldi	r24, 0x01	; 1
     288:	90 e0       	ldi	r25, 0x00	; 0
     28a:	98 8f       	std	Y+24, r25	; 0x18
     28c:	8f 8b       	std	Y+23, r24	; 0x17
     28e:	55 c0       	rjmp	.+170    	; 0x33a <.L4>

00000290 <.L22>:
	else if (__tmp > 65535)
     290:	20 e0       	ldi	r18, 0x00	; 0
     292:	3f ef       	ldi	r19, 0xFF	; 255
     294:	4f e7       	ldi	r20, 0x7F	; 127
     296:	57 e4       	ldi	r21, 0x47	; 71
     298:	6b 89       	ldd	r22, Y+19	; 0x13
     29a:	7c 89       	ldd	r23, Y+20	; 0x14
     29c:	8d 89       	ldd	r24, Y+21	; 0x15
     29e:	9e 89       	ldd	r25, Y+22	; 0x16
     2a0:	0e 94 5d 0b 	call	0x16ba	; 0x16ba <__gesf2>
     2a4:	88 23       	and	r24, r24
     2a6:	d9 f1       	breq	.+118    	; 0x31e <.L23>
     2a8:	d4 f1       	brlt	.+116    	; 0x31e <.L23>

000002aa <.Loc.12>:
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     2aa:	20 e0       	ldi	r18, 0x00	; 0
     2ac:	30 e0       	ldi	r19, 0x00	; 0
     2ae:	40 e2       	ldi	r20, 0x20	; 32
     2b0:	51 e4       	ldi	r21, 0x41	; 65
     2b2:	6f 85       	ldd	r22, Y+15	; 0x0f
     2b4:	78 89       	ldd	r23, Y+16	; 0x10
     2b6:	89 89       	ldd	r24, Y+17	; 0x11
     2b8:	9a 89       	ldd	r25, Y+18	; 0x12
     2ba:	0e 94 62 0b 	call	0x16c4	; 0x16c4 <__mulsf3>
     2be:	69 a7       	std	Y+41, r22	; 0x29
     2c0:	7a a7       	std	Y+42, r23	; 0x2a
     2c2:	8b a7       	std	Y+43, r24	; 0x2b
     2c4:	9c a7       	std	Y+44, r25	; 0x2c
     2c6:	89 a5       	ldd	r24, Y+41	; 0x29
     2c8:	9a a5       	ldd	r25, Y+42	; 0x2a
     2ca:	ab a5       	ldd	r26, Y+43	; 0x2b
     2cc:	bc a5       	ldd	r27, Y+44	; 0x2c
     2ce:	89 a3       	std	Y+33, r24	; 0x21
     2d0:	9a a3       	std	Y+34, r25	; 0x22
     2d2:	ab a3       	std	Y+35, r26	; 0x23
     2d4:	bc a3       	std	Y+36, r27	; 0x24

000002d6 <.Loc.13>:
     2d6:	69 a1       	ldd	r22, Y+33	; 0x21
     2d8:	7a a1       	ldd	r23, Y+34	; 0x22
     2da:	8b a1       	ldd	r24, Y+35	; 0x23
     2dc:	9c a1       	ldd	r25, Y+36	; 0x24
     2de:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <__fixunssfsi>
     2e2:	6d a7       	std	Y+45, r22	; 0x2d
     2e4:	7e a7       	std	Y+46, r23	; 0x2e
     2e6:	8f a7       	std	Y+47, r24	; 0x2f
     2e8:	98 ab       	std	Y+48, r25	; 0x30
     2ea:	ad a5       	ldd	r26, Y+45	; 0x2d
     2ec:	be a5       	ldd	r27, Y+46	; 0x2e
     2ee:	b8 8f       	std	Y+24, r27	; 0x18
     2f0:	af 8b       	std	Y+23, r26	; 0x17

000002f2 <.Loc.14>:
		while(__ticks)
     2f2:	10 c0       	rjmp	.+32     	; 0x314 <.L7>

000002f4 <.L8>:
     2f4:	80 e9       	ldi	r24, 0x90	; 144
     2f6:	91 e0       	ldi	r25, 0x01	; 1
     2f8:	9a 8f       	std	Y+26, r25	; 0x1a
     2fa:	89 8f       	std	Y+25, r24	; 0x19

000002fc <.LBB20>:
		"sbc %B0,__zero_reg__"    "\n\t"
		"brne 1b"
		: "+d" (__count)
	);
#else
	__asm__ volatile (
     2fc:	89 8d       	ldd	r24, Y+25	; 0x19
     2fe:	9a 8d       	ldd	r25, Y+26	; 0x1a

00000300 <.L1^B1>:
     300:	01 97       	sbiw	r24, 0x01	; 1
     302:	f1 f7       	brne	.-4      	; 0x300 <.L1^B1>
     304:	9a 8f       	std	Y+26, r25	; 0x1a
     306:	89 8f       	std	Y+25, r24	; 0x19

00000308 <.Loc.16>:
	...

0000030a <.LBE20>:
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     30a:	8f 89       	ldd	r24, Y+23	; 0x17
     30c:	98 8d       	ldd	r25, Y+24	; 0x18
     30e:	01 97       	sbiw	r24, 0x01	; 1
     310:	98 8f       	std	Y+24, r25	; 0x18
     312:	8f 8b       	std	Y+23, r24	; 0x17

00000314 <.L7>:
		while(__ticks)
     314:	8f 89       	ldd	r24, Y+23	; 0x17
     316:	98 8d       	ldd	r25, Y+24	; 0x18
     318:	00 97       	sbiw	r24, 0x00	; 0
     31a:	61 f7       	brne	.-40     	; 0x2f4 <.L8>

0000031c <.Loc.19>:
		}
		return;
     31c:	19 c0       	rjmp	.+50     	; 0x350 <.L9>

0000031e <.L23>:
	}
	else
		__ticks = (uint16_t)__tmp;
     31e:	6b 89       	ldd	r22, Y+19	; 0x13
     320:	7c 89       	ldd	r23, Y+20	; 0x14
     322:	8d 89       	ldd	r24, Y+21	; 0x15
     324:	9e 89       	ldd	r25, Y+22	; 0x16
     326:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <__fixunssfsi>
     32a:	69 ab       	std	Y+49, r22	; 0x31
     32c:	7a ab       	std	Y+50, r23	; 0x32
     32e:	8b ab       	std	Y+51, r24	; 0x33
     330:	9c ab       	std	Y+52, r25	; 0x34
     332:	e9 a9       	ldd	r30, Y+49	; 0x31
     334:	fa a9       	ldd	r31, Y+50	; 0x32
     336:	f8 8f       	std	Y+24, r31	; 0x18
     338:	ef 8b       	std	Y+23, r30	; 0x17

0000033a <.L4>:
     33a:	8f 89       	ldd	r24, Y+23	; 0x17
     33c:	98 8d       	ldd	r25, Y+24	; 0x18
     33e:	9c 8f       	std	Y+28, r25	; 0x1c
     340:	8b 8f       	std	Y+27, r24	; 0x1b

00000342 <.LBB22>:
     342:	8b 8d       	ldd	r24, Y+27	; 0x1b
     344:	9c 8d       	ldd	r25, Y+28	; 0x1c

00000346 <.L1^B2>:
     346:	01 97       	sbiw	r24, 0x01	; 1
     348:	f1 f7       	brne	.-4      	; 0x346 <.L1^B2>
     34a:	9c 8f       	std	Y+28, r25	; 0x1c
     34c:	8b 8f       	std	Y+27, r24	; 0x1b

0000034e <.Loc.22>:
	...

00000350 <.L9>:
    _delay_ms(500);
    PORT_LED |= (1<<LED_2);         // LED 2 aan
     350:	82 e0       	ldi	r24, 0x02	; 2
     352:	91 e0       	ldi	r25, 0x01	; 1
     354:	dc 01       	movw	r26, r24
     356:	2c 91       	ld	r18, X
     358:	82 e0       	ldi	r24, 0x02	; 2
     35a:	91 e0       	ldi	r25, 0x01	; 1

0000035c <.Loc.24>:
     35c:	20 62       	ori	r18, 0x20	; 32
     35e:	fc 01       	movw	r30, r24
     360:	20 83       	st	Z, r18

00000362 <.Loc.25>:
    PORT_LED &= ~(1<<LED_1);        // LED 1 uit
     362:	82 e0       	ldi	r24, 0x02	; 2
     364:	91 e0       	ldi	r25, 0x01	; 1
     366:	dc 01       	movw	r26, r24
     368:	2c 91       	ld	r18, X

0000036a <.Loc.26>:
     36a:	82 e0       	ldi	r24, 0x02	; 2
     36c:	91 e0       	ldi	r25, 0x01	; 1

0000036e <.Loc.27>:
     36e:	2f 7e       	andi	r18, 0xEF	; 239
     370:	fc 01       	movw	r30, r24
     372:	20 83       	st	Z, r18

00000374 <.Loc.28>:
    PORT_buzzer &= ~(1<<buzzer);    // buzzer uit
     374:	82 e0       	ldi	r24, 0x02	; 2
     376:	91 e0       	ldi	r25, 0x01	; 1
     378:	dc 01       	movw	r26, r24
     37a:	2c 91       	ld	r18, X

0000037c <.Loc.29>:
     37c:	82 e0       	ldi	r24, 0x02	; 2
     37e:	91 e0       	ldi	r25, 0x01	; 1

00000380 <.Loc.30>:
     380:	27 7f       	andi	r18, 0xF7	; 247
     382:	fc 01       	movw	r30, r24
     384:	20 83       	st	Z, r18
     386:	80 e0       	ldi	r24, 0x00	; 0
     388:	90 e0       	ldi	r25, 0x00	; 0
     38a:	aa ef       	ldi	r26, 0xFA	; 250
     38c:	b3 e4       	ldi	r27, 0x43	; 67
     38e:	89 83       	std	Y+1, r24	; 0x01
     390:	9a 83       	std	Y+2, r25	; 0x02
     392:	ab 83       	std	Y+3, r26	; 0x03
     394:	bc 83       	std	Y+4, r27	; 0x04

00000396 <.LBB24>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     396:	20 e0       	ldi	r18, 0x00	; 0
     398:	30 e0       	ldi	r19, 0x00	; 0
     39a:	4a e7       	ldi	r20, 0x7A	; 122
     39c:	55 e4       	ldi	r21, 0x45	; 69
     39e:	69 81       	ldd	r22, Y+1	; 0x01
     3a0:	7a 81       	ldd	r23, Y+2	; 0x02
     3a2:	8b 81       	ldd	r24, Y+3	; 0x03
     3a4:	9c 81       	ldd	r25, Y+4	; 0x04
     3a6:	0e 94 62 0b 	call	0x16c4	; 0x16c4 <__mulsf3>
     3aa:	6d ab       	std	Y+53, r22	; 0x35
     3ac:	7e ab       	std	Y+54, r23	; 0x36
     3ae:	8f ab       	std	Y+55, r24	; 0x37
     3b0:	98 af       	std	Y+56, r25	; 0x38
     3b2:	8d a9       	ldd	r24, Y+53	; 0x35
     3b4:	9e a9       	ldd	r25, Y+54	; 0x36
     3b6:	af a9       	ldd	r26, Y+55	; 0x37
     3b8:	b8 ad       	ldd	r27, Y+56	; 0x38
     3ba:	8d 83       	std	Y+5, r24	; 0x05
     3bc:	9e 83       	std	Y+6, r25	; 0x06
     3be:	af 83       	std	Y+7, r26	; 0x07
     3c0:	b8 87       	std	Y+8, r27	; 0x08

000003c2 <.Loc.32>:
	if (__tmp < 1.0)
     3c2:	20 e0       	ldi	r18, 0x00	; 0
     3c4:	30 e0       	ldi	r19, 0x00	; 0
     3c6:	40 e8       	ldi	r20, 0x80	; 128
     3c8:	5f e3       	ldi	r21, 0x3F	; 63
     3ca:	6d 81       	ldd	r22, Y+5	; 0x05
     3cc:	7e 81       	ldd	r23, Y+6	; 0x06
     3ce:	8f 81       	ldd	r24, Y+7	; 0x07
     3d0:	98 85       	ldd	r25, Y+8	; 0x08
     3d2:	0e 94 fe 09 	call	0x13fc	; 0x13fc <__cmpsf2>
     3d6:	88 23       	and	r24, r24
     3d8:	2c f4       	brge	.+10     	; 0x3e4 <.L24>

000003da <.Loc.33>:
		__ticks = 1;
     3da:	81 e0       	ldi	r24, 0x01	; 1
     3dc:	90 e0       	ldi	r25, 0x00	; 0
     3de:	9a 87       	std	Y+10, r25	; 0x0a
     3e0:	89 87       	std	Y+9, r24	; 0x09
     3e2:	5c c0       	rjmp	.+184    	; 0x49c <.L12>

000003e4 <.L24>:
	else if (__tmp > 65535)
     3e4:	20 e0       	ldi	r18, 0x00	; 0
     3e6:	3f ef       	ldi	r19, 0xFF	; 255
     3e8:	4f e7       	ldi	r20, 0x7F	; 127
     3ea:	57 e4       	ldi	r21, 0x47	; 71
     3ec:	6d 81       	ldd	r22, Y+5	; 0x05
     3ee:	7e 81       	ldd	r23, Y+6	; 0x06
     3f0:	8f 81       	ldd	r24, Y+7	; 0x07
     3f2:	98 85       	ldd	r25, Y+8	; 0x08
     3f4:	0e 94 5d 0b 	call	0x16ba	; 0x16ba <__gesf2>
     3f8:	88 23       	and	r24, r24
     3fa:	09 f0       	breq	.+2      	; 0x3fe <L0^A>

000003fc <L0^A>:
     3fc:	0c f4       	brge	.+2      	; 0x400 <.Loc.35>

000003fe <L0^A>:
     3fe:	3c c0       	rjmp	.+120    	; 0x478 <.L25>

00000400 <.Loc.35>:
		__ticks = (uint16_t) (__ms * 10.0);
     400:	20 e0       	ldi	r18, 0x00	; 0
     402:	30 e0       	ldi	r19, 0x00	; 0
     404:	40 e2       	ldi	r20, 0x20	; 32
     406:	51 e4       	ldi	r21, 0x41	; 65
     408:	69 81       	ldd	r22, Y+1	; 0x01
     40a:	7a 81       	ldd	r23, Y+2	; 0x02
     40c:	8b 81       	ldd	r24, Y+3	; 0x03
     40e:	9c 81       	ldd	r25, Y+4	; 0x04
     410:	0e 94 62 0b 	call	0x16c4	; 0x16c4 <__mulsf3>
     414:	69 af       	std	Y+57, r22	; 0x39
     416:	7a af       	std	Y+58, r23	; 0x3a
     418:	8b af       	std	Y+59, r24	; 0x3b
     41a:	9c af       	std	Y+60, r25	; 0x3c
     41c:	89 ad       	ldd	r24, Y+57	; 0x39
     41e:	9a ad       	ldd	r25, Y+58	; 0x3a
     420:	ab ad       	ldd	r26, Y+59	; 0x3b
     422:	bc ad       	ldd	r27, Y+60	; 0x3c
     424:	8d 8f       	std	Y+29, r24	; 0x1d
     426:	9e 8f       	std	Y+30, r25	; 0x1e
     428:	af 8f       	std	Y+31, r26	; 0x1f
     42a:	b8 a3       	std	Y+32, r27	; 0x20

0000042c <.Loc.36>:
     42c:	6d 8d       	ldd	r22, Y+29	; 0x1d
     42e:	7e 8d       	ldd	r23, Y+30	; 0x1e
     430:	8f 8d       	ldd	r24, Y+31	; 0x1f
     432:	98 a1       	ldd	r25, Y+32	; 0x20
     434:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <__fixunssfsi>
     438:	21 96       	adiw	r28, 0x01	; 1
     43a:	6c af       	std	Y+60, r22	; 0x3c
     43c:	7d af       	std	Y+61, r23	; 0x3d
     43e:	8e af       	std	Y+62, r24	; 0x3e
     440:	9f af       	std	Y+63, r25	; 0x3f
     442:	21 97       	sbiw	r28, 0x01	; 1
     444:	ad ad       	ldd	r26, Y+61	; 0x3d
     446:	be ad       	ldd	r27, Y+62	; 0x3e
     448:	ba 87       	std	Y+10, r27	; 0x0a
     44a:	a9 87       	std	Y+9, r26	; 0x09

0000044c <.Loc.37>:
		while(__ticks)
     44c:	10 c0       	rjmp	.+32     	; 0x46e <.L15>

0000044e <.L16>:
     44e:	80 e9       	ldi	r24, 0x90	; 144
     450:	91 e0       	ldi	r25, 0x01	; 1
     452:	9c 87       	std	Y+12, r25	; 0x0c
     454:	8b 87       	std	Y+11, r24	; 0x0b

00000456 <.LBB26>:
     456:	8b 85       	ldd	r24, Y+11	; 0x0b
     458:	9c 85       	ldd	r25, Y+12	; 0x0c

0000045a <.L1^B3>:
     45a:	01 97       	sbiw	r24, 0x01	; 1
     45c:	f1 f7       	brne	.-4      	; 0x45a <.L1^B3>
     45e:	9c 87       	std	Y+12, r25	; 0x0c
     460:	8b 87       	std	Y+11, r24	; 0x0b

00000462 <.Loc.39>:
	...

00000464 <.LBE26>:
			__ticks --;
     464:	89 85       	ldd	r24, Y+9	; 0x09
     466:	9a 85       	ldd	r25, Y+10	; 0x0a
     468:	01 97       	sbiw	r24, 0x01	; 1
     46a:	9a 87       	std	Y+10, r25	; 0x0a
     46c:	89 87       	std	Y+9, r24	; 0x09

0000046e <.L15>:
		while(__ticks)
     46e:	89 85       	ldd	r24, Y+9	; 0x09
     470:	9a 85       	ldd	r25, Y+10	; 0x0a
     472:	00 97       	sbiw	r24, 0x00	; 0
     474:	61 f7       	brne	.-40     	; 0x44e <.L16>

00000476 <.Loc.42>:
		return;
     476:	1d c0       	rjmp	.+58     	; 0x4b2 <.L17>

00000478 <.L25>:
		__ticks = (uint16_t)__tmp;
     478:	6d 81       	ldd	r22, Y+5	; 0x05
     47a:	7e 81       	ldd	r23, Y+6	; 0x06
     47c:	8f 81       	ldd	r24, Y+7	; 0x07
     47e:	98 85       	ldd	r25, Y+8	; 0x08
     480:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <__fixunssfsi>
     484:	25 96       	adiw	r28, 0x05	; 5
     486:	6c af       	std	Y+60, r22	; 0x3c
     488:	7d af       	std	Y+61, r23	; 0x3d
     48a:	8e af       	std	Y+62, r24	; 0x3e
     48c:	9f af       	std	Y+63, r25	; 0x3f
     48e:	25 97       	sbiw	r28, 0x05	; 5
     490:	23 96       	adiw	r28, 0x03	; 3
     492:	ee ad       	ldd	r30, Y+62	; 0x3e
     494:	ff ad       	ldd	r31, Y+63	; 0x3f
     496:	23 97       	sbiw	r28, 0x03	; 3
     498:	fa 87       	std	Y+10, r31	; 0x0a
     49a:	e9 87       	std	Y+9, r30	; 0x09

0000049c <.L12>:
     49c:	89 85       	ldd	r24, Y+9	; 0x09
     49e:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a0:	9e 87       	std	Y+14, r25	; 0x0e
     4a2:	8d 87       	std	Y+13, r24	; 0x0d

000004a4 <.LBB28>:
     4a4:	8d 85       	ldd	r24, Y+13	; 0x0d
     4a6:	9e 85       	ldd	r25, Y+14	; 0x0e

000004a8 <.L1^B4>:
     4a8:	01 97       	sbiw	r24, 0x01	; 1
     4aa:	f1 f7       	brne	.-4      	; 0x4a8 <.L1^B4>
     4ac:	9e 87       	std	Y+14, r25	; 0x0e
     4ae:	8d 87       	std	Y+13, r24	; 0x0d

000004b0 <.Loc.45>:
	...

000004b2 <.L17>:
    _delay_ms(500);
}
     4b2:	00 00       	nop
     4b4:	cc 5b       	subi	r28, 0xBC	; 188
     4b6:	df 4f       	sbci	r29, 0xFF	; 255
     4b8:	0f b6       	in	r0, 0x3f	; 63
     4ba:	f8 94       	cli
     4bc:	de bf       	out	0x3e, r29	; 62
     4be:	0f be       	out	0x3f, r0	; 63
     4c0:	cd bf       	out	0x3d, r28	; 61
     4c2:	df 91       	pop	r29
     4c4:	cf 91       	pop	r28
     4c6:	08 95       	ret

000004c8 <h_bridgeR_set_percentage>:

void h_bridgeR_set_percentage(signed char percentage)
{
     4c8:	0f 93       	push	r16
     4ca:	1f 93       	push	r17
     4cc:	cf 93       	push	r28
     4ce:	df 93       	push	r29
     4d0:	00 d0       	rcall	.+0      	; 0x4d2 <L0^A>

000004d2 <L0^A>:
     4d2:	0f 92       	push	r0
     4d4:	0f 92       	push	r0
     4d6:	cd b7       	in	r28, 0x3d	; 61
     4d8:	de b7       	in	r29, 0x3e	; 62
     4da:	89 83       	std	Y+1, r24	; 0x01

000004dc <.Loc.48>:
	if (percentage >= 0 && percentage <= 100)
     4dc:	89 81       	ldd	r24, Y+1	; 0x01
     4de:	88 23       	and	r24, r24
     4e0:	3c f1       	brlt	.+78     	; 0x530 <.L28>

000004e2 <.Loc.49>:
     4e2:	89 81       	ldd	r24, Y+1	; 0x01
     4e4:	84 36       	cpi	r24, 0x64	; 100
     4e6:	09 f0       	breq	.+2      	; 0x4ea <.Loc.50>

000004e8 <L0^A>:
     4e8:	1c f5       	brge	.+70     	; 0x530 <.L28>

000004ea <.Loc.50>:
	{
			OCR1A = (65536*percentage)/100;
     4ea:	89 81       	ldd	r24, Y+1	; 0x01
     4ec:	08 2e       	mov	r0, r24
     4ee:	00 0c       	add	r0, r0
     4f0:	99 0b       	sbc	r25, r25
     4f2:	aa 0b       	sbc	r26, r26
     4f4:	bb 0b       	sbc	r27, r27
     4f6:	ac 01       	movw	r20, r24
     4f8:	33 27       	eor	r19, r19
     4fa:	22 27       	eor	r18, r18
     4fc:	2a 83       	std	Y+2, r18	; 0x02
     4fe:	3b 83       	std	Y+3, r19	; 0x03
     500:	4c 83       	std	Y+4, r20	; 0x04
     502:	5d 83       	std	Y+5, r21	; 0x05

00000504 <.Loc.51>:
     504:	04 e6       	ldi	r16, 0x64	; 100
     506:	10 e0       	ldi	r17, 0x00	; 0
     508:	20 e0       	ldi	r18, 0x00	; 0
     50a:	30 e0       	ldi	r19, 0x00	; 0
     50c:	6a 81       	ldd	r22, Y+2	; 0x02
     50e:	7b 81       	ldd	r23, Y+3	; 0x03
     510:	8c 81       	ldd	r24, Y+4	; 0x04
     512:	9d 81       	ldd	r25, Y+5	; 0x05
     514:	a9 01       	movw	r20, r18
     516:	98 01       	movw	r18, r16
     518:	0e 94 b5 09 	call	0x136a	; 0x136a <__divmodsi4>
     51c:	da 01       	movw	r26, r20
     51e:	c9 01       	movw	r24, r18
     520:	ac 01       	movw	r20, r24
     522:	bd 01       	movw	r22, r26

00000524 <.Loc.52>:
     524:	88 e8       	ldi	r24, 0x88	; 136
     526:	90 e0       	ldi	r25, 0x00	; 0

00000528 <.Loc.53>:
     528:	9a 01       	movw	r18, r20
     52a:	fc 01       	movw	r30, r24
     52c:	31 83       	std	Z+1, r19	; 0x01
     52e:	20 83       	st	Z, r18

00000530 <.L28>:
	}
}
     530:	00 00       	nop
     532:	0f 90       	pop	r0
     534:	0f 90       	pop	r0
     536:	0f 90       	pop	r0
     538:	0f 90       	pop	r0
     53a:	0f 90       	pop	r0
     53c:	df 91       	pop	r29
     53e:	cf 91       	pop	r28
     540:	1f 91       	pop	r17
     542:	0f 91       	pop	r16
     544:	08 95       	ret

00000546 <h_bridgeL_set_percentage>:

void h_bridgeL_set_percentage(signed char percentage)
{
     546:	0f 93       	push	r16
     548:	1f 93       	push	r17
     54a:	cf 93       	push	r28
     54c:	df 93       	push	r29
     54e:	00 d0       	rcall	.+0      	; 0x550 <L0^A>

00000550 <L0^A>:
     550:	0f 92       	push	r0
     552:	0f 92       	push	r0
     554:	cd b7       	in	r28, 0x3d	; 61
     556:	de b7       	in	r29, 0x3e	; 62
     558:	89 83       	std	Y+1, r24	; 0x01

0000055a <.Loc.56>:
	if (percentage >= 0 && percentage <= 100)
     55a:	89 81       	ldd	r24, Y+1	; 0x01
     55c:	88 23       	and	r24, r24
     55e:	3c f1       	brlt	.+78     	; 0x5ae <.L31>

00000560 <.Loc.57>:
     560:	89 81       	ldd	r24, Y+1	; 0x01
     562:	84 36       	cpi	r24, 0x64	; 100
     564:	09 f0       	breq	.+2      	; 0x568 <.Loc.58>

00000566 <L0^A>:
     566:	1c f5       	brge	.+70     	; 0x5ae <.L31>

00000568 <.Loc.58>:
	{
			OCR3A = (65536*percentage)/100;
     568:	89 81       	ldd	r24, Y+1	; 0x01
     56a:	08 2e       	mov	r0, r24
     56c:	00 0c       	add	r0, r0
     56e:	99 0b       	sbc	r25, r25
     570:	aa 0b       	sbc	r26, r26
     572:	bb 0b       	sbc	r27, r27
     574:	ac 01       	movw	r20, r24
     576:	33 27       	eor	r19, r19
     578:	22 27       	eor	r18, r18
     57a:	2a 83       	std	Y+2, r18	; 0x02
     57c:	3b 83       	std	Y+3, r19	; 0x03
     57e:	4c 83       	std	Y+4, r20	; 0x04
     580:	5d 83       	std	Y+5, r21	; 0x05

00000582 <.Loc.59>:
     582:	04 e6       	ldi	r16, 0x64	; 100
     584:	10 e0       	ldi	r17, 0x00	; 0
     586:	20 e0       	ldi	r18, 0x00	; 0
     588:	30 e0       	ldi	r19, 0x00	; 0
     58a:	6a 81       	ldd	r22, Y+2	; 0x02
     58c:	7b 81       	ldd	r23, Y+3	; 0x03
     58e:	8c 81       	ldd	r24, Y+4	; 0x04
     590:	9d 81       	ldd	r25, Y+5	; 0x05
     592:	a9 01       	movw	r20, r18
     594:	98 01       	movw	r18, r16
     596:	0e 94 b5 09 	call	0x136a	; 0x136a <__divmodsi4>
     59a:	da 01       	movw	r26, r20
     59c:	c9 01       	movw	r24, r18
     59e:	ac 01       	movw	r20, r24
     5a0:	bd 01       	movw	r22, r26

000005a2 <.Loc.60>:
     5a2:	88 e9       	ldi	r24, 0x98	; 152
     5a4:	90 e0       	ldi	r25, 0x00	; 0

000005a6 <.Loc.61>:
     5a6:	9a 01       	movw	r18, r20
     5a8:	fc 01       	movw	r30, r24
     5aa:	31 83       	std	Z+1, r19	; 0x01
     5ac:	20 83       	st	Z, r18

000005ae <.L31>:
	}
}
     5ae:	00 00       	nop
     5b0:	0f 90       	pop	r0
     5b2:	0f 90       	pop	r0
     5b4:	0f 90       	pop	r0
     5b6:	0f 90       	pop	r0
     5b8:	0f 90       	pop	r0
     5ba:	df 91       	pop	r29
     5bc:	cf 91       	pop	r28
     5be:	1f 91       	pop	r17
     5c0:	0f 91       	pop	r16
     5c2:	08 95       	ret

000005c4 <__vector_20>:

//H-brug PWMR
ISR(TIMER1_OVF_vect)
{
     5c4:	1f 92       	push	r1
     5c6:	0f 92       	push	r0
     5c8:	0f b6       	in	r0, 0x3f	; 63
     5ca:	0f 92       	push	r0
     5cc:	11 24       	eor	r1, r1
     5ce:	0b b6       	in	r0, 0x3b	; 59
     5d0:	0f 92       	push	r0
     5d2:	2f 93       	push	r18
     5d4:	3f 93       	push	r19
     5d6:	8f 93       	push	r24
     5d8:	9f 93       	push	r25
     5da:	ef 93       	push	r30
     5dc:	ff 93       	push	r31
     5de:	cf 93       	push	r28
     5e0:	df 93       	push	r29
     5e2:	cd b7       	in	r28, 0x3d	; 61
     5e4:	de b7       	in	r29, 0x3e	; 62

000005e6 <.Loc.64>:
    PORT ^= (1 << PEN1);
     5e6:	82 e2       	ldi	r24, 0x22	; 34
     5e8:	90 e0       	ldi	r25, 0x00	; 0
     5ea:	fc 01       	movw	r30, r24
     5ec:	30 81       	ld	r19, Z
     5ee:	82 e2       	ldi	r24, 0x22	; 34
     5f0:	90 e0       	ldi	r25, 0x00	; 0

000005f2 <.Loc.65>:
     5f2:	20 e8       	ldi	r18, 0x80	; 128
     5f4:	23 27       	eor	r18, r19
     5f6:	fc 01       	movw	r30, r24
     5f8:	20 83       	st	Z, r18

000005fa <.Loc.66>:
}
     5fa:	00 00       	nop
     5fc:	df 91       	pop	r29
     5fe:	cf 91       	pop	r28
     600:	ff 91       	pop	r31
     602:	ef 91       	pop	r30
     604:	9f 91       	pop	r25
     606:	8f 91       	pop	r24
     608:	3f 91       	pop	r19
     60a:	2f 91       	pop	r18
     60c:	0f 90       	pop	r0
     60e:	0b be       	out	0x3b, r0	; 59
     610:	0f 90       	pop	r0
     612:	0f be       	out	0x3f, r0	; 63
     614:	0f 90       	pop	r0
     616:	1f 90       	pop	r1
     618:	18 95       	reti

0000061a <__vector_17>:
//H-brug PWMR
ISR(TIMER1_COMPA_vect)
{
     61a:	1f 92       	push	r1
     61c:	0f 92       	push	r0
     61e:	0f b6       	in	r0, 0x3f	; 63
     620:	0f 92       	push	r0
     622:	11 24       	eor	r1, r1
     624:	0b b6       	in	r0, 0x3b	; 59
     626:	0f 92       	push	r0
     628:	2f 93       	push	r18
     62a:	8f 93       	push	r24
     62c:	9f 93       	push	r25
     62e:	ef 93       	push	r30
     630:	ff 93       	push	r31
     632:	cf 93       	push	r28
     634:	df 93       	push	r29
     636:	cd b7       	in	r28, 0x3d	; 61
     638:	de b7       	in	r29, 0x3e	; 62

0000063a <.Loc.68>:
    PORT |= (1 << PEN1);
     63a:	82 e2       	ldi	r24, 0x22	; 34
     63c:	90 e0       	ldi	r25, 0x00	; 0
     63e:	fc 01       	movw	r30, r24
     640:	20 81       	ld	r18, Z
     642:	82 e2       	ldi	r24, 0x22	; 34
     644:	90 e0       	ldi	r25, 0x00	; 0

00000646 <.Loc.69>:
     646:	20 68       	ori	r18, 0x80	; 128
     648:	fc 01       	movw	r30, r24
     64a:	20 83       	st	Z, r18

0000064c <.Loc.70>:
}
     64c:	00 00       	nop
     64e:	df 91       	pop	r29
     650:	cf 91       	pop	r28
     652:	ff 91       	pop	r31
     654:	ef 91       	pop	r30
     656:	9f 91       	pop	r25
     658:	8f 91       	pop	r24
     65a:	2f 91       	pop	r18
     65c:	0f 90       	pop	r0
     65e:	0b be       	out	0x3b, r0	; 59
     660:	0f 90       	pop	r0
     662:	0f be       	out	0x3f, r0	; 63
     664:	0f 90       	pop	r0
     666:	1f 90       	pop	r1
     668:	18 95       	reti

0000066a <__vector_35>:

//H-brug PWML
ISR(TIMER3_OVF_vect)
{
     66a:	1f 92       	push	r1
     66c:	0f 92       	push	r0
     66e:	0f b6       	in	r0, 0x3f	; 63
     670:	0f 92       	push	r0
     672:	11 24       	eor	r1, r1
     674:	0b b6       	in	r0, 0x3b	; 59
     676:	0f 92       	push	r0
     678:	2f 93       	push	r18
     67a:	3f 93       	push	r19
     67c:	8f 93       	push	r24
     67e:	9f 93       	push	r25
     680:	ef 93       	push	r30
     682:	ff 93       	push	r31
     684:	cf 93       	push	r28
     686:	df 93       	push	r29
     688:	cd b7       	in	r28, 0x3d	; 61
     68a:	de b7       	in	r29, 0x3e	; 62

0000068c <.Loc.72>:
    PORT ^= (1 << PEN2);
     68c:	82 e2       	ldi	r24, 0x22	; 34
     68e:	90 e0       	ldi	r25, 0x00	; 0
     690:	fc 01       	movw	r30, r24
     692:	30 81       	ld	r19, Z
     694:	82 e2       	ldi	r24, 0x22	; 34
     696:	90 e0       	ldi	r25, 0x00	; 0

00000698 <.Loc.73>:
     698:	24 e0       	ldi	r18, 0x04	; 4
     69a:	23 27       	eor	r18, r19
     69c:	fc 01       	movw	r30, r24
     69e:	20 83       	st	Z, r18

000006a0 <.Loc.74>:
}
     6a0:	00 00       	nop
     6a2:	df 91       	pop	r29
     6a4:	cf 91       	pop	r28
     6a6:	ff 91       	pop	r31
     6a8:	ef 91       	pop	r30
     6aa:	9f 91       	pop	r25
     6ac:	8f 91       	pop	r24
     6ae:	3f 91       	pop	r19
     6b0:	2f 91       	pop	r18
     6b2:	0f 90       	pop	r0
     6b4:	0b be       	out	0x3b, r0	; 59
     6b6:	0f 90       	pop	r0
     6b8:	0f be       	out	0x3f, r0	; 63
     6ba:	0f 90       	pop	r0
     6bc:	1f 90       	pop	r1
     6be:	18 95       	reti

000006c0 <__vector_32>:
//H-brug PWML
ISR(TIMER3_COMPA_vect)
{
     6c0:	1f 92       	push	r1
     6c2:	0f 92       	push	r0
     6c4:	0f b6       	in	r0, 0x3f	; 63
     6c6:	0f 92       	push	r0
     6c8:	11 24       	eor	r1, r1
     6ca:	0b b6       	in	r0, 0x3b	; 59
     6cc:	0f 92       	push	r0
     6ce:	2f 93       	push	r18
     6d0:	8f 93       	push	r24
     6d2:	9f 93       	push	r25
     6d4:	ef 93       	push	r30
     6d6:	ff 93       	push	r31
     6d8:	cf 93       	push	r28
     6da:	df 93       	push	r29
     6dc:	cd b7       	in	r28, 0x3d	; 61
     6de:	de b7       	in	r29, 0x3e	; 62

000006e0 <.Loc.76>:
    PORT |= (1 << PEN2);
     6e0:	82 e2       	ldi	r24, 0x22	; 34
     6e2:	90 e0       	ldi	r25, 0x00	; 0
     6e4:	fc 01       	movw	r30, r24
     6e6:	20 81       	ld	r18, Z
     6e8:	82 e2       	ldi	r24, 0x22	; 34
     6ea:	90 e0       	ldi	r25, 0x00	; 0

000006ec <.Loc.77>:
     6ec:	24 60       	ori	r18, 0x04	; 4
     6ee:	fc 01       	movw	r30, r24
     6f0:	20 83       	st	Z, r18

000006f2 <.Loc.78>:
}
     6f2:	00 00       	nop
     6f4:	df 91       	pop	r29
     6f6:	cf 91       	pop	r28
     6f8:	ff 91       	pop	r31
     6fa:	ef 91       	pop	r30
     6fc:	9f 91       	pop	r25
     6fe:	8f 91       	pop	r24
     700:	2f 91       	pop	r18
     702:	0f 90       	pop	r0
     704:	0b be       	out	0x3b, r0	; 59
     706:	0f 90       	pop	r0
     708:	0f be       	out	0x3f, r0	; 63
     70a:	0f 90       	pop	r0
     70c:	1f 90       	pop	r1
     70e:	18 95       	reti

00000710 <__vector_23>:

//Timer doorrijden
ISR(TIMER0_OVF_vect)
{
     710:	1f 92       	push	r1
     712:	0f 92       	push	r0
     714:	0f b6       	in	r0, 0x3f	; 63
     716:	0f 92       	push	r0
     718:	11 24       	eor	r1, r1
     71a:	8f 93       	push	r24
     71c:	9f 93       	push	r25
     71e:	cf 93       	push	r28
     720:	df 93       	push	r29
     722:	cd b7       	in	r28, 0x3d	; 61
     724:	de b7       	in	r29, 0x3e	; 62

00000726 <.Loc.80>:
    timerteller ++;
     726:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <timerteller>
     72a:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <timerteller+0x1>
     72e:	01 96       	adiw	r24, 0x01	; 1
     730:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <timerteller+0x1>
     734:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <timerteller>

00000738 <.Loc.81>:
}
     738:	00 00       	nop
     73a:	df 91       	pop	r29
     73c:	cf 91       	pop	r28
     73e:	9f 91       	pop	r25
     740:	8f 91       	pop	r24
     742:	0f 90       	pop	r0
     744:	0f be       	out	0x3f, r0	; 63
     746:	0f 90       	pop	r0
     748:	1f 90       	pop	r1
     74a:	18 95       	reti

0000074c <initTimer>:
#include "Bluetooth.h"
#include "Library.h"

volatile int count = 0;

void initTimer(void){
     74c:	cf 93       	push	r28
     74e:	df 93       	push	r29
     750:	cd b7       	in	r28, 0x3d	; 61
     752:	de b7       	in	r29, 0x3e	; 62

00000754 <.Loc.1>:
    Ultraregister |= (1<<Voorultrasoontrig);
     754:	83 e2       	ldi	r24, 0x23	; 35
     756:	90 e0       	ldi	r25, 0x00	; 0
     758:	fc 01       	movw	r30, r24
     75a:	20 81       	ld	r18, Z
     75c:	83 e2       	ldi	r24, 0x23	; 35
     75e:	90 e0       	ldi	r25, 0x00	; 0

00000760 <.Loc.2>:
     760:	20 61       	ori	r18, 0x10	; 16
     762:	fc 01       	movw	r30, r24
     764:	20 83       	st	Z, r18

00000766 <.Loc.3>:
    UltraPort &= ~(1<<Voorultrasoontrig);
     766:	85 e2       	ldi	r24, 0x25	; 37
     768:	90 e0       	ldi	r25, 0x00	; 0
     76a:	fc 01       	movw	r30, r24
     76c:	20 81       	ld	r18, Z

0000076e <.Loc.4>:
     76e:	85 e2       	ldi	r24, 0x25	; 37
     770:	90 e0       	ldi	r25, 0x00	; 0

00000772 <.Loc.5>:
     772:	2f 7e       	andi	r18, 0xEF	; 239
     774:	fc 01       	movw	r30, r24
     776:	20 83       	st	Z, r18

00000778 <.Loc.6>:
    TCCR2A = 0;
     778:	80 eb       	ldi	r24, 0xB0	; 176
     77a:	90 e0       	ldi	r25, 0x00	; 0

0000077c <.Loc.7>:
     77c:	fc 01       	movw	r30, r24
     77e:	10 82       	st	Z, r1

00000780 <.Loc.8>:
    TCCR2B |= (1<<CS20);
     780:	81 eb       	ldi	r24, 0xB1	; 177
     782:	90 e0       	ldi	r25, 0x00	; 0
     784:	fc 01       	movw	r30, r24
     786:	20 81       	ld	r18, Z
     788:	81 eb       	ldi	r24, 0xB1	; 177
     78a:	90 e0       	ldi	r25, 0x00	; 0

0000078c <.Loc.9>:
     78c:	21 60       	ori	r18, 0x01	; 1
     78e:	fc 01       	movw	r30, r24
     790:	20 83       	st	Z, r18

00000792 <.Loc.10>:
    //16000000 / 256 = 62,500
    //1 / 62500 = 0.000016s
    //62500x/sec
    TIMSK2 = (1<<TOIE2);
     792:	80 e7       	ldi	r24, 0x70	; 112
     794:	90 e0       	ldi	r25, 0x00	; 0

00000796 <.Loc.11>:
     796:	21 e0       	ldi	r18, 0x01	; 1
     798:	fc 01       	movw	r30, r24
     79a:	20 83       	st	Z, r18

0000079c <.Loc.12>:
    sei();
     79c:	78 94       	sei

0000079e <.Loc.13>:
}
     79e:	00 00       	nop
     7a0:	df 91       	pop	r29
     7a2:	cf 91       	pop	r28
     7a4:	08 95       	ret

000007a6 <GetDistance>:

int GetDistance(void){
     7a6:	cf 93       	push	r28
     7a8:	df 93       	push	r29
     7aa:	cd b7       	in	r28, 0x3d	; 61
     7ac:	de b7       	in	r29, 0x3e	; 62
     7ae:	6e 97       	sbiw	r28, 0x1e	; 30
     7b0:	0f b6       	in	r0, 0x3f	; 63
     7b2:	f8 94       	cli
     7b4:	de bf       	out	0x3e, r29	; 62
     7b6:	0f be       	out	0x3f, r0	; 63
     7b8:	cd bf       	out	0x3d, r28	; 61

000007ba <.Loc.15>:

    int Distance;

    TriggerPulse();
     7ba:	0e 94 61 04 	call	0x8c2	; 0x8c2 <TriggerPulse>

000007be <.Loc.16>:
	...

000007c0 <.L3>:

    while ((Ultraregister & (1<<Voorultrasoonecho)) == 0){
     7c0:	83 e2       	ldi	r24, 0x23	; 35
     7c2:	90 e0       	ldi	r25, 0x00	; 0
     7c4:	dc 01       	movw	r26, r24
     7c6:	8c 91       	ld	r24, X

000007c8 <.Loc.18>:
     7c8:	88 2f       	mov	r24, r24
     7ca:	90 e0       	ldi	r25, 0x00	; 0
     7cc:	80 71       	andi	r24, 0x10	; 16
     7ce:	99 27       	eor	r25, r25

000007d0 <.Loc.19>:
     7d0:	00 97       	sbiw	r24, 0x00	; 0
     7d2:	b1 f3       	breq	.-20     	; 0x7c0 <.L3>

000007d4 <.Loc.20>:

    }
    TCNT2 = 0;
     7d4:	82 eb       	ldi	r24, 0xB2	; 178
     7d6:	90 e0       	ldi	r25, 0x00	; 0

000007d8 <.Loc.21>:
     7d8:	fc 01       	movw	r30, r24
     7da:	10 82       	st	Z, r1

000007dc <.Loc.22>:
    TIFR2 = 1<<TOV2;
     7dc:	87 e3       	ldi	r24, 0x37	; 55
     7de:	90 e0       	ldi	r25, 0x00	; 0

000007e0 <.Loc.23>:
     7e0:	21 e0       	ldi	r18, 0x01	; 1
     7e2:	dc 01       	movw	r26, r24
     7e4:	2c 93       	st	X, r18

000007e6 <.Loc.24>:
    count = 0;
     7e6:	10 92 09 02 	sts	0x0209, r1	; 0x800209 <count+0x1>
     7ea:	10 92 08 02 	sts	0x0208, r1	; 0x800208 <count>

000007ee <.Loc.25>:
	...

000007f0 <.L4>:

    while ((Ultraregister & (1<<Voorultrasoonecho)) != 0){
     7f0:	83 e2       	ldi	r24, 0x23	; 35
     7f2:	90 e0       	ldi	r25, 0x00	; 0
     7f4:	fc 01       	movw	r30, r24
     7f6:	80 81       	ld	r24, Z

000007f8 <.Loc.27>:
     7f8:	88 2f       	mov	r24, r24
     7fa:	90 e0       	ldi	r25, 0x00	; 0
     7fc:	80 71       	andi	r24, 0x10	; 16
     7fe:	99 27       	eor	r25, r25

00000800 <.Loc.28>:
     800:	00 97       	sbiw	r24, 0x00	; 0
     802:	b1 f7       	brne	.-20     	; 0x7f0 <.L4>

00000804 <.Loc.29>:

    }
    Distance = count;
     804:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <count>
     808:	90 91 09 02 	lds	r25, 0x0209	; 0x800209 <count+0x1>
     80c:	9a 83       	std	Y+2, r25	; 0x02
     80e:	89 83       	std	Y+1, r24	; 0x01

00000810 <.Loc.30>:

    Distance = Distance * 0.008 * 343;
     810:	89 81       	ldd	r24, Y+1	; 0x01
     812:	9a 81       	ldd	r25, Y+2	; 0x02
     814:	9c 01       	movw	r18, r24
     816:	99 0f       	add	r25, r25
     818:	44 0b       	sbc	r20, r20
     81a:	55 0b       	sbc	r21, r21
     81c:	2f 87       	std	Y+15, r18	; 0x0f
     81e:	38 8b       	std	Y+16, r19	; 0x10
     820:	49 8b       	std	Y+17, r20	; 0x11
     822:	5a 8b       	std	Y+18, r21	; 0x12
     824:	6f 85       	ldd	r22, Y+15	; 0x0f
     826:	78 89       	ldd	r23, Y+16	; 0x10
     828:	89 89       	ldd	r24, Y+17	; 0x11
     82a:	9a 89       	ldd	r25, Y+18	; 0x12
     82c:	0e 94 ad 0a 	call	0x155a	; 0x155a <__floatsisf>
     830:	6b 83       	std	Y+3, r22	; 0x03
     832:	7c 83       	std	Y+4, r23	; 0x04
     834:	8d 83       	std	Y+5, r24	; 0x05
     836:	9e 83       	std	Y+6, r25	; 0x06
     838:	2f e6       	ldi	r18, 0x6F	; 111
     83a:	32 e1       	ldi	r19, 0x12	; 18
     83c:	43 e0       	ldi	r20, 0x03	; 3
     83e:	5c e3       	ldi	r21, 0x3C	; 60
     840:	6b 81       	ldd	r22, Y+3	; 0x03
     842:	7c 81       	ldd	r23, Y+4	; 0x04
     844:	8d 81       	ldd	r24, Y+5	; 0x05
     846:	9e 81       	ldd	r25, Y+6	; 0x06
     848:	0e 94 62 0b 	call	0x16c4	; 0x16c4 <__mulsf3>
     84c:	6b 8b       	std	Y+19, r22	; 0x13
     84e:	7c 8b       	std	Y+20, r23	; 0x14
     850:	8d 8b       	std	Y+21, r24	; 0x15
     852:	9e 8b       	std	Y+22, r25	; 0x16
     854:	8b 89       	ldd	r24, Y+19	; 0x13
     856:	9c 89       	ldd	r25, Y+20	; 0x14
     858:	ad 89       	ldd	r26, Y+21	; 0x15
     85a:	be 89       	ldd	r27, Y+22	; 0x16
     85c:	8f 83       	std	Y+7, r24	; 0x07
     85e:	98 87       	std	Y+8, r25	; 0x08
     860:	a9 87       	std	Y+9, r26	; 0x09
     862:	ba 87       	std	Y+10, r27	; 0x0a

00000864 <.Loc.31>:
     864:	20 e0       	ldi	r18, 0x00	; 0
     866:	30 e8       	ldi	r19, 0x80	; 128
     868:	4b ea       	ldi	r20, 0xAB	; 171
     86a:	53 e4       	ldi	r21, 0x43	; 67
     86c:	6f 81       	ldd	r22, Y+7	; 0x07
     86e:	78 85       	ldd	r23, Y+8	; 0x08
     870:	89 85       	ldd	r24, Y+9	; 0x09
     872:	9a 85       	ldd	r25, Y+10	; 0x0a
     874:	0e 94 62 0b 	call	0x16c4	; 0x16c4 <__mulsf3>
     878:	6f 8b       	std	Y+23, r22	; 0x17
     87a:	78 8f       	std	Y+24, r23	; 0x18
     87c:	89 8f       	std	Y+25, r24	; 0x19
     87e:	9a 8f       	std	Y+26, r25	; 0x1a
     880:	2f 89       	ldd	r18, Y+23	; 0x17
     882:	38 8d       	ldd	r19, Y+24	; 0x18
     884:	49 8d       	ldd	r20, Y+25	; 0x19
     886:	5a 8d       	ldd	r21, Y+26	; 0x1a
     888:	2b 87       	std	Y+11, r18	; 0x0b
     88a:	3c 87       	std	Y+12, r19	; 0x0c
     88c:	4d 87       	std	Y+13, r20	; 0x0d
     88e:	5e 87       	std	Y+14, r21	; 0x0e

00000890 <.Loc.32>:
     890:	6b 85       	ldd	r22, Y+11	; 0x0b
     892:	7c 85       	ldd	r23, Y+12	; 0x0c
     894:	8d 85       	ldd	r24, Y+13	; 0x0d
     896:	9e 85       	ldd	r25, Y+14	; 0x0e
     898:	0e 94 75 0a 	call	0x14ea	; 0x14ea <__fixsfsi>
     89c:	6b 8f       	std	Y+27, r22	; 0x1b
     89e:	7c 8f       	std	Y+28, r23	; 0x1c
     8a0:	8d 8f       	std	Y+29, r24	; 0x1d
     8a2:	9e 8f       	std	Y+30, r25	; 0x1e
     8a4:	4b 8d       	ldd	r20, Y+27	; 0x1b
     8a6:	5c 8d       	ldd	r21, Y+28	; 0x1c
     8a8:	5a 83       	std	Y+2, r21	; 0x02
     8aa:	49 83       	std	Y+1, r20	; 0x01

000008ac <.Loc.33>:
    //34 cm / ms
    //340   mm / ms
    //0.34  mm / us
    //5.44 * count geeft distance in mm

    return Distance;
     8ac:	89 81       	ldd	r24, Y+1	; 0x01
     8ae:	9a 81       	ldd	r25, Y+2	; 0x02

000008b0 <.Loc.34>:
}
     8b0:	6e 96       	adiw	r28, 0x1e	; 30
     8b2:	0f b6       	in	r0, 0x3f	; 63
     8b4:	f8 94       	cli
     8b6:	de bf       	out	0x3e, r29	; 62
     8b8:	0f be       	out	0x3f, r0	; 63
     8ba:	cd bf       	out	0x3d, r28	; 61
     8bc:	df 91       	pop	r29
     8be:	cf 91       	pop	r28
     8c0:	08 95       	ret

000008c2 <TriggerPulse>:

void TriggerPulse (void){
     8c2:	cf 93       	push	r28
     8c4:	df 93       	push	r29
     8c6:	cd b7       	in	r28, 0x3d	; 61
     8c8:	de b7       	in	r29, 0x3e	; 62
     8ca:	c8 54       	subi	r28, 0x48	; 72
     8cc:	d1 09       	sbc	r29, r1
     8ce:	0f b6       	in	r0, 0x3f	; 63
     8d0:	f8 94       	cli
     8d2:	de bf       	out	0x3e, r29	; 62
     8d4:	0f be       	out	0x3f, r0	; 63
     8d6:	cd bf       	out	0x3d, r28	; 61

000008d8 <.Loc.36>:
    UltraPort |= (1<<Voorultrasoontrig);
     8d8:	85 e2       	ldi	r24, 0x25	; 37
     8da:	90 e0       	ldi	r25, 0x00	; 0
     8dc:	dc 01       	movw	r26, r24
     8de:	2c 91       	ld	r18, X
     8e0:	85 e2       	ldi	r24, 0x25	; 37
     8e2:	90 e0       	ldi	r25, 0x00	; 0

000008e4 <.Loc.37>:
     8e4:	20 61       	ori	r18, 0x10	; 16
     8e6:	fc 01       	movw	r30, r24
     8e8:	20 83       	st	Z, r18
     8ea:	80 e0       	ldi	r24, 0x00	; 0
     8ec:	90 e0       	ldi	r25, 0x00	; 0
     8ee:	a0 e2       	ldi	r26, 0x20	; 32
     8f0:	b1 e4       	ldi	r27, 0x41	; 65
     8f2:	89 83       	std	Y+1, r24	; 0x01
     8f4:	9a 83       	std	Y+2, r25	; 0x02
     8f6:	ab 83       	std	Y+3, r26	; 0x03
     8f8:	bc 83       	std	Y+4, r27	; 0x04

000008fa <.LBB36>:
	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint8_t __ticks;
	double __tmp2 ;
	__tmp = ((F_CPU) / 3e6) * __us;
     8fa:	2b ea       	ldi	r18, 0xAB	; 171
     8fc:	3a ea       	ldi	r19, 0xAA	; 170
     8fe:	4a ea       	ldi	r20, 0xAA	; 170
     900:	50 e4       	ldi	r21, 0x40	; 64
     902:	69 81       	ldd	r22, Y+1	; 0x01
     904:	7a 81       	ldd	r23, Y+2	; 0x02
     906:	8b 81       	ldd	r24, Y+3	; 0x03
     908:	9c 81       	ldd	r25, Y+4	; 0x04
     90a:	0e 94 62 0b 	call	0x16c4	; 0x16c4 <__mulsf3>
     90e:	6d a3       	std	Y+37, r22	; 0x25
     910:	7e a3       	std	Y+38, r23	; 0x26
     912:	8f a3       	std	Y+39, r24	; 0x27
     914:	98 a7       	std	Y+40, r25	; 0x28
     916:	8d a1       	ldd	r24, Y+37	; 0x25
     918:	9e a1       	ldd	r25, Y+38	; 0x26
     91a:	af a1       	ldd	r26, Y+39	; 0x27
     91c:	b8 a5       	ldd	r27, Y+40	; 0x28
     91e:	8d 83       	std	Y+5, r24	; 0x05
     920:	9e 83       	std	Y+6, r25	; 0x06
     922:	af 83       	std	Y+7, r26	; 0x07
     924:	b8 87       	std	Y+8, r27	; 0x08

00000926 <.Loc.39>:
	__tmp2 = ((F_CPU) / 4e6) * __us;
     926:	20 e0       	ldi	r18, 0x00	; 0
     928:	30 e0       	ldi	r19, 0x00	; 0
     92a:	40 e8       	ldi	r20, 0x80	; 128
     92c:	50 e4       	ldi	r21, 0x40	; 64
     92e:	69 81       	ldd	r22, Y+1	; 0x01
     930:	7a 81       	ldd	r23, Y+2	; 0x02
     932:	8b 81       	ldd	r24, Y+3	; 0x03
     934:	9c 81       	ldd	r25, Y+4	; 0x04
     936:	0e 94 62 0b 	call	0x16c4	; 0x16c4 <__mulsf3>
     93a:	69 a7       	std	Y+41, r22	; 0x29
     93c:	7a a7       	std	Y+42, r23	; 0x2a
     93e:	8b a7       	std	Y+43, r24	; 0x2b
     940:	9c a7       	std	Y+44, r25	; 0x2c
     942:	89 a5       	ldd	r24, Y+41	; 0x29
     944:	9a a5       	ldd	r25, Y+42	; 0x2a
     946:	ab a5       	ldd	r26, Y+43	; 0x2b
     948:	bc a5       	ldd	r27, Y+44	; 0x2c
     94a:	89 87       	std	Y+9, r24	; 0x09
     94c:	9a 87       	std	Y+10, r25	; 0x0a
     94e:	ab 87       	std	Y+11, r26	; 0x0b
     950:	bc 87       	std	Y+12, r27	; 0x0c

00000952 <.Loc.40>:
	if (__tmp < 1.0)
     952:	20 e0       	ldi	r18, 0x00	; 0
     954:	30 e0       	ldi	r19, 0x00	; 0
     956:	40 e8       	ldi	r20, 0x80	; 128
     958:	5f e3       	ldi	r21, 0x3F	; 63
     95a:	6d 81       	ldd	r22, Y+5	; 0x05
     95c:	7e 81       	ldd	r23, Y+6	; 0x06
     95e:	8f 81       	ldd	r24, Y+7	; 0x07
     960:	98 85       	ldd	r25, Y+8	; 0x08
     962:	0e 94 fe 09 	call	0x13fc	; 0x13fc <__cmpsf2>
     966:	88 23       	and	r24, r24
     968:	1c f4       	brge	.+6      	; 0x970 <.L28>

0000096a <.Loc.41>:
		__ticks = 1;
     96a:	81 e0       	ldi	r24, 0x01	; 1
     96c:	8d 87       	std	Y+13, r24	; 0x0d
     96e:	e8 c0       	rjmp	.+464    	; 0xb40 <.L9>

00000970 <.L28>:
	else if (__tmp2 > 65535)
     970:	20 e0       	ldi	r18, 0x00	; 0
     972:	3f ef       	ldi	r19, 0xFF	; 255
     974:	4f e7       	ldi	r20, 0x7F	; 127
     976:	57 e4       	ldi	r21, 0x47	; 71
     978:	69 85       	ldd	r22, Y+9	; 0x09
     97a:	7a 85       	ldd	r23, Y+10	; 0x0a
     97c:	8b 85       	ldd	r24, Y+11	; 0x0b
     97e:	9c 85       	ldd	r25, Y+12	; 0x0c
     980:	0e 94 5d 0b 	call	0x16ba	; 0x16ba <__gesf2>
     984:	88 23       	and	r24, r24
     986:	09 f0       	breq	.+2      	; 0x98a <L0^A>

00000988 <L0^A>:
     988:	0c f4       	brge	.+2      	; 0x98c <.Loc.43>

0000098a <L0^A>:
     98a:	9f c0       	rjmp	.+318    	; 0xaca <.L29>

0000098c <.Loc.43>:
	{
		_delay_ms(__us / 1000.0);
     98c:	20 e0       	ldi	r18, 0x00	; 0
     98e:	30 e0       	ldi	r19, 0x00	; 0
     990:	4a e7       	ldi	r20, 0x7A	; 122
     992:	54 e4       	ldi	r21, 0x44	; 68
     994:	69 81       	ldd	r22, Y+1	; 0x01
     996:	7a 81       	ldd	r23, Y+2	; 0x02
     998:	8b 81       	ldd	r24, Y+3	; 0x03
     99a:	9c 81       	ldd	r25, Y+4	; 0x04
     99c:	0e 94 03 0a 	call	0x1406	; 0x1406 <__divsf3>
     9a0:	6d a7       	std	Y+45, r22	; 0x2d
     9a2:	7e a7       	std	Y+46, r23	; 0x2e
     9a4:	8f a7       	std	Y+47, r24	; 0x2f
     9a6:	98 ab       	std	Y+48, r25	; 0x30
     9a8:	8d a5       	ldd	r24, Y+45	; 0x2d
     9aa:	9e a5       	ldd	r25, Y+46	; 0x2e
     9ac:	af a5       	ldd	r26, Y+47	; 0x2f
     9ae:	b8 a9       	ldd	r27, Y+48	; 0x30
     9b0:	8e 87       	std	Y+14, r24	; 0x0e
     9b2:	9f 87       	std	Y+15, r25	; 0x0f
     9b4:	a8 8b       	std	Y+16, r26	; 0x10
     9b6:	b9 8b       	std	Y+17, r27	; 0x11

000009b8 <.LBB38>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     9b8:	20 e0       	ldi	r18, 0x00	; 0
     9ba:	30 e0       	ldi	r19, 0x00	; 0
     9bc:	4a e7       	ldi	r20, 0x7A	; 122
     9be:	55 e4       	ldi	r21, 0x45	; 69
     9c0:	6e 85       	ldd	r22, Y+14	; 0x0e
     9c2:	7f 85       	ldd	r23, Y+15	; 0x0f
     9c4:	88 89       	ldd	r24, Y+16	; 0x10
     9c6:	99 89       	ldd	r25, Y+17	; 0x11
     9c8:	0e 94 62 0b 	call	0x16c4	; 0x16c4 <__mulsf3>
     9cc:	69 ab       	std	Y+49, r22	; 0x31
     9ce:	7a ab       	std	Y+50, r23	; 0x32
     9d0:	8b ab       	std	Y+51, r24	; 0x33
     9d2:	9c ab       	std	Y+52, r25	; 0x34
     9d4:	89 a9       	ldd	r24, Y+49	; 0x31
     9d6:	9a a9       	ldd	r25, Y+50	; 0x32
     9d8:	ab a9       	ldd	r26, Y+51	; 0x33
     9da:	bc a9       	ldd	r27, Y+52	; 0x34
     9dc:	8a 8b       	std	Y+18, r24	; 0x12
     9de:	9b 8b       	std	Y+19, r25	; 0x13
     9e0:	ac 8b       	std	Y+20, r26	; 0x14
     9e2:	bd 8b       	std	Y+21, r27	; 0x15

000009e4 <.Loc.45>:
	if (__tmp < 1.0)
     9e4:	20 e0       	ldi	r18, 0x00	; 0
     9e6:	30 e0       	ldi	r19, 0x00	; 0
     9e8:	40 e8       	ldi	r20, 0x80	; 128
     9ea:	5f e3       	ldi	r21, 0x3F	; 63
     9ec:	6a 89       	ldd	r22, Y+18	; 0x12
     9ee:	7b 89       	ldd	r23, Y+19	; 0x13
     9f0:	8c 89       	ldd	r24, Y+20	; 0x14
     9f2:	9d 89       	ldd	r25, Y+21	; 0x15
     9f4:	0e 94 fe 09 	call	0x13fc	; 0x13fc <__cmpsf2>
     9f8:	88 23       	and	r24, r24
     9fa:	2c f4       	brge	.+10     	; 0xa06 <.L30>

000009fc <.Loc.46>:
		__ticks = 1;
     9fc:	81 e0       	ldi	r24, 0x01	; 1
     9fe:	90 e0       	ldi	r25, 0x00	; 0
     a00:	9f 8b       	std	Y+23, r25	; 0x17
     a02:	8e 8b       	std	Y+22, r24	; 0x16
     a04:	57 c0       	rjmp	.+174    	; 0xab4 <.L14>

00000a06 <.L30>:
	else if (__tmp > 65535)
     a06:	20 e0       	ldi	r18, 0x00	; 0
     a08:	3f ef       	ldi	r19, 0xFF	; 255
     a0a:	4f e7       	ldi	r20, 0x7F	; 127
     a0c:	57 e4       	ldi	r21, 0x47	; 71
     a0e:	6a 89       	ldd	r22, Y+18	; 0x12
     a10:	7b 89       	ldd	r23, Y+19	; 0x13
     a12:	8c 89       	ldd	r24, Y+20	; 0x14
     a14:	9d 89       	ldd	r25, Y+21	; 0x15
     a16:	0e 94 5d 0b 	call	0x16ba	; 0x16ba <__gesf2>
     a1a:	88 23       	and	r24, r24
     a1c:	d9 f1       	breq	.+118    	; 0xa94 <.L31>
     a1e:	d4 f1       	brlt	.+116    	; 0xa94 <.L31>

00000a20 <.Loc.48>:
		__ticks = (uint16_t) (__ms * 10.0);
     a20:	20 e0       	ldi	r18, 0x00	; 0
     a22:	30 e0       	ldi	r19, 0x00	; 0
     a24:	40 e2       	ldi	r20, 0x20	; 32
     a26:	51 e4       	ldi	r21, 0x41	; 65
     a28:	6e 85       	ldd	r22, Y+14	; 0x0e
     a2a:	7f 85       	ldd	r23, Y+15	; 0x0f
     a2c:	88 89       	ldd	r24, Y+16	; 0x10
     a2e:	99 89       	ldd	r25, Y+17	; 0x11
     a30:	0e 94 62 0b 	call	0x16c4	; 0x16c4 <__mulsf3>
     a34:	6d ab       	std	Y+53, r22	; 0x35
     a36:	7e ab       	std	Y+54, r23	; 0x36
     a38:	8f ab       	std	Y+55, r24	; 0x37
     a3a:	98 af       	std	Y+56, r25	; 0x38
     a3c:	8d a9       	ldd	r24, Y+53	; 0x35
     a3e:	9e a9       	ldd	r25, Y+54	; 0x36
     a40:	af a9       	ldd	r26, Y+55	; 0x37
     a42:	b8 ad       	ldd	r27, Y+56	; 0x38
     a44:	89 a3       	std	Y+33, r24	; 0x21
     a46:	9a a3       	std	Y+34, r25	; 0x22
     a48:	ab a3       	std	Y+35, r26	; 0x23
     a4a:	bc a3       	std	Y+36, r27	; 0x24

00000a4c <.Loc.49>:
     a4c:	69 a1       	ldd	r22, Y+33	; 0x21
     a4e:	7a a1       	ldd	r23, Y+34	; 0x22
     a50:	8b a1       	ldd	r24, Y+35	; 0x23
     a52:	9c a1       	ldd	r25, Y+36	; 0x24
     a54:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <__fixunssfsi>
     a58:	69 af       	std	Y+57, r22	; 0x39
     a5a:	7a af       	std	Y+58, r23	; 0x3a
     a5c:	8b af       	std	Y+59, r24	; 0x3b
     a5e:	9c af       	std	Y+60, r25	; 0x3c
     a60:	a9 ad       	ldd	r26, Y+57	; 0x39
     a62:	ba ad       	ldd	r27, Y+58	; 0x3a
     a64:	bf 8b       	std	Y+23, r27	; 0x17
     a66:	ae 8b       	std	Y+22, r26	; 0x16

00000a68 <.Loc.50>:
		while(__ticks)
     a68:	10 c0       	rjmp	.+32     	; 0xa8a <.L17>

00000a6a <.L18>:
     a6a:	80 e9       	ldi	r24, 0x90	; 144
     a6c:	91 e0       	ldi	r25, 0x01	; 1
     a6e:	99 8f       	std	Y+25, r25	; 0x19
     a70:	88 8f       	std	Y+24, r24	; 0x18

00000a72 <.LBB40>:
     a72:	88 8d       	ldd	r24, Y+24	; 0x18
     a74:	99 8d       	ldd	r25, Y+25	; 0x19

00000a76 <.L1^B1>:
     a76:	01 97       	sbiw	r24, 0x01	; 1
     a78:	f1 f7       	brne	.-4      	; 0xa76 <.L1^B1>
     a7a:	99 8f       	std	Y+25, r25	; 0x19
     a7c:	88 8f       	std	Y+24, r24	; 0x18

00000a7e <.Loc.52>:
	...

00000a80 <.LBE40>:
			__ticks --;
     a80:	8e 89       	ldd	r24, Y+22	; 0x16
     a82:	9f 89       	ldd	r25, Y+23	; 0x17
     a84:	01 97       	sbiw	r24, 0x01	; 1
     a86:	9f 8b       	std	Y+23, r25	; 0x17
     a88:	8e 8b       	std	Y+22, r24	; 0x16

00000a8a <.L17>:
		while(__ticks)
     a8a:	8e 89       	ldd	r24, Y+22	; 0x16
     a8c:	9f 89       	ldd	r25, Y+23	; 0x17
     a8e:	00 97       	sbiw	r24, 0x00	; 0
     a90:	61 f7       	brne	.-40     	; 0xa6a <.L18>

00000a92 <.Loc.55>:
		return;
     a92:	56 c0       	rjmp	.+172    	; 0xb40 <.L9>

00000a94 <.L31>:
		__ticks = (uint16_t)__tmp;
     a94:	6a 89       	ldd	r22, Y+18	; 0x12
     a96:	7b 89       	ldd	r23, Y+19	; 0x13
     a98:	8c 89       	ldd	r24, Y+20	; 0x14
     a9a:	9d 89       	ldd	r25, Y+21	; 0x15
     a9c:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <__fixunssfsi>
     aa0:	21 96       	adiw	r28, 0x01	; 1
     aa2:	6c af       	std	Y+60, r22	; 0x3c
     aa4:	7d af       	std	Y+61, r23	; 0x3d
     aa6:	8e af       	std	Y+62, r24	; 0x3e
     aa8:	9f af       	std	Y+63, r25	; 0x3f
     aaa:	21 97       	sbiw	r28, 0x01	; 1
     aac:	ed ad       	ldd	r30, Y+61	; 0x3d
     aae:	fe ad       	ldd	r31, Y+62	; 0x3e
     ab0:	ff 8b       	std	Y+23, r31	; 0x17
     ab2:	ee 8b       	std	Y+22, r30	; 0x16

00000ab4 <.L14>:
     ab4:	8e 89       	ldd	r24, Y+22	; 0x16
     ab6:	9f 89       	ldd	r25, Y+23	; 0x17
     ab8:	9b 8f       	std	Y+27, r25	; 0x1b
     aba:	8a 8f       	std	Y+26, r24	; 0x1a

00000abc <.LBB42>:
     abc:	8a 8d       	ldd	r24, Y+26	; 0x1a
     abe:	9b 8d       	ldd	r25, Y+27	; 0x1b

00000ac0 <.L1^B2>:
     ac0:	01 97       	sbiw	r24, 0x01	; 1
     ac2:	f1 f7       	brne	.-4      	; 0xac0 <.L1^B2>
     ac4:	9b 8f       	std	Y+27, r25	; 0x1b
     ac6:	8a 8f       	std	Y+26, r24	; 0x1a

00000ac8 <.Loc.58>:
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
#endif /* __AVR_TINY__ */
}
     ac8:	3b c0       	rjmp	.+118    	; 0xb40 <.L9>

00000aca <.L29>:
	}
	else if (__tmp > 255)
     aca:	20 e0       	ldi	r18, 0x00	; 0
     acc:	30 e0       	ldi	r19, 0x00	; 0
     ace:	4f e7       	ldi	r20, 0x7F	; 127
     ad0:	53 e4       	ldi	r21, 0x43	; 67
     ad2:	6d 81       	ldd	r22, Y+5	; 0x05
     ad4:	7e 81       	ldd	r23, Y+6	; 0x06
     ad6:	8f 81       	ldd	r24, Y+7	; 0x07
     ad8:	98 85       	ldd	r25, Y+8	; 0x08
     ada:	0e 94 5d 0b 	call	0x16ba	; 0x16ba <__gesf2>
     ade:	88 23       	and	r24, r24
     ae0:	f9 f0       	breq	.+62     	; 0xb20 <.L32>
     ae2:	f4 f0       	brlt	.+60     	; 0xb20 <.L32>

00000ae4 <.LBB44>:
	{
		uint16_t __ticks=(uint16_t)__tmp2;
     ae4:	69 85       	ldd	r22, Y+9	; 0x09
     ae6:	7a 85       	ldd	r23, Y+10	; 0x0a
     ae8:	8b 85       	ldd	r24, Y+11	; 0x0b
     aea:	9c 85       	ldd	r25, Y+12	; 0x0c
     aec:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <__fixunssfsi>
     af0:	25 96       	adiw	r28, 0x05	; 5
     af2:	6c af       	std	Y+60, r22	; 0x3c
     af4:	7d af       	std	Y+61, r23	; 0x3d
     af6:	8e af       	std	Y+62, r24	; 0x3e
     af8:	9f af       	std	Y+63, r25	; 0x3f
     afa:	25 97       	sbiw	r28, 0x05	; 5
     afc:	23 96       	adiw	r28, 0x03	; 3
     afe:	8e ad       	ldd	r24, Y+62	; 0x3e
     b00:	9f ad       	ldd	r25, Y+63	; 0x3f
     b02:	23 97       	sbiw	r28, 0x03	; 3
     b04:	9d 8f       	std	Y+29, r25	; 0x1d
     b06:	8c 8f       	std	Y+28, r24	; 0x1c
     b08:	8c 8d       	ldd	r24, Y+28	; 0x1c
     b0a:	9d 8d       	ldd	r25, Y+29	; 0x1d
     b0c:	9f 8f       	std	Y+31, r25	; 0x1f
     b0e:	8e 8f       	std	Y+30, r24	; 0x1e

00000b10 <.LBB45>:
	__asm__ volatile (
     b10:	8e 8d       	ldd	r24, Y+30	; 0x1e
     b12:	9f 8d       	ldd	r25, Y+31	; 0x1f

00000b14 <.L1^B3>:
     b14:	01 97       	sbiw	r24, 0x01	; 1
     b16:	f1 f7       	brne	.-4      	; 0xb14 <.L1^B3>
     b18:	9f 8f       	std	Y+31, r25	; 0x1f
     b1a:	8e 8f       	std	Y+30, r24	; 0x1e

00000b1c <.Loc.62>:
	...

00000b1e <.LBE45>:
		_delay_loop_2(__ticks);
		return;
     b1e:	17 c0       	rjmp	.+46     	; 0xb4e <.L22>

00000b20 <.L32>:
	}
	else
		__ticks = (uint8_t)__tmp;
     b20:	6d 81       	ldd	r22, Y+5	; 0x05
     b22:	7e 81       	ldd	r23, Y+6	; 0x06
     b24:	8f 81       	ldd	r24, Y+7	; 0x07
     b26:	98 85       	ldd	r25, Y+8	; 0x08
     b28:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <__fixunssfsi>
     b2c:	29 96       	adiw	r28, 0x09	; 9
     b2e:	6c af       	std	Y+60, r22	; 0x3c
     b30:	7d af       	std	Y+61, r23	; 0x3d
     b32:	8e af       	std	Y+62, r24	; 0x3e
     b34:	9f af       	std	Y+63, r25	; 0x3f
     b36:	29 97       	sbiw	r28, 0x09	; 9
     b38:	26 96       	adiw	r28, 0x06	; 6
     b3a:	9f ad       	ldd	r25, Y+63	; 0x3f
     b3c:	26 97       	sbiw	r28, 0x06	; 6
     b3e:	9d 87       	std	Y+13, r25	; 0x0d

00000b40 <.L9>:
     b40:	8d 85       	ldd	r24, Y+13	; 0x0d
     b42:	88 a3       	std	Y+32, r24	; 0x20

00000b44 <.LBB47>:
	__asm__ volatile (
     b44:	88 a1       	ldd	r24, Y+32	; 0x20

00000b46 <.L1^B4>:
     b46:	8a 95       	dec	r24
     b48:	f1 f7       	brne	.-4      	; 0xb46 <.L1^B4>
     b4a:	88 a3       	std	Y+32, r24	; 0x20

00000b4c <.Loc.66>:
	...

00000b4e <.L22>:
    _delay_us(10);
    UltraPort &= (~(1<<Voorultrasoontrig));
     b4e:	85 e2       	ldi	r24, 0x25	; 37
     b50:	90 e0       	ldi	r25, 0x00	; 0
     b52:	dc 01       	movw	r26, r24
     b54:	2c 91       	ld	r18, X

00000b56 <.Loc.68>:
     b56:	85 e2       	ldi	r24, 0x25	; 37
     b58:	90 e0       	ldi	r25, 0x00	; 0

00000b5a <.Loc.69>:
     b5a:	2f 7e       	andi	r18, 0xEF	; 239
     b5c:	fc 01       	movw	r30, r24
     b5e:	20 83       	st	Z, r18

00000b60 <.Loc.70>:
}
     b60:	00 00       	nop
     b62:	c8 5b       	subi	r28, 0xB8	; 184
     b64:	df 4f       	sbci	r29, 0xFF	; 255
     b66:	0f b6       	in	r0, 0x3f	; 63
     b68:	f8 94       	cli
     b6a:	de bf       	out	0x3e, r29	; 62
     b6c:	0f be       	out	0x3f, r0	; 63
     b6e:	cd bf       	out	0x3d, r28	; 61
     b70:	df 91       	pop	r29
     b72:	cf 91       	pop	r28
     b74:	08 95       	ret

00000b76 <__vector_15>:
ISR(TIMER2_OVF_vect){
     b76:	1f 92       	push	r1
     b78:	0f 92       	push	r0
     b7a:	0f b6       	in	r0, 0x3f	; 63
     b7c:	0f 92       	push	r0
     b7e:	11 24       	eor	r1, r1
     b80:	8f 93       	push	r24
     b82:	9f 93       	push	r25
     b84:	cf 93       	push	r28
     b86:	df 93       	push	r29
     b88:	cd b7       	in	r28, 0x3d	; 61
     b8a:	de b7       	in	r29, 0x3e	; 62

00000b8c <.Loc.72>:
    count++;
     b8c:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <count>
     b90:	90 91 09 02 	lds	r25, 0x0209	; 0x800209 <count+0x1>
     b94:	01 96       	adiw	r24, 0x01	; 1
     b96:	90 93 09 02 	sts	0x0209, r25	; 0x800209 <count+0x1>
     b9a:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <count>

00000b9e <.Loc.73>:
}
     b9e:	00 00       	nop
     ba0:	df 91       	pop	r29
     ba2:	cf 91       	pop	r28
     ba4:	9f 91       	pop	r25
     ba6:	8f 91       	pop	r24
     ba8:	0f 90       	pop	r0
     baa:	0f be       	out	0x3f, r0	; 63
     bac:	0f 90       	pop	r0
     bae:	1f 90       	pop	r1
     bb0:	18 95       	reti

00000bb2 <main>:
7: Noodknop ingedrukt
8: Noodknop uitgedrukt
*/

int main(void)
{
     bb2:	cf 93       	push	r28
     bb4:	df 93       	push	r29
     bb6:	cd b7       	in	r28, 0x3d	; 61
     bb8:	de b7       	in	r29, 0x3e	; 62
     bba:	a6 97       	sbiw	r28, 0x26	; 38
     bbc:	0f b6       	in	r0, 0x3f	; 63
     bbe:	f8 94       	cli
     bc0:	de bf       	out	0x3e, r29	; 62
     bc2:	0f be       	out	0x3f, r0	; 63
     bc4:	cd bf       	out	0x3d, r28	; 61

00000bc6 <.Loc.75>:
    init();
     bc6:	0e 94 dc 08 	call	0x11b8	; 0x11b8 <init>

00000bca <.Loc.76>:

    initTimer();
     bca:	0e 94 a6 03 	call	0x74c	; 0x74c <initTimer>

00000bce <.Loc.77>:
    int waarde;

    int toestand = 0;
     bce:	1a 82       	std	Y+2, r1	; 0x02
     bd0:	19 82       	std	Y+1, r1	; 0x01

00000bd2 <.Loc.78>:

    DDRH |= (1 << PH6);
     bd2:	81 e0       	ldi	r24, 0x01	; 1
     bd4:	91 e0       	ldi	r25, 0x01	; 1
     bd6:	dc 01       	movw	r26, r24
     bd8:	2c 91       	ld	r18, X
     bda:	81 e0       	ldi	r24, 0x01	; 1
     bdc:	91 e0       	ldi	r25, 0x01	; 1

00000bde <.Loc.79>:
     bde:	20 64       	ori	r18, 0x40	; 64
     be0:	fc 01       	movw	r30, r24
     be2:	20 83       	st	Z, r18

00000be4 <.Loc.80>:
    PORTH &= ~(1<<PH6);
     be4:	82 e0       	ldi	r24, 0x02	; 2
     be6:	91 e0       	ldi	r25, 0x01	; 1
     be8:	dc 01       	movw	r26, r24
     bea:	2c 91       	ld	r18, X

00000bec <.Loc.81>:
     bec:	82 e0       	ldi	r24, 0x02	; 2
     bee:	91 e0       	ldi	r25, 0x01	; 1

00000bf0 <.Loc.82>:
     bf0:	2f 7b       	andi	r18, 0xBF	; 191
     bf2:	fc 01       	movw	r30, r24
     bf4:	20 83       	st	Z, r18

00000bf6 <.L77>:
    while(1)
    {
        waarde = GetDistance();
     bf6:	0e 94 d3 03 	call	0x7a6	; 0x7a6 <GetDistance>
     bfa:	9c 83       	std	Y+4, r25	; 0x04
     bfc:	8b 83       	std	Y+3, r24	; 0x03

00000bfe <.Loc.84>:

        if(Bluetooth_Getal == 2)//Bluetooth verbroken
     bfe:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <Bluetooth_Getal>
     c02:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <Bluetooth_Getal+0x1>

00000c06 <.Loc.85>:
     c06:	82 30       	cpi	r24, 0x02	; 2
     c08:	91 05       	cpc	r25, r1
     c0a:	11 f4       	brne	.+4      	; 0xc10 <.L35>

00000c0c <.Loc.86>:
        {
            toestand = 0;
     c0c:	1a 82       	std	Y+2, r1	; 0x02
     c0e:	19 82       	std	Y+1, r1	; 0x01

00000c10 <.L35>:
        }
        if(Bluetooth_Getal == 6)//Uitknop ingedrukt
     c10:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <Bluetooth_Getal>
     c14:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <Bluetooth_Getal+0x1>

00000c18 <.Loc.88>:
     c18:	86 30       	cpi	r24, 0x06	; 6
     c1a:	91 05       	cpc	r25, r1
     c1c:	21 f4       	brne	.+8      	; 0xc26 <.L36>

00000c1e <.Loc.89>:
        {
            toestand = 1;
     c1e:	81 e0       	ldi	r24, 0x01	; 1
     c20:	90 e0       	ldi	r25, 0x00	; 0
     c22:	9a 83       	std	Y+2, r25	; 0x02
     c24:	89 83       	std	Y+1, r24	; 0x01

00000c26 <.L36>:
        }
//        if(((Noodknopport & (1<<Noodknoppin)) == 0) || (Bluetooth_Getal == 7))
//        {
//            toestand = 99;
//        }
        if(((IRregister & (1 << IRbaklinks)) == 0) || ((IRregister & (1 << IRbakrechts)) == 0))//Plantenbak gedetecteerd
     c26:	83 e2       	ldi	r24, 0x23	; 35
     c28:	90 e0       	ldi	r25, 0x00	; 0
     c2a:	dc 01       	movw	r26, r24
     c2c:	8c 91       	ld	r24, X

00000c2e <.Loc.91>:
     c2e:	88 2f       	mov	r24, r24
     c30:	90 e0       	ldi	r25, 0x00	; 0
     c32:	80 71       	andi	r24, 0x10	; 16
     c34:	99 27       	eor	r25, r25

00000c36 <.Loc.92>:
     c36:	00 97       	sbiw	r24, 0x00	; 0
     c38:	51 f0       	breq	.+20     	; 0xc4e <.L37>

00000c3a <.Loc.93>:
     c3a:	83 e2       	ldi	r24, 0x23	; 35
     c3c:	90 e0       	ldi	r25, 0x00	; 0
     c3e:	fc 01       	movw	r30, r24
     c40:	80 81       	ld	r24, Z

00000c42 <.Loc.94>:
     c42:	88 2f       	mov	r24, r24
     c44:	90 e0       	ldi	r25, 0x00	; 0
     c46:	80 72       	andi	r24, 0x20	; 32
     c48:	99 27       	eor	r25, r25

00000c4a <.Loc.95>:
     c4a:	00 97       	sbiw	r24, 0x00	; 0
     c4c:	21 f4       	brne	.+8      	; 0xc56 <.L38>

00000c4e <.L37>:
        {
            toestand = 8;
     c4e:	88 e0       	ldi	r24, 0x08	; 8
     c50:	90 e0       	ldi	r25, 0x00	; 0
     c52:	9a 83       	std	Y+2, r25	; 0x02
     c54:	89 83       	std	Y+1, r24	; 0x01

00000c56 <.L38>:
        }
        if(waarde <= 30)//Voorultrasoon ziet object
     c56:	8b 81       	ldd	r24, Y+3	; 0x03
     c58:	9c 81       	ldd	r25, Y+4	; 0x04
     c5a:	8e 31       	cpi	r24, 0x1E	; 30
     c5c:	91 05       	cpc	r25, r1
     c5e:	09 f0       	breq	.+2      	; 0xc62 <.Loc.98>

00000c60 <L0^A>:
     c60:	24 f4       	brge	.+8      	; 0xc6a <.L39>

00000c62 <.Loc.98>:
        {
            toestand = 9;
     c62:	89 e0       	ldi	r24, 0x09	; 9
     c64:	90 e0       	ldi	r25, 0x00	; 0
     c66:	9a 83       	std	Y+2, r25	; 0x02
     c68:	89 83       	std	Y+1, r24	; 0x01

00000c6a <.L39>:
        }
        switch(toestand)
     c6a:	89 81       	ldd	r24, Y+1	; 0x01
     c6c:	9a 81       	ldd	r25, Y+2	; 0x02
     c6e:	89 30       	cpi	r24, 0x09	; 9
     c70:	91 05       	cpc	r25, r1
     c72:	09 f0       	breq	.+2      	; 0xc76 <L0^A+0x2>

00000c74 <L0^A>:
     c74:	cc f4       	brge	.+50     	; 0xca8 <.L40>
     c76:	89 81       	ldd	r24, Y+1	; 0x01
     c78:	9a 81       	ldd	r25, Y+2	; 0x02
     c7a:	99 23       	and	r25, r25
     c7c:	0c f4       	brge	.+2      	; 0xc80 <L0^A+0x2>

00000c7e <L0^A>:
     c7e:	bb cf       	rjmp	.-138    	; 0xbf6 <.L77>
     c80:	89 81       	ldd	r24, Y+1	; 0x01
     c82:	9a 81       	ldd	r25, Y+2	; 0x02
     c84:	09 2e       	mov	r0, r25
     c86:	00 0c       	add	r0, r0
     c88:	aa 0b       	sbc	r26, r26
     c8a:	bb 0b       	sbc	r27, r27
     c8c:	89 30       	cpi	r24, 0x09	; 9
     c8e:	91 05       	cpc	r25, r1
     c90:	a1 05       	cpc	r26, r1
     c92:	b1 05       	cpc	r27, r1
     c94:	11 f0       	breq	.+4      	; 0xc9a <L0^A+0x2>

00000c96 <L0^A>:
     c96:	08 f0       	brcs	.+2      	; 0xc9a <L0^A+0x2>

00000c98 <L0^A>:
     c98:	ae cf       	rjmp	.-164    	; 0xbf6 <.L77>
     c9a:	fc 01       	movw	r30, r24
     c9c:	88 27       	eor	r24, r24
     c9e:	ef 52       	subi	r30, 0x2F	; 47
     ca0:	f4 4f       	sbci	r31, 0xF4	; 244
     ca2:	8f 4f       	sbci	r24, 0xFF	; 255
     ca4:	0c 94 d4 09 	jmp	0x13a8	; 0x13a8 <__tablejump2__>

00000ca8 <.L40>:
     ca8:	89 81       	ldd	r24, Y+1	; 0x01
     caa:	9a 81       	ldd	r25, Y+2	; 0x02
     cac:	83 36       	cpi	r24, 0x63	; 99
     cae:	91 05       	cpc	r25, r1
     cb0:	09 f0       	breq	.+2      	; 0xcb4 <.Loc.100>

00000cb2 <L0^A>:
     cb2:	a1 cf       	rjmp	.-190    	; 0xbf6 <.L77>

00000cb4 <.Loc.100>:
        {
        case 99://Noodtoestand
            if(timerteller <= 30)
     cb4:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <timerteller>
     cb8:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <timerteller+0x1>

00000cbc <.Loc.101>:
     cbc:	8e 31       	cpi	r24, 0x1E	; 30
     cbe:	91 05       	cpc	r25, r1
     cc0:	09 f0       	breq	.+2      	; 0xcc4 <.Loc.102>

00000cc2 <L0^A>:
     cc2:	dc f4       	brge	.+54     	; 0xcfa <.L53>

00000cc4 <.Loc.102>:
            {
                PORT_buzzer &= ~(1<<buzzer);//buzzer
     cc4:	82 e0       	ldi	r24, 0x02	; 2
     cc6:	91 e0       	ldi	r25, 0x01	; 1
     cc8:	dc 01       	movw	r26, r24
     cca:	2c 91       	ld	r18, X

00000ccc <.Loc.103>:
     ccc:	82 e0       	ldi	r24, 0x02	; 2
     cce:	91 e0       	ldi	r25, 0x01	; 1

00000cd0 <.Loc.104>:
     cd0:	27 7f       	andi	r18, 0xF7	; 247
     cd2:	fc 01       	movw	r30, r24
     cd4:	20 83       	st	Z, r18

00000cd6 <.Loc.105>:
                PORT_LED &= ~(1<<LED_1);//LED
     cd6:	82 e0       	ldi	r24, 0x02	; 2
     cd8:	91 e0       	ldi	r25, 0x01	; 1
     cda:	dc 01       	movw	r26, r24
     cdc:	2c 91       	ld	r18, X

00000cde <.Loc.106>:
     cde:	82 e0       	ldi	r24, 0x02	; 2
     ce0:	91 e0       	ldi	r25, 0x01	; 1

00000ce2 <.Loc.107>:
     ce2:	2f 7e       	andi	r18, 0xEF	; 239
     ce4:	fc 01       	movw	r30, r24
     ce6:	20 83       	st	Z, r18

00000ce8 <.Loc.108>:
                PORT_LED &= ~(1<<LED_2);//LED
     ce8:	82 e0       	ldi	r24, 0x02	; 2
     cea:	91 e0       	ldi	r25, 0x01	; 1
     cec:	dc 01       	movw	r26, r24
     cee:	2c 91       	ld	r18, X

00000cf0 <.Loc.109>:
     cf0:	82 e0       	ldi	r24, 0x02	; 2
     cf2:	91 e0       	ldi	r25, 0x01	; 1

00000cf4 <.Loc.110>:
     cf4:	2f 7d       	andi	r18, 0xDF	; 223
     cf6:	fc 01       	movw	r30, r24
     cf8:	20 83       	st	Z, r18

00000cfa <.L53>:
            }
            if(timerteller >= 30)
     cfa:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <timerteller>
     cfe:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <timerteller+0x1>

00000d02 <.Loc.112>:
     d02:	8d 31       	cpi	r24, 0x1D	; 29
     d04:	91 05       	cpc	r25, r1
     d06:	41 f1       	breq	.+80     	; 0xd58 <.L54>
     d08:	3c f1       	brlt	.+78     	; 0xd58 <.L54>

00000d0a <.Loc.113>:
            {
                PORT_buzzer |= (1<<buzzer);//buzzer
     d0a:	82 e0       	ldi	r24, 0x02	; 2
     d0c:	91 e0       	ldi	r25, 0x01	; 1
     d0e:	dc 01       	movw	r26, r24
     d10:	2c 91       	ld	r18, X
     d12:	82 e0       	ldi	r24, 0x02	; 2
     d14:	91 e0       	ldi	r25, 0x01	; 1

00000d16 <.Loc.114>:
     d16:	28 60       	ori	r18, 0x08	; 8
     d18:	fc 01       	movw	r30, r24
     d1a:	20 83       	st	Z, r18

00000d1c <.Loc.115>:
                PORT_LED |= (1<<LED_1);//LED
     d1c:	82 e0       	ldi	r24, 0x02	; 2
     d1e:	91 e0       	ldi	r25, 0x01	; 1
     d20:	dc 01       	movw	r26, r24
     d22:	2c 91       	ld	r18, X
     d24:	82 e0       	ldi	r24, 0x02	; 2
     d26:	91 e0       	ldi	r25, 0x01	; 1

00000d28 <.Loc.116>:
     d28:	20 61       	ori	r18, 0x10	; 16
     d2a:	fc 01       	movw	r30, r24
     d2c:	20 83       	st	Z, r18

00000d2e <.Loc.117>:
                PORT_LED |= (1<<LED_2);//LED
     d2e:	82 e0       	ldi	r24, 0x02	; 2
     d30:	91 e0       	ldi	r25, 0x01	; 1
     d32:	dc 01       	movw	r26, r24
     d34:	2c 91       	ld	r18, X
     d36:	82 e0       	ldi	r24, 0x02	; 2
     d38:	91 e0       	ldi	r25, 0x01	; 1

00000d3a <.Loc.118>:
     d3a:	20 62       	ori	r18, 0x20	; 32
     d3c:	fc 01       	movw	r30, r24
     d3e:	20 83       	st	Z, r18

00000d40 <.Loc.119>:
                if(timerteller >= 60)
     d40:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <timerteller>
     d44:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <timerteller+0x1>

00000d48 <.Loc.120>:
     d48:	8b 33       	cpi	r24, 0x3B	; 59
     d4a:	91 05       	cpc	r25, r1
     d4c:	29 f0       	breq	.+10     	; 0xd58 <.L54>
     d4e:	24 f0       	brlt	.+8      	; 0xd58 <.L54>

00000d50 <.Loc.121>:
                {
                    timerteller = 0;
     d50:	10 92 07 02 	sts	0x0207, r1	; 0x800207 <timerteller+0x1>
     d54:	10 92 06 02 	sts	0x0206, r1	; 0x800206 <timerteller>

00000d58 <.L54>:
                }
            }
            if((Bluetooth_Getal == 8) && ((Noodknopport & (1<<Noodknoppin)) != 0))
     d58:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <Bluetooth_Getal>
     d5c:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <Bluetooth_Getal+0x1>

00000d60 <.Loc.123>:
     d60:	88 30       	cpi	r24, 0x08	; 8
     d62:	91 05       	cpc	r25, r1
     d64:	09 f0       	breq	.+2      	; 0xd68 <.Loc.124>

00000d66 <L0^A>:
     d66:	14 c2       	rjmp	.+1064   	; 0x1190 <.L82>

00000d68 <.Loc.124>:
     d68:	80 e3       	ldi	r24, 0x30	; 48
     d6a:	90 e0       	ldi	r25, 0x00	; 0
     d6c:	dc 01       	movw	r26, r24
     d6e:	8c 91       	ld	r24, X

00000d70 <.Loc.125>:
     d70:	88 2f       	mov	r24, r24
     d72:	90 e0       	ldi	r25, 0x00	; 0
     d74:	82 70       	andi	r24, 0x02	; 2
     d76:	99 27       	eor	r25, r25

00000d78 <.Loc.126>:
     d78:	00 97       	sbiw	r24, 0x00	; 0
     d7a:	09 f4       	brne	.+2      	; 0xd7e <.Loc.127>

00000d7c <L0^A>:
     d7c:	09 c2       	rjmp	.+1042   	; 0x1190 <.L82>

00000d7e <.Loc.127>:
            {
                toestand = 2;
     d7e:	82 e0       	ldi	r24, 0x02	; 2
     d80:	90 e0       	ldi	r25, 0x00	; 0
     d82:	9a 83       	std	Y+2, r25	; 0x02
     d84:	89 83       	std	Y+1, r24	; 0x01

00000d86 <.Loc.128>:
            }
            break;
     d86:	04 c2       	rjmp	.+1032   	; 0x1190 <.L82>

00000d88 <.L52>:
        case 0:
            PORTH &= ~(1<<PH6);
     d88:	82 e0       	ldi	r24, 0x02	; 2
     d8a:	91 e0       	ldi	r25, 0x01	; 1
     d8c:	fc 01       	movw	r30, r24
     d8e:	20 81       	ld	r18, Z

00000d90 <.Loc.130>:
     d90:	82 e0       	ldi	r24, 0x02	; 2
     d92:	91 e0       	ldi	r25, 0x01	; 1

00000d94 <.Loc.131>:
     d94:	2f 7b       	andi	r18, 0xBF	; 191
     d96:	dc 01       	movw	r26, r24
     d98:	2c 93       	st	X, r18

00000d9a <.Loc.132>:
            h_bridgeR_set_percentage(99);//motoren uit
     d9a:	83 e6       	ldi	r24, 0x63	; 99
     d9c:	0e 94 64 02 	call	0x4c8	; 0x4c8 <h_bridgeR_set_percentage>

00000da0 <.Loc.133>:
            h_bridgeL_set_percentage(99);
     da0:	83 e6       	ldi	r24, 0x63	; 99
     da2:	0e 94 a3 02 	call	0x546	; 0x546 <h_bridgeL_set_percentage>

00000da6 <.Loc.134>:
            if(Bluetooth_Getal == 1)//Bluetooth verbonden
     da6:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <Bluetooth_Getal>
     daa:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <Bluetooth_Getal+0x1>

00000dae <.Loc.135>:
     dae:	81 30       	cpi	r24, 0x01	; 1
     db0:	91 05       	cpc	r25, r1
     db2:	09 f0       	breq	.+2      	; 0xdb6 <.Loc.136>

00000db4 <L0^A>:
     db4:	ef c1       	rjmp	.+990    	; 0x1194 <.L83>

00000db6 <.Loc.136>:
            {
                toestand = 1;
     db6:	81 e0       	ldi	r24, 0x01	; 1
     db8:	90 e0       	ldi	r25, 0x00	; 0
     dba:	9a 83       	std	Y+2, r25	; 0x02
     dbc:	89 83       	std	Y+1, r24	; 0x01

00000dbe <.Loc.137>:
            }
            break;
     dbe:	ea c1       	rjmp	.+980    	; 0x1194 <.L83>

00000dc0 <.L51>:
        case 1://wachten op aan knop
            h_bridgeR_set_percentage(99);//motoren uit
     dc0:	83 e6       	ldi	r24, 0x63	; 99
     dc2:	0e 94 64 02 	call	0x4c8	; 0x4c8 <h_bridgeR_set_percentage>

00000dc6 <.Loc.139>:
            h_bridgeL_set_percentage(99);
     dc6:	83 e6       	ldi	r24, 0x63	; 99
     dc8:	0e 94 a3 02 	call	0x546	; 0x546 <h_bridgeL_set_percentage>

00000dcc <.Loc.140>:
            if(Bluetooth_Getal == 3)//Aanknop
     dcc:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <Bluetooth_Getal>
     dd0:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <Bluetooth_Getal+0x1>

00000dd4 <.Loc.141>:
     dd4:	83 30       	cpi	r24, 0x03	; 3
     dd6:	91 05       	cpc	r25, r1
     dd8:	09 f0       	breq	.+2      	; 0xddc <.Loc.142>

00000dda <L0^A>:
     dda:	de c1       	rjmp	.+956    	; 0x1198 <.L84>

00000ddc <.Loc.142>:
            {
                toestand = 2;
     ddc:	82 e0       	ldi	r24, 0x02	; 2
     dde:	90 e0       	ldi	r25, 0x00	; 0
     de0:	9a 83       	std	Y+2, r25	; 0x02
     de2:	89 83       	std	Y+1, r24	; 0x01

00000de4 <.Loc.143>:
            }
            break;
     de4:	d9 c1       	rjmp	.+946    	; 0x1198 <.L84>

00000de6 <.L50>:
        case 2://toestand keuze case
            if(Bluetooth_Getal == 4)//Autonoomknop
     de6:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <Bluetooth_Getal>
     dea:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <Bluetooth_Getal+0x1>

00000dee <.Loc.145>:
     dee:	84 30       	cpi	r24, 0x04	; 4
     df0:	91 05       	cpc	r25, r1
     df2:	09 f0       	breq	.+2      	; 0xdf6 <.Loc.146>

00000df4 <L0^A>:
     df4:	d3 c1       	rjmp	.+934    	; 0x119c <.L85>

00000df6 <.Loc.146>:
            {
                toestand = 3;
     df6:	83 e0       	ldi	r24, 0x03	; 3
     df8:	90 e0       	ldi	r25, 0x00	; 0
     dfa:	9a 83       	std	Y+2, r25	; 0x02
     dfc:	89 83       	std	Y+1, r24	; 0x01

00000dfe <.Loc.147>:
            }
            break;
     dfe:	ce c1       	rjmp	.+924    	; 0x119c <.L85>

00000e00 <.L49>:
        case 3://rijstrook inrijden
            h_bridgeR_set_percentage(snelheidrechtdoor);
     e00:	84 e1       	ldi	r24, 0x14	; 20
     e02:	0e 94 64 02 	call	0x4c8	; 0x4c8 <h_bridgeR_set_percentage>

00000e06 <.Loc.149>:
            h_bridgeL_set_percentage(snelheidrechtdoor);
     e06:	84 e1       	ldi	r24, 0x14	; 20
     e08:	0e 94 a3 02 	call	0x546	; 0x546 <h_bridgeL_set_percentage>

00000e0c <.Loc.150>:
            PORT |= (1 << PIN11);
     e0c:	82 e2       	ldi	r24, 0x22	; 34
     e0e:	90 e0       	ldi	r25, 0x00	; 0
     e10:	fc 01       	movw	r30, r24
     e12:	20 81       	ld	r18, Z
     e14:	82 e2       	ldi	r24, 0x22	; 34
     e16:	90 e0       	ldi	r25, 0x00	; 0

00000e18 <.Loc.151>:
     e18:	20 64       	ori	r18, 0x40	; 64
     e1a:	dc 01       	movw	r26, r24
     e1c:	2c 93       	st	X, r18

00000e1e <.Loc.152>:
            PORT &= ~(1 << PIN12);
     e1e:	82 e2       	ldi	r24, 0x22	; 34
     e20:	90 e0       	ldi	r25, 0x00	; 0
     e22:	fc 01       	movw	r30, r24
     e24:	20 81       	ld	r18, Z

00000e26 <.Loc.153>:
     e26:	82 e2       	ldi	r24, 0x22	; 34
     e28:	90 e0       	ldi	r25, 0x00	; 0

00000e2a <.Loc.154>:
     e2a:	2f 7d       	andi	r18, 0xDF	; 223
     e2c:	dc 01       	movw	r26, r24
     e2e:	2c 93       	st	X, r18

00000e30 <.Loc.155>:
            PORT &= ~(1 << PIN21);
     e30:	82 e2       	ldi	r24, 0x22	; 34
     e32:	90 e0       	ldi	r25, 0x00	; 0
     e34:	fc 01       	movw	r30, r24
     e36:	20 81       	ld	r18, Z

00000e38 <.Loc.156>:
     e38:	82 e2       	ldi	r24, 0x22	; 34
     e3a:	90 e0       	ldi	r25, 0x00	; 0

00000e3c <.Loc.157>:
     e3c:	2f 7e       	andi	r18, 0xEF	; 239
     e3e:	dc 01       	movw	r26, r24
     e40:	2c 93       	st	X, r18

00000e42 <.Loc.158>:
            PORT |= (1 << PIN22);
     e42:	82 e2       	ldi	r24, 0x22	; 34
     e44:	90 e0       	ldi	r25, 0x00	; 0
     e46:	fc 01       	movw	r30, r24
     e48:	20 81       	ld	r18, Z
     e4a:	82 e2       	ldi	r24, 0x22	; 34
     e4c:	90 e0       	ldi	r25, 0x00	; 0

00000e4e <.Loc.159>:
     e4e:	28 60       	ori	r18, 0x08	; 8
     e50:	dc 01       	movw	r26, r24
     e52:	2c 93       	st	X, r18

00000e54 <.Loc.160>:
            if(((IRregister & (1 << IRonderrechts)) == 0) && ((IRregister & (1 << IRonderlinks)) == 0))
     e54:	83 e2       	ldi	r24, 0x23	; 35
     e56:	90 e0       	ldi	r25, 0x00	; 0
     e58:	fc 01       	movw	r30, r24
     e5a:	80 81       	ld	r24, Z

00000e5c <.Loc.161>:
     e5c:	88 23       	and	r24, r24
     e5e:	0c f4       	brge	.+2      	; 0xe62 <.Loc.162>

00000e60 <L0^A>:
     e60:	9f c1       	rjmp	.+830    	; 0x11a0 <.L86>

00000e62 <.Loc.162>:
     e62:	83 e2       	ldi	r24, 0x23	; 35
     e64:	90 e0       	ldi	r25, 0x00	; 0
     e66:	dc 01       	movw	r26, r24
     e68:	8c 91       	ld	r24, X

00000e6a <.Loc.163>:
     e6a:	88 2f       	mov	r24, r24
     e6c:	90 e0       	ldi	r25, 0x00	; 0
     e6e:	80 74       	andi	r24, 0x40	; 64
     e70:	99 27       	eor	r25, r25

00000e72 <.Loc.164>:
     e72:	00 97       	sbiw	r24, 0x00	; 0
     e74:	09 f0       	breq	.+2      	; 0xe78 <.Loc.165>

00000e76 <L0^A>:
     e76:	94 c1       	rjmp	.+808    	; 0x11a0 <.L86>

00000e78 <.Loc.165>:
            {
                toestand = 4;
     e78:	84 e0       	ldi	r24, 0x04	; 4
     e7a:	90 e0       	ldi	r25, 0x00	; 0
     e7c:	9a 83       	std	Y+2, r25	; 0x02
     e7e:	89 83       	std	Y+1, r24	; 0x01

00000e80 <.Loc.166>:
            }
            break;
     e80:	8f c1       	rjmp	.+798    	; 0x11a0 <.L86>

00000e82 <.L48>:
        case 4://Tussen de balken rechtdoor
            //Motoren naar rechtdoor
            PORT |= (1 << PIN11);
     e82:	82 e2       	ldi	r24, 0x22	; 34
     e84:	90 e0       	ldi	r25, 0x00	; 0
     e86:	fc 01       	movw	r30, r24
     e88:	20 81       	ld	r18, Z
     e8a:	82 e2       	ldi	r24, 0x22	; 34
     e8c:	90 e0       	ldi	r25, 0x00	; 0

00000e8e <.Loc.168>:
     e8e:	20 64       	ori	r18, 0x40	; 64
     e90:	dc 01       	movw	r26, r24
     e92:	2c 93       	st	X, r18

00000e94 <.Loc.169>:
            PORT &= ~(1 << PIN12) ;
     e94:	82 e2       	ldi	r24, 0x22	; 34
     e96:	90 e0       	ldi	r25, 0x00	; 0
     e98:	fc 01       	movw	r30, r24
     e9a:	20 81       	ld	r18, Z

00000e9c <.Loc.170>:
     e9c:	82 e2       	ldi	r24, 0x22	; 34
     e9e:	90 e0       	ldi	r25, 0x00	; 0

00000ea0 <.Loc.171>:
     ea0:	2f 7d       	andi	r18, 0xDF	; 223
     ea2:	dc 01       	movw	r26, r24
     ea4:	2c 93       	st	X, r18

00000ea6 <.Loc.172>:
            PORT &= ~(1 << PIN21);
     ea6:	82 e2       	ldi	r24, 0x22	; 34
     ea8:	90 e0       	ldi	r25, 0x00	; 0
     eaa:	fc 01       	movw	r30, r24
     eac:	20 81       	ld	r18, Z

00000eae <.Loc.173>:
     eae:	82 e2       	ldi	r24, 0x22	; 34
     eb0:	90 e0       	ldi	r25, 0x00	; 0

00000eb2 <.Loc.174>:
     eb2:	2f 7e       	andi	r18, 0xEF	; 239
     eb4:	dc 01       	movw	r26, r24
     eb6:	2c 93       	st	X, r18

00000eb8 <.Loc.175>:
            PORT |= (1 << PIN22);
     eb8:	82 e2       	ldi	r24, 0x22	; 34
     eba:	90 e0       	ldi	r25, 0x00	; 0
     ebc:	fc 01       	movw	r30, r24
     ebe:	20 81       	ld	r18, Z
     ec0:	82 e2       	ldi	r24, 0x22	; 34
     ec2:	90 e0       	ldi	r25, 0x00	; 0

00000ec4 <.Loc.176>:
     ec4:	28 60       	ori	r18, 0x08	; 8
     ec6:	dc 01       	movw	r26, r24
     ec8:	2c 93       	st	X, r18

00000eca <.Loc.177>:
            h_bridgeR_set_percentage(snelheidrechtdoor);
     eca:	84 e1       	ldi	r24, 0x14	; 20
     ecc:	0e 94 64 02 	call	0x4c8	; 0x4c8 <h_bridgeR_set_percentage>

00000ed0 <.Loc.178>:
            h_bridgeL_set_percentage(snelheidrechtdoor);
     ed0:	84 e1       	ldi	r24, 0x14	; 20
     ed2:	0e 94 a3 02 	call	0x546	; 0x546 <h_bridgeL_set_percentage>

00000ed6 <.Loc.179>:
            if(IRregister & (1 << IRonderrechts))
     ed6:	83 e2       	ldi	r24, 0x23	; 35
     ed8:	90 e0       	ldi	r25, 0x00	; 0
     eda:	fc 01       	movw	r30, r24
     edc:	80 81       	ld	r24, Z

00000ede <.Loc.180>:
     ede:	88 23       	and	r24, r24
     ee0:	2c f4       	brge	.+10     	; 0xeec <.L60>

00000ee2 <.Loc.181>:
            {
                toestand = 5;
     ee2:	85 e0       	ldi	r24, 0x05	; 5
     ee4:	90 e0       	ldi	r25, 0x00	; 0
     ee6:	9a 83       	std	Y+2, r25	; 0x02
     ee8:	89 83       	std	Y+1, r24	; 0x01

00000eea <.Loc.182>:
            }
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
            {
                toestand = 7;
            }
            break;
     eea:	5c c1       	rjmp	.+696    	; 0x11a4 <.L87>

00000eec <.L60>:
            else if(IRregister & (1 << IRonderlinks))
     eec:	83 e2       	ldi	r24, 0x23	; 35
     eee:	90 e0       	ldi	r25, 0x00	; 0
     ef0:	dc 01       	movw	r26, r24
     ef2:	8c 91       	ld	r24, X

00000ef4 <.Loc.184>:
     ef4:	88 2f       	mov	r24, r24
     ef6:	90 e0       	ldi	r25, 0x00	; 0
     ef8:	80 74       	andi	r24, 0x40	; 64
     efa:	99 27       	eor	r25, r25

00000efc <.Loc.185>:
     efc:	00 97       	sbiw	r24, 0x00	; 0
     efe:	29 f0       	breq	.+10     	; 0xf0a <.L62>

00000f00 <.Loc.186>:
                toestand = 6;
     f00:	86 e0       	ldi	r24, 0x06	; 6
     f02:	90 e0       	ldi	r25, 0x00	; 0
     f04:	9a 83       	std	Y+2, r25	; 0x02
     f06:	89 83       	std	Y+1, r24	; 0x01

00000f08 <.Loc.187>:
            break;
     f08:	4d c1       	rjmp	.+666    	; 0x11a4 <.L87>

00000f0a <.L62>:
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
     f0a:	83 e2       	ldi	r24, 0x23	; 35
     f0c:	90 e0       	ldi	r25, 0x00	; 0
     f0e:	fc 01       	movw	r30, r24
     f10:	80 81       	ld	r24, Z

00000f12 <.Loc.189>:
     f12:	88 23       	and	r24, r24
     f14:	0c f0       	brlt	.+2      	; 0xf18 <.Loc.190>

00000f16 <L0^A>:
     f16:	46 c1       	rjmp	.+652    	; 0x11a4 <.L87>

00000f18 <.Loc.190>:
     f18:	83 e2       	ldi	r24, 0x23	; 35
     f1a:	90 e0       	ldi	r25, 0x00	; 0
     f1c:	dc 01       	movw	r26, r24
     f1e:	8c 91       	ld	r24, X

00000f20 <.Loc.191>:
     f20:	88 2f       	mov	r24, r24
     f22:	90 e0       	ldi	r25, 0x00	; 0
     f24:	80 74       	andi	r24, 0x40	; 64
     f26:	99 27       	eor	r25, r25

00000f28 <.Loc.192>:
     f28:	00 97       	sbiw	r24, 0x00	; 0
     f2a:	09 f4       	brne	.+2      	; 0xf2e <.Loc.193>

00000f2c <L0^A>:
     f2c:	3b c1       	rjmp	.+630    	; 0x11a4 <.L87>

00000f2e <.Loc.193>:
                toestand = 7;
     f2e:	87 e0       	ldi	r24, 0x07	; 7
     f30:	90 e0       	ldi	r25, 0x00	; 0
     f32:	9a 83       	std	Y+2, r25	; 0x02
     f34:	89 83       	std	Y+1, r24	; 0x01

00000f36 <.Loc.194>:
            break;
     f36:	36 c1       	rjmp	.+620    	; 0x11a4 <.L87>

00000f38 <.L47>:
        case 5://Naar links rijden
            //Motoren naar links
            h_bridgeR_set_percentage(snelheidhard);
     f38:	8d e2       	ldi	r24, 0x2D	; 45
     f3a:	0e 94 64 02 	call	0x4c8	; 0x4c8 <h_bridgeR_set_percentage>

00000f3e <.Loc.196>:
            h_bridgeL_set_percentage(snelheidzacht);
     f3e:	87 e3       	ldi	r24, 0x37	; 55
     f40:	0e 94 a3 02 	call	0x546	; 0x546 <h_bridgeL_set_percentage>

00000f44 <.Loc.197>:
            if(((IRregister & (1 << IRonderrechts)) == 0) && ((IRregister & (1 << IRonderlinks)) == 0))
     f44:	83 e2       	ldi	r24, 0x23	; 35
     f46:	90 e0       	ldi	r25, 0x00	; 0
     f48:	fc 01       	movw	r30, r24
     f4a:	80 81       	ld	r24, Z

00000f4c <.Loc.198>:
     f4c:	88 23       	and	r24, r24
     f4e:	7c f0       	brlt	.+30     	; 0xf6e <.L63>

00000f50 <.Loc.199>:
     f50:	83 e2       	ldi	r24, 0x23	; 35
     f52:	90 e0       	ldi	r25, 0x00	; 0
     f54:	dc 01       	movw	r26, r24
     f56:	8c 91       	ld	r24, X

00000f58 <.Loc.200>:
     f58:	88 2f       	mov	r24, r24
     f5a:	90 e0       	ldi	r25, 0x00	; 0
     f5c:	80 74       	andi	r24, 0x40	; 64
     f5e:	99 27       	eor	r25, r25

00000f60 <.Loc.201>:
     f60:	00 97       	sbiw	r24, 0x00	; 0
     f62:	29 f4       	brne	.+10     	; 0xf6e <.L63>

00000f64 <.Loc.202>:
            {
                toestand = 4;
     f64:	84 e0       	ldi	r24, 0x04	; 4
     f66:	90 e0       	ldi	r25, 0x00	; 0
     f68:	9a 83       	std	Y+2, r25	; 0x02
     f6a:	89 83       	std	Y+1, r24	; 0x01

00000f6c <.Loc.203>:
            }
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
            {
                toestand = 7;
            }
            break;
     f6c:	1d c1       	rjmp	.+570    	; 0x11a8 <.L88>

00000f6e <.L63>:
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
     f6e:	83 e2       	ldi	r24, 0x23	; 35
     f70:	90 e0       	ldi	r25, 0x00	; 0
     f72:	fc 01       	movw	r30, r24
     f74:	80 81       	ld	r24, Z

00000f76 <.Loc.205>:
     f76:	88 23       	and	r24, r24
     f78:	0c f0       	brlt	.+2      	; 0xf7c <.Loc.206>

00000f7a <L0^A>:
     f7a:	16 c1       	rjmp	.+556    	; 0x11a8 <.L88>

00000f7c <.Loc.206>:
     f7c:	83 e2       	ldi	r24, 0x23	; 35
     f7e:	90 e0       	ldi	r25, 0x00	; 0
     f80:	dc 01       	movw	r26, r24
     f82:	8c 91       	ld	r24, X

00000f84 <.Loc.207>:
     f84:	88 2f       	mov	r24, r24
     f86:	90 e0       	ldi	r25, 0x00	; 0
     f88:	80 74       	andi	r24, 0x40	; 64
     f8a:	99 27       	eor	r25, r25

00000f8c <.Loc.208>:
     f8c:	00 97       	sbiw	r24, 0x00	; 0
     f8e:	09 f4       	brne	.+2      	; 0xf92 <.Loc.209>

00000f90 <L0^A>:
     f90:	0b c1       	rjmp	.+534    	; 0x11a8 <.L88>

00000f92 <.Loc.209>:
                toestand = 7;
     f92:	87 e0       	ldi	r24, 0x07	; 7
     f94:	90 e0       	ldi	r25, 0x00	; 0
     f96:	9a 83       	std	Y+2, r25	; 0x02
     f98:	89 83       	std	Y+1, r24	; 0x01

00000f9a <.Loc.210>:
            break;
     f9a:	06 c1       	rjmp	.+524    	; 0x11a8 <.L88>

00000f9c <.L46>:
        case 6://Naar rechts rijden
            //Motoren naar rechts
            h_bridgeR_set_percentage(snelheidzacht);
     f9c:	87 e3       	ldi	r24, 0x37	; 55
     f9e:	0e 94 64 02 	call	0x4c8	; 0x4c8 <h_bridgeR_set_percentage>

00000fa2 <.Loc.212>:
            h_bridgeL_set_percentage(snelheidhard);
     fa2:	8d e2       	ldi	r24, 0x2D	; 45
     fa4:	0e 94 a3 02 	call	0x546	; 0x546 <h_bridgeL_set_percentage>

00000fa8 <.Loc.213>:
            if(((IRregister & (1 << IRonderrechts)) == 0) && ((IRregister & (1 << IRonderlinks)) == 0))
     fa8:	83 e2       	ldi	r24, 0x23	; 35
     faa:	90 e0       	ldi	r25, 0x00	; 0
     fac:	fc 01       	movw	r30, r24
     fae:	80 81       	ld	r24, Z

00000fb0 <.Loc.214>:
     fb0:	88 23       	and	r24, r24
     fb2:	7c f0       	brlt	.+30     	; 0xfd2 <.L65>

00000fb4 <.Loc.215>:
     fb4:	83 e2       	ldi	r24, 0x23	; 35
     fb6:	90 e0       	ldi	r25, 0x00	; 0
     fb8:	dc 01       	movw	r26, r24
     fba:	8c 91       	ld	r24, X

00000fbc <.Loc.216>:
     fbc:	88 2f       	mov	r24, r24
     fbe:	90 e0       	ldi	r25, 0x00	; 0
     fc0:	80 74       	andi	r24, 0x40	; 64
     fc2:	99 27       	eor	r25, r25

00000fc4 <.Loc.217>:
     fc4:	00 97       	sbiw	r24, 0x00	; 0
     fc6:	29 f4       	brne	.+10     	; 0xfd2 <.L65>

00000fc8 <.Loc.218>:
            {
                toestand = 4;
     fc8:	84 e0       	ldi	r24, 0x04	; 4
     fca:	90 e0       	ldi	r25, 0x00	; 0
     fcc:	9a 83       	std	Y+2, r25	; 0x02
     fce:	89 83       	std	Y+1, r24	; 0x01

00000fd0 <.Loc.219>:
            }
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
            {
                toestand = 7;
            }
            break;
     fd0:	ed c0       	rjmp	.+474    	; 0x11ac <.L89>

00000fd2 <.L65>:
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
     fd2:	83 e2       	ldi	r24, 0x23	; 35
     fd4:	90 e0       	ldi	r25, 0x00	; 0
     fd6:	fc 01       	movw	r30, r24
     fd8:	80 81       	ld	r24, Z

00000fda <.Loc.221>:
     fda:	88 23       	and	r24, r24
     fdc:	0c f0       	brlt	.+2      	; 0xfe0 <.Loc.222>

00000fde <L0^A>:
     fde:	e6 c0       	rjmp	.+460    	; 0x11ac <.L89>

00000fe0 <.Loc.222>:
     fe0:	83 e2       	ldi	r24, 0x23	; 35
     fe2:	90 e0       	ldi	r25, 0x00	; 0
     fe4:	dc 01       	movw	r26, r24
     fe6:	8c 91       	ld	r24, X

00000fe8 <.Loc.223>:
     fe8:	88 2f       	mov	r24, r24
     fea:	90 e0       	ldi	r25, 0x00	; 0
     fec:	80 74       	andi	r24, 0x40	; 64
     fee:	99 27       	eor	r25, r25

00000ff0 <.Loc.224>:
     ff0:	00 97       	sbiw	r24, 0x00	; 0
     ff2:	09 f4       	brne	.+2      	; 0xff6 <.Loc.225>

00000ff4 <L0^A>:
     ff4:	db c0       	rjmp	.+438    	; 0x11ac <.L89>

00000ff6 <.Loc.225>:
                toestand = 7;
     ff6:	87 e0       	ldi	r24, 0x07	; 7
     ff8:	90 e0       	ldi	r25, 0x00	; 0
     ffa:	9a 83       	std	Y+2, r25	; 0x02
     ffc:	89 83       	std	Y+1, r24	; 0x01

00000ffe <.Loc.226>:
            break;
     ffe:	d6 c0       	rjmp	.+428    	; 0x11ac <.L89>

00001000 <.L45>:
    1000:	80 e0       	ldi	r24, 0x00	; 0
    1002:	90 e0       	ldi	r25, 0x00	; 0
    1004:	aa ef       	ldi	r26, 0xFA	; 250
    1006:	b4 e4       	ldi	r27, 0x44	; 68
    1008:	8d 83       	std	Y+5, r24	; 0x05
    100a:	9e 83       	std	Y+6, r25	; 0x06
    100c:	af 83       	std	Y+7, r26	; 0x07
    100e:	b8 87       	std	Y+8, r27	; 0x08

00001010 <.LBB49>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    1010:	20 e0       	ldi	r18, 0x00	; 0
    1012:	30 e0       	ldi	r19, 0x00	; 0
    1014:	4a e7       	ldi	r20, 0x7A	; 122
    1016:	55 e4       	ldi	r21, 0x45	; 69
    1018:	6d 81       	ldd	r22, Y+5	; 0x05
    101a:	7e 81       	ldd	r23, Y+6	; 0x06
    101c:	8f 81       	ldd	r24, Y+7	; 0x07
    101e:	98 85       	ldd	r25, Y+8	; 0x08
    1020:	0e 94 62 0b 	call	0x16c4	; 0x16c4 <__mulsf3>
    1024:	6f 8b       	std	Y+23, r22	; 0x17
    1026:	78 8f       	std	Y+24, r23	; 0x18
    1028:	89 8f       	std	Y+25, r24	; 0x19
    102a:	9a 8f       	std	Y+26, r25	; 0x1a
    102c:	8f 89       	ldd	r24, Y+23	; 0x17
    102e:	98 8d       	ldd	r25, Y+24	; 0x18
    1030:	a9 8d       	ldd	r26, Y+25	; 0x19
    1032:	ba 8d       	ldd	r27, Y+26	; 0x1a
    1034:	89 87       	std	Y+9, r24	; 0x09
    1036:	9a 87       	std	Y+10, r25	; 0x0a
    1038:	ab 87       	std	Y+11, r26	; 0x0b
    103a:	bc 87       	std	Y+12, r27	; 0x0c

0000103c <.Loc.228>:
	if (__tmp < 1.0)
    103c:	20 e0       	ldi	r18, 0x00	; 0
    103e:	30 e0       	ldi	r19, 0x00	; 0
    1040:	40 e8       	ldi	r20, 0x80	; 128
    1042:	5f e3       	ldi	r21, 0x3F	; 63
    1044:	69 85       	ldd	r22, Y+9	; 0x09
    1046:	7a 85       	ldd	r23, Y+10	; 0x0a
    1048:	8b 85       	ldd	r24, Y+11	; 0x0b
    104a:	9c 85       	ldd	r25, Y+12	; 0x0c
    104c:	0e 94 fe 09 	call	0x13fc	; 0x13fc <__cmpsf2>
    1050:	88 23       	and	r24, r24
    1052:	2c f4       	brge	.+10     	; 0x105e <.L80>

00001054 <.Loc.229>:
		__ticks = 1;
    1054:	81 e0       	ldi	r24, 0x01	; 1
    1056:	90 e0       	ldi	r25, 0x00	; 0
    1058:	9e 87       	std	Y+14, r25	; 0x0e
    105a:	8d 87       	std	Y+13, r24	; 0x0d
    105c:	55 c0       	rjmp	.+170    	; 0x1108 <.L69>

0000105e <.L80>:
	else if (__tmp > 65535)
    105e:	20 e0       	ldi	r18, 0x00	; 0
    1060:	3f ef       	ldi	r19, 0xFF	; 255
    1062:	4f e7       	ldi	r20, 0x7F	; 127
    1064:	57 e4       	ldi	r21, 0x47	; 71
    1066:	69 85       	ldd	r22, Y+9	; 0x09
    1068:	7a 85       	ldd	r23, Y+10	; 0x0a
    106a:	8b 85       	ldd	r24, Y+11	; 0x0b
    106c:	9c 85       	ldd	r25, Y+12	; 0x0c
    106e:	0e 94 5d 0b 	call	0x16ba	; 0x16ba <__gesf2>
    1072:	88 23       	and	r24, r24
    1074:	d9 f1       	breq	.+118    	; 0x10ec <.L81>
    1076:	d4 f1       	brlt	.+116    	; 0x10ec <.L81>

00001078 <.Loc.231>:
		__ticks = (uint16_t) (__ms * 10.0);
    1078:	20 e0       	ldi	r18, 0x00	; 0
    107a:	30 e0       	ldi	r19, 0x00	; 0
    107c:	40 e2       	ldi	r20, 0x20	; 32
    107e:	51 e4       	ldi	r21, 0x41	; 65
    1080:	6d 81       	ldd	r22, Y+5	; 0x05
    1082:	7e 81       	ldd	r23, Y+6	; 0x06
    1084:	8f 81       	ldd	r24, Y+7	; 0x07
    1086:	98 85       	ldd	r25, Y+8	; 0x08
    1088:	0e 94 62 0b 	call	0x16c4	; 0x16c4 <__mulsf3>
    108c:	6b 8f       	std	Y+27, r22	; 0x1b
    108e:	7c 8f       	std	Y+28, r23	; 0x1c
    1090:	8d 8f       	std	Y+29, r24	; 0x1d
    1092:	9e 8f       	std	Y+30, r25	; 0x1e
    1094:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1096:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1098:	ad 8d       	ldd	r26, Y+29	; 0x1d
    109a:	be 8d       	ldd	r27, Y+30	; 0x1e
    109c:	8b 8b       	std	Y+19, r24	; 0x13
    109e:	9c 8b       	std	Y+20, r25	; 0x14
    10a0:	ad 8b       	std	Y+21, r26	; 0x15
    10a2:	be 8b       	std	Y+22, r27	; 0x16

000010a4 <.Loc.232>:
    10a4:	6b 89       	ldd	r22, Y+19	; 0x13
    10a6:	7c 89       	ldd	r23, Y+20	; 0x14
    10a8:	8d 89       	ldd	r24, Y+21	; 0x15
    10aa:	9e 89       	ldd	r25, Y+22	; 0x16
    10ac:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <__fixunssfsi>
    10b0:	6f 8f       	std	Y+31, r22	; 0x1f
    10b2:	78 a3       	std	Y+32, r23	; 0x20
    10b4:	89 a3       	std	Y+33, r24	; 0x21
    10b6:	9a a3       	std	Y+34, r25	; 0x22
    10b8:	af 8d       	ldd	r26, Y+31	; 0x1f
    10ba:	b8 a1       	ldd	r27, Y+32	; 0x20
    10bc:	be 87       	std	Y+14, r27	; 0x0e
    10be:	ad 87       	std	Y+13, r26	; 0x0d

000010c0 <.Loc.233>:
		while(__ticks)
    10c0:	10 c0       	rjmp	.+32     	; 0x10e2 <.L72>

000010c2 <.L73>:
    10c2:	80 e9       	ldi	r24, 0x90	; 144
    10c4:	91 e0       	ldi	r25, 0x01	; 1
    10c6:	98 8b       	std	Y+16, r25	; 0x10
    10c8:	8f 87       	std	Y+15, r24	; 0x0f

000010ca <.LBB51>:
	__asm__ volatile (
    10ca:	8f 85       	ldd	r24, Y+15	; 0x0f
    10cc:	98 89       	ldd	r25, Y+16	; 0x10

000010ce <.L1^B5>:
    10ce:	01 97       	sbiw	r24, 0x01	; 1
    10d0:	f1 f7       	brne	.-4      	; 0x10ce <.L1^B5>
    10d2:	98 8b       	std	Y+16, r25	; 0x10
    10d4:	8f 87       	std	Y+15, r24	; 0x0f

000010d6 <.Loc.235>:
	...

000010d8 <.LBE51>:
			__ticks --;
    10d8:	8d 85       	ldd	r24, Y+13	; 0x0d
    10da:	9e 85       	ldd	r25, Y+14	; 0x0e
    10dc:	01 97       	sbiw	r24, 0x01	; 1
    10de:	9e 87       	std	Y+14, r25	; 0x0e
    10e0:	8d 87       	std	Y+13, r24	; 0x0d

000010e2 <.L72>:
		while(__ticks)
    10e2:	8d 85       	ldd	r24, Y+13	; 0x0d
    10e4:	9e 85       	ldd	r25, Y+14	; 0x0e
    10e6:	00 97       	sbiw	r24, 0x00	; 0
    10e8:	61 f7       	brne	.-40     	; 0x10c2 <.L73>

000010ea <.Loc.238>:
		return;
    10ea:	19 c0       	rjmp	.+50     	; 0x111e <.L74>

000010ec <.L81>:
		__ticks = (uint16_t)__tmp;
    10ec:	69 85       	ldd	r22, Y+9	; 0x09
    10ee:	7a 85       	ldd	r23, Y+10	; 0x0a
    10f0:	8b 85       	ldd	r24, Y+11	; 0x0b
    10f2:	9c 85       	ldd	r25, Y+12	; 0x0c
    10f4:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <__fixunssfsi>
    10f8:	6b a3       	std	Y+35, r22	; 0x23
    10fa:	7c a3       	std	Y+36, r23	; 0x24
    10fc:	8d a3       	std	Y+37, r24	; 0x25
    10fe:	9e a3       	std	Y+38, r25	; 0x26
    1100:	eb a1       	ldd	r30, Y+35	; 0x23
    1102:	fc a1       	ldd	r31, Y+36	; 0x24
    1104:	fe 87       	std	Y+14, r31	; 0x0e
    1106:	ed 87       	std	Y+13, r30	; 0x0d

00001108 <.L69>:
    1108:	8d 85       	ldd	r24, Y+13	; 0x0d
    110a:	9e 85       	ldd	r25, Y+14	; 0x0e
    110c:	9a 8b       	std	Y+18, r25	; 0x12
    110e:	89 8b       	std	Y+17, r24	; 0x11

00001110 <.LBB53>:
    1110:	89 89       	ldd	r24, Y+17	; 0x11
    1112:	9a 89       	ldd	r25, Y+18	; 0x12

00001114 <.L1^B6>:
    1114:	01 97       	sbiw	r24, 0x01	; 1
    1116:	f1 f7       	brne	.-4      	; 0x1114 <.L1^B6>
    1118:	9a 8b       	std	Y+18, r25	; 0x12
    111a:	89 8b       	std	Y+17, r24	; 0x11

0000111c <.Loc.241>:
	...

0000111e <.L74>:
        case 7://Balken niet meer in zicht en bocht maken
            _delay_ms(2000);
            h_bridgeR_set_percentage(snelheidhard);
    111e:	8d e2       	ldi	r24, 0x2D	; 45
    1120:	0e 94 64 02 	call	0x4c8	; 0x4c8 <h_bridgeR_set_percentage>

00001124 <.Loc.243>:
            h_bridgeL_set_percentage(snelheidzacht);
    1124:	87 e3       	ldi	r24, 0x37	; 55
    1126:	0e 94 a3 02 	call	0x546	; 0x546 <h_bridgeL_set_percentage>

0000112a <.Loc.244>:
            if(((IRregister & (1 << IRonderlinks)) == 0) && ((IRregister & (1 << IRonderrechts)) == 0))
    112a:	83 e2       	ldi	r24, 0x23	; 35
    112c:	90 e0       	ldi	r25, 0x00	; 0
    112e:	dc 01       	movw	r26, r24
    1130:	8c 91       	ld	r24, X

00001132 <.Loc.245>:
    1132:	88 2f       	mov	r24, r24
    1134:	90 e0       	ldi	r25, 0x00	; 0
    1136:	80 74       	andi	r24, 0x40	; 64
    1138:	99 27       	eor	r25, r25

0000113a <.Loc.246>:
    113a:	00 97       	sbiw	r24, 0x00	; 0
    113c:	c9 f5       	brne	.+114    	; 0x11b0 <.L90>

0000113e <.Loc.247>:
    113e:	83 e2       	ldi	r24, 0x23	; 35
    1140:	90 e0       	ldi	r25, 0x00	; 0
    1142:	fc 01       	movw	r30, r24
    1144:	80 81       	ld	r24, Z

00001146 <.Loc.248>:
    1146:	88 23       	and	r24, r24
    1148:	9c f1       	brlt	.+102    	; 0x11b0 <.L90>

0000114a <.Loc.249>:
            {
                toestand = 4;
    114a:	84 e0       	ldi	r24, 0x04	; 4
    114c:	90 e0       	ldi	r25, 0x00	; 0
    114e:	9a 83       	std	Y+2, r25	; 0x02
    1150:	89 83       	std	Y+1, r24	; 0x01

00001152 <.Loc.250>:
            }
            break;
    1152:	2e c0       	rjmp	.+92     	; 0x11b0 <.L90>

00001154 <.L44>:
        case 8://signaleren
            h_bridgeR_set_percentage(snelheiduit);
    1154:	83 e6       	ldi	r24, 0x63	; 99
    1156:	0e 94 64 02 	call	0x4c8	; 0x4c8 <h_bridgeR_set_percentage>

0000115a <.Loc.252>:
            h_bridgeL_set_percentage(snelheiduit);
    115a:	83 e6       	ldi	r24, 0x63	; 99
    115c:	0e 94 a3 02 	call	0x546	; 0x546 <h_bridgeL_set_percentage>

00001160 <.Loc.253>:
            signaal_geven();
    1160:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <signaal_geven>

00001164 <.Loc.254>:
            toestand = 4;
    1164:	84 e0       	ldi	r24, 0x04	; 4
    1166:	90 e0       	ldi	r25, 0x00	; 0
    1168:	9a 83       	std	Y+2, r25	; 0x02
    116a:	89 83       	std	Y+1, r24	; 0x01

0000116c <.Loc.255>:
            break;
    116c:	24 c0       	rjmp	.+72     	; 0x11b6 <.L41>

0000116e <.L42>:
        case 9://Voorultrasoon ziet iets
            h_bridgeR_set_percentage(snelheiduit);
    116e:	83 e6       	ldi	r24, 0x63	; 99
    1170:	0e 94 64 02 	call	0x4c8	; 0x4c8 <h_bridgeR_set_percentage>

00001174 <.Loc.257>:
            h_bridgeL_set_percentage(snelheiduit);
    1174:	83 e6       	ldi	r24, 0x63	; 99
    1176:	0e 94 a3 02 	call	0x546	; 0x546 <h_bridgeL_set_percentage>

0000117a <.Loc.258>:
            if(waarde > 30)
    117a:	8b 81       	ldd	r24, Y+3	; 0x03
    117c:	9c 81       	ldd	r25, Y+4	; 0x04
    117e:	8e 31       	cpi	r24, 0x1E	; 30
    1180:	91 05       	cpc	r25, r1
    1182:	c1 f0       	breq	.+48     	; 0x11b4 <.L91>
    1184:	bc f0       	brlt	.+46     	; 0x11b4 <.L91>

00001186 <.Loc.259>:
            {
                toestand = 4;
    1186:	84 e0       	ldi	r24, 0x04	; 4
    1188:	90 e0       	ldi	r25, 0x00	; 0
    118a:	9a 83       	std	Y+2, r25	; 0x02
    118c:	89 83       	std	Y+1, r24	; 0x01

0000118e <.Loc.260>:
            }
            break;
    118e:	12 c0       	rjmp	.+36     	; 0x11b4 <.L91>

00001190 <.L82>:
            break;
    1190:	00 00       	nop
    1192:	31 cd       	rjmp	.-1438   	; 0xbf6 <.L77>

00001194 <.L83>:
            break;
    1194:	00 00       	nop
    1196:	2f cd       	rjmp	.-1442   	; 0xbf6 <.L77>

00001198 <.L84>:
            break;
    1198:	00 00       	nop
    119a:	2d cd       	rjmp	.-1446   	; 0xbf6 <.L77>

0000119c <.L85>:
            break;
    119c:	00 00       	nop
    119e:	2b cd       	rjmp	.-1450   	; 0xbf6 <.L77>

000011a0 <.L86>:
            break;
    11a0:	00 00       	nop
    11a2:	29 cd       	rjmp	.-1454   	; 0xbf6 <.L77>

000011a4 <.L87>:
            break;
    11a4:	00 00       	nop
    11a6:	27 cd       	rjmp	.-1458   	; 0xbf6 <.L77>

000011a8 <.L88>:
            break;
    11a8:	00 00       	nop
    11aa:	25 cd       	rjmp	.-1462   	; 0xbf6 <.L77>

000011ac <.L89>:
            break;
    11ac:	00 00       	nop
    11ae:	23 cd       	rjmp	.-1466   	; 0xbf6 <.L77>

000011b0 <.L90>:
            break;
    11b0:	00 00       	nop
    11b2:	21 cd       	rjmp	.-1470   	; 0xbf6 <.L77>

000011b4 <.L91>:
	...

000011b6 <.L41>:
        waarde = GetDistance();
    11b6:	1f cd       	rjmp	.-1474   	; 0xbf6 <.L77>

000011b8 <init>:

    return 0;
}

void init()
{
    11b8:	cf 93       	push	r28
    11ba:	df 93       	push	r29
    11bc:	cd b7       	in	r28, 0x3d	; 61
    11be:	de b7       	in	r29, 0x3e	; 62

000011c0 <.Loc.273>:
    initBluetooth();
    11c0:	0e 94 d7 00 	call	0x1ae	; 0x1ae <initBluetooth>

000011c4 <.Loc.274>:
    sei();
    11c4:	78 94       	sei

000011c6 <.Loc.275>:

    //timer PWM motorenR
    TCCR1B = (0 << CS12) | (0 << CS11) | (1 << CS10);
    11c6:	81 e8       	ldi	r24, 0x81	; 129
    11c8:	90 e0       	ldi	r25, 0x00	; 0

000011ca <.Loc.276>:
    11ca:	21 e0       	ldi	r18, 0x01	; 1
    11cc:	fc 01       	movw	r30, r24
    11ce:	20 83       	st	Z, r18

000011d0 <.Loc.277>:
    TIMSK1 = (1 << OCIE1A) | (1 << TOIE1);
    11d0:	8f e6       	ldi	r24, 0x6F	; 111
    11d2:	90 e0       	ldi	r25, 0x00	; 0

000011d4 <.Loc.278>:
    11d4:	23 e0       	ldi	r18, 0x03	; 3
    11d6:	fc 01       	movw	r30, r24
    11d8:	20 83       	st	Z, r18

000011da <.Loc.279>:

    OCR1A = 0;
    11da:	88 e8       	ldi	r24, 0x88	; 136
    11dc:	90 e0       	ldi	r25, 0x00	; 0

000011de <.Loc.280>:
    11de:	fc 01       	movw	r30, r24
    11e0:	11 82       	std	Z+1, r1	; 0x01
    11e2:	10 82       	st	Z, r1

000011e4 <.Loc.281>:
    //timer PWM motorenL
    TCCR3B = (0 << CS32) | (0 << CS31) | (1 << CS30);
    11e4:	81 e9       	ldi	r24, 0x91	; 145
    11e6:	90 e0       	ldi	r25, 0x00	; 0

000011e8 <.Loc.282>:
    11e8:	21 e0       	ldi	r18, 0x01	; 1
    11ea:	fc 01       	movw	r30, r24
    11ec:	20 83       	st	Z, r18

000011ee <.Loc.283>:
    TIMSK3 = (1 << OCIE3A) | (1 << TOIE3);
    11ee:	81 e7       	ldi	r24, 0x71	; 113
    11f0:	90 e0       	ldi	r25, 0x00	; 0

000011f2 <.Loc.284>:
    11f2:	23 e0       	ldi	r18, 0x03	; 3
    11f4:	fc 01       	movw	r30, r24
    11f6:	20 83       	st	Z, r18

000011f8 <.Loc.285>:

    OCR3A = 0;
    11f8:	88 e9       	ldi	r24, 0x98	; 152
    11fa:	90 e0       	ldi	r25, 0x00	; 0

000011fc <.Loc.286>:
    11fc:	fc 01       	movw	r30, r24
    11fe:	11 82       	std	Z+1, r1	; 0x01
    1200:	10 82       	st	Z, r1

00001202 <.Loc.287>:

    //timer buzzer
    TCCR0B = (1 << CS02) | (1 << CS00);
    1202:	85 e4       	ldi	r24, 0x45	; 69
    1204:	90 e0       	ldi	r25, 0x00	; 0

00001206 <.Loc.288>:
    1206:	25 e0       	ldi	r18, 0x05	; 5
    1208:	fc 01       	movw	r30, r24
    120a:	20 83       	st	Z, r18

0000120c <.Loc.289>:
    TIMSK0 |= (1 << TOIE0);
    120c:	8e e6       	ldi	r24, 0x6E	; 110
    120e:	90 e0       	ldi	r25, 0x00	; 0
    1210:	fc 01       	movw	r30, r24
    1212:	20 81       	ld	r18, Z
    1214:	8e e6       	ldi	r24, 0x6E	; 110
    1216:	90 e0       	ldi	r25, 0x00	; 0

00001218 <.Loc.290>:
    1218:	21 60       	ori	r18, 0x01	; 1
    121a:	fc 01       	movw	r30, r24
    121c:	20 83       	st	Z, r18

0000121e <.Loc.291>:

    //pinout h-brug
    DDR |= (1 << PEN1);
    121e:	81 e2       	ldi	r24, 0x21	; 33
    1220:	90 e0       	ldi	r25, 0x00	; 0
    1222:	fc 01       	movw	r30, r24
    1224:	20 81       	ld	r18, Z
    1226:	81 e2       	ldi	r24, 0x21	; 33
    1228:	90 e0       	ldi	r25, 0x00	; 0

0000122a <.Loc.292>:
    122a:	20 68       	ori	r18, 0x80	; 128
    122c:	fc 01       	movw	r30, r24
    122e:	20 83       	st	Z, r18

00001230 <.Loc.293>:
    DDR |= (1 << PIN11);
    1230:	81 e2       	ldi	r24, 0x21	; 33
    1232:	90 e0       	ldi	r25, 0x00	; 0
    1234:	fc 01       	movw	r30, r24
    1236:	20 81       	ld	r18, Z
    1238:	81 e2       	ldi	r24, 0x21	; 33
    123a:	90 e0       	ldi	r25, 0x00	; 0

0000123c <.Loc.294>:
    123c:	20 64       	ori	r18, 0x40	; 64
    123e:	fc 01       	movw	r30, r24
    1240:	20 83       	st	Z, r18

00001242 <.Loc.295>:
    DDR |= (1 << PIN12);
    1242:	81 e2       	ldi	r24, 0x21	; 33
    1244:	90 e0       	ldi	r25, 0x00	; 0
    1246:	fc 01       	movw	r30, r24
    1248:	20 81       	ld	r18, Z
    124a:	81 e2       	ldi	r24, 0x21	; 33
    124c:	90 e0       	ldi	r25, 0x00	; 0

0000124e <.Loc.296>:
    124e:	20 62       	ori	r18, 0x20	; 32
    1250:	fc 01       	movw	r30, r24
    1252:	20 83       	st	Z, r18

00001254 <.Loc.297>:
    DDR |= (1 << PIN21);
    1254:	81 e2       	ldi	r24, 0x21	; 33
    1256:	90 e0       	ldi	r25, 0x00	; 0
    1258:	fc 01       	movw	r30, r24
    125a:	20 81       	ld	r18, Z
    125c:	81 e2       	ldi	r24, 0x21	; 33
    125e:	90 e0       	ldi	r25, 0x00	; 0

00001260 <.Loc.298>:
    1260:	20 61       	ori	r18, 0x10	; 16
    1262:	fc 01       	movw	r30, r24
    1264:	20 83       	st	Z, r18

00001266 <.Loc.299>:
    DDR |= (1 << PIN22);
    1266:	81 e2       	ldi	r24, 0x21	; 33
    1268:	90 e0       	ldi	r25, 0x00	; 0
    126a:	fc 01       	movw	r30, r24
    126c:	20 81       	ld	r18, Z
    126e:	81 e2       	ldi	r24, 0x21	; 33
    1270:	90 e0       	ldi	r25, 0x00	; 0

00001272 <.Loc.300>:
    1272:	28 60       	ori	r18, 0x08	; 8
    1274:	fc 01       	movw	r30, r24
    1276:	20 83       	st	Z, r18

00001278 <.Loc.301>:
    DDR |= (1 << PEN2);
    1278:	81 e2       	ldi	r24, 0x21	; 33
    127a:	90 e0       	ldi	r25, 0x00	; 0
    127c:	fc 01       	movw	r30, r24
    127e:	20 81       	ld	r18, Z
    1280:	81 e2       	ldi	r24, 0x21	; 33
    1282:	90 e0       	ldi	r25, 0x00	; 0

00001284 <.Loc.302>:
    1284:	24 60       	ori	r18, 0x04	; 4
    1286:	fc 01       	movw	r30, r24
    1288:	20 83       	st	Z, r18

0000128a <.Loc.303>:

    //H-brug pinnen LOW
    PORT &= ~(1 << PEN1);
    128a:	82 e2       	ldi	r24, 0x22	; 34
    128c:	90 e0       	ldi	r25, 0x00	; 0
    128e:	fc 01       	movw	r30, r24
    1290:	20 81       	ld	r18, Z

00001292 <.Loc.304>:
    1292:	82 e2       	ldi	r24, 0x22	; 34
    1294:	90 e0       	ldi	r25, 0x00	; 0

00001296 <.Loc.305>:
    1296:	2f 77       	andi	r18, 0x7F	; 127
    1298:	fc 01       	movw	r30, r24
    129a:	20 83       	st	Z, r18

0000129c <.Loc.306>:
	PORT &= ~(1 << PIN11);
    129c:	82 e2       	ldi	r24, 0x22	; 34
    129e:	90 e0       	ldi	r25, 0x00	; 0
    12a0:	fc 01       	movw	r30, r24
    12a2:	20 81       	ld	r18, Z

000012a4 <.Loc.307>:
    12a4:	82 e2       	ldi	r24, 0x22	; 34
    12a6:	90 e0       	ldi	r25, 0x00	; 0

000012a8 <.Loc.308>:
    12a8:	2f 7b       	andi	r18, 0xBF	; 191
    12aa:	fc 01       	movw	r30, r24
    12ac:	20 83       	st	Z, r18

000012ae <.Loc.309>:
	PORT &= ~(1 << PIN12);
    12ae:	82 e2       	ldi	r24, 0x22	; 34
    12b0:	90 e0       	ldi	r25, 0x00	; 0
    12b2:	fc 01       	movw	r30, r24
    12b4:	20 81       	ld	r18, Z

000012b6 <.Loc.310>:
    12b6:	82 e2       	ldi	r24, 0x22	; 34
    12b8:	90 e0       	ldi	r25, 0x00	; 0

000012ba <.Loc.311>:
    12ba:	2f 7d       	andi	r18, 0xDF	; 223
    12bc:	fc 01       	movw	r30, r24
    12be:	20 83       	st	Z, r18

000012c0 <.Loc.312>:
	PORT &= ~(1 << PIN21);
    12c0:	82 e2       	ldi	r24, 0x22	; 34
    12c2:	90 e0       	ldi	r25, 0x00	; 0
    12c4:	fc 01       	movw	r30, r24
    12c6:	20 81       	ld	r18, Z

000012c8 <.Loc.313>:
    12c8:	82 e2       	ldi	r24, 0x22	; 34
    12ca:	90 e0       	ldi	r25, 0x00	; 0

000012cc <.Loc.314>:
    12cc:	2f 7e       	andi	r18, 0xEF	; 239
    12ce:	fc 01       	movw	r30, r24
    12d0:	20 83       	st	Z, r18

000012d2 <.Loc.315>:
	PORT &= ~(1 << PIN22);
    12d2:	82 e2       	ldi	r24, 0x22	; 34
    12d4:	90 e0       	ldi	r25, 0x00	; 0
    12d6:	fc 01       	movw	r30, r24
    12d8:	20 81       	ld	r18, Z

000012da <.Loc.316>:
    12da:	82 e2       	ldi	r24, 0x22	; 34
    12dc:	90 e0       	ldi	r25, 0x00	; 0

000012de <.Loc.317>:
    12de:	27 7f       	andi	r18, 0xF7	; 247
    12e0:	fc 01       	movw	r30, r24
    12e2:	20 83       	st	Z, r18

000012e4 <.Loc.318>:
	PORT &= ~(1 << PEN2);
    12e4:	82 e2       	ldi	r24, 0x22	; 34
    12e6:	90 e0       	ldi	r25, 0x00	; 0
    12e8:	fc 01       	movw	r30, r24
    12ea:	20 81       	ld	r18, Z

000012ec <.Loc.319>:
    12ec:	82 e2       	ldi	r24, 0x22	; 34
    12ee:	90 e0       	ldi	r25, 0x00	; 0

000012f0 <.Loc.320>:
    12f0:	2b 7f       	andi	r18, 0xFB	; 251
    12f2:	fc 01       	movw	r30, r24
    12f4:	20 83       	st	Z, r18

000012f6 <.Loc.321>:

	//LEDS
    DDR_LED |= (1<<LED_1) | (1<<LED_2);     // enable pins as output
    12f6:	81 e0       	ldi	r24, 0x01	; 1
    12f8:	91 e0       	ldi	r25, 0x01	; 1
    12fa:	fc 01       	movw	r30, r24
    12fc:	20 81       	ld	r18, Z
    12fe:	81 e0       	ldi	r24, 0x01	; 1
    1300:	91 e0       	ldi	r25, 0x01	; 1

00001302 <.Loc.322>:
    1302:	20 63       	ori	r18, 0x30	; 48
    1304:	fc 01       	movw	r30, r24
    1306:	20 83       	st	Z, r18

00001308 <.Loc.323>:
    PORT_LED &= ~(1<<LED_1) & ~(1<<LED_2);  // put pins low
    1308:	82 e0       	ldi	r24, 0x02	; 2
    130a:	91 e0       	ldi	r25, 0x01	; 1
    130c:	fc 01       	movw	r30, r24
    130e:	20 81       	ld	r18, Z

00001310 <.Loc.324>:
    1310:	82 e0       	ldi	r24, 0x02	; 2
    1312:	91 e0       	ldi	r25, 0x01	; 1

00001314 <.Loc.325>:
    1314:	2f 7c       	andi	r18, 0xCF	; 207
    1316:	fc 01       	movw	r30, r24
    1318:	20 83       	st	Z, r18

0000131a <.Loc.326>:
    //Buzzer
    DDR_buzzer |= (1<<buzzer);              // enable pins as output
    131a:	81 e0       	ldi	r24, 0x01	; 1
    131c:	91 e0       	ldi	r25, 0x01	; 1
    131e:	fc 01       	movw	r30, r24
    1320:	20 81       	ld	r18, Z
    1322:	81 e0       	ldi	r24, 0x01	; 1
    1324:	91 e0       	ldi	r25, 0x01	; 1

00001326 <.Loc.327>:
    1326:	28 60       	ori	r18, 0x08	; 8
    1328:	fc 01       	movw	r30, r24
    132a:	20 83       	st	Z, r18

0000132c <.Loc.328>:
    PORT_buzzer &= ~(1<<buzzer);            // put pins low
    132c:	82 e0       	ldi	r24, 0x02	; 2
    132e:	91 e0       	ldi	r25, 0x01	; 1
    1330:	fc 01       	movw	r30, r24
    1332:	20 81       	ld	r18, Z

00001334 <.Loc.329>:
    1334:	82 e0       	ldi	r24, 0x02	; 2
    1336:	91 e0       	ldi	r25, 0x01	; 1

00001338 <.Loc.330>:
    1338:	27 7f       	andi	r18, 0xF7	; 247
    133a:	fc 01       	movw	r30, r24
    133c:	20 83       	st	Z, r18

0000133e <.Loc.331>:

    //knoppen
	DDRF &= ~(1<<Noodknoppin);
    133e:	80 e3       	ldi	r24, 0x30	; 48
    1340:	90 e0       	ldi	r25, 0x00	; 0
    1342:	fc 01       	movw	r30, r24
    1344:	20 81       	ld	r18, Z

00001346 <.Loc.332>:
    1346:	80 e3       	ldi	r24, 0x30	; 48
    1348:	90 e0       	ldi	r25, 0x00	; 0

0000134a <.Loc.333>:
    134a:	2d 7f       	andi	r18, 0xFD	; 253
    134c:	fc 01       	movw	r30, r24
    134e:	20 83       	st	Z, r18

00001350 <.Loc.334>:
	PORTF |= (1<<Noodknoppin);   		// enAble alle knoppen voor input
    1350:	81 e3       	ldi	r24, 0x31	; 49
    1352:	90 e0       	ldi	r25, 0x00	; 0
    1354:	fc 01       	movw	r30, r24
    1356:	20 81       	ld	r18, Z
    1358:	81 e3       	ldi	r24, 0x31	; 49
    135a:	90 e0       	ldi	r25, 0x00	; 0

0000135c <.Loc.335>:
    135c:	22 60       	ori	r18, 0x02	; 2
    135e:	fc 01       	movw	r30, r24
    1360:	20 83       	st	Z, r18

00001362 <.Loc.336>:
}
    1362:	00 00       	nop
    1364:	df 91       	pop	r29
    1366:	cf 91       	pop	r28
    1368:	08 95       	ret

0000136a <__divmodsi4>:
    136a:	05 2e       	mov	r0, r21

0000136c <.Loc.1>:
    136c:	97 fb       	bst	r25, 7

0000136e <.Loc.2>:
    136e:	1e f4       	brtc	.+6      	; 0x1376 <.L^B1>

00001370 <.Loc.3>:
    1370:	00 94       	com	r0

00001372 <.Loc.4>:
    1372:	0e 94 cc 09 	call	0x1398	; 0x1398 <__negsi2>

00001376 <.L^B1>:
    1376:	57 fd       	sbrc	r21, 7

00001378 <.Loc.6>:
    1378:	07 d0       	rcall	.+14     	; 0x1388 <__divmodsi4_neg2>

0000137a <.Loc.7>:
    137a:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <__udivmodsi4>

0000137e <.Loc.8>:
    137e:	07 fc       	sbrc	r0, 7

00001380 <.Loc.9>:
    1380:	03 d0       	rcall	.+6      	; 0x1388 <__divmodsi4_neg2>

00001382 <.Loc.10>:
    1382:	4e f4       	brtc	.+18     	; 0x1396 <__divmodsi4_exit>

00001384 <.Loc.11>:
    1384:	0c 94 cc 09 	jmp	0x1398	; 0x1398 <__negsi2>

00001388 <__divmodsi4_neg2>:
    1388:	50 95       	com	r21

0000138a <.Loc.13>:
    138a:	40 95       	com	r20

0000138c <.Loc.14>:
    138c:	30 95       	com	r19

0000138e <.Loc.15>:
    138e:	21 95       	neg	r18

00001390 <.Loc.16>:
    1390:	3f 4f       	sbci	r19, 0xFF	; 255

00001392 <.Loc.17>:
    1392:	4f 4f       	sbci	r20, 0xFF	; 255

00001394 <.Loc.18>:
    1394:	5f 4f       	sbci	r21, 0xFF	; 255

00001396 <__divmodsi4_exit>:
    1396:	08 95       	ret

00001398 <__negsi2>:
    1398:	90 95       	com	r25
    139a:	80 95       	com	r24
    139c:	70 95       	com	r23
    139e:	61 95       	neg	r22
    13a0:	7f 4f       	sbci	r23, 0xFF	; 255
    13a2:	8f 4f       	sbci	r24, 0xFF	; 255
    13a4:	9f 4f       	sbci	r25, 0xFF	; 255

000013a6 <.Loc.1>:
    13a6:	08 95       	ret

000013a8 <__tablejump2__>:
    13a8:	ee 0f       	add	r30, r30

000013aa <.Loc.1>:
    13aa:	ff 1f       	adc	r31, r31

000013ac <.Loc.2>:
    13ac:	88 1f       	adc	r24, r24

000013ae <.Loc.3>:
    13ae:	8b bf       	out	0x3b, r24	; 59

000013b0 <.Loc.4>:
    13b0:	07 90       	elpm	r0, Z+

000013b2 <.Loc.5>:
    13b2:	f6 91       	elpm	r31, Z

000013b4 <.Loc.6>:
    13b4:	e0 2d       	mov	r30, r0

000013b6 <.Loc.7>:
    13b6:	19 94       	eijmp

000013b8 <__udivmodsi4>:
    13b8:	a1 e2       	ldi	r26, 0x21	; 33

000013ba <.Loc.1>:
    13ba:	1a 2e       	mov	r1, r26

000013bc <.Loc.2>:
    13bc:	aa 1b       	sub	r26, r26

000013be <.Loc.3>:
    13be:	bb 1b       	sub	r27, r27

000013c0 <.Loc.4>:
    13c0:	fd 01       	movw	r30, r26

000013c2 <.Loc.5>:
    13c2:	0d c0       	rjmp	.+26     	; 0x13de <__udivmodsi4_ep>

000013c4 <__udivmodsi4_loop>:
    13c4:	aa 1f       	adc	r26, r26

000013c6 <.Loc.7>:
    13c6:	bb 1f       	adc	r27, r27

000013c8 <.Loc.8>:
    13c8:	ee 1f       	adc	r30, r30

000013ca <.Loc.9>:
    13ca:	ff 1f       	adc	r31, r31

000013cc <.Loc.10>:
    13cc:	a2 17       	cp	r26, r18

000013ce <.Loc.11>:
    13ce:	b3 07       	cpc	r27, r19

000013d0 <.Loc.12>:
    13d0:	e4 07       	cpc	r30, r20

000013d2 <.Loc.13>:
    13d2:	f5 07       	cpc	r31, r21

000013d4 <.Loc.14>:
    13d4:	20 f0       	brcs	.+8      	; 0x13de <__udivmodsi4_ep>

000013d6 <.Loc.15>:
    13d6:	a2 1b       	sub	r26, r18

000013d8 <.Loc.16>:
    13d8:	b3 0b       	sbc	r27, r19

000013da <.Loc.17>:
    13da:	e4 0b       	sbc	r30, r20

000013dc <.Loc.18>:
    13dc:	f5 0b       	sbc	r31, r21

000013de <__udivmodsi4_ep>:
    13de:	66 1f       	adc	r22, r22

000013e0 <.Loc.20>:
    13e0:	77 1f       	adc	r23, r23

000013e2 <.Loc.21>:
    13e2:	88 1f       	adc	r24, r24

000013e4 <.Loc.22>:
    13e4:	99 1f       	adc	r25, r25

000013e6 <.Loc.23>:
    13e6:	1a 94       	dec	r1

000013e8 <.Loc.24>:
    13e8:	69 f7       	brne	.-38     	; 0x13c4 <__udivmodsi4_loop>

000013ea <.Loc.25>:
    13ea:	60 95       	com	r22

000013ec <.Loc.26>:
    13ec:	70 95       	com	r23

000013ee <.Loc.27>:
    13ee:	80 95       	com	r24

000013f0 <.Loc.28>:
    13f0:	90 95       	com	r25

000013f2 <.Loc.29>:
    13f2:	9b 01       	movw	r18, r22

000013f4 <.Loc.30>:
    13f4:	ac 01       	movw	r20, r24

000013f6 <.Loc.31>:
    13f6:	bd 01       	movw	r22, r26

000013f8 <.Loc.32>:
    13f8:	cf 01       	movw	r24, r30

000013fa <.Loc.33>:
    13fa:	08 95       	ret

000013fc <__cmpsf2>:
    13fc:	0e 94 e8 0a 	call	0x15d0	; 0x15d0 <__fp_cmp>
    1400:	08 f4       	brcc	.+2      	; 0x1404 <.L1^B1>
    1402:	81 e0       	ldi	r24, 0x01	; 1

00001404 <.L1^B1>:
    1404:	08 95       	ret

00001406 <__divsf3>:
    1406:	0e 94 17 0a 	call	0x142e	; 0x142e <__divsf3x>
    140a:	0c 94 23 0b 	jmp	0x1646	; 0x1646 <__fp_round>

0000140e <.L^B1>:
    140e:	0e 94 1c 0b 	call	0x1638	; 0x1638 <__fp_pscB>
    1412:	58 f0       	brcs	.+22     	; 0x142a <.L_nan>
    1414:	0e 94 15 0b 	call	0x162a	; 0x162a <__fp_pscA>
    1418:	40 f0       	brcs	.+16     	; 0x142a <.L_nan>
    141a:	29 f4       	brne	.+10     	; 0x1426 <.L_zr>
    141c:	5f 3f       	cpi	r21, 0xFF	; 255
    141e:	29 f0       	breq	.+10     	; 0x142a <.L_nan>

00001420 <.L_inf>:
    1420:	0c 94 0c 0b 	jmp	0x1618	; 0x1618 <__fp_inf>

00001424 <.L1^B1>:
    1424:	51 11       	cpse	r21, r1

00001426 <.L_zr>:
    1426:	0c 94 57 0b 	jmp	0x16ae	; 0x16ae <__fp_szero>

0000142a <.L_nan>:
    142a:	0c 94 12 0b 	jmp	0x1624	; 0x1624 <__fp_nan>

0000142e <__divsf3x>:
    142e:	0e 94 34 0b 	call	0x1668	; 0x1668 <__fp_split3>
    1432:	68 f3       	brcs	.-38     	; 0x140e <.L^B1>

00001434 <__divsf3_pse>:
    1434:	99 23       	and	r25, r25
    1436:	b1 f3       	breq	.-20     	; 0x1424 <.L1^B1>
    1438:	55 23       	and	r21, r21
    143a:	91 f3       	breq	.-28     	; 0x1420 <.L_inf>
    143c:	95 1b       	sub	r25, r21
    143e:	55 0b       	sbc	r21, r21
    1440:	bb 27       	eor	r27, r27
    1442:	aa 27       	eor	r26, r26

00001444 <.L2^B1>:
    1444:	62 17       	cp	r22, r18
    1446:	73 07       	cpc	r23, r19
    1448:	84 07       	cpc	r24, r20
    144a:	38 f0       	brcs	.+14     	; 0x145a <.L3^B1>
    144c:	9f 5f       	subi	r25, 0xFF	; 255
    144e:	5f 4f       	sbci	r21, 0xFF	; 255
    1450:	22 0f       	add	r18, r18
    1452:	33 1f       	adc	r19, r19
    1454:	44 1f       	adc	r20, r20
    1456:	aa 1f       	adc	r26, r26
    1458:	a9 f3       	breq	.-22     	; 0x1444 <.L2^B1>

0000145a <.L3^B1>:
    145a:	35 d0       	rcall	.+106    	; 0x14c6 <.L_div>
    145c:	0e 2e       	mov	r0, r30
    145e:	3a f0       	brmi	.+14     	; 0x146e <.L5^B1>

00001460 <.L4^B1>:
    1460:	e0 e8       	ldi	r30, 0x80	; 128
    1462:	32 d0       	rcall	.+100    	; 0x14c8 <.L_div1>
    1464:	91 50       	subi	r25, 0x01	; 1
    1466:	50 40       	sbci	r21, 0x00	; 0
    1468:	e6 95       	lsr	r30
    146a:	00 1c       	adc	r0, r0
    146c:	ca f7       	brpl	.-14     	; 0x1460 <.L4^B1>

0000146e <.L5^B1>:
    146e:	2b d0       	rcall	.+86     	; 0x14c6 <.L_div>
    1470:	fe 2f       	mov	r31, r30
    1472:	29 d0       	rcall	.+82     	; 0x14c6 <.L_div>
    1474:	66 0f       	add	r22, r22
    1476:	77 1f       	adc	r23, r23
    1478:	88 1f       	adc	r24, r24
    147a:	bb 1f       	adc	r27, r27
    147c:	26 17       	cp	r18, r22
    147e:	37 07       	cpc	r19, r23
    1480:	48 07       	cpc	r20, r24
    1482:	ab 07       	cpc	r26, r27
    1484:	b0 e8       	ldi	r27, 0x80	; 128
    1486:	09 f0       	breq	.+2      	; 0x148a <.L4^B2>
    1488:	bb 0b       	sbc	r27, r27

0000148a <.L4^B2>:
    148a:	80 2d       	mov	r24, r0
    148c:	bf 01       	movw	r22, r30
    148e:	ff 27       	eor	r31, r31
    1490:	93 58       	subi	r25, 0x83	; 131
    1492:	5f 4f       	sbci	r21, 0xFF	; 255
    1494:	3a f0       	brmi	.+14     	; 0x14a4 <.L13^B1>
    1496:	9e 3f       	cpi	r25, 0xFE	; 254
    1498:	51 05       	cpc	r21, r1
    149a:	78 f0       	brcs	.+30     	; 0x14ba <.L15^B1>
    149c:	0c 94 0c 0b 	jmp	0x1618	; 0x1618 <__fp_inf>

000014a0 <.L12^B1>:
    14a0:	0c 94 57 0b 	jmp	0x16ae	; 0x16ae <__fp_szero>

000014a4 <.L13^B1>:
    14a4:	5f 3f       	cpi	r21, 0xFF	; 255
    14a6:	e4 f3       	brlt	.-8      	; 0x14a0 <.L12^B1>
    14a8:	98 3e       	cpi	r25, 0xE8	; 232
    14aa:	d4 f3       	brlt	.-12     	; 0x14a0 <.L12^B1>

000014ac <.L14^B1>:
    14ac:	86 95       	lsr	r24
    14ae:	77 95       	ror	r23
    14b0:	67 95       	ror	r22
    14b2:	b7 95       	ror	r27
    14b4:	f7 95       	ror	r31
    14b6:	9f 5f       	subi	r25, 0xFF	; 255
    14b8:	c9 f7       	brne	.-14     	; 0x14ac <.L14^B1>

000014ba <.L15^B1>:
    14ba:	88 0f       	add	r24, r24
    14bc:	91 1d       	adc	r25, r1
    14be:	96 95       	lsr	r25
    14c0:	87 95       	ror	r24
    14c2:	97 f9       	bld	r25, 7
    14c4:	08 95       	ret

000014c6 <.L_div>:
    14c6:	e1 e0       	ldi	r30, 0x01	; 1

000014c8 <.L_div1>:
    14c8:	66 0f       	add	r22, r22
    14ca:	77 1f       	adc	r23, r23
    14cc:	88 1f       	adc	r24, r24
    14ce:	bb 1f       	adc	r27, r27
    14d0:	62 17       	cp	r22, r18
    14d2:	73 07       	cpc	r23, r19
    14d4:	84 07       	cpc	r24, r20
    14d6:	ba 07       	cpc	r27, r26
    14d8:	20 f0       	brcs	.+8      	; 0x14e2 <.L2^B2>
    14da:	62 1b       	sub	r22, r18
    14dc:	73 0b       	sbc	r23, r19
    14de:	84 0b       	sbc	r24, r20
    14e0:	ba 0b       	sbc	r27, r26

000014e2 <.L2^B2>:
    14e2:	ee 1f       	adc	r30, r30
    14e4:	88 f7       	brcc	.-30     	; 0x14c8 <.L_div1>
    14e6:	e0 95       	com	r30
    14e8:	08 95       	ret

000014ea <__fixsfsi>:
    14ea:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <__fixunssfsi>
    14ee:	68 94       	set
    14f0:	b1 11       	cpse	r27, r1
    14f2:	0c 94 57 0b 	jmp	0x16ae	; 0x16ae <__fp_szero>
    14f6:	08 95       	ret

000014f8 <__fixunssfsi>:
    14f8:	0e 94 3c 0b 	call	0x1678	; 0x1678 <__fp_splitA>
    14fc:	88 f0       	brcs	.+34     	; 0x1520 <.L_err>
    14fe:	9f 57       	subi	r25, 0x7F	; 127
    1500:	98 f0       	brcs	.+38     	; 0x1528 <.L_zr>
    1502:	b9 2f       	mov	r27, r25
    1504:	99 27       	eor	r25, r25
    1506:	b7 51       	subi	r27, 0x17	; 23
    1508:	b0 f0       	brcs	.+44     	; 0x1536 <.L4^B1>
    150a:	e1 f0       	breq	.+56     	; 0x1544 <.L_sign>

0000150c <.L1^B1>:
    150c:	66 0f       	add	r22, r22
    150e:	77 1f       	adc	r23, r23
    1510:	88 1f       	adc	r24, r24
    1512:	99 1f       	adc	r25, r25
    1514:	1a f0       	brmi	.+6      	; 0x151c <.L2^B1>
    1516:	ba 95       	dec	r27
    1518:	c9 f7       	brne	.-14     	; 0x150c <.L1^B1>
    151a:	14 c0       	rjmp	.+40     	; 0x1544 <.L_sign>

0000151c <.L2^B1>:
    151c:	b1 30       	cpi	r27, 0x01	; 1
    151e:	91 f0       	breq	.+36     	; 0x1544 <.L_sign>

00001520 <.L_err>:
    1520:	0e 94 56 0b 	call	0x16ac	; 0x16ac <__fp_zero>
    1524:	b1 e0       	ldi	r27, 0x01	; 1
    1526:	08 95       	ret

00001528 <.L_zr>:
    1528:	0c 94 56 0b 	jmp	0x16ac	; 0x16ac <__fp_zero>

0000152c <.L3^B1>:
    152c:	67 2f       	mov	r22, r23
    152e:	78 2f       	mov	r23, r24
    1530:	88 27       	eor	r24, r24
    1532:	b8 5f       	subi	r27, 0xF8	; 248
    1534:	39 f0       	breq	.+14     	; 0x1544 <.L_sign>

00001536 <.L4^B1>:
    1536:	b9 3f       	cpi	r27, 0xF9	; 249
    1538:	cc f3       	brlt	.-14     	; 0x152c <.L3^B1>

0000153a <.L5^B1>:
    153a:	86 95       	lsr	r24
    153c:	77 95       	ror	r23
    153e:	67 95       	ror	r22
    1540:	b3 95       	inc	r27
    1542:	d9 f7       	brne	.-10     	; 0x153a <.L5^B1>

00001544 <.L_sign>:
    1544:	3e f4       	brtc	.+14     	; 0x1554 <.L6^B1>
    1546:	90 95       	com	r25
    1548:	80 95       	com	r24
    154a:	70 95       	com	r23
    154c:	61 95       	neg	r22
    154e:	7f 4f       	sbci	r23, 0xFF	; 255
    1550:	8f 4f       	sbci	r24, 0xFF	; 255
    1552:	9f 4f       	sbci	r25, 0xFF	; 255

00001554 <.L6^B1>:
    1554:	08 95       	ret

00001556 <__floatunsisf>:
    1556:	e8 94       	clt
    1558:	09 c0       	rjmp	.+18     	; 0x156c <.L1^B1>

0000155a <__floatsisf>:
    155a:	97 fb       	bst	r25, 7
    155c:	3e f4       	brtc	.+14     	; 0x156c <.L1^B1>
    155e:	90 95       	com	r25
    1560:	80 95       	com	r24
    1562:	70 95       	com	r23
    1564:	61 95       	neg	r22
    1566:	7f 4f       	sbci	r23, 0xFF	; 255
    1568:	8f 4f       	sbci	r24, 0xFF	; 255
    156a:	9f 4f       	sbci	r25, 0xFF	; 255

0000156c <.L1^B1>:
    156c:	99 23       	and	r25, r25
    156e:	a9 f0       	breq	.+42     	; 0x159a <.L4^B1>
    1570:	f9 2f       	mov	r31, r25
    1572:	96 e9       	ldi	r25, 0x96	; 150
    1574:	bb 27       	eor	r27, r27

00001576 <.L2^B1>:
    1576:	93 95       	inc	r25
    1578:	f6 95       	lsr	r31
    157a:	87 95       	ror	r24
    157c:	77 95       	ror	r23
    157e:	67 95       	ror	r22
    1580:	b7 95       	ror	r27
    1582:	f1 11       	cpse	r31, r1
    1584:	f8 cf       	rjmp	.-16     	; 0x1576 <.L2^B1>
    1586:	fa f4       	brpl	.+62     	; 0x15c6 <.L_pack>
    1588:	bb 0f       	add	r27, r27
    158a:	11 f4       	brne	.+4      	; 0x1590 <.L3^B1>
    158c:	60 ff       	sbrs	r22, 0
    158e:	1b c0       	rjmp	.+54     	; 0x15c6 <.L_pack>

00001590 <.L3^B1>:
    1590:	6f 5f       	subi	r22, 0xFF	; 255
    1592:	7f 4f       	sbci	r23, 0xFF	; 255
    1594:	8f 4f       	sbci	r24, 0xFF	; 255
    1596:	9f 4f       	sbci	r25, 0xFF	; 255
    1598:	16 c0       	rjmp	.+44     	; 0x15c6 <.L_pack>

0000159a <.L4^B1>:
    159a:	88 23       	and	r24, r24
    159c:	11 f0       	breq	.+4      	; 0x15a2 <.L5^B1>
    159e:	96 e9       	ldi	r25, 0x96	; 150
    15a0:	11 c0       	rjmp	.+34     	; 0x15c4 <.L8^B1>

000015a2 <.L5^B1>:
    15a2:	77 23       	and	r23, r23
    15a4:	21 f0       	breq	.+8      	; 0x15ae <.L6^B1>
    15a6:	9e e8       	ldi	r25, 0x8E	; 142
    15a8:	87 2f       	mov	r24, r23
    15aa:	76 2f       	mov	r23, r22
    15ac:	05 c0       	rjmp	.+10     	; 0x15b8 <.L7^B1>

000015ae <.L6^B1>:
    15ae:	66 23       	and	r22, r22
    15b0:	71 f0       	breq	.+28     	; 0x15ce <.L9^B1>
    15b2:	96 e8       	ldi	r25, 0x86	; 134
    15b4:	86 2f       	mov	r24, r22
    15b6:	70 e0       	ldi	r23, 0x00	; 0

000015b8 <.L7^B1>:
    15b8:	60 e0       	ldi	r22, 0x00	; 0
    15ba:	2a f0       	brmi	.+10     	; 0x15c6 <.L_pack>

000015bc <.L10^B1>:
    15bc:	9a 95       	dec	r25
    15be:	66 0f       	add	r22, r22
    15c0:	77 1f       	adc	r23, r23
    15c2:	88 1f       	adc	r24, r24

000015c4 <.L8^B1>:
    15c4:	da f7       	brpl	.-10     	; 0x15bc <.L10^B1>

000015c6 <.L_pack>:
    15c6:	88 0f       	add	r24, r24
    15c8:	96 95       	lsr	r25
    15ca:	87 95       	ror	r24
    15cc:	97 f9       	bld	r25, 7

000015ce <.L9^B1>:
    15ce:	08 95       	ret

000015d0 <__fp_cmp>:
    15d0:	99 0f       	add	r25, r25
    15d2:	00 08       	sbc	r0, r0
    15d4:	55 0f       	add	r21, r21
    15d6:	aa 0b       	sbc	r26, r26
    15d8:	e0 e8       	ldi	r30, 0x80	; 128
    15da:	fe ef       	ldi	r31, 0xFE	; 254
    15dc:	16 16       	cp	r1, r22
    15de:	17 06       	cpc	r1, r23
    15e0:	e8 07       	cpc	r30, r24
    15e2:	f9 07       	cpc	r31, r25
    15e4:	c0 f0       	brcs	.+48     	; 0x1616 <.L9^B1>
    15e6:	12 16       	cp	r1, r18
    15e8:	13 06       	cpc	r1, r19
    15ea:	e4 07       	cpc	r30, r20
    15ec:	f5 07       	cpc	r31, r21
    15ee:	98 f0       	brcs	.+38     	; 0x1616 <.L9^B1>
    15f0:	62 1b       	sub	r22, r18
    15f2:	73 0b       	sbc	r23, r19
    15f4:	84 0b       	sbc	r24, r20
    15f6:	95 0b       	sbc	r25, r21
    15f8:	39 f4       	brne	.+14     	; 0x1608 <.L1^B1>
    15fa:	0a 26       	eor	r0, r26
    15fc:	61 f0       	breq	.+24     	; 0x1616 <.L9^B1>
    15fe:	23 2b       	or	r18, r19
    1600:	24 2b       	or	r18, r20
    1602:	25 2b       	or	r18, r21
    1604:	21 f4       	brne	.+8      	; 0x160e <.L2^B1>
    1606:	08 95       	ret

00001608 <.L1^B1>:
    1608:	0a 26       	eor	r0, r26
    160a:	09 f4       	brne	.+2      	; 0x160e <.L2^B1>
    160c:	a1 40       	sbci	r26, 0x01	; 1

0000160e <.L2^B1>:
    160e:	a6 95       	lsr	r26
    1610:	8f ef       	ldi	r24, 0xFF	; 255
    1612:	81 1d       	adc	r24, r1
    1614:	81 1d       	adc	r24, r1

00001616 <.L9^B1>:
    1616:	08 95       	ret

00001618 <__fp_inf>:
    1618:	97 f9       	bld	r25, 7
    161a:	9f 67       	ori	r25, 0x7F	; 127
    161c:	80 e8       	ldi	r24, 0x80	; 128
    161e:	70 e0       	ldi	r23, 0x00	; 0
    1620:	60 e0       	ldi	r22, 0x00	; 0
    1622:	08 95       	ret

00001624 <__fp_nan>:
    1624:	9f ef       	ldi	r25, 0xFF	; 255
    1626:	80 ec       	ldi	r24, 0xC0	; 192
    1628:	08 95       	ret

0000162a <__fp_pscA>:
    162a:	00 24       	eor	r0, r0
    162c:	0a 94       	dec	r0
    162e:	16 16       	cp	r1, r22
    1630:	17 06       	cpc	r1, r23
    1632:	18 06       	cpc	r1, r24
    1634:	09 06       	cpc	r0, r25
    1636:	08 95       	ret

00001638 <__fp_pscB>:
    1638:	00 24       	eor	r0, r0
    163a:	0a 94       	dec	r0
    163c:	12 16       	cp	r1, r18
    163e:	13 06       	cpc	r1, r19
    1640:	14 06       	cpc	r1, r20
    1642:	05 06       	cpc	r0, r21
    1644:	08 95       	ret

00001646 <__fp_round>:
    1646:	09 2e       	mov	r0, r25
    1648:	03 94       	inc	r0
    164a:	00 0c       	add	r0, r0
    164c:	11 f4       	brne	.+4      	; 0x1652 <.L1^B1>
    164e:	88 23       	and	r24, r24
    1650:	52 f0       	brmi	.+20     	; 0x1666 <.L3^B1>

00001652 <.L1^B1>:
    1652:	bb 0f       	add	r27, r27
    1654:	40 f4       	brcc	.+16     	; 0x1666 <.L3^B1>
    1656:	bf 2b       	or	r27, r31
    1658:	11 f4       	brne	.+4      	; 0x165e <.L2^B1>
    165a:	60 ff       	sbrs	r22, 0
    165c:	04 c0       	rjmp	.+8      	; 0x1666 <.L3^B1>

0000165e <.L2^B1>:
    165e:	6f 5f       	subi	r22, 0xFF	; 255
    1660:	7f 4f       	sbci	r23, 0xFF	; 255
    1662:	8f 4f       	sbci	r24, 0xFF	; 255
    1664:	9f 4f       	sbci	r25, 0xFF	; 255

00001666 <.L3^B1>:
    1666:	08 95       	ret

00001668 <__fp_split3>:
    1668:	57 fd       	sbrc	r21, 7
    166a:	90 58       	subi	r25, 0x80	; 128
    166c:	44 0f       	add	r20, r20
    166e:	55 1f       	adc	r21, r21
    1670:	59 f0       	breq	.+22     	; 0x1688 <.L4^B1>
    1672:	5f 3f       	cpi	r21, 0xFF	; 255
    1674:	71 f0       	breq	.+28     	; 0x1692 <.L5^B1>

00001676 <.L1^B1>:
    1676:	47 95       	ror	r20

00001678 <__fp_splitA>:
    1678:	88 0f       	add	r24, r24
    167a:	97 fb       	bst	r25, 7
    167c:	99 1f       	adc	r25, r25
    167e:	61 f0       	breq	.+24     	; 0x1698 <.L6^B1>
    1680:	9f 3f       	cpi	r25, 0xFF	; 255
    1682:	79 f0       	breq	.+30     	; 0x16a2 <.L7^B1>

00001684 <.L3^B1>:
    1684:	87 95       	ror	r24
    1686:	08 95       	ret

00001688 <.L4^B1>:
    1688:	12 16       	cp	r1, r18
    168a:	13 06       	cpc	r1, r19
    168c:	14 06       	cpc	r1, r20
    168e:	55 1f       	adc	r21, r21
    1690:	f2 cf       	rjmp	.-28     	; 0x1676 <.L1^B1>

00001692 <.L5^B1>:
    1692:	46 95       	lsr	r20
    1694:	f1 df       	rcall	.-30     	; 0x1678 <__fp_splitA>
    1696:	08 c0       	rjmp	.+16     	; 0x16a8 <.L8^B1>

00001698 <.L6^B1>:
    1698:	16 16       	cp	r1, r22
    169a:	17 06       	cpc	r1, r23
    169c:	18 06       	cpc	r1, r24
    169e:	99 1f       	adc	r25, r25
    16a0:	f1 cf       	rjmp	.-30     	; 0x1684 <.L3^B1>

000016a2 <.L7^B1>:
    16a2:	86 95       	lsr	r24
    16a4:	71 05       	cpc	r23, r1
    16a6:	61 05       	cpc	r22, r1

000016a8 <.L8^B1>:
    16a8:	08 94       	sec
    16aa:	08 95       	ret

000016ac <__fp_zero>:
    16ac:	e8 94       	clt

000016ae <__fp_szero>:
    16ae:	bb 27       	eor	r27, r27
    16b0:	66 27       	eor	r22, r22
    16b2:	77 27       	eor	r23, r23
    16b4:	cb 01       	movw	r24, r22
    16b6:	97 f9       	bld	r25, 7
    16b8:	08 95       	ret

000016ba <__gesf2>:
    16ba:	0e 94 e8 0a 	call	0x15d0	; 0x15d0 <__fp_cmp>
    16be:	08 f4       	brcc	.+2      	; 0x16c2 <.L1^B1>
    16c0:	8f ef       	ldi	r24, 0xFF	; 255

000016c2 <.L1^B1>:
    16c2:	08 95       	ret

000016c4 <__mulsf3>:
    16c4:	0e 94 75 0b 	call	0x16ea	; 0x16ea <__mulsf3x>
    16c8:	0c 94 23 0b 	jmp	0x1646	; 0x1646 <__fp_round>

000016cc <.L^B1>:
    16cc:	0e 94 15 0b 	call	0x162a	; 0x162a <__fp_pscA>
    16d0:	38 f0       	brcs	.+14     	; 0x16e0 <.L1^B1>
    16d2:	0e 94 1c 0b 	call	0x1638	; 0x1638 <__fp_pscB>
    16d6:	20 f0       	brcs	.+8      	; 0x16e0 <.L1^B1>
    16d8:	95 23       	and	r25, r21
    16da:	11 f0       	breq	.+4      	; 0x16e0 <.L1^B1>
    16dc:	0c 94 0c 0b 	jmp	0x1618	; 0x1618 <__fp_inf>

000016e0 <.L1^B1>:
    16e0:	0c 94 12 0b 	jmp	0x1624	; 0x1624 <__fp_nan>

000016e4 <.L2^B1>:
    16e4:	11 24       	eor	r1, r1
    16e6:	0c 94 57 0b 	jmp	0x16ae	; 0x16ae <__fp_szero>

000016ea <__mulsf3x>:
    16ea:	0e 94 34 0b 	call	0x1668	; 0x1668 <__fp_split3>
    16ee:	70 f3       	brcs	.-36     	; 0x16cc <.L^B1>

000016f0 <__mulsf3_pse>:
    16f0:	95 9f       	mul	r25, r21
    16f2:	c1 f3       	breq	.-16     	; 0x16e4 <.L2^B1>
    16f4:	95 0f       	add	r25, r21
    16f6:	50 e0       	ldi	r21, 0x00	; 0
    16f8:	55 1f       	adc	r21, r21
    16fa:	62 9f       	mul	r22, r18
    16fc:	f0 01       	movw	r30, r0
    16fe:	72 9f       	mul	r23, r18
    1700:	bb 27       	eor	r27, r27
    1702:	f0 0d       	add	r31, r0
    1704:	b1 1d       	adc	r27, r1
    1706:	63 9f       	mul	r22, r19
    1708:	aa 27       	eor	r26, r26
    170a:	f0 0d       	add	r31, r0
    170c:	b1 1d       	adc	r27, r1
    170e:	aa 1f       	adc	r26, r26
    1710:	64 9f       	mul	r22, r20
    1712:	66 27       	eor	r22, r22
    1714:	b0 0d       	add	r27, r0
    1716:	a1 1d       	adc	r26, r1
    1718:	66 1f       	adc	r22, r22
    171a:	82 9f       	mul	r24, r18
    171c:	22 27       	eor	r18, r18
    171e:	b0 0d       	add	r27, r0
    1720:	a1 1d       	adc	r26, r1
    1722:	62 1f       	adc	r22, r18
    1724:	73 9f       	mul	r23, r19
    1726:	b0 0d       	add	r27, r0
    1728:	a1 1d       	adc	r26, r1
    172a:	62 1f       	adc	r22, r18
    172c:	83 9f       	mul	r24, r19
    172e:	a0 0d       	add	r26, r0
    1730:	61 1d       	adc	r22, r1
    1732:	22 1f       	adc	r18, r18
    1734:	74 9f       	mul	r23, r20
    1736:	33 27       	eor	r19, r19
    1738:	a0 0d       	add	r26, r0
    173a:	61 1d       	adc	r22, r1
    173c:	23 1f       	adc	r18, r19
    173e:	84 9f       	mul	r24, r20
    1740:	60 0d       	add	r22, r0
    1742:	21 1d       	adc	r18, r1
    1744:	82 2f       	mov	r24, r18
    1746:	76 2f       	mov	r23, r22
    1748:	6a 2f       	mov	r22, r26
    174a:	11 24       	eor	r1, r1
    174c:	9f 57       	subi	r25, 0x7F	; 127
    174e:	50 40       	sbci	r21, 0x00	; 0
    1750:	9a f0       	brmi	.+38     	; 0x1778 <.L13^B1>
    1752:	f1 f0       	breq	.+60     	; 0x1790 <.L15^B1>

00001754 <.L10^B1>:
    1754:	88 23       	and	r24, r24
    1756:	4a f0       	brmi	.+18     	; 0x176a <.L11^B1>
    1758:	ee 0f       	add	r30, r30
    175a:	ff 1f       	adc	r31, r31
    175c:	bb 1f       	adc	r27, r27
    175e:	66 1f       	adc	r22, r22
    1760:	77 1f       	adc	r23, r23
    1762:	88 1f       	adc	r24, r24
    1764:	91 50       	subi	r25, 0x01	; 1
    1766:	50 40       	sbci	r21, 0x00	; 0
    1768:	a9 f7       	brne	.-22     	; 0x1754 <.L10^B1>

0000176a <.L11^B1>:
    176a:	9e 3f       	cpi	r25, 0xFE	; 254
    176c:	51 05       	cpc	r21, r1
    176e:	80 f0       	brcs	.+32     	; 0x1790 <.L15^B1>
    1770:	0c 94 0c 0b 	jmp	0x1618	; 0x1618 <__fp_inf>

00001774 <.L12^B1>:
    1774:	0c 94 57 0b 	jmp	0x16ae	; 0x16ae <__fp_szero>

00001778 <.L13^B1>:
    1778:	5f 3f       	cpi	r21, 0xFF	; 255
    177a:	e4 f3       	brlt	.-8      	; 0x1774 <.L12^B1>
    177c:	98 3e       	cpi	r25, 0xE8	; 232
    177e:	d4 f3       	brlt	.-12     	; 0x1774 <.L12^B1>

00001780 <.L14^B1>:
    1780:	86 95       	lsr	r24
    1782:	77 95       	ror	r23
    1784:	67 95       	ror	r22
    1786:	b7 95       	ror	r27
    1788:	f7 95       	ror	r31
    178a:	e7 95       	ror	r30
    178c:	9f 5f       	subi	r25, 0xFF	; 255
    178e:	c1 f7       	brne	.-16     	; 0x1780 <.L14^B1>

00001790 <.L15^B1>:
    1790:	fe 2b       	or	r31, r30
    1792:	88 0f       	add	r24, r24
    1794:	91 1d       	adc	r25, r1
    1796:	96 95       	lsr	r25
    1798:	87 95       	ror	r24
    179a:	97 f9       	bld	r25, 7
    179c:	08 95       	ret

0000179e <_exit>:
    179e:	f8 94       	cli

000017a0 <__stop_program>:
    17a0:	ff cf       	rjmp	.-2      	; 0x17a0 <__stop_program>

000017a2 <L0^A>:
    17a2:	c4 06       	cpc	r12, r20
    17a4:	e0 06       	cpc	r14, r16
    17a6:	f3 06       	cpc	r15, r19
    17a8:	00 07       	cpc	r16, r16
    17aa:	41 07       	cpc	r20, r17
    17ac:	9c 07       	cpc	r25, r28
    17ae:	ce 07       	cpc	r28, r30
    17b0:	00 08       	sbc	r0, r0
    17b2:	aa 08       	sbc	r10, r10
    17b4:	b7 08       	sbc	r11, r7
