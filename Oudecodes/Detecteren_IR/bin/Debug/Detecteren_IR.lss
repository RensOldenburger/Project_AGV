
bin\Debug\Detecteren_IR.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00000a0a  00000a9e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000a0a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .fuse         00000003  00820000  00820000  00000a9e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .comment      00000012  00000000  00000000  00000aa1  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ab4  2**2
                  CONTENTS, READONLY, OCTETS
  5 .debug_aranges 00000058  00000000  00000000  00000af8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_info   00000f7b  00000000  00000000  00000b50  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_abbrev 00000cf8  00000000  00000000  00001acb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_line   00000564  00000000  00000000  000027c3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_frame  000000d4  00000000  00000000  00002d28  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_str    00000565  00000000  00000000  00002dfc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_line_str 00000195  00000000  00000000  00003361  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
   4:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
   8:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
   c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  10:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  14:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  18:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  1c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  20:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  24:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  28:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  2c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  30:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  34:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  38:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  3c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  40:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  44:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  48:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  4c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  50:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  54:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  58:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  5c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  60:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  64:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  68:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  6c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  70:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  74:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  78:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  7c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  80:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  84:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  88:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  8c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  90:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  94:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  98:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  9c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  a0:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  a4:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  a8:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  ac:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  b0:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  b4:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  b8:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  bc:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  c0:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  c4:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  c8:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  cc:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  d0:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  d4:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  d8:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  dc:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  e0:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60
  f4:	0e 94 75 02 	call	0x4ea	; 0x4ea <main>
  f8:	0c 94 03 05 	jmp	0xa06	; 0xa06 <_exit>

000000fc <__bad_interrupt>:
  fc:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000100 <LED_init>:
  Exit:     -
  Notes:    -
  eriowjg=90irewtjhio[jgrto[s
*/
void LED_init (void)
    {
 100:	cf 93       	push	r28
 102:	df 93       	push	r29
 104:	cd b7       	in	r28, 0x3d	; 61
 106:	de b7       	in	r29, 0x3e	; 62

00000108 <.Loc.1>:
        DDRB |= (1<<PB7) | (1<<PB5);
 108:	84 e2       	ldi	r24, 0x24	; 36
 10a:	90 e0       	ldi	r25, 0x00	; 0
 10c:	fc 01       	movw	r30, r24
 10e:	20 81       	ld	r18, Z
 110:	84 e2       	ldi	r24, 0x24	; 36
 112:	90 e0       	ldi	r25, 0x00	; 0

00000114 <.Loc.2>:
 114:	20 6a       	ori	r18, 0xA0	; 160
 116:	fc 01       	movw	r30, r24
 118:	20 83       	st	Z, r18

0000011a <.Loc.3>:

        PORTB &= ~(1<<PB7);
 11a:	85 e2       	ldi	r24, 0x25	; 37
 11c:	90 e0       	ldi	r25, 0x00	; 0
 11e:	fc 01       	movw	r30, r24
 120:	20 81       	ld	r18, Z

00000122 <.Loc.4>:
 122:	85 e2       	ldi	r24, 0x25	; 37
 124:	90 e0       	ldi	r25, 0x00	; 0

00000126 <.Loc.5>:
 126:	2f 77       	andi	r18, 0x7F	; 127
 128:	fc 01       	movw	r30, r24
 12a:	20 83       	st	Z, r18

0000012c <.Loc.6>:
    }
 12c:	00 00       	nop
 12e:	df 91       	pop	r29
 130:	cf 91       	pop	r28
 132:	08 95       	ret

00000134 <IR_init>:
void IR_init(void)
{
 134:	cf 93       	push	r28
 136:	df 93       	push	r29
 138:	cd b7       	in	r28, 0x3d	; 61
 13a:	de b7       	in	r29, 0x3e	; 62

0000013c <.Loc.8>:
    DDR_IR &= ~(1<<IR_L) & ~(1<<IR_R);      // eneble pins as input
 13c:	81 e0       	ldi	r24, 0x01	; 1
 13e:	91 e0       	ldi	r25, 0x01	; 1
 140:	fc 01       	movw	r30, r24
 142:	20 81       	ld	r18, Z

00000144 <.Loc.9>:
 144:	81 e0       	ldi	r24, 0x01	; 1
 146:	91 e0       	ldi	r25, 0x01	; 1

00000148 <.Loc.10>:
 148:	27 7e       	andi	r18, 0xE7	; 231
 14a:	fc 01       	movw	r30, r24
 14c:	20 83       	st	Z, r18

0000014e <.Loc.11>:
    PORT_IR &= ~(1<<IR_L) & ~(1<<IR_R);     // disable pins pull-up resistor
 14e:	82 e0       	ldi	r24, 0x02	; 2
 150:	91 e0       	ldi	r25, 0x01	; 1
 152:	fc 01       	movw	r30, r24
 154:	20 81       	ld	r18, Z

00000156 <.Loc.12>:
 156:	82 e0       	ldi	r24, 0x02	; 2
 158:	91 e0       	ldi	r25, 0x01	; 1

0000015a <.Loc.13>:
 15a:	27 7e       	andi	r18, 0xE7	; 231
 15c:	fc 01       	movw	r30, r24
 15e:	20 83       	st	Z, r18

00000160 <.Loc.14>:
}
 160:	00 00       	nop
 162:	df 91       	pop	r29
 164:	cf 91       	pop	r28
 166:	08 95       	ret

00000168 <output_init>:
  Entry:    -
  Exit:     -
  Notes:    -
*/
void output_init(void)
{
 168:	cf 93       	push	r28
 16a:	df 93       	push	r29
 16c:	cd b7       	in	r28, 0x3d	; 61
 16e:	de b7       	in	r29, 0x3e	; 62

00000170 <.Loc.16>:
    DDR_LED |= (1<<LED_1) | (1<<LED_2);     // eneble pins as output
 170:	8d e2       	ldi	r24, 0x2D	; 45
 172:	90 e0       	ldi	r25, 0x00	; 0
 174:	fc 01       	movw	r30, r24
 176:	20 81       	ld	r18, Z
 178:	8d e2       	ldi	r24, 0x2D	; 45
 17a:	90 e0       	ldi	r25, 0x00	; 0

0000017c <.Loc.17>:
 17c:	20 63       	ori	r18, 0x30	; 48
 17e:	fc 01       	movw	r30, r24
 180:	20 83       	st	Z, r18

00000182 <.Loc.18>:
    PORT_LED &= ~(1<<LED_1) & ~(1<<LED_2);  // put pins low
 182:	8e e2       	ldi	r24, 0x2E	; 46
 184:	90 e0       	ldi	r25, 0x00	; 0
 186:	fc 01       	movw	r30, r24
 188:	20 81       	ld	r18, Z

0000018a <.Loc.19>:
 18a:	8e e2       	ldi	r24, 0x2E	; 46
 18c:	90 e0       	ldi	r25, 0x00	; 0

0000018e <.Loc.20>:
 18e:	2f 7c       	andi	r18, 0xCF	; 207
 190:	fc 01       	movw	r30, r24
 192:	20 83       	st	Z, r18

00000194 <.Loc.21>:

    DDR_buzzer |= (1<<buzzer);              // eneble pins as output
 194:	8d e2       	ldi	r24, 0x2D	; 45
 196:	90 e0       	ldi	r25, 0x00	; 0
 198:	fc 01       	movw	r30, r24
 19a:	20 81       	ld	r18, Z
 19c:	8d e2       	ldi	r24, 0x2D	; 45
 19e:	90 e0       	ldi	r25, 0x00	; 0

000001a0 <.Loc.22>:
 1a0:	28 60       	ori	r18, 0x08	; 8
 1a2:	fc 01       	movw	r30, r24
 1a4:	20 83       	st	Z, r18

000001a6 <.Loc.23>:
    PORT_buzzer &= ~(1<<buzzer);            // put pins low
 1a6:	8e e2       	ldi	r24, 0x2E	; 46
 1a8:	90 e0       	ldi	r25, 0x00	; 0
 1aa:	fc 01       	movw	r30, r24
 1ac:	20 81       	ld	r18, Z

000001ae <.Loc.24>:
 1ae:	8e e2       	ldi	r24, 0x2E	; 46
 1b0:	90 e0       	ldi	r25, 0x00	; 0

000001b2 <.Loc.25>:
 1b2:	27 7f       	andi	r18, 0xF7	; 247
 1b4:	fc 01       	movw	r30, r24
 1b6:	20 83       	st	Z, r18

000001b8 <.Loc.26>:
}
 1b8:	00 00       	nop
 1ba:	df 91       	pop	r29
 1bc:	cf 91       	pop	r28
 1be:	08 95       	ret

000001c0 <init>:

void init(void)
{
 1c0:	cf 93       	push	r28
 1c2:	df 93       	push	r29
 1c4:	cd b7       	in	r28, 0x3d	; 61
 1c6:	de b7       	in	r29, 0x3e	; 62

000001c8 <.Loc.28>:
    IR_init();
 1c8:	0e 94 9a 00 	call	0x134	; 0x134 <IR_init>

000001cc <.Loc.29>:
    output_init();
 1cc:	0e 94 b4 00 	call	0x168	; 0x168 <output_init>

000001d0 <.Loc.30>:
    LED_init();
 1d0:	0e 94 80 00 	call	0x100	; 0x100 <LED_init>

000001d4 <.Loc.31>:
}
 1d4:	00 00       	nop
 1d6:	df 91       	pop	r29
 1d8:	cf 91       	pop	r28
 1da:	08 95       	ret

000001dc <output_aan>:
  Entry:    (aan) als je een 1 meegeeft gaat de functie werken, bij een 0 gebeurd er niks
  Exit:     geen return
  Notes:    gebruikt delays ipv timers dus code staat even stil
*/
void output_aan(int aan)
{
 1dc:	cf 93       	push	r28
 1de:	df 93       	push	r29
 1e0:	cd b7       	in	r28, 0x3d	; 61
 1e2:	de b7       	in	r29, 0x3e	; 62
 1e4:	c6 54       	subi	r28, 0x46	; 70
 1e6:	d1 09       	sbc	r29, r1
 1e8:	0f b6       	in	r0, 0x3f	; 63
 1ea:	f8 94       	cli
 1ec:	de bf       	out	0x3e, r29	; 62
 1ee:	0f be       	out	0x3f, r0	; 63
 1f0:	cd bf       	out	0x3d, r28	; 61
 1f2:	9e 8f       	std	Y+30, r25	; 0x1e
 1f4:	8d 8f       	std	Y+29, r24	; 0x1d

000001f6 <.Loc.33>:
    if(aan == 1)
 1f6:	8d 8d       	ldd	r24, Y+29	; 0x1d
 1f8:	9e 8d       	ldd	r25, Y+30	; 0x1e
 1fa:	81 30       	cpi	r24, 0x01	; 1
 1fc:	91 05       	cpc	r25, r1
 1fe:	09 f0       	breq	.+2      	; 0x202 <.Loc.34>

00000200 <L0^A>:
 200:	66 c1       	rjmp	.+716    	; 0x4ce <.L6>

00000202 <.Loc.34>:
    {
        PORT_LED |= (1<<LED_1);         // LED 1 aan
 202:	8e e2       	ldi	r24, 0x2E	; 46
 204:	90 e0       	ldi	r25, 0x00	; 0
 206:	dc 01       	movw	r26, r24
 208:	2c 91       	ld	r18, X
 20a:	8e e2       	ldi	r24, 0x2E	; 46
 20c:	90 e0       	ldi	r25, 0x00	; 0

0000020e <.Loc.35>:
 20e:	20 62       	ori	r18, 0x20	; 32
 210:	fc 01       	movw	r30, r24
 212:	20 83       	st	Z, r18

00000214 <.Loc.36>:
        PORT_LED &= ~(1<<LED_2);        // LED 2 uit
 214:	8e e2       	ldi	r24, 0x2E	; 46
 216:	90 e0       	ldi	r25, 0x00	; 0
 218:	dc 01       	movw	r26, r24
 21a:	2c 91       	ld	r18, X

0000021c <.Loc.37>:
 21c:	8e e2       	ldi	r24, 0x2E	; 46
 21e:	90 e0       	ldi	r25, 0x00	; 0

00000220 <.Loc.38>:
 220:	2f 7e       	andi	r18, 0xEF	; 239
 222:	fc 01       	movw	r30, r24
 224:	20 83       	st	Z, r18

00000226 <.Loc.39>:
        PORT_buzzer |= (1<<buzzer);     // buzzer aan
 226:	8e e2       	ldi	r24, 0x2E	; 46
 228:	90 e0       	ldi	r25, 0x00	; 0
 22a:	dc 01       	movw	r26, r24
 22c:	2c 91       	ld	r18, X
 22e:	8e e2       	ldi	r24, 0x2E	; 46
 230:	90 e0       	ldi	r25, 0x00	; 0

00000232 <.Loc.40>:
 232:	28 60       	ori	r18, 0x08	; 8
 234:	fc 01       	movw	r30, r24
 236:	20 83       	st	Z, r18
 238:	80 e0       	ldi	r24, 0x00	; 0
 23a:	90 e0       	ldi	r25, 0x00	; 0
 23c:	aa e7       	ldi	r26, 0x7A	; 122
 23e:	b4 e4       	ldi	r27, 0x44	; 68
 240:	8f 87       	std	Y+15, r24	; 0x0f
 242:	98 8b       	std	Y+16, r25	; 0x10
 244:	a9 8b       	std	Y+17, r26	; 0x11
 246:	ba 8b       	std	Y+18, r27	; 0x12

00000248 <.LBB32>:

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 248:	20 e0       	ldi	r18, 0x00	; 0
 24a:	30 e0       	ldi	r19, 0x00	; 0
 24c:	4a e7       	ldi	r20, 0x7A	; 122
 24e:	55 e4       	ldi	r21, 0x45	; 69
 250:	6f 85       	ldd	r22, Y+15	; 0x0f
 252:	78 89       	ldd	r23, Y+16	; 0x10
 254:	89 89       	ldd	r24, Y+17	; 0x11
 256:	9a 89       	ldd	r25, Y+18	; 0x12
 258:	0e 94 6e 04 	call	0x8dc	; 0x8dc <__mulsf3>
 25c:	6f a3       	std	Y+39, r22	; 0x27
 25e:	78 a7       	std	Y+40, r23	; 0x28
 260:	89 a7       	std	Y+41, r24	; 0x29
 262:	9a a7       	std	Y+42, r25	; 0x2a
 264:	8f a1       	ldd	r24, Y+39	; 0x27
 266:	98 a5       	ldd	r25, Y+40	; 0x28
 268:	a9 a5       	ldd	r26, Y+41	; 0x29
 26a:	ba a5       	ldd	r27, Y+42	; 0x2a
 26c:	8b 8b       	std	Y+19, r24	; 0x13
 26e:	9c 8b       	std	Y+20, r25	; 0x14
 270:	ad 8b       	std	Y+21, r26	; 0x15
 272:	be 8b       	std	Y+22, r27	; 0x16

00000274 <.Loc.42>:
	if (__tmp < 1.0)
 274:	20 e0       	ldi	r18, 0x00	; 0
 276:	30 e0       	ldi	r19, 0x00	; 0
 278:	40 e8       	ldi	r20, 0x80	; 128
 27a:	5f e3       	ldi	r21, 0x3F	; 63
 27c:	6b 89       	ldd	r22, Y+19	; 0x13
 27e:	7c 89       	ldd	r23, Y+20	; 0x14
 280:	8d 89       	ldd	r24, Y+21	; 0x15
 282:	9e 89       	ldd	r25, Y+22	; 0x16
 284:	0e 94 e8 03 	call	0x7d0	; 0x7d0 <__cmpsf2>
 288:	88 23       	and	r24, r24
 28a:	2c f4       	brge	.+10     	; 0x296 <.L28>

0000028c <.Loc.43>:
		__ticks = 1;
 28c:	81 e0       	ldi	r24, 0x01	; 1
 28e:	90 e0       	ldi	r25, 0x00	; 0
 290:	98 8f       	std	Y+24, r25	; 0x18
 292:	8f 8b       	std	Y+23, r24	; 0x17
 294:	55 c0       	rjmp	.+170    	; 0x340 <.L9>

00000296 <.L28>:
	else if (__tmp > 65535)
 296:	20 e0       	ldi	r18, 0x00	; 0
 298:	3f ef       	ldi	r19, 0xFF	; 255
 29a:	4f e7       	ldi	r20, 0x7F	; 127
 29c:	57 e4       	ldi	r21, 0x47	; 71
 29e:	6b 89       	ldd	r22, Y+19	; 0x13
 2a0:	7c 89       	ldd	r23, Y+20	; 0x14
 2a2:	8d 89       	ldd	r24, Y+21	; 0x15
 2a4:	9e 89       	ldd	r25, Y+22	; 0x16
 2a6:	0e 94 69 04 	call	0x8d2	; 0x8d2 <__gesf2>
 2aa:	88 23       	and	r24, r24
 2ac:	d9 f1       	breq	.+118    	; 0x324 <.L29>
 2ae:	d4 f1       	brlt	.+116    	; 0x324 <.L29>

000002b0 <.Loc.45>:
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 2b0:	20 e0       	ldi	r18, 0x00	; 0
 2b2:	30 e0       	ldi	r19, 0x00	; 0
 2b4:	40 e2       	ldi	r20, 0x20	; 32
 2b6:	51 e4       	ldi	r21, 0x41	; 65
 2b8:	6f 85       	ldd	r22, Y+15	; 0x0f
 2ba:	78 89       	ldd	r23, Y+16	; 0x10
 2bc:	89 89       	ldd	r24, Y+17	; 0x11
 2be:	9a 89       	ldd	r25, Y+18	; 0x12
 2c0:	0e 94 6e 04 	call	0x8dc	; 0x8dc <__mulsf3>
 2c4:	6b a7       	std	Y+43, r22	; 0x2b
 2c6:	7c a7       	std	Y+44, r23	; 0x2c
 2c8:	8d a7       	std	Y+45, r24	; 0x2d
 2ca:	9e a7       	std	Y+46, r25	; 0x2e
 2cc:	8b a5       	ldd	r24, Y+43	; 0x2b
 2ce:	9c a5       	ldd	r25, Y+44	; 0x2c
 2d0:	ad a5       	ldd	r26, Y+45	; 0x2d
 2d2:	be a5       	ldd	r27, Y+46	; 0x2e
 2d4:	8b a3       	std	Y+35, r24	; 0x23
 2d6:	9c a3       	std	Y+36, r25	; 0x24
 2d8:	ad a3       	std	Y+37, r26	; 0x25
 2da:	be a3       	std	Y+38, r27	; 0x26

000002dc <.Loc.46>:
 2dc:	6b a1       	ldd	r22, Y+35	; 0x23
 2de:	7c a1       	ldd	r23, Y+36	; 0x24
 2e0:	8d a1       	ldd	r24, Y+37	; 0x25
 2e2:	9e a1       	ldd	r25, Y+38	; 0x26
 2e4:	0e 94 ed 03 	call	0x7da	; 0x7da <__fixunssfsi>
 2e8:	6f a7       	std	Y+47, r22	; 0x2f
 2ea:	78 ab       	std	Y+48, r23	; 0x30
 2ec:	89 ab       	std	Y+49, r24	; 0x31
 2ee:	9a ab       	std	Y+50, r25	; 0x32
 2f0:	af a5       	ldd	r26, Y+47	; 0x2f
 2f2:	b8 a9       	ldd	r27, Y+48	; 0x30
 2f4:	b8 8f       	std	Y+24, r27	; 0x18
 2f6:	af 8b       	std	Y+23, r26	; 0x17

000002f8 <.Loc.47>:
		while(__ticks)
 2f8:	10 c0       	rjmp	.+32     	; 0x31a <.L12>

000002fa <.L13>:
 2fa:	80 e9       	ldi	r24, 0x90	; 144
 2fc:	91 e0       	ldi	r25, 0x01	; 1
 2fe:	9a 8f       	std	Y+26, r25	; 0x1a
 300:	89 8f       	std	Y+25, r24	; 0x19

00000302 <.LBB34>:
		"sbc %B0,__zero_reg__"    "\n\t"
		"brne 1b"
		: "+d" (__count)
	);
#else
	__asm__ volatile (
 302:	89 8d       	ldd	r24, Y+25	; 0x19
 304:	9a 8d       	ldd	r25, Y+26	; 0x1a

00000306 <.L1^B1>:
 306:	01 97       	sbiw	r24, 0x01	; 1
 308:	f1 f7       	brne	.-4      	; 0x306 <.L1^B1>
 30a:	9a 8f       	std	Y+26, r25	; 0x1a
 30c:	89 8f       	std	Y+25, r24	; 0x19

0000030e <.Loc.49>:
	...

00000310 <.LBE34>:
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 310:	8f 89       	ldd	r24, Y+23	; 0x17
 312:	98 8d       	ldd	r25, Y+24	; 0x18
 314:	01 97       	sbiw	r24, 0x01	; 1
 316:	98 8f       	std	Y+24, r25	; 0x18
 318:	8f 8b       	std	Y+23, r24	; 0x17

0000031a <.L12>:
		while(__ticks)
 31a:	8f 89       	ldd	r24, Y+23	; 0x17
 31c:	98 8d       	ldd	r25, Y+24	; 0x18
 31e:	00 97       	sbiw	r24, 0x00	; 0
 320:	61 f7       	brne	.-40     	; 0x2fa <.L13>

00000322 <.Loc.52>:
		}
		return;
 322:	19 c0       	rjmp	.+50     	; 0x356 <.L14>

00000324 <.L29>:
	}
	else
		__ticks = (uint16_t)__tmp;
 324:	6b 89       	ldd	r22, Y+19	; 0x13
 326:	7c 89       	ldd	r23, Y+20	; 0x14
 328:	8d 89       	ldd	r24, Y+21	; 0x15
 32a:	9e 89       	ldd	r25, Y+22	; 0x16
 32c:	0e 94 ed 03 	call	0x7da	; 0x7da <__fixunssfsi>
 330:	6b ab       	std	Y+51, r22	; 0x33
 332:	7c ab       	std	Y+52, r23	; 0x34
 334:	8d ab       	std	Y+53, r24	; 0x35
 336:	9e ab       	std	Y+54, r25	; 0x36
 338:	eb a9       	ldd	r30, Y+51	; 0x33
 33a:	fc a9       	ldd	r31, Y+52	; 0x34
 33c:	f8 8f       	std	Y+24, r31	; 0x18
 33e:	ef 8b       	std	Y+23, r30	; 0x17

00000340 <.L9>:
 340:	8f 89       	ldd	r24, Y+23	; 0x17
 342:	98 8d       	ldd	r25, Y+24	; 0x18
 344:	9c 8f       	std	Y+28, r25	; 0x1c
 346:	8b 8f       	std	Y+27, r24	; 0x1b

00000348 <.LBB36>:
 348:	8b 8d       	ldd	r24, Y+27	; 0x1b
 34a:	9c 8d       	ldd	r25, Y+28	; 0x1c

0000034c <.L1^B2>:
 34c:	01 97       	sbiw	r24, 0x01	; 1
 34e:	f1 f7       	brne	.-4      	; 0x34c <.L1^B2>
 350:	9c 8f       	std	Y+28, r25	; 0x1c
 352:	8b 8f       	std	Y+27, r24	; 0x1b

00000354 <.Loc.55>:
	...

00000356 <.L14>:
        _delay_ms(1000);
        PORT_LED |= (1<<LED_2);         // LED 2 aan
 356:	8e e2       	ldi	r24, 0x2E	; 46
 358:	90 e0       	ldi	r25, 0x00	; 0
 35a:	dc 01       	movw	r26, r24
 35c:	2c 91       	ld	r18, X
 35e:	8e e2       	ldi	r24, 0x2E	; 46
 360:	90 e0       	ldi	r25, 0x00	; 0

00000362 <.Loc.57>:
 362:	20 61       	ori	r18, 0x10	; 16
 364:	fc 01       	movw	r30, r24
 366:	20 83       	st	Z, r18

00000368 <.Loc.58>:
        PORT_LED &= ~(1<<LED_1);        // LED 1 uit
 368:	8e e2       	ldi	r24, 0x2E	; 46
 36a:	90 e0       	ldi	r25, 0x00	; 0
 36c:	dc 01       	movw	r26, r24
 36e:	2c 91       	ld	r18, X

00000370 <.Loc.59>:
 370:	8e e2       	ldi	r24, 0x2E	; 46
 372:	90 e0       	ldi	r25, 0x00	; 0

00000374 <.Loc.60>:
 374:	2f 7d       	andi	r18, 0xDF	; 223
 376:	fc 01       	movw	r30, r24
 378:	20 83       	st	Z, r18

0000037a <.Loc.61>:
        PORT_buzzer &= ~(1<<buzzer);    // buzzer uit
 37a:	8e e2       	ldi	r24, 0x2E	; 46
 37c:	90 e0       	ldi	r25, 0x00	; 0
 37e:	dc 01       	movw	r26, r24
 380:	2c 91       	ld	r18, X

00000382 <.Loc.62>:
 382:	8e e2       	ldi	r24, 0x2E	; 46
 384:	90 e0       	ldi	r25, 0x00	; 0

00000386 <.Loc.63>:
 386:	27 7f       	andi	r18, 0xF7	; 247
 388:	fc 01       	movw	r30, r24
 38a:	20 83       	st	Z, r18

0000038c <.Loc.64>:
        PORTB |= (1<<PB5);
 38c:	85 e2       	ldi	r24, 0x25	; 37
 38e:	90 e0       	ldi	r25, 0x00	; 0
 390:	dc 01       	movw	r26, r24
 392:	2c 91       	ld	r18, X
 394:	85 e2       	ldi	r24, 0x25	; 37
 396:	90 e0       	ldi	r25, 0x00	; 0

00000398 <.Loc.65>:
 398:	20 62       	ori	r18, 0x20	; 32
 39a:	fc 01       	movw	r30, r24
 39c:	20 83       	st	Z, r18
 39e:	80 e0       	ldi	r24, 0x00	; 0
 3a0:	90 e0       	ldi	r25, 0x00	; 0
 3a2:	aa e7       	ldi	r26, 0x7A	; 122
 3a4:	b4 e4       	ldi	r27, 0x44	; 68
 3a6:	89 83       	std	Y+1, r24	; 0x01
 3a8:	9a 83       	std	Y+2, r25	; 0x02
 3aa:	ab 83       	std	Y+3, r26	; 0x03
 3ac:	bc 83       	std	Y+4, r27	; 0x04

000003ae <.LBB38>:
	__tmp = ((F_CPU) / 4e3) * __ms;
 3ae:	20 e0       	ldi	r18, 0x00	; 0
 3b0:	30 e0       	ldi	r19, 0x00	; 0
 3b2:	4a e7       	ldi	r20, 0x7A	; 122
 3b4:	55 e4       	ldi	r21, 0x45	; 69
 3b6:	69 81       	ldd	r22, Y+1	; 0x01
 3b8:	7a 81       	ldd	r23, Y+2	; 0x02
 3ba:	8b 81       	ldd	r24, Y+3	; 0x03
 3bc:	9c 81       	ldd	r25, Y+4	; 0x04
 3be:	0e 94 6e 04 	call	0x8dc	; 0x8dc <__mulsf3>
 3c2:	6f ab       	std	Y+55, r22	; 0x37
 3c4:	78 af       	std	Y+56, r23	; 0x38
 3c6:	89 af       	std	Y+57, r24	; 0x39
 3c8:	9a af       	std	Y+58, r25	; 0x3a
 3ca:	8f a9       	ldd	r24, Y+55	; 0x37
 3cc:	98 ad       	ldd	r25, Y+56	; 0x38
 3ce:	a9 ad       	ldd	r26, Y+57	; 0x39
 3d0:	ba ad       	ldd	r27, Y+58	; 0x3a
 3d2:	8d 83       	std	Y+5, r24	; 0x05
 3d4:	9e 83       	std	Y+6, r25	; 0x06
 3d6:	af 83       	std	Y+7, r26	; 0x07
 3d8:	b8 87       	std	Y+8, r27	; 0x08

000003da <.Loc.67>:
	if (__tmp < 1.0)
 3da:	20 e0       	ldi	r18, 0x00	; 0
 3dc:	30 e0       	ldi	r19, 0x00	; 0
 3de:	40 e8       	ldi	r20, 0x80	; 128
 3e0:	5f e3       	ldi	r21, 0x3F	; 63
 3e2:	6d 81       	ldd	r22, Y+5	; 0x05
 3e4:	7e 81       	ldd	r23, Y+6	; 0x06
 3e6:	8f 81       	ldd	r24, Y+7	; 0x07
 3e8:	98 85       	ldd	r25, Y+8	; 0x08
 3ea:	0e 94 e8 03 	call	0x7d0	; 0x7d0 <__cmpsf2>
 3ee:	88 23       	and	r24, r24
 3f0:	2c f4       	brge	.+10     	; 0x3fc <.L30>

000003f2 <.Loc.68>:
		__ticks = 1;
 3f2:	81 e0       	ldi	r24, 0x01	; 1
 3f4:	90 e0       	ldi	r25, 0x00	; 0
 3f6:	9a 87       	std	Y+10, r25	; 0x0a
 3f8:	89 87       	std	Y+9, r24	; 0x09
 3fa:	5e c0       	rjmp	.+188    	; 0x4b8 <.L17>

000003fc <.L30>:
	else if (__tmp > 65535)
 3fc:	20 e0       	ldi	r18, 0x00	; 0
 3fe:	3f ef       	ldi	r19, 0xFF	; 255
 400:	4f e7       	ldi	r20, 0x7F	; 127
 402:	57 e4       	ldi	r21, 0x47	; 71
 404:	6d 81       	ldd	r22, Y+5	; 0x05
 406:	7e 81       	ldd	r23, Y+6	; 0x06
 408:	8f 81       	ldd	r24, Y+7	; 0x07
 40a:	98 85       	ldd	r25, Y+8	; 0x08
 40c:	0e 94 69 04 	call	0x8d2	; 0x8d2 <__gesf2>
 410:	88 23       	and	r24, r24
 412:	09 f0       	breq	.+2      	; 0x416 <L0^A>

00000414 <L0^A>:
 414:	0c f4       	brge	.+2      	; 0x418 <.Loc.70>

00000416 <L0^A>:
 416:	3e c0       	rjmp	.+124    	; 0x494 <.L31>

00000418 <.Loc.70>:
		__ticks = (uint16_t) (__ms * 10.0);
 418:	20 e0       	ldi	r18, 0x00	; 0
 41a:	30 e0       	ldi	r19, 0x00	; 0
 41c:	40 e2       	ldi	r20, 0x20	; 32
 41e:	51 e4       	ldi	r21, 0x41	; 65
 420:	69 81       	ldd	r22, Y+1	; 0x01
 422:	7a 81       	ldd	r23, Y+2	; 0x02
 424:	8b 81       	ldd	r24, Y+3	; 0x03
 426:	9c 81       	ldd	r25, Y+4	; 0x04
 428:	0e 94 6e 04 	call	0x8dc	; 0x8dc <__mulsf3>
 42c:	6b af       	std	Y+59, r22	; 0x3b
 42e:	7c af       	std	Y+60, r23	; 0x3c
 430:	8d af       	std	Y+61, r24	; 0x3d
 432:	9e af       	std	Y+62, r25	; 0x3e
 434:	8b ad       	ldd	r24, Y+59	; 0x3b
 436:	9c ad       	ldd	r25, Y+60	; 0x3c
 438:	ad ad       	ldd	r26, Y+61	; 0x3d
 43a:	be ad       	ldd	r27, Y+62	; 0x3e
 43c:	8f 8f       	std	Y+31, r24	; 0x1f
 43e:	98 a3       	std	Y+32, r25	; 0x20
 440:	a9 a3       	std	Y+33, r26	; 0x21
 442:	ba a3       	std	Y+34, r27	; 0x22

00000444 <.Loc.71>:
 444:	6f 8d       	ldd	r22, Y+31	; 0x1f
 446:	78 a1       	ldd	r23, Y+32	; 0x20
 448:	89 a1       	ldd	r24, Y+33	; 0x21
 44a:	9a a1       	ldd	r25, Y+34	; 0x22
 44c:	0e 94 ed 03 	call	0x7da	; 0x7da <__fixunssfsi>
 450:	23 96       	adiw	r28, 0x03	; 3
 452:	6c af       	std	Y+60, r22	; 0x3c
 454:	7d af       	std	Y+61, r23	; 0x3d
 456:	8e af       	std	Y+62, r24	; 0x3e
 458:	9f af       	std	Y+63, r25	; 0x3f
 45a:	23 97       	sbiw	r28, 0x03	; 3
 45c:	21 96       	adiw	r28, 0x01	; 1
 45e:	ae ad       	ldd	r26, Y+62	; 0x3e
 460:	bf ad       	ldd	r27, Y+63	; 0x3f
 462:	21 97       	sbiw	r28, 0x01	; 1
 464:	ba 87       	std	Y+10, r27	; 0x0a
 466:	a9 87       	std	Y+9, r26	; 0x09

00000468 <.Loc.72>:
		while(__ticks)
 468:	10 c0       	rjmp	.+32     	; 0x48a <.L20>

0000046a <.L21>:
 46a:	80 e9       	ldi	r24, 0x90	; 144
 46c:	91 e0       	ldi	r25, 0x01	; 1
 46e:	9c 87       	std	Y+12, r25	; 0x0c
 470:	8b 87       	std	Y+11, r24	; 0x0b

00000472 <.LBB40>:
 472:	8b 85       	ldd	r24, Y+11	; 0x0b
 474:	9c 85       	ldd	r25, Y+12	; 0x0c

00000476 <.L1^B3>:
 476:	01 97       	sbiw	r24, 0x01	; 1
 478:	f1 f7       	brne	.-4      	; 0x476 <.L1^B3>
 47a:	9c 87       	std	Y+12, r25	; 0x0c
 47c:	8b 87       	std	Y+11, r24	; 0x0b

0000047e <.Loc.74>:
	...

00000480 <.LBE40>:
			__ticks --;
 480:	89 85       	ldd	r24, Y+9	; 0x09
 482:	9a 85       	ldd	r25, Y+10	; 0x0a
 484:	01 97       	sbiw	r24, 0x01	; 1
 486:	9a 87       	std	Y+10, r25	; 0x0a
 488:	89 87       	std	Y+9, r24	; 0x09

0000048a <.L20>:
		while(__ticks)
 48a:	89 85       	ldd	r24, Y+9	; 0x09
 48c:	9a 85       	ldd	r25, Y+10	; 0x0a
 48e:	00 97       	sbiw	r24, 0x00	; 0
 490:	61 f7       	brne	.-40     	; 0x46a <.L21>

00000492 <.Loc.77>:
		return;
 492:	20 c0       	rjmp	.+64     	; 0x4d4 <.L23>

00000494 <.L31>:
		__ticks = (uint16_t)__tmp;
 494:	6d 81       	ldd	r22, Y+5	; 0x05
 496:	7e 81       	ldd	r23, Y+6	; 0x06
 498:	8f 81       	ldd	r24, Y+7	; 0x07
 49a:	98 85       	ldd	r25, Y+8	; 0x08
 49c:	0e 94 ed 03 	call	0x7da	; 0x7da <__fixunssfsi>
 4a0:	27 96       	adiw	r28, 0x07	; 7
 4a2:	6c af       	std	Y+60, r22	; 0x3c
 4a4:	7d af       	std	Y+61, r23	; 0x3d
 4a6:	8e af       	std	Y+62, r24	; 0x3e
 4a8:	9f af       	std	Y+63, r25	; 0x3f
 4aa:	27 97       	sbiw	r28, 0x07	; 7
 4ac:	25 96       	adiw	r28, 0x05	; 5
 4ae:	ee ad       	ldd	r30, Y+62	; 0x3e
 4b0:	ff ad       	ldd	r31, Y+63	; 0x3f
 4b2:	25 97       	sbiw	r28, 0x05	; 5
 4b4:	fa 87       	std	Y+10, r31	; 0x0a
 4b6:	e9 87       	std	Y+9, r30	; 0x09

000004b8 <.L17>:
 4b8:	89 85       	ldd	r24, Y+9	; 0x09
 4ba:	9a 85       	ldd	r25, Y+10	; 0x0a
 4bc:	9e 87       	std	Y+14, r25	; 0x0e
 4be:	8d 87       	std	Y+13, r24	; 0x0d

000004c0 <.LBB42>:
 4c0:	8d 85       	ldd	r24, Y+13	; 0x0d
 4c2:	9e 85       	ldd	r25, Y+14	; 0x0e

000004c4 <.L1^B4>:
 4c4:	01 97       	sbiw	r24, 0x01	; 1
 4c6:	f1 f7       	brne	.-4      	; 0x4c4 <.L1^B4>
 4c8:	9e 87       	std	Y+14, r25	; 0x0e
 4ca:	8d 87       	std	Y+13, r24	; 0x0d

000004cc <.Loc.80>:
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
#endif /* __AVR_TINY__ */
}
 4cc:	03 c0       	rjmp	.+6      	; 0x4d4 <.L23>

000004ce <.L6>:
        _delay_ms(1000);
    }
    else
        aan = 0;
 4ce:	1e 8e       	std	Y+30, r1	; 0x1e
 4d0:	1d 8e       	std	Y+29, r1	; 0x1d

000004d2 <.Loc.82>:
	...

000004d4 <.L23>:
}
 4d4:	00 00       	nop
 4d6:	ca 5b       	subi	r28, 0xBA	; 186
 4d8:	df 4f       	sbci	r29, 0xFF	; 255
 4da:	0f b6       	in	r0, 0x3f	; 63
 4dc:	f8 94       	cli
 4de:	de bf       	out	0x3e, r29	; 62
 4e0:	0f be       	out	0x3f, r0	; 63
 4e2:	cd bf       	out	0x3d, r28	; 61
 4e4:	df 91       	pop	r29
 4e6:	cf 91       	pop	r28
 4e8:	08 95       	ret

000004ea <main>:

int main(void)
{
 4ea:	cf 93       	push	r28
 4ec:	df 93       	push	r29
 4ee:	cd b7       	in	r28, 0x3d	; 61
 4f0:	de b7       	in	r29, 0x3e	; 62
 4f2:	c8 54       	subi	r28, 0x48	; 72
 4f4:	d1 09       	sbc	r29, r1
 4f6:	0f b6       	in	r0, 0x3f	; 63
 4f8:	f8 94       	cli
 4fa:	de bf       	out	0x3e, r29	; 62
 4fc:	0f be       	out	0x3f, r0	; 63
 4fe:	cd bf       	out	0x3d, r28	; 61

00000500 <.Loc.84>:
    init();
 500:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <init>

00000504 <.L55>:

    while(1)
    {
        if ((PIN_IR & (1<<IR_L)) == 0)
 504:	80 e0       	ldi	r24, 0x00	; 0
 506:	91 e0       	ldi	r25, 0x01	; 1
 508:	dc 01       	movw	r26, r24
 50a:	8c 91       	ld	r24, X

0000050c <.Loc.86>:
 50c:	88 2f       	mov	r24, r24
 50e:	90 e0       	ldi	r25, 0x00	; 0
 510:	88 70       	andi	r24, 0x08	; 8
 512:	99 27       	eor	r25, r25

00000514 <.Loc.87>:
 514:	00 97       	sbiw	r24, 0x00	; 0
 516:	09 f0       	breq	.+2      	; 0x51a <L0^A+0x2>

00000518 <L0^A>:
 518:	a1 c0       	rjmp	.+322    	; 0x65c <.L33>
 51a:	80 e0       	ldi	r24, 0x00	; 0
 51c:	90 e0       	ldi	r25, 0x00	; 0
 51e:	a0 ea       	ldi	r26, 0xA0	; 160
 520:	b1 e4       	ldi	r27, 0x41	; 65
 522:	8d 83       	std	Y+5, r24	; 0x05
 524:	9e 83       	std	Y+6, r25	; 0x06
 526:	af 83       	std	Y+7, r26	; 0x07
 528:	b8 87       	std	Y+8, r27	; 0x08

0000052a <.LBB44>:
	__tmp = ((F_CPU) / 4e3) * __ms;
 52a:	20 e0       	ldi	r18, 0x00	; 0
 52c:	30 e0       	ldi	r19, 0x00	; 0
 52e:	4a e7       	ldi	r20, 0x7A	; 122
 530:	55 e4       	ldi	r21, 0x45	; 69
 532:	6d 81       	ldd	r22, Y+5	; 0x05
 534:	7e 81       	ldd	r23, Y+6	; 0x06
 536:	8f 81       	ldd	r24, Y+7	; 0x07
 538:	98 85       	ldd	r25, Y+8	; 0x08
 53a:	0e 94 6e 04 	call	0x8dc	; 0x8dc <__mulsf3>
 53e:	69 a7       	std	Y+41, r22	; 0x29
 540:	7a a7       	std	Y+42, r23	; 0x2a
 542:	8b a7       	std	Y+43, r24	; 0x2b
 544:	9c a7       	std	Y+44, r25	; 0x2c
 546:	89 a5       	ldd	r24, Y+41	; 0x29
 548:	9a a5       	ldd	r25, Y+42	; 0x2a
 54a:	ab a5       	ldd	r26, Y+43	; 0x2b
 54c:	bc a5       	ldd	r27, Y+44	; 0x2c
 54e:	89 87       	std	Y+9, r24	; 0x09
 550:	9a 87       	std	Y+10, r25	; 0x0a
 552:	ab 87       	std	Y+11, r26	; 0x0b
 554:	bc 87       	std	Y+12, r27	; 0x0c

00000556 <.Loc.89>:
	if (__tmp < 1.0)
 556:	20 e0       	ldi	r18, 0x00	; 0
 558:	30 e0       	ldi	r19, 0x00	; 0
 55a:	40 e8       	ldi	r20, 0x80	; 128
 55c:	5f e3       	ldi	r21, 0x3F	; 63
 55e:	69 85       	ldd	r22, Y+9	; 0x09
 560:	7a 85       	ldd	r23, Y+10	; 0x0a
 562:	8b 85       	ldd	r24, Y+11	; 0x0b
 564:	9c 85       	ldd	r25, Y+12	; 0x0c
 566:	0e 94 e8 03 	call	0x7d0	; 0x7d0 <__cmpsf2>
 56a:	88 23       	and	r24, r24
 56c:	2c f4       	brge	.+10     	; 0x578 <.L60>

0000056e <.Loc.90>:
		__ticks = 1;
 56e:	81 e0       	ldi	r24, 0x01	; 1
 570:	90 e0       	ldi	r25, 0x00	; 0
 572:	9e 87       	std	Y+14, r25	; 0x0e
 574:	8d 87       	std	Y+13, r24	; 0x0d
 576:	55 c0       	rjmp	.+170    	; 0x622 <.L36>

00000578 <.L60>:
	else if (__tmp > 65535)
 578:	20 e0       	ldi	r18, 0x00	; 0
 57a:	3f ef       	ldi	r19, 0xFF	; 255
 57c:	4f e7       	ldi	r20, 0x7F	; 127
 57e:	57 e4       	ldi	r21, 0x47	; 71
 580:	69 85       	ldd	r22, Y+9	; 0x09
 582:	7a 85       	ldd	r23, Y+10	; 0x0a
 584:	8b 85       	ldd	r24, Y+11	; 0x0b
 586:	9c 85       	ldd	r25, Y+12	; 0x0c
 588:	0e 94 69 04 	call	0x8d2	; 0x8d2 <__gesf2>
 58c:	88 23       	and	r24, r24
 58e:	d9 f1       	breq	.+118    	; 0x606 <.L61>
 590:	d4 f1       	brlt	.+116    	; 0x606 <.L61>

00000592 <.Loc.92>:
		__ticks = (uint16_t) (__ms * 10.0);
 592:	20 e0       	ldi	r18, 0x00	; 0
 594:	30 e0       	ldi	r19, 0x00	; 0
 596:	40 e2       	ldi	r20, 0x20	; 32
 598:	51 e4       	ldi	r21, 0x41	; 65
 59a:	6d 81       	ldd	r22, Y+5	; 0x05
 59c:	7e 81       	ldd	r23, Y+6	; 0x06
 59e:	8f 81       	ldd	r24, Y+7	; 0x07
 5a0:	98 85       	ldd	r25, Y+8	; 0x08
 5a2:	0e 94 6e 04 	call	0x8dc	; 0x8dc <__mulsf3>
 5a6:	6d a7       	std	Y+45, r22	; 0x2d
 5a8:	7e a7       	std	Y+46, r23	; 0x2e
 5aa:	8f a7       	std	Y+47, r24	; 0x2f
 5ac:	98 ab       	std	Y+48, r25	; 0x30
 5ae:	8d a5       	ldd	r24, Y+45	; 0x2d
 5b0:	9e a5       	ldd	r25, Y+46	; 0x2e
 5b2:	af a5       	ldd	r26, Y+47	; 0x2f
 5b4:	b8 a9       	ldd	r27, Y+48	; 0x30
 5b6:	89 a3       	std	Y+33, r24	; 0x21
 5b8:	9a a3       	std	Y+34, r25	; 0x22
 5ba:	ab a3       	std	Y+35, r26	; 0x23
 5bc:	bc a3       	std	Y+36, r27	; 0x24

000005be <.Loc.93>:
 5be:	69 a1       	ldd	r22, Y+33	; 0x21
 5c0:	7a a1       	ldd	r23, Y+34	; 0x22
 5c2:	8b a1       	ldd	r24, Y+35	; 0x23
 5c4:	9c a1       	ldd	r25, Y+36	; 0x24
 5c6:	0e 94 ed 03 	call	0x7da	; 0x7da <__fixunssfsi>
 5ca:	69 ab       	std	Y+49, r22	; 0x31
 5cc:	7a ab       	std	Y+50, r23	; 0x32
 5ce:	8b ab       	std	Y+51, r24	; 0x33
 5d0:	9c ab       	std	Y+52, r25	; 0x34
 5d2:	a9 a9       	ldd	r26, Y+49	; 0x31
 5d4:	ba a9       	ldd	r27, Y+50	; 0x32
 5d6:	be 87       	std	Y+14, r27	; 0x0e
 5d8:	ad 87       	std	Y+13, r26	; 0x0d

000005da <.Loc.94>:
		while(__ticks)
 5da:	10 c0       	rjmp	.+32     	; 0x5fc <.L39>

000005dc <.L40>:
 5dc:	80 e9       	ldi	r24, 0x90	; 144
 5de:	91 e0       	ldi	r25, 0x01	; 1
 5e0:	98 8b       	std	Y+16, r25	; 0x10
 5e2:	8f 87       	std	Y+15, r24	; 0x0f

000005e4 <.LBB46>:
	__asm__ volatile (
 5e4:	8f 85       	ldd	r24, Y+15	; 0x0f
 5e6:	98 89       	ldd	r25, Y+16	; 0x10

000005e8 <.L1^B5>:
 5e8:	01 97       	sbiw	r24, 0x01	; 1
 5ea:	f1 f7       	brne	.-4      	; 0x5e8 <.L1^B5>
 5ec:	98 8b       	std	Y+16, r25	; 0x10
 5ee:	8f 87       	std	Y+15, r24	; 0x0f

000005f0 <.Loc.96>:
	...

000005f2 <.LBE46>:
			__ticks --;
 5f2:	8d 85       	ldd	r24, Y+13	; 0x0d
 5f4:	9e 85       	ldd	r25, Y+14	; 0x0e
 5f6:	01 97       	sbiw	r24, 0x01	; 1
 5f8:	9e 87       	std	Y+14, r25	; 0x0e
 5fa:	8d 87       	std	Y+13, r24	; 0x0d

000005fc <.L39>:
		while(__ticks)
 5fc:	8d 85       	ldd	r24, Y+13	; 0x0d
 5fe:	9e 85       	ldd	r25, Y+14	; 0x0e
 600:	00 97       	sbiw	r24, 0x00	; 0
 602:	61 f7       	brne	.-40     	; 0x5dc <.L40>

00000604 <.Loc.99>:
		return;
 604:	19 c0       	rjmp	.+50     	; 0x638 <.L41>

00000606 <.L61>:
		__ticks = (uint16_t)__tmp;
 606:	69 85       	ldd	r22, Y+9	; 0x09
 608:	7a 85       	ldd	r23, Y+10	; 0x0a
 60a:	8b 85       	ldd	r24, Y+11	; 0x0b
 60c:	9c 85       	ldd	r25, Y+12	; 0x0c
 60e:	0e 94 ed 03 	call	0x7da	; 0x7da <__fixunssfsi>
 612:	6d ab       	std	Y+53, r22	; 0x35
 614:	7e ab       	std	Y+54, r23	; 0x36
 616:	8f ab       	std	Y+55, r24	; 0x37
 618:	98 af       	std	Y+56, r25	; 0x38
 61a:	ed a9       	ldd	r30, Y+53	; 0x35
 61c:	fe a9       	ldd	r31, Y+54	; 0x36
 61e:	fe 87       	std	Y+14, r31	; 0x0e
 620:	ed 87       	std	Y+13, r30	; 0x0d

00000622 <.L36>:
 622:	8d 85       	ldd	r24, Y+13	; 0x0d
 624:	9e 85       	ldd	r25, Y+14	; 0x0e
 626:	9a 8b       	std	Y+18, r25	; 0x12
 628:	89 8b       	std	Y+17, r24	; 0x11

0000062a <.LBB48>:
 62a:	89 89       	ldd	r24, Y+17	; 0x11
 62c:	9a 89       	ldd	r25, Y+18	; 0x12

0000062e <.L1^B6>:
 62e:	01 97       	sbiw	r24, 0x01	; 1
 630:	f1 f7       	brne	.-4      	; 0x62e <.L1^B6>
 632:	9a 8b       	std	Y+18, r25	; 0x12
 634:	89 8b       	std	Y+17, r24	; 0x11

00000636 <.Loc.102>:
	...

00000638 <.L41>:
        {
            DEBOUNCE;
            // stop de motoren
            for (int i = 0; i < 10; i++)
 638:	1a 82       	std	Y+2, r1	; 0x02
 63a:	19 82       	std	Y+1, r1	; 0x01

0000063c <.Loc.104>:
 63c:	09 c0       	rjmp	.+18     	; 0x650 <.L42>

0000063e <.L43>:
            {
                output_aan(1);
 63e:	81 e0       	ldi	r24, 0x01	; 1
 640:	90 e0       	ldi	r25, 0x00	; 0
 642:	0e 94 ee 00 	call	0x1dc	; 0x1dc <output_aan>

00000646 <.Loc.106>:
            for (int i = 0; i < 10; i++)
 646:	89 81       	ldd	r24, Y+1	; 0x01
 648:	9a 81       	ldd	r25, Y+2	; 0x02
 64a:	01 96       	adiw	r24, 0x01	; 1
 64c:	9a 83       	std	Y+2, r25	; 0x02
 64e:	89 83       	std	Y+1, r24	; 0x01

00000650 <.L42>:
 650:	89 81       	ldd	r24, Y+1	; 0x01
 652:	9a 81       	ldd	r25, Y+2	; 0x02
 654:	89 30       	cpi	r24, 0x09	; 9
 656:	91 05       	cpc	r25, r1
 658:	91 f3       	breq	.-28     	; 0x63e <.L43>
 65a:	8c f3       	brlt	.-30     	; 0x63e <.L43>

0000065c <.L33>:
            }
            // start de motoren
        }
        if ((PIN_IR & (1<<IR_R)) == 0)
 65c:	80 e0       	ldi	r24, 0x00	; 0
 65e:	91 e0       	ldi	r25, 0x01	; 1
 660:	dc 01       	movw	r26, r24
 662:	8c 91       	ld	r24, X

00000664 <.Loc.109>:
 664:	88 2f       	mov	r24, r24
 666:	90 e0       	ldi	r25, 0x00	; 0
 668:	80 71       	andi	r24, 0x10	; 16
 66a:	99 27       	eor	r25, r25

0000066c <.Loc.110>:
 66c:	00 97       	sbiw	r24, 0x00	; 0
 66e:	09 f0       	breq	.+2      	; 0x672 <L0^A+0x2>

00000670 <L0^A>:
 670:	49 cf       	rjmp	.-366    	; 0x504 <.L55>
 672:	80 e0       	ldi	r24, 0x00	; 0
 674:	90 e0       	ldi	r25, 0x00	; 0
 676:	a0 ea       	ldi	r26, 0xA0	; 160
 678:	b1 e4       	ldi	r27, 0x41	; 65
 67a:	8b 8b       	std	Y+19, r24	; 0x13
 67c:	9c 8b       	std	Y+20, r25	; 0x14
 67e:	ad 8b       	std	Y+21, r26	; 0x15
 680:	be 8b       	std	Y+22, r27	; 0x16

00000682 <.LBB51>:
	__tmp = ((F_CPU) / 4e3) * __ms;
 682:	20 e0       	ldi	r18, 0x00	; 0
 684:	30 e0       	ldi	r19, 0x00	; 0
 686:	4a e7       	ldi	r20, 0x7A	; 122
 688:	55 e4       	ldi	r21, 0x45	; 69
 68a:	6b 89       	ldd	r22, Y+19	; 0x13
 68c:	7c 89       	ldd	r23, Y+20	; 0x14
 68e:	8d 89       	ldd	r24, Y+21	; 0x15
 690:	9e 89       	ldd	r25, Y+22	; 0x16
 692:	0e 94 6e 04 	call	0x8dc	; 0x8dc <__mulsf3>
 696:	69 af       	std	Y+57, r22	; 0x39
 698:	7a af       	std	Y+58, r23	; 0x3a
 69a:	8b af       	std	Y+59, r24	; 0x3b
 69c:	9c af       	std	Y+60, r25	; 0x3c
 69e:	89 ad       	ldd	r24, Y+57	; 0x39
 6a0:	9a ad       	ldd	r25, Y+58	; 0x3a
 6a2:	ab ad       	ldd	r26, Y+59	; 0x3b
 6a4:	bc ad       	ldd	r27, Y+60	; 0x3c
 6a6:	8f 8b       	std	Y+23, r24	; 0x17
 6a8:	98 8f       	std	Y+24, r25	; 0x18
 6aa:	a9 8f       	std	Y+25, r26	; 0x19
 6ac:	ba 8f       	std	Y+26, r27	; 0x1a

000006ae <.Loc.112>:
	if (__tmp < 1.0)
 6ae:	20 e0       	ldi	r18, 0x00	; 0
 6b0:	30 e0       	ldi	r19, 0x00	; 0
 6b2:	40 e8       	ldi	r20, 0x80	; 128
 6b4:	5f e3       	ldi	r21, 0x3F	; 63
 6b6:	6f 89       	ldd	r22, Y+23	; 0x17
 6b8:	78 8d       	ldd	r23, Y+24	; 0x18
 6ba:	89 8d       	ldd	r24, Y+25	; 0x19
 6bc:	9a 8d       	ldd	r25, Y+26	; 0x1a
 6be:	0e 94 e8 03 	call	0x7d0	; 0x7d0 <__cmpsf2>
 6c2:	88 23       	and	r24, r24
 6c4:	2c f4       	brge	.+10     	; 0x6d0 <.L62>

000006c6 <.Loc.113>:
		__ticks = 1;
 6c6:	81 e0       	ldi	r24, 0x01	; 1
 6c8:	90 e0       	ldi	r25, 0x00	; 0
 6ca:	9c 8f       	std	Y+28, r25	; 0x1c
 6cc:	8b 8f       	std	Y+27, r24	; 0x1b
 6ce:	62 c0       	rjmp	.+196    	; 0x794 <.L47>

000006d0 <.L62>:
	else if (__tmp > 65535)
 6d0:	20 e0       	ldi	r18, 0x00	; 0
 6d2:	3f ef       	ldi	r19, 0xFF	; 255
 6d4:	4f e7       	ldi	r20, 0x7F	; 127
 6d6:	57 e4       	ldi	r21, 0x47	; 71
 6d8:	6f 89       	ldd	r22, Y+23	; 0x17
 6da:	78 8d       	ldd	r23, Y+24	; 0x18
 6dc:	89 8d       	ldd	r24, Y+25	; 0x19
 6de:	9a 8d       	ldd	r25, Y+26	; 0x1a
 6e0:	0e 94 69 04 	call	0x8d2	; 0x8d2 <__gesf2>
 6e4:	88 23       	and	r24, r24
 6e6:	09 f0       	breq	.+2      	; 0x6ea <L0^A>

000006e8 <L0^A>:
 6e8:	0c f4       	brge	.+2      	; 0x6ec <.Loc.115>

000006ea <L0^A>:
 6ea:	42 c0       	rjmp	.+132    	; 0x770 <.L63>

000006ec <.Loc.115>:
		__ticks = (uint16_t) (__ms * 10.0);
 6ec:	20 e0       	ldi	r18, 0x00	; 0
 6ee:	30 e0       	ldi	r19, 0x00	; 0
 6f0:	40 e2       	ldi	r20, 0x20	; 32
 6f2:	51 e4       	ldi	r21, 0x41	; 65
 6f4:	6b 89       	ldd	r22, Y+19	; 0x13
 6f6:	7c 89       	ldd	r23, Y+20	; 0x14
 6f8:	8d 89       	ldd	r24, Y+21	; 0x15
 6fa:	9e 89       	ldd	r25, Y+22	; 0x16
 6fc:	0e 94 6e 04 	call	0x8dc	; 0x8dc <__mulsf3>
 700:	21 96       	adiw	r28, 0x01	; 1
 702:	6c af       	std	Y+60, r22	; 0x3c
 704:	7d af       	std	Y+61, r23	; 0x3d
 706:	8e af       	std	Y+62, r24	; 0x3e
 708:	9f af       	std	Y+63, r25	; 0x3f
 70a:	21 97       	sbiw	r28, 0x01	; 1
 70c:	21 96       	adiw	r28, 0x01	; 1
 70e:	8c ad       	ldd	r24, Y+60	; 0x3c
 710:	9d ad       	ldd	r25, Y+61	; 0x3d
 712:	ae ad       	ldd	r26, Y+62	; 0x3e
 714:	bf ad       	ldd	r27, Y+63	; 0x3f
 716:	21 97       	sbiw	r28, 0x01	; 1
 718:	8d a3       	std	Y+37, r24	; 0x25
 71a:	9e a3       	std	Y+38, r25	; 0x26
 71c:	af a3       	std	Y+39, r26	; 0x27
 71e:	b8 a7       	std	Y+40, r27	; 0x28

00000720 <.Loc.116>:
 720:	6d a1       	ldd	r22, Y+37	; 0x25
 722:	7e a1       	ldd	r23, Y+38	; 0x26
 724:	8f a1       	ldd	r24, Y+39	; 0x27
 726:	98 a5       	ldd	r25, Y+40	; 0x28
 728:	0e 94 ed 03 	call	0x7da	; 0x7da <__fixunssfsi>
 72c:	25 96       	adiw	r28, 0x05	; 5
 72e:	6c af       	std	Y+60, r22	; 0x3c
 730:	7d af       	std	Y+61, r23	; 0x3d
 732:	8e af       	std	Y+62, r24	; 0x3e
 734:	9f af       	std	Y+63, r25	; 0x3f
 736:	25 97       	sbiw	r28, 0x05	; 5
 738:	23 96       	adiw	r28, 0x03	; 3
 73a:	ae ad       	ldd	r26, Y+62	; 0x3e
 73c:	bf ad       	ldd	r27, Y+63	; 0x3f
 73e:	23 97       	sbiw	r28, 0x03	; 3
 740:	bc 8f       	std	Y+28, r27	; 0x1c
 742:	ab 8f       	std	Y+27, r26	; 0x1b

00000744 <.Loc.117>:
		while(__ticks)
 744:	10 c0       	rjmp	.+32     	; 0x766 <.L50>

00000746 <.L51>:
 746:	80 e9       	ldi	r24, 0x90	; 144
 748:	91 e0       	ldi	r25, 0x01	; 1
 74a:	9e 8f       	std	Y+30, r25	; 0x1e
 74c:	8d 8f       	std	Y+29, r24	; 0x1d

0000074e <.LBB53>:
 74e:	8d 8d       	ldd	r24, Y+29	; 0x1d
 750:	9e 8d       	ldd	r25, Y+30	; 0x1e

00000752 <.L1^B7>:
 752:	01 97       	sbiw	r24, 0x01	; 1
 754:	f1 f7       	brne	.-4      	; 0x752 <.L1^B7>
 756:	9e 8f       	std	Y+30, r25	; 0x1e
 758:	8d 8f       	std	Y+29, r24	; 0x1d

0000075a <.Loc.119>:
	...

0000075c <.LBE53>:
			__ticks --;
 75c:	8b 8d       	ldd	r24, Y+27	; 0x1b
 75e:	9c 8d       	ldd	r25, Y+28	; 0x1c
 760:	01 97       	sbiw	r24, 0x01	; 1
 762:	9c 8f       	std	Y+28, r25	; 0x1c
 764:	8b 8f       	std	Y+27, r24	; 0x1b

00000766 <.L50>:
		while(__ticks)
 766:	8b 8d       	ldd	r24, Y+27	; 0x1b
 768:	9c 8d       	ldd	r25, Y+28	; 0x1c
 76a:	00 97       	sbiw	r24, 0x00	; 0
 76c:	61 f7       	brne	.-40     	; 0x746 <.L51>

0000076e <.Loc.122>:
		return;
 76e:	1d c0       	rjmp	.+58     	; 0x7aa <.L52>

00000770 <.L63>:
		__ticks = (uint16_t)__tmp;
 770:	6f 89       	ldd	r22, Y+23	; 0x17
 772:	78 8d       	ldd	r23, Y+24	; 0x18
 774:	89 8d       	ldd	r24, Y+25	; 0x19
 776:	9a 8d       	ldd	r25, Y+26	; 0x1a
 778:	0e 94 ed 03 	call	0x7da	; 0x7da <__fixunssfsi>
 77c:	29 96       	adiw	r28, 0x09	; 9
 77e:	6c af       	std	Y+60, r22	; 0x3c
 780:	7d af       	std	Y+61, r23	; 0x3d
 782:	8e af       	std	Y+62, r24	; 0x3e
 784:	9f af       	std	Y+63, r25	; 0x3f
 786:	29 97       	sbiw	r28, 0x09	; 9
 788:	27 96       	adiw	r28, 0x07	; 7
 78a:	ee ad       	ldd	r30, Y+62	; 0x3e
 78c:	ff ad       	ldd	r31, Y+63	; 0x3f
 78e:	27 97       	sbiw	r28, 0x07	; 7
 790:	fc 8f       	std	Y+28, r31	; 0x1c
 792:	eb 8f       	std	Y+27, r30	; 0x1b

00000794 <.L47>:
 794:	8b 8d       	ldd	r24, Y+27	; 0x1b
 796:	9c 8d       	ldd	r25, Y+28	; 0x1c
 798:	98 a3       	std	Y+32, r25	; 0x20
 79a:	8f 8f       	std	Y+31, r24	; 0x1f

0000079c <.LBB55>:
 79c:	8f 8d       	ldd	r24, Y+31	; 0x1f
 79e:	98 a1       	ldd	r25, Y+32	; 0x20

000007a0 <.L1^B8>:
 7a0:	01 97       	sbiw	r24, 0x01	; 1
 7a2:	f1 f7       	brne	.-4      	; 0x7a0 <.L1^B8>
 7a4:	98 a3       	std	Y+32, r25	; 0x20
 7a6:	8f 8f       	std	Y+31, r24	; 0x1f

000007a8 <.Loc.125>:
	...

000007aa <.L52>:
        {
            DEBOUNCE;
            // stop de motoren
            for (int i = 0; i < 10; i++)
 7aa:	1c 82       	std	Y+4, r1	; 0x04
 7ac:	1b 82       	std	Y+3, r1	; 0x03

000007ae <.Loc.127>:
 7ae:	09 c0       	rjmp	.+18     	; 0x7c2 <.L53>

000007b0 <.L54>:
            {
                output_aan(1);
 7b0:	81 e0       	ldi	r24, 0x01	; 1
 7b2:	90 e0       	ldi	r25, 0x00	; 0
 7b4:	0e 94 ee 00 	call	0x1dc	; 0x1dc <output_aan>

000007b8 <.Loc.129>:
            for (int i = 0; i < 10; i++)
 7b8:	8b 81       	ldd	r24, Y+3	; 0x03
 7ba:	9c 81       	ldd	r25, Y+4	; 0x04
 7bc:	01 96       	adiw	r24, 0x01	; 1
 7be:	9c 83       	std	Y+4, r25	; 0x04
 7c0:	8b 83       	std	Y+3, r24	; 0x03

000007c2 <.L53>:
 7c2:	8b 81       	ldd	r24, Y+3	; 0x03
 7c4:	9c 81       	ldd	r25, Y+4	; 0x04
 7c6:	89 30       	cpi	r24, 0x09	; 9
 7c8:	91 05       	cpc	r25, r1
 7ca:	91 f3       	breq	.-28     	; 0x7b0 <.L54>
 7cc:	8c f3       	brlt	.-30     	; 0x7b0 <.L54>

000007ce <.LBE57>:
        if ((PIN_IR & (1<<IR_L)) == 0)
 7ce:	9a ce       	rjmp	.-716    	; 0x504 <.L55>

000007d0 <__cmpsf2>:
 7d0:	0e 94 1c 04 	call	0x838	; 0x838 <__fp_cmp>
 7d4:	08 f4       	brcc	.+2      	; 0x7d8 <.L1^B1>
 7d6:	81 e0       	ldi	r24, 0x01	; 1

000007d8 <.L1^B1>:
 7d8:	08 95       	ret

000007da <__fixunssfsi>:
 7da:	0e 94 48 04 	call	0x890	; 0x890 <__fp_splitA>
 7de:	88 f0       	brcs	.+34     	; 0x802 <.L_err>
 7e0:	9f 57       	subi	r25, 0x7F	; 127
 7e2:	98 f0       	brcs	.+38     	; 0x80a <.L_zr>
 7e4:	b9 2f       	mov	r27, r25
 7e6:	99 27       	eor	r25, r25
 7e8:	b7 51       	subi	r27, 0x17	; 23
 7ea:	b0 f0       	brcs	.+44     	; 0x818 <.L4^B1>
 7ec:	e1 f0       	breq	.+56     	; 0x826 <.L_sign>

000007ee <.L1^B1>:
 7ee:	66 0f       	add	r22, r22
 7f0:	77 1f       	adc	r23, r23
 7f2:	88 1f       	adc	r24, r24
 7f4:	99 1f       	adc	r25, r25
 7f6:	1a f0       	brmi	.+6      	; 0x7fe <.L2^B1>
 7f8:	ba 95       	dec	r27
 7fa:	c9 f7       	brne	.-14     	; 0x7ee <.L1^B1>
 7fc:	14 c0       	rjmp	.+40     	; 0x826 <.L_sign>

000007fe <.L2^B1>:
 7fe:	b1 30       	cpi	r27, 0x01	; 1
 800:	91 f0       	breq	.+36     	; 0x826 <.L_sign>

00000802 <.L_err>:
 802:	0e 94 62 04 	call	0x8c4	; 0x8c4 <__fp_zero>
 806:	b1 e0       	ldi	r27, 0x01	; 1
 808:	08 95       	ret

0000080a <.L_zr>:
 80a:	0c 94 62 04 	jmp	0x8c4	; 0x8c4 <__fp_zero>

0000080e <.L3^B1>:
 80e:	67 2f       	mov	r22, r23
 810:	78 2f       	mov	r23, r24
 812:	88 27       	eor	r24, r24
 814:	b8 5f       	subi	r27, 0xF8	; 248
 816:	39 f0       	breq	.+14     	; 0x826 <.L_sign>

00000818 <.L4^B1>:
 818:	b9 3f       	cpi	r27, 0xF9	; 249
 81a:	cc f3       	brlt	.-14     	; 0x80e <.L3^B1>

0000081c <.L5^B1>:
 81c:	86 95       	lsr	r24
 81e:	77 95       	ror	r23
 820:	67 95       	ror	r22
 822:	b3 95       	inc	r27
 824:	d9 f7       	brne	.-10     	; 0x81c <.L5^B1>

00000826 <.L_sign>:
 826:	3e f4       	brtc	.+14     	; 0x836 <.L6^B1>
 828:	90 95       	com	r25
 82a:	80 95       	com	r24
 82c:	70 95       	com	r23
 82e:	61 95       	neg	r22
 830:	7f 4f       	sbci	r23, 0xFF	; 255
 832:	8f 4f       	sbci	r24, 0xFF	; 255
 834:	9f 4f       	sbci	r25, 0xFF	; 255

00000836 <.L6^B1>:
 836:	08 95       	ret

00000838 <__fp_cmp>:
 838:	99 0f       	add	r25, r25
 83a:	00 08       	sbc	r0, r0
 83c:	55 0f       	add	r21, r21
 83e:	aa 0b       	sbc	r26, r26
 840:	e0 e8       	ldi	r30, 0x80	; 128
 842:	fe ef       	ldi	r31, 0xFE	; 254
 844:	16 16       	cp	r1, r22
 846:	17 06       	cpc	r1, r23
 848:	e8 07       	cpc	r30, r24
 84a:	f9 07       	cpc	r31, r25
 84c:	c0 f0       	brcs	.+48     	; 0x87e <.L9^B1>
 84e:	12 16       	cp	r1, r18
 850:	13 06       	cpc	r1, r19
 852:	e4 07       	cpc	r30, r20
 854:	f5 07       	cpc	r31, r21
 856:	98 f0       	brcs	.+38     	; 0x87e <.L9^B1>
 858:	62 1b       	sub	r22, r18
 85a:	73 0b       	sbc	r23, r19
 85c:	84 0b       	sbc	r24, r20
 85e:	95 0b       	sbc	r25, r21
 860:	39 f4       	brne	.+14     	; 0x870 <.L1^B1>
 862:	0a 26       	eor	r0, r26
 864:	61 f0       	breq	.+24     	; 0x87e <.L9^B1>
 866:	23 2b       	or	r18, r19
 868:	24 2b       	or	r18, r20
 86a:	25 2b       	or	r18, r21
 86c:	21 f4       	brne	.+8      	; 0x876 <.L2^B1>
 86e:	08 95       	ret

00000870 <.L1^B1>:
 870:	0a 26       	eor	r0, r26
 872:	09 f4       	brne	.+2      	; 0x876 <.L2^B1>
 874:	a1 40       	sbci	r26, 0x01	; 1

00000876 <.L2^B1>:
 876:	a6 95       	lsr	r26
 878:	8f ef       	ldi	r24, 0xFF	; 255
 87a:	81 1d       	adc	r24, r1
 87c:	81 1d       	adc	r24, r1

0000087e <.L9^B1>:
 87e:	08 95       	ret

00000880 <__fp_split3>:
 880:	57 fd       	sbrc	r21, 7
 882:	90 58       	subi	r25, 0x80	; 128
 884:	44 0f       	add	r20, r20
 886:	55 1f       	adc	r21, r21
 888:	59 f0       	breq	.+22     	; 0x8a0 <.L4^B1>
 88a:	5f 3f       	cpi	r21, 0xFF	; 255
 88c:	71 f0       	breq	.+28     	; 0x8aa <.L5^B1>

0000088e <.L1^B1>:
 88e:	47 95       	ror	r20

00000890 <__fp_splitA>:
 890:	88 0f       	add	r24, r24
 892:	97 fb       	bst	r25, 7
 894:	99 1f       	adc	r25, r25
 896:	61 f0       	breq	.+24     	; 0x8b0 <.L6^B1>
 898:	9f 3f       	cpi	r25, 0xFF	; 255
 89a:	79 f0       	breq	.+30     	; 0x8ba <.L7^B1>

0000089c <.L3^B1>:
 89c:	87 95       	ror	r24
 89e:	08 95       	ret

000008a0 <.L4^B1>:
 8a0:	12 16       	cp	r1, r18
 8a2:	13 06       	cpc	r1, r19
 8a4:	14 06       	cpc	r1, r20
 8a6:	55 1f       	adc	r21, r21
 8a8:	f2 cf       	rjmp	.-28     	; 0x88e <.L1^B1>

000008aa <.L5^B1>:
 8aa:	46 95       	lsr	r20
 8ac:	f1 df       	rcall	.-30     	; 0x890 <__fp_splitA>
 8ae:	08 c0       	rjmp	.+16     	; 0x8c0 <.L8^B1>

000008b0 <.L6^B1>:
 8b0:	16 16       	cp	r1, r22
 8b2:	17 06       	cpc	r1, r23
 8b4:	18 06       	cpc	r1, r24
 8b6:	99 1f       	adc	r25, r25
 8b8:	f1 cf       	rjmp	.-30     	; 0x89c <.L3^B1>

000008ba <.L7^B1>:
 8ba:	86 95       	lsr	r24
 8bc:	71 05       	cpc	r23, r1
 8be:	61 05       	cpc	r22, r1

000008c0 <.L8^B1>:
 8c0:	08 94       	sec
 8c2:	08 95       	ret

000008c4 <__fp_zero>:
 8c4:	e8 94       	clt

000008c6 <__fp_szero>:
 8c6:	bb 27       	eor	r27, r27
 8c8:	66 27       	eor	r22, r22
 8ca:	77 27       	eor	r23, r23
 8cc:	cb 01       	movw	r24, r22
 8ce:	97 f9       	bld	r25, 7
 8d0:	08 95       	ret

000008d2 <__gesf2>:
 8d2:	0e 94 1c 04 	call	0x838	; 0x838 <__fp_cmp>
 8d6:	08 f4       	brcc	.+2      	; 0x8da <.L1^B1>
 8d8:	8f ef       	ldi	r24, 0xFF	; 255

000008da <.L1^B1>:
 8da:	08 95       	ret

000008dc <__mulsf3>:
 8dc:	0e 94 81 04 	call	0x902	; 0x902 <__mulsf3x>
 8e0:	0c 94 f2 04 	jmp	0x9e4	; 0x9e4 <__fp_round>

000008e4 <.L^B1>:
 8e4:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <__fp_pscA>
 8e8:	38 f0       	brcs	.+14     	; 0x8f8 <.L1^B1>
 8ea:	0e 94 eb 04 	call	0x9d6	; 0x9d6 <__fp_pscB>
 8ee:	20 f0       	brcs	.+8      	; 0x8f8 <.L1^B1>
 8f0:	95 23       	and	r25, r21
 8f2:	11 f0       	breq	.+4      	; 0x8f8 <.L1^B1>
 8f4:	0c 94 db 04 	jmp	0x9b6	; 0x9b6 <__fp_inf>

000008f8 <.L1^B1>:
 8f8:	0c 94 e1 04 	jmp	0x9c2	; 0x9c2 <__fp_nan>

000008fc <.L2^B1>:
 8fc:	11 24       	eor	r1, r1
 8fe:	0c 94 63 04 	jmp	0x8c6	; 0x8c6 <__fp_szero>

00000902 <__mulsf3x>:
 902:	0e 94 40 04 	call	0x880	; 0x880 <__fp_split3>
 906:	70 f3       	brcs	.-36     	; 0x8e4 <.L^B1>

00000908 <__mulsf3_pse>:
 908:	95 9f       	mul	r25, r21
 90a:	c1 f3       	breq	.-16     	; 0x8fc <.L2^B1>
 90c:	95 0f       	add	r25, r21
 90e:	50 e0       	ldi	r21, 0x00	; 0
 910:	55 1f       	adc	r21, r21
 912:	62 9f       	mul	r22, r18
 914:	f0 01       	movw	r30, r0
 916:	72 9f       	mul	r23, r18
 918:	bb 27       	eor	r27, r27
 91a:	f0 0d       	add	r31, r0
 91c:	b1 1d       	adc	r27, r1
 91e:	63 9f       	mul	r22, r19
 920:	aa 27       	eor	r26, r26
 922:	f0 0d       	add	r31, r0
 924:	b1 1d       	adc	r27, r1
 926:	aa 1f       	adc	r26, r26
 928:	64 9f       	mul	r22, r20
 92a:	66 27       	eor	r22, r22
 92c:	b0 0d       	add	r27, r0
 92e:	a1 1d       	adc	r26, r1
 930:	66 1f       	adc	r22, r22
 932:	82 9f       	mul	r24, r18
 934:	22 27       	eor	r18, r18
 936:	b0 0d       	add	r27, r0
 938:	a1 1d       	adc	r26, r1
 93a:	62 1f       	adc	r22, r18
 93c:	73 9f       	mul	r23, r19
 93e:	b0 0d       	add	r27, r0
 940:	a1 1d       	adc	r26, r1
 942:	62 1f       	adc	r22, r18
 944:	83 9f       	mul	r24, r19
 946:	a0 0d       	add	r26, r0
 948:	61 1d       	adc	r22, r1
 94a:	22 1f       	adc	r18, r18
 94c:	74 9f       	mul	r23, r20
 94e:	33 27       	eor	r19, r19
 950:	a0 0d       	add	r26, r0
 952:	61 1d       	adc	r22, r1
 954:	23 1f       	adc	r18, r19
 956:	84 9f       	mul	r24, r20
 958:	60 0d       	add	r22, r0
 95a:	21 1d       	adc	r18, r1
 95c:	82 2f       	mov	r24, r18
 95e:	76 2f       	mov	r23, r22
 960:	6a 2f       	mov	r22, r26
 962:	11 24       	eor	r1, r1
 964:	9f 57       	subi	r25, 0x7F	; 127
 966:	50 40       	sbci	r21, 0x00	; 0
 968:	9a f0       	brmi	.+38     	; 0x990 <.L13^B1>
 96a:	f1 f0       	breq	.+60     	; 0x9a8 <.L15^B1>

0000096c <.L10^B1>:
 96c:	88 23       	and	r24, r24
 96e:	4a f0       	brmi	.+18     	; 0x982 <.L11^B1>
 970:	ee 0f       	add	r30, r30
 972:	ff 1f       	adc	r31, r31
 974:	bb 1f       	adc	r27, r27
 976:	66 1f       	adc	r22, r22
 978:	77 1f       	adc	r23, r23
 97a:	88 1f       	adc	r24, r24
 97c:	91 50       	subi	r25, 0x01	; 1
 97e:	50 40       	sbci	r21, 0x00	; 0
 980:	a9 f7       	brne	.-22     	; 0x96c <.L10^B1>

00000982 <.L11^B1>:
 982:	9e 3f       	cpi	r25, 0xFE	; 254
 984:	51 05       	cpc	r21, r1
 986:	80 f0       	brcs	.+32     	; 0x9a8 <.L15^B1>
 988:	0c 94 db 04 	jmp	0x9b6	; 0x9b6 <__fp_inf>

0000098c <.L12^B1>:
 98c:	0c 94 63 04 	jmp	0x8c6	; 0x8c6 <__fp_szero>

00000990 <.L13^B1>:
 990:	5f 3f       	cpi	r21, 0xFF	; 255
 992:	e4 f3       	brlt	.-8      	; 0x98c <.L12^B1>
 994:	98 3e       	cpi	r25, 0xE8	; 232
 996:	d4 f3       	brlt	.-12     	; 0x98c <.L12^B1>

00000998 <.L14^B1>:
 998:	86 95       	lsr	r24
 99a:	77 95       	ror	r23
 99c:	67 95       	ror	r22
 99e:	b7 95       	ror	r27
 9a0:	f7 95       	ror	r31
 9a2:	e7 95       	ror	r30
 9a4:	9f 5f       	subi	r25, 0xFF	; 255
 9a6:	c1 f7       	brne	.-16     	; 0x998 <.L14^B1>

000009a8 <.L15^B1>:
 9a8:	fe 2b       	or	r31, r30
 9aa:	88 0f       	add	r24, r24
 9ac:	91 1d       	adc	r25, r1
 9ae:	96 95       	lsr	r25
 9b0:	87 95       	ror	r24
 9b2:	97 f9       	bld	r25, 7
 9b4:	08 95       	ret

000009b6 <__fp_inf>:
 9b6:	97 f9       	bld	r25, 7
 9b8:	9f 67       	ori	r25, 0x7F	; 127
 9ba:	80 e8       	ldi	r24, 0x80	; 128
 9bc:	70 e0       	ldi	r23, 0x00	; 0
 9be:	60 e0       	ldi	r22, 0x00	; 0
 9c0:	08 95       	ret

000009c2 <__fp_nan>:
 9c2:	9f ef       	ldi	r25, 0xFF	; 255
 9c4:	80 ec       	ldi	r24, 0xC0	; 192
 9c6:	08 95       	ret

000009c8 <__fp_pscA>:
 9c8:	00 24       	eor	r0, r0
 9ca:	0a 94       	dec	r0
 9cc:	16 16       	cp	r1, r22
 9ce:	17 06       	cpc	r1, r23
 9d0:	18 06       	cpc	r1, r24
 9d2:	09 06       	cpc	r0, r25
 9d4:	08 95       	ret

000009d6 <__fp_pscB>:
 9d6:	00 24       	eor	r0, r0
 9d8:	0a 94       	dec	r0
 9da:	12 16       	cp	r1, r18
 9dc:	13 06       	cpc	r1, r19
 9de:	14 06       	cpc	r1, r20
 9e0:	05 06       	cpc	r0, r21
 9e2:	08 95       	ret

000009e4 <__fp_round>:
 9e4:	09 2e       	mov	r0, r25
 9e6:	03 94       	inc	r0
 9e8:	00 0c       	add	r0, r0
 9ea:	11 f4       	brne	.+4      	; 0x9f0 <.L1^B1>
 9ec:	88 23       	and	r24, r24
 9ee:	52 f0       	brmi	.+20     	; 0xa04 <.L3^B1>

000009f0 <.L1^B1>:
 9f0:	bb 0f       	add	r27, r27
 9f2:	40 f4       	brcc	.+16     	; 0xa04 <.L3^B1>
 9f4:	bf 2b       	or	r27, r31
 9f6:	11 f4       	brne	.+4      	; 0x9fc <.L2^B1>
 9f8:	60 ff       	sbrs	r22, 0
 9fa:	04 c0       	rjmp	.+8      	; 0xa04 <.L3^B1>

000009fc <.L2^B1>:
 9fc:	6f 5f       	subi	r22, 0xFF	; 255
 9fe:	7f 4f       	sbci	r23, 0xFF	; 255
 a00:	8f 4f       	sbci	r24, 0xFF	; 255
 a02:	9f 4f       	sbci	r25, 0xFF	; 255

00000a04 <.L3^B1>:
 a04:	08 95       	ret

00000a06 <_exit>:
 a06:	f8 94       	cli

00000a08 <__stop_program>:
 a08:	ff cf       	rjmp	.-2      	; 0xa08 <__stop_program>
