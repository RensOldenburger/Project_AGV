
bin\Debug\IRenBluetooth.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  000007ee  000008a2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000007ee  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800200  00800200  000008a2  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  000008a2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      00000012  00000000  00000000  000008a5  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000008b8  2**2
                  CONTENTS, READONLY, OCTETS
  6 .debug_aranges 000000d8  00000000  00000000  000008f8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_info   00000e6e  00000000  00000000  000009d0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_abbrev 00000cd7  00000000  00000000  0000183e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line   0000092e  00000000  00000000  00002515  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_frame  000001f0  00000000  00000000  00002e44  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_str    0000058f  00000000  00000000  00003034  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_line_str 00000151  00000000  00000000  000035c3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
   4:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
   8:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
   c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  10:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  14:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  18:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  1c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  20:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  24:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  28:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  2c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  30:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  34:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  38:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  3c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  40:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  44:	0c 94 4e 01 	jmp	0x29c	; 0x29c <__vector_17>
  48:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  4c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  50:	0c 94 23 01 	jmp	0x246	; 0x246 <__vector_20>
  54:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  58:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  5c:	0c 94 c9 01 	jmp	0x392	; 0x392 <__vector_23>
  60:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  64:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  68:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  6c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  70:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  74:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  78:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  7c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  80:	0c 94 a1 01 	jmp	0x342	; 0x342 <__vector_32>
  84:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  88:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  8c:	0c 94 76 01 	jmp	0x2ec	; 0x2ec <__vector_35>
  90:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  94:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  98:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  9c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  a0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  a4:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  a8:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  ac:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  b0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  b4:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  b8:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  bc:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  c0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  c4:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  c8:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  cc:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  d0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  d4:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  d8:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  dc:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  e0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_clear_bss>:
  f4:	22 e0       	ldi	r18, 0x02	; 2

000000f6 <.Loc.1>:
  f6:	a0 e0       	ldi	r26, 0x00	; 0

000000f8 <.Loc.2>:
  f8:	b2 e0       	ldi	r27, 0x02	; 2

000000fa <.Loc.3>:
  fa:	01 c0       	rjmp	.+2      	; 0xfe <.Loc.5>

000000fc <.Loc.4>:
  fc:	1d 92       	st	X+, r1

000000fe <.Loc.5>:
  fe:	a2 30       	cpi	r26, 0x02	; 2

00000100 <.Loc.6>:
 100:	b2 07       	cpc	r27, r18

00000102 <.Loc.7>:
 102:	e1 f7       	brne	.-8      	; 0xfc <.Loc.4>

00000104 <L0^A>:
 104:	0e 94 e7 01 	call	0x3ce	; 0x3ce <main>
 108:	0c 94 f5 03 	jmp	0x7ea	; 0x7ea <_exit>

0000010c <__bad_interrupt>:
 10c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000110 <initding>:
void h_bridgeL_set_percentage(signed char percentage);

int timerteller = 0;

void initding()
{
 110:	cf 93       	push	r28
 112:	df 93       	push	r29
 114:	cd b7       	in	r28, 0x3d	; 61
 116:	de b7       	in	r29, 0x3e	; 62

00000118 <.Loc.1>:
    //timer PWM motorenR
    TCCR1B = (0 << CS12) | (0 << CS11) | (1 << CS10);
 118:	81 e8       	ldi	r24, 0x81	; 129
 11a:	90 e0       	ldi	r25, 0x00	; 0

0000011c <.Loc.2>:
 11c:	21 e0       	ldi	r18, 0x01	; 1
 11e:	fc 01       	movw	r30, r24
 120:	20 83       	st	Z, r18

00000122 <.Loc.3>:
    TIMSK1 = (1 << OCIE1A) | (1 << TOIE1);
 122:	8f e6       	ldi	r24, 0x6F	; 111
 124:	90 e0       	ldi	r25, 0x00	; 0

00000126 <.Loc.4>:
 126:	23 e0       	ldi	r18, 0x03	; 3
 128:	fc 01       	movw	r30, r24
 12a:	20 83       	st	Z, r18

0000012c <.Loc.5>:

    OCR1A = 0;
 12c:	88 e8       	ldi	r24, 0x88	; 136
 12e:	90 e0       	ldi	r25, 0x00	; 0

00000130 <.Loc.6>:
 130:	fc 01       	movw	r30, r24
 132:	11 82       	std	Z+1, r1	; 0x01
 134:	10 82       	st	Z, r1

00000136 <.Loc.7>:
    //timer PWM motorenL
    TCCR3B = (0 << CS32) | (0 << CS31) | (1 << CS30);
 136:	81 e9       	ldi	r24, 0x91	; 145
 138:	90 e0       	ldi	r25, 0x00	; 0

0000013a <.Loc.8>:
 13a:	21 e0       	ldi	r18, 0x01	; 1
 13c:	fc 01       	movw	r30, r24
 13e:	20 83       	st	Z, r18

00000140 <.Loc.9>:
    TIMSK3 = (1 << OCIE3A) | (1 << TOIE3);
 140:	81 e7       	ldi	r24, 0x71	; 113
 142:	90 e0       	ldi	r25, 0x00	; 0

00000144 <.Loc.10>:
 144:	23 e0       	ldi	r18, 0x03	; 3
 146:	fc 01       	movw	r30, r24
 148:	20 83       	st	Z, r18

0000014a <.Loc.11>:

    OCR3A = 0;
 14a:	88 e9       	ldi	r24, 0x98	; 152
 14c:	90 e0       	ldi	r25, 0x00	; 0

0000014e <.Loc.12>:
 14e:	fc 01       	movw	r30, r24
 150:	11 82       	std	Z+1, r1	; 0x01
 152:	10 82       	st	Z, r1

00000154 <.Loc.13>:

    //timer doorrijden
    TIMSK0 |= (1 << TOIE0);
 154:	8e e6       	ldi	r24, 0x6E	; 110
 156:	90 e0       	ldi	r25, 0x00	; 0
 158:	fc 01       	movw	r30, r24
 15a:	20 81       	ld	r18, Z
 15c:	8e e6       	ldi	r24, 0x6E	; 110
 15e:	90 e0       	ldi	r25, 0x00	; 0

00000160 <.Loc.14>:
 160:	21 60       	ori	r18, 0x01	; 1
 162:	fc 01       	movw	r30, r24
 164:	20 83       	st	Z, r18

00000166 <.Loc.15>:

    //pinout h-brug
    DDR |= (1 << PEN1);
 166:	81 e2       	ldi	r24, 0x21	; 33
 168:	90 e0       	ldi	r25, 0x00	; 0
 16a:	fc 01       	movw	r30, r24
 16c:	20 81       	ld	r18, Z
 16e:	81 e2       	ldi	r24, 0x21	; 33
 170:	90 e0       	ldi	r25, 0x00	; 0

00000172 <.Loc.16>:
 172:	20 68       	ori	r18, 0x80	; 128
 174:	fc 01       	movw	r30, r24
 176:	20 83       	st	Z, r18

00000178 <.Loc.17>:
    DDR |= (1 << PIN11);
 178:	81 e2       	ldi	r24, 0x21	; 33
 17a:	90 e0       	ldi	r25, 0x00	; 0
 17c:	fc 01       	movw	r30, r24
 17e:	20 81       	ld	r18, Z
 180:	81 e2       	ldi	r24, 0x21	; 33
 182:	90 e0       	ldi	r25, 0x00	; 0

00000184 <.Loc.18>:
 184:	20 64       	ori	r18, 0x40	; 64
 186:	fc 01       	movw	r30, r24
 188:	20 83       	st	Z, r18

0000018a <.Loc.19>:
    DDR |= (1 << PIN12);
 18a:	81 e2       	ldi	r24, 0x21	; 33
 18c:	90 e0       	ldi	r25, 0x00	; 0
 18e:	fc 01       	movw	r30, r24
 190:	20 81       	ld	r18, Z
 192:	81 e2       	ldi	r24, 0x21	; 33
 194:	90 e0       	ldi	r25, 0x00	; 0

00000196 <.Loc.20>:
 196:	20 62       	ori	r18, 0x20	; 32
 198:	fc 01       	movw	r30, r24
 19a:	20 83       	st	Z, r18

0000019c <.Loc.21>:
    DDR |= (1 << PIN21);
 19c:	81 e2       	ldi	r24, 0x21	; 33
 19e:	90 e0       	ldi	r25, 0x00	; 0
 1a0:	fc 01       	movw	r30, r24
 1a2:	20 81       	ld	r18, Z
 1a4:	81 e2       	ldi	r24, 0x21	; 33
 1a6:	90 e0       	ldi	r25, 0x00	; 0

000001a8 <.Loc.22>:
 1a8:	20 61       	ori	r18, 0x10	; 16
 1aa:	fc 01       	movw	r30, r24
 1ac:	20 83       	st	Z, r18

000001ae <.Loc.23>:
    DDR |= (1 << PIN22);
 1ae:	81 e2       	ldi	r24, 0x21	; 33
 1b0:	90 e0       	ldi	r25, 0x00	; 0
 1b2:	fc 01       	movw	r30, r24
 1b4:	20 81       	ld	r18, Z
 1b6:	81 e2       	ldi	r24, 0x21	; 33
 1b8:	90 e0       	ldi	r25, 0x00	; 0

000001ba <.Loc.24>:
 1ba:	28 60       	ori	r18, 0x08	; 8
 1bc:	fc 01       	movw	r30, r24
 1be:	20 83       	st	Z, r18

000001c0 <.Loc.25>:
    DDR |= (1 << PEN2);
 1c0:	81 e2       	ldi	r24, 0x21	; 33
 1c2:	90 e0       	ldi	r25, 0x00	; 0
 1c4:	fc 01       	movw	r30, r24
 1c6:	20 81       	ld	r18, Z
 1c8:	81 e2       	ldi	r24, 0x21	; 33
 1ca:	90 e0       	ldi	r25, 0x00	; 0

000001cc <.Loc.26>:
 1cc:	24 60       	ori	r18, 0x04	; 4
 1ce:	fc 01       	movw	r30, r24
 1d0:	20 83       	st	Z, r18

000001d2 <.Loc.27>:

    //H-brug pinnen LOW
    PORT &= ~(1 << PEN1);
 1d2:	82 e2       	ldi	r24, 0x22	; 34
 1d4:	90 e0       	ldi	r25, 0x00	; 0
 1d6:	fc 01       	movw	r30, r24
 1d8:	20 81       	ld	r18, Z

000001da <.Loc.28>:
 1da:	82 e2       	ldi	r24, 0x22	; 34
 1dc:	90 e0       	ldi	r25, 0x00	; 0

000001de <.Loc.29>:
 1de:	2f 77       	andi	r18, 0x7F	; 127
 1e0:	fc 01       	movw	r30, r24
 1e2:	20 83       	st	Z, r18

000001e4 <.Loc.30>:
	PORT &= ~(1 << PIN11);
 1e4:	82 e2       	ldi	r24, 0x22	; 34
 1e6:	90 e0       	ldi	r25, 0x00	; 0
 1e8:	fc 01       	movw	r30, r24
 1ea:	20 81       	ld	r18, Z

000001ec <.Loc.31>:
 1ec:	82 e2       	ldi	r24, 0x22	; 34
 1ee:	90 e0       	ldi	r25, 0x00	; 0

000001f0 <.Loc.32>:
 1f0:	2f 7b       	andi	r18, 0xBF	; 191
 1f2:	fc 01       	movw	r30, r24
 1f4:	20 83       	st	Z, r18

000001f6 <.Loc.33>:
	PORT &= ~(1 << PIN12);
 1f6:	82 e2       	ldi	r24, 0x22	; 34
 1f8:	90 e0       	ldi	r25, 0x00	; 0
 1fa:	fc 01       	movw	r30, r24
 1fc:	20 81       	ld	r18, Z

000001fe <.Loc.34>:
 1fe:	82 e2       	ldi	r24, 0x22	; 34
 200:	90 e0       	ldi	r25, 0x00	; 0

00000202 <.Loc.35>:
 202:	2f 7d       	andi	r18, 0xDF	; 223
 204:	fc 01       	movw	r30, r24
 206:	20 83       	st	Z, r18

00000208 <.Loc.36>:
	PORT &= ~(1 << PIN21);
 208:	82 e2       	ldi	r24, 0x22	; 34
 20a:	90 e0       	ldi	r25, 0x00	; 0
 20c:	fc 01       	movw	r30, r24
 20e:	20 81       	ld	r18, Z

00000210 <.Loc.37>:
 210:	82 e2       	ldi	r24, 0x22	; 34
 212:	90 e0       	ldi	r25, 0x00	; 0

00000214 <.Loc.38>:
 214:	2f 7e       	andi	r18, 0xEF	; 239
 216:	fc 01       	movw	r30, r24
 218:	20 83       	st	Z, r18

0000021a <.Loc.39>:
	PORT &= ~(1 << PIN22);
 21a:	82 e2       	ldi	r24, 0x22	; 34
 21c:	90 e0       	ldi	r25, 0x00	; 0
 21e:	fc 01       	movw	r30, r24
 220:	20 81       	ld	r18, Z

00000222 <.Loc.40>:
 222:	82 e2       	ldi	r24, 0x22	; 34
 224:	90 e0       	ldi	r25, 0x00	; 0

00000226 <.Loc.41>:
 226:	27 7f       	andi	r18, 0xF7	; 247
 228:	fc 01       	movw	r30, r24
 22a:	20 83       	st	Z, r18

0000022c <.Loc.42>:
	PORT &= ~(1 << PEN2);
 22c:	82 e2       	ldi	r24, 0x22	; 34
 22e:	90 e0       	ldi	r25, 0x00	; 0
 230:	fc 01       	movw	r30, r24
 232:	20 81       	ld	r18, Z

00000234 <.Loc.43>:
 234:	82 e2       	ldi	r24, 0x22	; 34
 236:	90 e0       	ldi	r25, 0x00	; 0

00000238 <.Loc.44>:
 238:	2b 7f       	andi	r18, 0xFB	; 251
 23a:	fc 01       	movw	r30, r24
 23c:	20 83       	st	Z, r18

0000023e <.Loc.45>:
}
 23e:	00 00       	nop
 240:	df 91       	pop	r29
 242:	cf 91       	pop	r28
 244:	08 95       	ret

00000246 <__vector_20>:

//H-brug PWMR
ISR(TIMER1_OVF_vect)
{
 246:	1f 92       	push	r1
 248:	0f 92       	push	r0
 24a:	0f b6       	in	r0, 0x3f	; 63
 24c:	0f 92       	push	r0
 24e:	11 24       	eor	r1, r1
 250:	0b b6       	in	r0, 0x3b	; 59
 252:	0f 92       	push	r0
 254:	2f 93       	push	r18
 256:	3f 93       	push	r19
 258:	8f 93       	push	r24
 25a:	9f 93       	push	r25
 25c:	ef 93       	push	r30
 25e:	ff 93       	push	r31
 260:	cf 93       	push	r28
 262:	df 93       	push	r29
 264:	cd b7       	in	r28, 0x3d	; 61
 266:	de b7       	in	r29, 0x3e	; 62

00000268 <.Loc.47>:
    PORT ^= (1 << PEN1);
 268:	82 e2       	ldi	r24, 0x22	; 34
 26a:	90 e0       	ldi	r25, 0x00	; 0
 26c:	fc 01       	movw	r30, r24
 26e:	30 81       	ld	r19, Z
 270:	82 e2       	ldi	r24, 0x22	; 34
 272:	90 e0       	ldi	r25, 0x00	; 0

00000274 <.Loc.48>:
 274:	20 e8       	ldi	r18, 0x80	; 128
 276:	23 27       	eor	r18, r19
 278:	fc 01       	movw	r30, r24
 27a:	20 83       	st	Z, r18

0000027c <.Loc.49>:
}
 27c:	00 00       	nop
 27e:	df 91       	pop	r29
 280:	cf 91       	pop	r28
 282:	ff 91       	pop	r31
 284:	ef 91       	pop	r30
 286:	9f 91       	pop	r25
 288:	8f 91       	pop	r24
 28a:	3f 91       	pop	r19
 28c:	2f 91       	pop	r18
 28e:	0f 90       	pop	r0
 290:	0b be       	out	0x3b, r0	; 59
 292:	0f 90       	pop	r0
 294:	0f be       	out	0x3f, r0	; 63
 296:	0f 90       	pop	r0
 298:	1f 90       	pop	r1
 29a:	18 95       	reti

0000029c <__vector_17>:
//H-brug PWMR
ISR(TIMER1_COMPA_vect)
{
 29c:	1f 92       	push	r1
 29e:	0f 92       	push	r0
 2a0:	0f b6       	in	r0, 0x3f	; 63
 2a2:	0f 92       	push	r0
 2a4:	11 24       	eor	r1, r1
 2a6:	0b b6       	in	r0, 0x3b	; 59
 2a8:	0f 92       	push	r0
 2aa:	2f 93       	push	r18
 2ac:	8f 93       	push	r24
 2ae:	9f 93       	push	r25
 2b0:	ef 93       	push	r30
 2b2:	ff 93       	push	r31
 2b4:	cf 93       	push	r28
 2b6:	df 93       	push	r29
 2b8:	cd b7       	in	r28, 0x3d	; 61
 2ba:	de b7       	in	r29, 0x3e	; 62

000002bc <.Loc.51>:
    PORT |= (1 << PEN1);
 2bc:	82 e2       	ldi	r24, 0x22	; 34
 2be:	90 e0       	ldi	r25, 0x00	; 0
 2c0:	fc 01       	movw	r30, r24
 2c2:	20 81       	ld	r18, Z
 2c4:	82 e2       	ldi	r24, 0x22	; 34
 2c6:	90 e0       	ldi	r25, 0x00	; 0

000002c8 <.Loc.52>:
 2c8:	20 68       	ori	r18, 0x80	; 128
 2ca:	fc 01       	movw	r30, r24
 2cc:	20 83       	st	Z, r18

000002ce <.Loc.53>:
}
 2ce:	00 00       	nop
 2d0:	df 91       	pop	r29
 2d2:	cf 91       	pop	r28
 2d4:	ff 91       	pop	r31
 2d6:	ef 91       	pop	r30
 2d8:	9f 91       	pop	r25
 2da:	8f 91       	pop	r24
 2dc:	2f 91       	pop	r18
 2de:	0f 90       	pop	r0
 2e0:	0b be       	out	0x3b, r0	; 59
 2e2:	0f 90       	pop	r0
 2e4:	0f be       	out	0x3f, r0	; 63
 2e6:	0f 90       	pop	r0
 2e8:	1f 90       	pop	r1
 2ea:	18 95       	reti

000002ec <__vector_35>:

//H-brug PWML
ISR(TIMER3_OVF_vect)
{
 2ec:	1f 92       	push	r1
 2ee:	0f 92       	push	r0
 2f0:	0f b6       	in	r0, 0x3f	; 63
 2f2:	0f 92       	push	r0
 2f4:	11 24       	eor	r1, r1
 2f6:	0b b6       	in	r0, 0x3b	; 59
 2f8:	0f 92       	push	r0
 2fa:	2f 93       	push	r18
 2fc:	3f 93       	push	r19
 2fe:	8f 93       	push	r24
 300:	9f 93       	push	r25
 302:	ef 93       	push	r30
 304:	ff 93       	push	r31
 306:	cf 93       	push	r28
 308:	df 93       	push	r29
 30a:	cd b7       	in	r28, 0x3d	; 61
 30c:	de b7       	in	r29, 0x3e	; 62

0000030e <.Loc.55>:
    PORT ^= (1 << PEN2);
 30e:	82 e2       	ldi	r24, 0x22	; 34
 310:	90 e0       	ldi	r25, 0x00	; 0
 312:	fc 01       	movw	r30, r24
 314:	30 81       	ld	r19, Z
 316:	82 e2       	ldi	r24, 0x22	; 34
 318:	90 e0       	ldi	r25, 0x00	; 0

0000031a <.Loc.56>:
 31a:	24 e0       	ldi	r18, 0x04	; 4
 31c:	23 27       	eor	r18, r19
 31e:	fc 01       	movw	r30, r24
 320:	20 83       	st	Z, r18

00000322 <.Loc.57>:
}
 322:	00 00       	nop
 324:	df 91       	pop	r29
 326:	cf 91       	pop	r28
 328:	ff 91       	pop	r31
 32a:	ef 91       	pop	r30
 32c:	9f 91       	pop	r25
 32e:	8f 91       	pop	r24
 330:	3f 91       	pop	r19
 332:	2f 91       	pop	r18
 334:	0f 90       	pop	r0
 336:	0b be       	out	0x3b, r0	; 59
 338:	0f 90       	pop	r0
 33a:	0f be       	out	0x3f, r0	; 63
 33c:	0f 90       	pop	r0
 33e:	1f 90       	pop	r1
 340:	18 95       	reti

00000342 <__vector_32>:
//H-brug PWML
ISR(TIMER3_COMPA_vect)
{
 342:	1f 92       	push	r1
 344:	0f 92       	push	r0
 346:	0f b6       	in	r0, 0x3f	; 63
 348:	0f 92       	push	r0
 34a:	11 24       	eor	r1, r1
 34c:	0b b6       	in	r0, 0x3b	; 59
 34e:	0f 92       	push	r0
 350:	2f 93       	push	r18
 352:	8f 93       	push	r24
 354:	9f 93       	push	r25
 356:	ef 93       	push	r30
 358:	ff 93       	push	r31
 35a:	cf 93       	push	r28
 35c:	df 93       	push	r29
 35e:	cd b7       	in	r28, 0x3d	; 61
 360:	de b7       	in	r29, 0x3e	; 62

00000362 <.Loc.59>:
    PORT |= (1 << PEN2);
 362:	82 e2       	ldi	r24, 0x22	; 34
 364:	90 e0       	ldi	r25, 0x00	; 0
 366:	fc 01       	movw	r30, r24
 368:	20 81       	ld	r18, Z
 36a:	82 e2       	ldi	r24, 0x22	; 34
 36c:	90 e0       	ldi	r25, 0x00	; 0

0000036e <.Loc.60>:
 36e:	24 60       	ori	r18, 0x04	; 4
 370:	fc 01       	movw	r30, r24
 372:	20 83       	st	Z, r18

00000374 <.Loc.61>:
}
 374:	00 00       	nop
 376:	df 91       	pop	r29
 378:	cf 91       	pop	r28
 37a:	ff 91       	pop	r31
 37c:	ef 91       	pop	r30
 37e:	9f 91       	pop	r25
 380:	8f 91       	pop	r24
 382:	2f 91       	pop	r18
 384:	0f 90       	pop	r0
 386:	0b be       	out	0x3b, r0	; 59
 388:	0f 90       	pop	r0
 38a:	0f be       	out	0x3f, r0	; 63
 38c:	0f 90       	pop	r0
 38e:	1f 90       	pop	r1
 390:	18 95       	reti

00000392 <__vector_23>:

//Timer doorrijden
ISR(TIMER0_OVF_vect)
{
 392:	1f 92       	push	r1
 394:	0f 92       	push	r0
 396:	0f b6       	in	r0, 0x3f	; 63
 398:	0f 92       	push	r0
 39a:	11 24       	eor	r1, r1
 39c:	8f 93       	push	r24
 39e:	9f 93       	push	r25
 3a0:	cf 93       	push	r28
 3a2:	df 93       	push	r29
 3a4:	cd b7       	in	r28, 0x3d	; 61
 3a6:	de b7       	in	r29, 0x3e	; 62

000003a8 <.Loc.63>:
    timerteller ++;
 3a8:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <timerteller>
 3ac:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <timerteller+0x1>
 3b0:	01 96       	adiw	r24, 0x01	; 1
 3b2:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <timerteller+0x1>
 3b6:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <timerteller>

000003ba <.Loc.64>:
}
 3ba:	00 00       	nop
 3bc:	df 91       	pop	r29
 3be:	cf 91       	pop	r28
 3c0:	9f 91       	pop	r25
 3c2:	8f 91       	pop	r24
 3c4:	0f 90       	pop	r0
 3c6:	0f be       	out	0x3f, r0	; 63
 3c8:	0f 90       	pop	r0
 3ca:	1f 90       	pop	r1
 3cc:	18 95       	reti

000003ce <main>:

int main(void)
{
 3ce:	cf 93       	push	r28
 3d0:	df 93       	push	r29
 3d2:	0f 92       	push	r0
 3d4:	0f 92       	push	r0
 3d6:	cd b7       	in	r28, 0x3d	; 61
 3d8:	de b7       	in	r29, 0x3e	; 62

000003da <.Loc.66>:
    initding();
 3da:	0e 94 88 00 	call	0x110	; 0x110 <initding>

000003de <.Loc.67>:
    sei();
 3de:	78 94       	sei

000003e0 <.Loc.68>:
    int toestand = 0;
 3e0:	1a 82       	std	Y+2, r1	; 0x02
 3e2:	19 82       	std	Y+1, r1	; 0x01

000003e4 <.L23>:
        PORT &= ~(1 << PIN21);
*/

    while(1)
    {
        switch(toestand)
 3e4:	89 81       	ldd	r24, Y+1	; 0x01
 3e6:	9a 81       	ldd	r25, Y+2	; 0x02
 3e8:	84 30       	cpi	r24, 0x04	; 4
 3ea:	91 05       	cpc	r25, r1
 3ec:	09 f4       	brne	.+2      	; 0x3f0 <L0^A+0x2>

000003ee <L0^A>:
 3ee:	04 c1       	rjmp	.+520    	; 0x5f8 <.L8>
 3f0:	89 81       	ldd	r24, Y+1	; 0x01
 3f2:	9a 81       	ldd	r25, Y+2	; 0x02
 3f4:	84 30       	cpi	r24, 0x04	; 4
 3f6:	91 05       	cpc	r25, r1
 3f8:	09 f0       	breq	.+2      	; 0x3fc <L0^A+0x2>

000003fa <L0^A>:
 3fa:	a4 f7       	brge	.-24     	; 0x3e4 <.L23>
 3fc:	89 81       	ldd	r24, Y+1	; 0x01
 3fe:	9a 81       	ldd	r25, Y+2	; 0x02
 400:	83 30       	cpi	r24, 0x03	; 3
 402:	91 05       	cpc	r25, r1
 404:	09 f4       	brne	.+2      	; 0x408 <L0^A+0x2>

00000406 <L0^A>:
 406:	c2 c0       	rjmp	.+388    	; 0x58c <.L10>
 408:	89 81       	ldd	r24, Y+1	; 0x01
 40a:	9a 81       	ldd	r25, Y+2	; 0x02
 40c:	83 30       	cpi	r24, 0x03	; 3
 40e:	91 05       	cpc	r25, r1
 410:	09 f0       	breq	.+2      	; 0x414 <L0^A+0x2>

00000412 <L0^A>:
 412:	44 f7       	brge	.-48     	; 0x3e4 <.L23>
 414:	89 81       	ldd	r24, Y+1	; 0x01
 416:	9a 81       	ldd	r25, Y+2	; 0x02
 418:	82 30       	cpi	r24, 0x02	; 2
 41a:	91 05       	cpc	r25, r1
 41c:	09 f4       	brne	.+2      	; 0x420 <L0^A+0x2>

0000041e <L0^A>:
 41e:	84 c0       	rjmp	.+264    	; 0x528 <.L11>
 420:	89 81       	ldd	r24, Y+1	; 0x01
 422:	9a 81       	ldd	r25, Y+2	; 0x02
 424:	82 30       	cpi	r24, 0x02	; 2
 426:	91 05       	cpc	r25, r1
 428:	09 f0       	breq	.+2      	; 0x42c <L0^A+0x2>

0000042a <L0^A>:
 42a:	e4 f6       	brge	.-72     	; 0x3e4 <.L23>
 42c:	89 81       	ldd	r24, Y+1	; 0x01
 42e:	9a 81       	ldd	r25, Y+2	; 0x02
 430:	00 97       	sbiw	r24, 0x00	; 0
 432:	39 f0       	breq	.+14     	; 0x442 <.L12>
 434:	89 81       	ldd	r24, Y+1	; 0x01
 436:	9a 81       	ldd	r25, Y+2	; 0x02
 438:	81 30       	cpi	r24, 0x01	; 1
 43a:	91 05       	cpc	r25, r1
 43c:	09 f4       	brne	.+2      	; 0x440 <L0^A+0x2>

0000043e <L0^A>:
 43e:	42 c0       	rjmp	.+132    	; 0x4c4 <.L13>
 440:	d1 cf       	rjmp	.-94     	; 0x3e4 <.L23>

00000442 <.L12>:
        {
        case 0://begin state
            h_bridgeR_set_percentage(snelheidrechtdoor);
 442:	86 e4       	ldi	r24, 0x46	; 70
 444:	0e 94 36 03 	call	0x66c	; 0x66c <h_bridgeR_set_percentage>

00000448 <.Loc.71>:
            h_bridgeL_set_percentage(snelheidrechtdoor);
 448:	86 e4       	ldi	r24, 0x46	; 70
 44a:	0e 94 75 03 	call	0x6ea	; 0x6ea <h_bridgeL_set_percentage>

0000044e <.Loc.72>:
            PORT |= (1 << PIN11);
 44e:	82 e2       	ldi	r24, 0x22	; 34
 450:	90 e0       	ldi	r25, 0x00	; 0
 452:	fc 01       	movw	r30, r24
 454:	20 81       	ld	r18, Z
 456:	82 e2       	ldi	r24, 0x22	; 34
 458:	90 e0       	ldi	r25, 0x00	; 0

0000045a <.Loc.73>:
 45a:	20 64       	ori	r18, 0x40	; 64
 45c:	fc 01       	movw	r30, r24
 45e:	20 83       	st	Z, r18

00000460 <.Loc.74>:
            PORT &= ~(1 << PIN12) ;
 460:	82 e2       	ldi	r24, 0x22	; 34
 462:	90 e0       	ldi	r25, 0x00	; 0
 464:	fc 01       	movw	r30, r24
 466:	20 81       	ld	r18, Z

00000468 <.Loc.75>:
 468:	82 e2       	ldi	r24, 0x22	; 34
 46a:	90 e0       	ldi	r25, 0x00	; 0

0000046c <.Loc.76>:
 46c:	2f 7d       	andi	r18, 0xDF	; 223
 46e:	fc 01       	movw	r30, r24
 470:	20 83       	st	Z, r18

00000472 <.Loc.77>:
            PORT &= ~(1 << PIN21);
 472:	82 e2       	ldi	r24, 0x22	; 34
 474:	90 e0       	ldi	r25, 0x00	; 0
 476:	fc 01       	movw	r30, r24
 478:	20 81       	ld	r18, Z

0000047a <.Loc.78>:
 47a:	82 e2       	ldi	r24, 0x22	; 34
 47c:	90 e0       	ldi	r25, 0x00	; 0

0000047e <.Loc.79>:
 47e:	2f 7e       	andi	r18, 0xEF	; 239
 480:	fc 01       	movw	r30, r24
 482:	20 83       	st	Z, r18

00000484 <.Loc.80>:
            PORT |= (1 << PIN22);
 484:	82 e2       	ldi	r24, 0x22	; 34
 486:	90 e0       	ldi	r25, 0x00	; 0
 488:	fc 01       	movw	r30, r24
 48a:	20 81       	ld	r18, Z
 48c:	82 e2       	ldi	r24, 0x22	; 34
 48e:	90 e0       	ldi	r25, 0x00	; 0

00000490 <.Loc.81>:
 490:	28 60       	ori	r18, 0x08	; 8
 492:	fc 01       	movw	r30, r24
 494:	20 83       	st	Z, r18

00000496 <.Loc.82>:
            if(((PINB & (1 << PB7)) == 0) && ((PINB & (1 << PB6)) == 0))
 496:	83 e2       	ldi	r24, 0x23	; 35
 498:	90 e0       	ldi	r25, 0x00	; 0
 49a:	fc 01       	movw	r30, r24
 49c:	80 81       	ld	r24, Z

0000049e <.Loc.83>:
 49e:	88 23       	and	r24, r24
 4a0:	0c f4       	brge	.+2      	; 0x4a4 <.Loc.84>

000004a2 <L0^A>:
 4a2:	da c0       	rjmp	.+436    	; 0x658 <.L24>

000004a4 <.Loc.84>:
 4a4:	83 e2       	ldi	r24, 0x23	; 35
 4a6:	90 e0       	ldi	r25, 0x00	; 0
 4a8:	fc 01       	movw	r30, r24
 4aa:	80 81       	ld	r24, Z

000004ac <.Loc.85>:
 4ac:	88 2f       	mov	r24, r24
 4ae:	90 e0       	ldi	r25, 0x00	; 0
 4b0:	80 74       	andi	r24, 0x40	; 64
 4b2:	99 27       	eor	r25, r25

000004b4 <.Loc.86>:
 4b4:	00 97       	sbiw	r24, 0x00	; 0
 4b6:	09 f0       	breq	.+2      	; 0x4ba <.Loc.87>

000004b8 <L0^A>:
 4b8:	cf c0       	rjmp	.+414    	; 0x658 <.L24>

000004ba <.Loc.87>:
            {
                toestand = 3;
 4ba:	83 e0       	ldi	r24, 0x03	; 3
 4bc:	90 e0       	ldi	r25, 0x00	; 0
 4be:	9a 83       	std	Y+2, r25	; 0x02
 4c0:	89 83       	std	Y+1, r24	; 0x01

000004c2 <.Loc.88>:

            }
            break;
 4c2:	ca c0       	rjmp	.+404    	; 0x658 <.L24>

000004c4 <.L13>:
        case 1://naar links(te dichtbij rechts)
            //Motoren naar links
            h_bridgeR_set_percentage(snelheidhard);
 4c4:	81 e4       	ldi	r24, 0x41	; 65
 4c6:	0e 94 36 03 	call	0x66c	; 0x66c <h_bridgeR_set_percentage>

000004ca <.Loc.90>:
            h_bridgeL_set_percentage(snelheidzacht);
 4ca:	8b e4       	ldi	r24, 0x4B	; 75
 4cc:	0e 94 75 03 	call	0x6ea	; 0x6ea <h_bridgeL_set_percentage>

000004d0 <.Loc.91>:
            if(((PINB & (1 << PB7)) == 0) && ((PINB & (1 << PB6)) == 0))
 4d0:	83 e2       	ldi	r24, 0x23	; 35
 4d2:	90 e0       	ldi	r25, 0x00	; 0
 4d4:	fc 01       	movw	r30, r24
 4d6:	80 81       	ld	r24, Z

000004d8 <.Loc.92>:
 4d8:	88 23       	and	r24, r24
 4da:	7c f0       	brlt	.+30     	; 0x4fa <.L15>

000004dc <.Loc.93>:
 4dc:	83 e2       	ldi	r24, 0x23	; 35
 4de:	90 e0       	ldi	r25, 0x00	; 0
 4e0:	fc 01       	movw	r30, r24
 4e2:	80 81       	ld	r24, Z

000004e4 <.Loc.94>:
 4e4:	88 2f       	mov	r24, r24
 4e6:	90 e0       	ldi	r25, 0x00	; 0
 4e8:	80 74       	andi	r24, 0x40	; 64
 4ea:	99 27       	eor	r25, r25

000004ec <.Loc.95>:
 4ec:	00 97       	sbiw	r24, 0x00	; 0
 4ee:	29 f4       	brne	.+10     	; 0x4fa <.L15>

000004f0 <.Loc.96>:
            {
                toestand = 3;
 4f0:	83 e0       	ldi	r24, 0x03	; 3
 4f2:	90 e0       	ldi	r25, 0x00	; 0
 4f4:	9a 83       	std	Y+2, r25	; 0x02
 4f6:	89 83       	std	Y+1, r24	; 0x01

000004f8 <.Loc.97>:
            }
            else if((PINB & (1 << PB7)) && (PINB & (1 << PB6)))
            {
                toestand = 4;
            }
            break;
 4f8:	b1 c0       	rjmp	.+354    	; 0x65c <.L25>

000004fa <.L15>:
            else if((PINB & (1 << PB7)) && (PINB & (1 << PB6)))
 4fa:	83 e2       	ldi	r24, 0x23	; 35
 4fc:	90 e0       	ldi	r25, 0x00	; 0
 4fe:	fc 01       	movw	r30, r24
 500:	80 81       	ld	r24, Z

00000502 <.Loc.99>:
 502:	88 23       	and	r24, r24
 504:	0c f0       	brlt	.+2      	; 0x508 <.Loc.100>

00000506 <L0^A>:
 506:	aa c0       	rjmp	.+340    	; 0x65c <.L25>

00000508 <.Loc.100>:
 508:	83 e2       	ldi	r24, 0x23	; 35
 50a:	90 e0       	ldi	r25, 0x00	; 0
 50c:	fc 01       	movw	r30, r24
 50e:	80 81       	ld	r24, Z

00000510 <.Loc.101>:
 510:	88 2f       	mov	r24, r24
 512:	90 e0       	ldi	r25, 0x00	; 0
 514:	80 74       	andi	r24, 0x40	; 64
 516:	99 27       	eor	r25, r25

00000518 <.Loc.102>:
 518:	00 97       	sbiw	r24, 0x00	; 0
 51a:	09 f4       	brne	.+2      	; 0x51e <.Loc.103>

0000051c <L0^A>:
 51c:	9f c0       	rjmp	.+318    	; 0x65c <.L25>

0000051e <.Loc.103>:
                toestand = 4;
 51e:	84 e0       	ldi	r24, 0x04	; 4
 520:	90 e0       	ldi	r25, 0x00	; 0
 522:	9a 83       	std	Y+2, r25	; 0x02
 524:	89 83       	std	Y+1, r24	; 0x01

00000526 <.Loc.104>:
            break;
 526:	9a c0       	rjmp	.+308    	; 0x65c <.L25>

00000528 <.L11>:
        case 2://naar rechts(te dichtbij links)
            //Motoren naar rechts
            h_bridgeR_set_percentage(snelheidzacht);
 528:	8b e4       	ldi	r24, 0x4B	; 75
 52a:	0e 94 36 03 	call	0x66c	; 0x66c <h_bridgeR_set_percentage>

0000052e <.Loc.106>:
            h_bridgeL_set_percentage(snelheidhard);
 52e:	81 e4       	ldi	r24, 0x41	; 65
 530:	0e 94 75 03 	call	0x6ea	; 0x6ea <h_bridgeL_set_percentage>

00000534 <.Loc.107>:
            if(((PINB & (1 << PB7)) == 0) && ((PINB & (1 << PB6)) == 0))
 534:	83 e2       	ldi	r24, 0x23	; 35
 536:	90 e0       	ldi	r25, 0x00	; 0
 538:	fc 01       	movw	r30, r24
 53a:	80 81       	ld	r24, Z

0000053c <.Loc.108>:
 53c:	88 23       	and	r24, r24
 53e:	7c f0       	brlt	.+30     	; 0x55e <.L17>

00000540 <.Loc.109>:
 540:	83 e2       	ldi	r24, 0x23	; 35
 542:	90 e0       	ldi	r25, 0x00	; 0
 544:	fc 01       	movw	r30, r24
 546:	80 81       	ld	r24, Z

00000548 <.Loc.110>:
 548:	88 2f       	mov	r24, r24
 54a:	90 e0       	ldi	r25, 0x00	; 0
 54c:	80 74       	andi	r24, 0x40	; 64
 54e:	99 27       	eor	r25, r25

00000550 <.Loc.111>:
 550:	00 97       	sbiw	r24, 0x00	; 0
 552:	29 f4       	brne	.+10     	; 0x55e <.L17>

00000554 <.Loc.112>:
            {
                toestand = 3;
 554:	83 e0       	ldi	r24, 0x03	; 3
 556:	90 e0       	ldi	r25, 0x00	; 0
 558:	9a 83       	std	Y+2, r25	; 0x02
 55a:	89 83       	std	Y+1, r24	; 0x01

0000055c <.Loc.113>:
            }
            else if((PINB & (1 << PB7)) && (PINB & (1 << PB6)))
            {
                toestand = 4;
            }
            break;
 55c:	81 c0       	rjmp	.+258    	; 0x660 <.L26>

0000055e <.L17>:
            else if((PINB & (1 << PB7)) && (PINB & (1 << PB6)))
 55e:	83 e2       	ldi	r24, 0x23	; 35
 560:	90 e0       	ldi	r25, 0x00	; 0
 562:	fc 01       	movw	r30, r24
 564:	80 81       	ld	r24, Z

00000566 <.Loc.115>:
 566:	88 23       	and	r24, r24
 568:	0c f0       	brlt	.+2      	; 0x56c <.Loc.116>

0000056a <L0^A>:
 56a:	7a c0       	rjmp	.+244    	; 0x660 <.L26>

0000056c <.Loc.116>:
 56c:	83 e2       	ldi	r24, 0x23	; 35
 56e:	90 e0       	ldi	r25, 0x00	; 0
 570:	fc 01       	movw	r30, r24
 572:	80 81       	ld	r24, Z

00000574 <.Loc.117>:
 574:	88 2f       	mov	r24, r24
 576:	90 e0       	ldi	r25, 0x00	; 0
 578:	80 74       	andi	r24, 0x40	; 64
 57a:	99 27       	eor	r25, r25

0000057c <.Loc.118>:
 57c:	00 97       	sbiw	r24, 0x00	; 0
 57e:	09 f4       	brne	.+2      	; 0x582 <.Loc.119>

00000580 <L0^A>:
 580:	6f c0       	rjmp	.+222    	; 0x660 <.L26>

00000582 <.Loc.119>:
                toestand = 4;
 582:	84 e0       	ldi	r24, 0x04	; 4
 584:	90 e0       	ldi	r25, 0x00	; 0
 586:	9a 83       	std	Y+2, r25	; 0x02
 588:	89 83       	std	Y+1, r24	; 0x01

0000058a <.Loc.120>:
            break;
 58a:	6a c0       	rjmp	.+212    	; 0x660 <.L26>

0000058c <.L10>:
        case 3://rechtdoor
            //Motoren naar rechtdoor
            h_bridgeR_set_percentage(snelheidrechtdoor);
 58c:	86 e4       	ldi	r24, 0x46	; 70
 58e:	0e 94 36 03 	call	0x66c	; 0x66c <h_bridgeR_set_percentage>

00000592 <.Loc.122>:
            h_bridgeL_set_percentage(snelheidrechtdoor);
 592:	86 e4       	ldi	r24, 0x46	; 70
 594:	0e 94 75 03 	call	0x6ea	; 0x6ea <h_bridgeL_set_percentage>

00000598 <.Loc.123>:
            if(PINB & (1 << PB7))
 598:	83 e2       	ldi	r24, 0x23	; 35
 59a:	90 e0       	ldi	r25, 0x00	; 0
 59c:	fc 01       	movw	r30, r24
 59e:	80 81       	ld	r24, Z

000005a0 <.Loc.124>:
 5a0:	88 23       	and	r24, r24
 5a2:	2c f4       	brge	.+10     	; 0x5ae <.L19>

000005a4 <.Loc.125>:
            {
                toestand = 1;
 5a4:	81 e0       	ldi	r24, 0x01	; 1
 5a6:	90 e0       	ldi	r25, 0x00	; 0
 5a8:	9a 83       	std	Y+2, r25	; 0x02
 5aa:	89 83       	std	Y+1, r24	; 0x01

000005ac <.Loc.126>:
            }
            else if((PINB & (1 << PB7)) && (PINB & (1 << PB6)))
            {
                toestand = 4;
            }
            break;
 5ac:	5b c0       	rjmp	.+182    	; 0x664 <.L27>

000005ae <.L19>:
            else if(PINB & (1 << PB6))
 5ae:	83 e2       	ldi	r24, 0x23	; 35
 5b0:	90 e0       	ldi	r25, 0x00	; 0
 5b2:	fc 01       	movw	r30, r24
 5b4:	80 81       	ld	r24, Z

000005b6 <.Loc.128>:
 5b6:	88 2f       	mov	r24, r24
 5b8:	90 e0       	ldi	r25, 0x00	; 0
 5ba:	80 74       	andi	r24, 0x40	; 64
 5bc:	99 27       	eor	r25, r25

000005be <.Loc.129>:
 5be:	00 97       	sbiw	r24, 0x00	; 0
 5c0:	29 f0       	breq	.+10     	; 0x5cc <.L21>

000005c2 <.Loc.130>:
                toestand = 2;
 5c2:	82 e0       	ldi	r24, 0x02	; 2
 5c4:	90 e0       	ldi	r25, 0x00	; 0
 5c6:	9a 83       	std	Y+2, r25	; 0x02
 5c8:	89 83       	std	Y+1, r24	; 0x01

000005ca <.Loc.131>:
            break;
 5ca:	4c c0       	rjmp	.+152    	; 0x664 <.L27>

000005cc <.L21>:
            else if((PINB & (1 << PB7)) && (PINB & (1 << PB6)))
 5cc:	83 e2       	ldi	r24, 0x23	; 35
 5ce:	90 e0       	ldi	r25, 0x00	; 0
 5d0:	fc 01       	movw	r30, r24
 5d2:	80 81       	ld	r24, Z

000005d4 <.Loc.133>:
 5d4:	88 23       	and	r24, r24
 5d6:	0c f0       	brlt	.+2      	; 0x5da <.Loc.134>

000005d8 <L0^A>:
 5d8:	45 c0       	rjmp	.+138    	; 0x664 <.L27>

000005da <.Loc.134>:
 5da:	83 e2       	ldi	r24, 0x23	; 35
 5dc:	90 e0       	ldi	r25, 0x00	; 0
 5de:	fc 01       	movw	r30, r24
 5e0:	80 81       	ld	r24, Z

000005e2 <.Loc.135>:
 5e2:	88 2f       	mov	r24, r24
 5e4:	90 e0       	ldi	r25, 0x00	; 0
 5e6:	80 74       	andi	r24, 0x40	; 64
 5e8:	99 27       	eor	r25, r25

000005ea <.Loc.136>:
 5ea:	00 97       	sbiw	r24, 0x00	; 0
 5ec:	d9 f1       	breq	.+118    	; 0x664 <.L27>

000005ee <.Loc.137>:
                toestand = 4;
 5ee:	84 e0       	ldi	r24, 0x04	; 4
 5f0:	90 e0       	ldi	r25, 0x00	; 0
 5f2:	9a 83       	std	Y+2, r25	; 0x02
 5f4:	89 83       	std	Y+1, r24	; 0x01

000005f6 <.Loc.138>:
            break;
 5f6:	36 c0       	rjmp	.+108    	; 0x664 <.L27>

000005f8 <.L8>:
        case 4://Rijstrook wisselen naar links
            TCCR0B = (1 << CS02) | (0 << CS01) | (1 << CS00);
 5f8:	85 e4       	ldi	r24, 0x45	; 69
 5fa:	90 e0       	ldi	r25, 0x00	; 0

000005fc <.Loc.140>:
 5fc:	25 e0       	ldi	r18, 0x05	; 5
 5fe:	fc 01       	movw	r30, r24
 600:	20 83       	st	Z, r18

00000602 <.Loc.141>:
            if(timerteller == 15000)//een seconde zijn voorbij
 602:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <timerteller>
 606:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <timerteller+0x1>

0000060a <.Loc.142>:
 60a:	88 39       	cpi	r24, 0x98	; 152
 60c:	fa e3       	ldi	r31, 0x3A	; 58
 60e:	9f 07       	cpc	r25, r31
 610:	59 f5       	brne	.+86     	; 0x668 <.L28>

00000612 <.Loc.143>:
            {
                timerteller = 0;
 612:	10 92 01 02 	sts	0x0201, r1	; 0x800201 <timerteller+0x1>
 616:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <timerteller>

0000061a <.Loc.144>:
                TCCR0B = 0;
 61a:	85 e4       	ldi	r24, 0x45	; 69
 61c:	90 e0       	ldi	r25, 0x00	; 0

0000061e <.Loc.145>:
 61e:	fc 01       	movw	r30, r24
 620:	10 82       	st	Z, r1

00000622 <.Loc.146>:
                h_bridgeR_set_percentage(snelheidhard);
 622:	81 e4       	ldi	r24, 0x41	; 65
 624:	0e 94 36 03 	call	0x66c	; 0x66c <h_bridgeR_set_percentage>

00000628 <.Loc.147>:
                h_bridgeL_set_percentage(snelheidzacht);
 628:	8b e4       	ldi	r24, 0x4B	; 75
 62a:	0e 94 75 03 	call	0x6ea	; 0x6ea <h_bridgeL_set_percentage>

0000062e <.Loc.148>:
                if(((PINB & (1 << PB6)) == 0) && ((PINB & (1 << PB7)) == 0))
 62e:	83 e2       	ldi	r24, 0x23	; 35
 630:	90 e0       	ldi	r25, 0x00	; 0
 632:	fc 01       	movw	r30, r24
 634:	80 81       	ld	r24, Z

00000636 <.Loc.149>:
 636:	88 2f       	mov	r24, r24
 638:	90 e0       	ldi	r25, 0x00	; 0
 63a:	80 74       	andi	r24, 0x40	; 64
 63c:	99 27       	eor	r25, r25

0000063e <.Loc.150>:
 63e:	00 97       	sbiw	r24, 0x00	; 0
 640:	99 f4       	brne	.+38     	; 0x668 <.L28>

00000642 <.Loc.151>:
 642:	83 e2       	ldi	r24, 0x23	; 35
 644:	90 e0       	ldi	r25, 0x00	; 0
 646:	fc 01       	movw	r30, r24
 648:	80 81       	ld	r24, Z

0000064a <.Loc.152>:
 64a:	88 23       	and	r24, r24
 64c:	6c f0       	brlt	.+26     	; 0x668 <.L28>

0000064e <.Loc.153>:
                {
                    toestand = 3;
 64e:	83 e0       	ldi	r24, 0x03	; 3
 650:	90 e0       	ldi	r25, 0x00	; 0
 652:	9a 83       	std	Y+2, r25	; 0x02
 654:	89 83       	std	Y+1, r24	; 0x01

00000656 <.Loc.154>:
                }
            }
            break;
 656:	08 c0       	rjmp	.+16     	; 0x668 <.L28>

00000658 <.L24>:
            break;
 658:	00 00       	nop
 65a:	c4 ce       	rjmp	.-632    	; 0x3e4 <.L23>

0000065c <.L25>:
            break;
 65c:	00 00       	nop
 65e:	c2 ce       	rjmp	.-636    	; 0x3e4 <.L23>

00000660 <.L26>:
            break;
 660:	00 00       	nop
 662:	c0 ce       	rjmp	.-640    	; 0x3e4 <.L23>

00000664 <.L27>:
            break;
 664:	00 00       	nop
 666:	be ce       	rjmp	.-644    	; 0x3e4 <.L23>

00000668 <.L28>:
	...

0000066a <.Loc.160>:
        switch(toestand)
 66a:	bc ce       	rjmp	.-648    	; 0x3e4 <.L23>

0000066c <h_bridgeR_set_percentage>:

    return 0;
}

void h_bridgeR_set_percentage(signed char percentage)
{
 66c:	0f 93       	push	r16
 66e:	1f 93       	push	r17
 670:	cf 93       	push	r28
 672:	df 93       	push	r29
 674:	00 d0       	rcall	.+0      	; 0x676 <L0^A>

00000676 <L0^A>:
 676:	0f 92       	push	r0
 678:	0f 92       	push	r0
 67a:	cd b7       	in	r28, 0x3d	; 61
 67c:	de b7       	in	r29, 0x3e	; 62
 67e:	89 83       	std	Y+1, r24	; 0x01

00000680 <.Loc.162>:
	if (percentage >= 0 && percentage <= 100)
 680:	89 81       	ldd	r24, Y+1	; 0x01
 682:	88 23       	and	r24, r24
 684:	3c f1       	brlt	.+78     	; 0x6d4 <.L31>

00000686 <.Loc.163>:
 686:	89 81       	ldd	r24, Y+1	; 0x01
 688:	84 36       	cpi	r24, 0x64	; 100
 68a:	09 f0       	breq	.+2      	; 0x68e <.Loc.164>

0000068c <L0^A>:
 68c:	1c f5       	brge	.+70     	; 0x6d4 <.L31>

0000068e <.Loc.164>:
	{
			OCR1A = (65536*percentage)/100;
 68e:	89 81       	ldd	r24, Y+1	; 0x01
 690:	08 2e       	mov	r0, r24
 692:	00 0c       	add	r0, r0
 694:	99 0b       	sbc	r25, r25
 696:	aa 0b       	sbc	r26, r26
 698:	bb 0b       	sbc	r27, r27
 69a:	ac 01       	movw	r20, r24
 69c:	33 27       	eor	r19, r19
 69e:	22 27       	eor	r18, r18
 6a0:	2a 83       	std	Y+2, r18	; 0x02
 6a2:	3b 83       	std	Y+3, r19	; 0x03
 6a4:	4c 83       	std	Y+4, r20	; 0x04
 6a6:	5d 83       	std	Y+5, r21	; 0x05

000006a8 <.Loc.165>:
 6a8:	04 e6       	ldi	r16, 0x64	; 100
 6aa:	10 e0       	ldi	r17, 0x00	; 0
 6ac:	20 e0       	ldi	r18, 0x00	; 0
 6ae:	30 e0       	ldi	r19, 0x00	; 0
 6b0:	6a 81       	ldd	r22, Y+2	; 0x02
 6b2:	7b 81       	ldd	r23, Y+3	; 0x03
 6b4:	8c 81       	ldd	r24, Y+4	; 0x04
 6b6:	9d 81       	ldd	r25, Y+5	; 0x05
 6b8:	a9 01       	movw	r20, r18
 6ba:	98 01       	movw	r18, r16
 6bc:	0e 94 b4 03 	call	0x768	; 0x768 <__divmodsi4>
 6c0:	da 01       	movw	r26, r20
 6c2:	c9 01       	movw	r24, r18
 6c4:	ac 01       	movw	r20, r24
 6c6:	bd 01       	movw	r22, r26

000006c8 <.Loc.166>:
 6c8:	88 e8       	ldi	r24, 0x88	; 136
 6ca:	90 e0       	ldi	r25, 0x00	; 0

000006cc <.Loc.167>:
 6cc:	9a 01       	movw	r18, r20
 6ce:	fc 01       	movw	r30, r24
 6d0:	31 83       	std	Z+1, r19	; 0x01
 6d2:	20 83       	st	Z, r18

000006d4 <.L31>:
	}
}
 6d4:	00 00       	nop
 6d6:	0f 90       	pop	r0
 6d8:	0f 90       	pop	r0
 6da:	0f 90       	pop	r0
 6dc:	0f 90       	pop	r0
 6de:	0f 90       	pop	r0
 6e0:	df 91       	pop	r29
 6e2:	cf 91       	pop	r28
 6e4:	1f 91       	pop	r17
 6e6:	0f 91       	pop	r16
 6e8:	08 95       	ret

000006ea <h_bridgeL_set_percentage>:

void h_bridgeL_set_percentage(signed char percentage)
{
 6ea:	0f 93       	push	r16
 6ec:	1f 93       	push	r17
 6ee:	cf 93       	push	r28
 6f0:	df 93       	push	r29
 6f2:	00 d0       	rcall	.+0      	; 0x6f4 <L0^A>

000006f4 <L0^A>:
 6f4:	0f 92       	push	r0
 6f6:	0f 92       	push	r0
 6f8:	cd b7       	in	r28, 0x3d	; 61
 6fa:	de b7       	in	r29, 0x3e	; 62
 6fc:	89 83       	std	Y+1, r24	; 0x01

000006fe <.Loc.170>:
	if (percentage >= 0 && percentage <= 100)
 6fe:	89 81       	ldd	r24, Y+1	; 0x01
 700:	88 23       	and	r24, r24
 702:	3c f1       	brlt	.+78     	; 0x752 <.L34>

00000704 <.Loc.171>:
 704:	89 81       	ldd	r24, Y+1	; 0x01
 706:	84 36       	cpi	r24, 0x64	; 100
 708:	09 f0       	breq	.+2      	; 0x70c <.Loc.172>

0000070a <L0^A>:
 70a:	1c f5       	brge	.+70     	; 0x752 <.L34>

0000070c <.Loc.172>:
	{
			OCR3A = (65536*percentage)/100;
 70c:	89 81       	ldd	r24, Y+1	; 0x01
 70e:	08 2e       	mov	r0, r24
 710:	00 0c       	add	r0, r0
 712:	99 0b       	sbc	r25, r25
 714:	aa 0b       	sbc	r26, r26
 716:	bb 0b       	sbc	r27, r27
 718:	ac 01       	movw	r20, r24
 71a:	33 27       	eor	r19, r19
 71c:	22 27       	eor	r18, r18
 71e:	2a 83       	std	Y+2, r18	; 0x02
 720:	3b 83       	std	Y+3, r19	; 0x03
 722:	4c 83       	std	Y+4, r20	; 0x04
 724:	5d 83       	std	Y+5, r21	; 0x05

00000726 <.Loc.173>:
 726:	04 e6       	ldi	r16, 0x64	; 100
 728:	10 e0       	ldi	r17, 0x00	; 0
 72a:	20 e0       	ldi	r18, 0x00	; 0
 72c:	30 e0       	ldi	r19, 0x00	; 0
 72e:	6a 81       	ldd	r22, Y+2	; 0x02
 730:	7b 81       	ldd	r23, Y+3	; 0x03
 732:	8c 81       	ldd	r24, Y+4	; 0x04
 734:	9d 81       	ldd	r25, Y+5	; 0x05
 736:	a9 01       	movw	r20, r18
 738:	98 01       	movw	r18, r16
 73a:	0e 94 b4 03 	call	0x768	; 0x768 <__divmodsi4>
 73e:	da 01       	movw	r26, r20
 740:	c9 01       	movw	r24, r18
 742:	ac 01       	movw	r20, r24
 744:	bd 01       	movw	r22, r26

00000746 <.Loc.174>:
 746:	88 e9       	ldi	r24, 0x98	; 152
 748:	90 e0       	ldi	r25, 0x00	; 0

0000074a <.Loc.175>:
 74a:	9a 01       	movw	r18, r20
 74c:	fc 01       	movw	r30, r24
 74e:	31 83       	std	Z+1, r19	; 0x01
 750:	20 83       	st	Z, r18

00000752 <.L34>:
	}
}
 752:	00 00       	nop
 754:	0f 90       	pop	r0
 756:	0f 90       	pop	r0
 758:	0f 90       	pop	r0
 75a:	0f 90       	pop	r0
 75c:	0f 90       	pop	r0
 75e:	df 91       	pop	r29
 760:	cf 91       	pop	r28
 762:	1f 91       	pop	r17
 764:	0f 91       	pop	r16
 766:	08 95       	ret

00000768 <__divmodsi4>:
 768:	05 2e       	mov	r0, r21

0000076a <.Loc.1>:
 76a:	97 fb       	bst	r25, 7

0000076c <.Loc.2>:
 76c:	1e f4       	brtc	.+6      	; 0x774 <.L^B1>

0000076e <.Loc.3>:
 76e:	00 94       	com	r0

00000770 <.Loc.4>:
 770:	0e 94 cb 03 	call	0x796	; 0x796 <__negsi2>

00000774 <.L^B1>:
 774:	57 fd       	sbrc	r21, 7

00000776 <.Loc.6>:
 776:	07 d0       	rcall	.+14     	; 0x786 <__divmodsi4_neg2>

00000778 <.Loc.7>:
 778:	0e 94 d3 03 	call	0x7a6	; 0x7a6 <__udivmodsi4>

0000077c <.Loc.8>:
 77c:	07 fc       	sbrc	r0, 7

0000077e <.Loc.9>:
 77e:	03 d0       	rcall	.+6      	; 0x786 <__divmodsi4_neg2>

00000780 <.Loc.10>:
 780:	4e f4       	brtc	.+18     	; 0x794 <__divmodsi4_exit>

00000782 <.Loc.11>:
 782:	0c 94 cb 03 	jmp	0x796	; 0x796 <__negsi2>

00000786 <__divmodsi4_neg2>:
 786:	50 95       	com	r21

00000788 <.Loc.13>:
 788:	40 95       	com	r20

0000078a <.Loc.14>:
 78a:	30 95       	com	r19

0000078c <.Loc.15>:
 78c:	21 95       	neg	r18

0000078e <.Loc.16>:
 78e:	3f 4f       	sbci	r19, 0xFF	; 255

00000790 <.Loc.17>:
 790:	4f 4f       	sbci	r20, 0xFF	; 255

00000792 <.Loc.18>:
 792:	5f 4f       	sbci	r21, 0xFF	; 255

00000794 <__divmodsi4_exit>:
 794:	08 95       	ret

00000796 <__negsi2>:
 796:	90 95       	com	r25
 798:	80 95       	com	r24
 79a:	70 95       	com	r23
 79c:	61 95       	neg	r22
 79e:	7f 4f       	sbci	r23, 0xFF	; 255
 7a0:	8f 4f       	sbci	r24, 0xFF	; 255
 7a2:	9f 4f       	sbci	r25, 0xFF	; 255

000007a4 <.Loc.1>:
 7a4:	08 95       	ret

000007a6 <__udivmodsi4>:
 7a6:	a1 e2       	ldi	r26, 0x21	; 33

000007a8 <.Loc.1>:
 7a8:	1a 2e       	mov	r1, r26

000007aa <.Loc.2>:
 7aa:	aa 1b       	sub	r26, r26

000007ac <.Loc.3>:
 7ac:	bb 1b       	sub	r27, r27

000007ae <.Loc.4>:
 7ae:	fd 01       	movw	r30, r26

000007b0 <.Loc.5>:
 7b0:	0d c0       	rjmp	.+26     	; 0x7cc <__udivmodsi4_ep>

000007b2 <__udivmodsi4_loop>:
 7b2:	aa 1f       	adc	r26, r26

000007b4 <.Loc.7>:
 7b4:	bb 1f       	adc	r27, r27

000007b6 <.Loc.8>:
 7b6:	ee 1f       	adc	r30, r30

000007b8 <.Loc.9>:
 7b8:	ff 1f       	adc	r31, r31

000007ba <.Loc.10>:
 7ba:	a2 17       	cp	r26, r18

000007bc <.Loc.11>:
 7bc:	b3 07       	cpc	r27, r19

000007be <.Loc.12>:
 7be:	e4 07       	cpc	r30, r20

000007c0 <.Loc.13>:
 7c0:	f5 07       	cpc	r31, r21

000007c2 <.Loc.14>:
 7c2:	20 f0       	brcs	.+8      	; 0x7cc <__udivmodsi4_ep>

000007c4 <.Loc.15>:
 7c4:	a2 1b       	sub	r26, r18

000007c6 <.Loc.16>:
 7c6:	b3 0b       	sbc	r27, r19

000007c8 <.Loc.17>:
 7c8:	e4 0b       	sbc	r30, r20

000007ca <.Loc.18>:
 7ca:	f5 0b       	sbc	r31, r21

000007cc <__udivmodsi4_ep>:
 7cc:	66 1f       	adc	r22, r22

000007ce <.Loc.20>:
 7ce:	77 1f       	adc	r23, r23

000007d0 <.Loc.21>:
 7d0:	88 1f       	adc	r24, r24

000007d2 <.Loc.22>:
 7d2:	99 1f       	adc	r25, r25

000007d4 <.Loc.23>:
 7d4:	1a 94       	dec	r1

000007d6 <.Loc.24>:
 7d6:	69 f7       	brne	.-38     	; 0x7b2 <__udivmodsi4_loop>

000007d8 <.Loc.25>:
 7d8:	60 95       	com	r22

000007da <.Loc.26>:
 7da:	70 95       	com	r23

000007dc <.Loc.27>:
 7dc:	80 95       	com	r24

000007de <.Loc.28>:
 7de:	90 95       	com	r25

000007e0 <.Loc.29>:
 7e0:	9b 01       	movw	r18, r22

000007e2 <.Loc.30>:
 7e2:	ac 01       	movw	r20, r24

000007e4 <.Loc.31>:
 7e4:	bd 01       	movw	r22, r26

000007e6 <.Loc.32>:
 7e6:	cf 01       	movw	r24, r30

000007e8 <.Loc.33>:
 7e8:	08 95       	ret

000007ea <_exit>:
 7ea:	f8 94       	cli

000007ec <__stop_program>:
 7ec:	ff cf       	rjmp	.-2      	; 0x7ec <__stop_program>
