
bin\Debug\Plantendetecteren.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00000e5a  00000f0e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000e5a  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800200  00800200  00000f0e  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  00000f0e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      00000012  00000000  00000000  00000f11  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000f24  2**2
                  CONTENTS, READONLY, OCTETS
  6 .debug_aranges 000000d8  00000000  00000000  00000f68  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_info   00000fae  00000000  00000000  00001040  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_abbrev 00000db2  00000000  00000000  00001fee  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line   00000c4e  00000000  00000000  00002da0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_frame  00000210  00000000  00000000  000039f0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_str    000005d7  00000000  00000000  00003c00  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_line_str 0000016d  00000000  00000000  000041d7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
   4:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
   8:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
   c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  10:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  14:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  18:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  1c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  20:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  24:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  28:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  2c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  30:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  34:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  38:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  3c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  40:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  44:	0c 94 72 01 	jmp	0x2e4	; 0x2e4 <__vector_17>
  48:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  4c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  50:	0c 94 47 01 	jmp	0x28e	; 0x28e <__vector_20>
  54:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  58:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  5c:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__vector_23>
  60:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  64:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  68:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  6c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  70:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  74:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  78:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  7c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  80:	0c 94 c5 01 	jmp	0x38a	; 0x38a <__vector_32>
  84:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  88:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  8c:	0c 94 9a 01 	jmp	0x334	; 0x334 <__vector_35>
  90:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  94:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  98:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  9c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  a0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  a4:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  a8:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  ac:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  b0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  b4:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  b8:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  bc:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  c0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  c4:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  c8:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  cc:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  d0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  d4:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  d8:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  dc:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  e0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_clear_bss>:
  f4:	22 e0       	ldi	r18, 0x02	; 2

000000f6 <.Loc.1>:
  f6:	a0 e0       	ldi	r26, 0x00	; 0

000000f8 <.Loc.2>:
  f8:	b2 e0       	ldi	r27, 0x02	; 2

000000fa <.Loc.3>:
  fa:	01 c0       	rjmp	.+2      	; 0xfe <.Loc.5>

000000fc <.Loc.4>:
  fc:	1d 92       	st	X+, r1

000000fe <.Loc.5>:
  fe:	a2 30       	cpi	r26, 0x02	; 2

00000100 <.Loc.6>:
 100:	b2 07       	cpc	r27, r18

00000102 <.Loc.7>:
 102:	e1 f7       	brne	.-8      	; 0xfc <.Loc.4>

00000104 <L0^A>:
 104:	0e 94 0b 02 	call	0x416	; 0x416 <main>
 108:	0c 94 2b 07 	jmp	0xe56	; 0xe56 <_exit>

0000010c <__bad_interrupt>:
 10c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000110 <initding>:
void signaal_geven();

volatile int timerteller = 0;

void initding()
{
 110:	cf 93       	push	r28
 112:	df 93       	push	r29
 114:	cd b7       	in	r28, 0x3d	; 61
 116:	de b7       	in	r29, 0x3e	; 62

00000118 <.Loc.1>:
    //timer PWM motorenR
    TCCR1B = (0 << CS12) | (0 << CS11) | (1 << CS10);
 118:	81 e8       	ldi	r24, 0x81	; 129
 11a:	90 e0       	ldi	r25, 0x00	; 0

0000011c <.Loc.2>:
 11c:	21 e0       	ldi	r18, 0x01	; 1
 11e:	fc 01       	movw	r30, r24
 120:	20 83       	st	Z, r18

00000122 <.Loc.3>:
    TIMSK1 = (1 << OCIE1A) | (1 << TOIE1);
 122:	8f e6       	ldi	r24, 0x6F	; 111
 124:	90 e0       	ldi	r25, 0x00	; 0

00000126 <.Loc.4>:
 126:	23 e0       	ldi	r18, 0x03	; 3
 128:	fc 01       	movw	r30, r24
 12a:	20 83       	st	Z, r18

0000012c <.Loc.5>:

    OCR1A = 0;
 12c:	88 e8       	ldi	r24, 0x88	; 136
 12e:	90 e0       	ldi	r25, 0x00	; 0

00000130 <.Loc.6>:
 130:	fc 01       	movw	r30, r24
 132:	11 82       	std	Z+1, r1	; 0x01
 134:	10 82       	st	Z, r1

00000136 <.Loc.7>:
    //timer PWM motorenL
    TCCR3B = (0 << CS32) | (0 << CS31) | (1 << CS30);
 136:	81 e9       	ldi	r24, 0x91	; 145
 138:	90 e0       	ldi	r25, 0x00	; 0

0000013a <.Loc.8>:
 13a:	21 e0       	ldi	r18, 0x01	; 1
 13c:	fc 01       	movw	r30, r24
 13e:	20 83       	st	Z, r18

00000140 <.Loc.9>:
    TIMSK3 = (1 << OCIE3A) | (1 << TOIE3);
 140:	81 e7       	ldi	r24, 0x71	; 113
 142:	90 e0       	ldi	r25, 0x00	; 0

00000144 <.Loc.10>:
 144:	23 e0       	ldi	r18, 0x03	; 3
 146:	fc 01       	movw	r30, r24
 148:	20 83       	st	Z, r18

0000014a <.Loc.11>:

    OCR3A = 0;
 14a:	88 e9       	ldi	r24, 0x98	; 152
 14c:	90 e0       	ldi	r25, 0x00	; 0

0000014e <.Loc.12>:
 14e:	fc 01       	movw	r30, r24
 150:	11 82       	std	Z+1, r1	; 0x01
 152:	10 82       	st	Z, r1

00000154 <.Loc.13>:

    //timer doorrijden
    TIMSK0 |= (1 << TOIE0);
 154:	8e e6       	ldi	r24, 0x6E	; 110
 156:	90 e0       	ldi	r25, 0x00	; 0
 158:	fc 01       	movw	r30, r24
 15a:	20 81       	ld	r18, Z
 15c:	8e e6       	ldi	r24, 0x6E	; 110
 15e:	90 e0       	ldi	r25, 0x00	; 0

00000160 <.Loc.14>:
 160:	21 60       	ori	r18, 0x01	; 1
 162:	fc 01       	movw	r30, r24
 164:	20 83       	st	Z, r18

00000166 <.Loc.15>:

    //pinout h-brug
    DDR |= (1 << PEN1);
 166:	81 e2       	ldi	r24, 0x21	; 33
 168:	90 e0       	ldi	r25, 0x00	; 0
 16a:	fc 01       	movw	r30, r24
 16c:	20 81       	ld	r18, Z
 16e:	81 e2       	ldi	r24, 0x21	; 33
 170:	90 e0       	ldi	r25, 0x00	; 0

00000172 <.Loc.16>:
 172:	20 68       	ori	r18, 0x80	; 128
 174:	fc 01       	movw	r30, r24
 176:	20 83       	st	Z, r18

00000178 <.Loc.17>:
    DDR |= (1 << PIN11);
 178:	81 e2       	ldi	r24, 0x21	; 33
 17a:	90 e0       	ldi	r25, 0x00	; 0
 17c:	fc 01       	movw	r30, r24
 17e:	20 81       	ld	r18, Z
 180:	81 e2       	ldi	r24, 0x21	; 33
 182:	90 e0       	ldi	r25, 0x00	; 0

00000184 <.Loc.18>:
 184:	20 64       	ori	r18, 0x40	; 64
 186:	fc 01       	movw	r30, r24
 188:	20 83       	st	Z, r18

0000018a <.Loc.19>:
    DDR |= (1 << PIN12);
 18a:	81 e2       	ldi	r24, 0x21	; 33
 18c:	90 e0       	ldi	r25, 0x00	; 0
 18e:	fc 01       	movw	r30, r24
 190:	20 81       	ld	r18, Z
 192:	81 e2       	ldi	r24, 0x21	; 33
 194:	90 e0       	ldi	r25, 0x00	; 0

00000196 <.Loc.20>:
 196:	20 62       	ori	r18, 0x20	; 32
 198:	fc 01       	movw	r30, r24
 19a:	20 83       	st	Z, r18

0000019c <.Loc.21>:
    DDR |= (1 << PIN21);
 19c:	81 e2       	ldi	r24, 0x21	; 33
 19e:	90 e0       	ldi	r25, 0x00	; 0
 1a0:	fc 01       	movw	r30, r24
 1a2:	20 81       	ld	r18, Z
 1a4:	81 e2       	ldi	r24, 0x21	; 33
 1a6:	90 e0       	ldi	r25, 0x00	; 0

000001a8 <.Loc.22>:
 1a8:	20 61       	ori	r18, 0x10	; 16
 1aa:	fc 01       	movw	r30, r24
 1ac:	20 83       	st	Z, r18

000001ae <.Loc.23>:
    DDR |= (1 << PIN22);
 1ae:	81 e2       	ldi	r24, 0x21	; 33
 1b0:	90 e0       	ldi	r25, 0x00	; 0
 1b2:	fc 01       	movw	r30, r24
 1b4:	20 81       	ld	r18, Z
 1b6:	81 e2       	ldi	r24, 0x21	; 33
 1b8:	90 e0       	ldi	r25, 0x00	; 0

000001ba <.Loc.24>:
 1ba:	28 60       	ori	r18, 0x08	; 8
 1bc:	fc 01       	movw	r30, r24
 1be:	20 83       	st	Z, r18

000001c0 <.Loc.25>:
    DDR |= (1 << PEN2);
 1c0:	81 e2       	ldi	r24, 0x21	; 33
 1c2:	90 e0       	ldi	r25, 0x00	; 0
 1c4:	fc 01       	movw	r30, r24
 1c6:	20 81       	ld	r18, Z
 1c8:	81 e2       	ldi	r24, 0x21	; 33
 1ca:	90 e0       	ldi	r25, 0x00	; 0

000001cc <.Loc.26>:
 1cc:	24 60       	ori	r18, 0x04	; 4
 1ce:	fc 01       	movw	r30, r24
 1d0:	20 83       	st	Z, r18

000001d2 <.Loc.27>:

    //H-brug pinnen LOW
    PORT &= ~(1 << PEN1);
 1d2:	82 e2       	ldi	r24, 0x22	; 34
 1d4:	90 e0       	ldi	r25, 0x00	; 0
 1d6:	fc 01       	movw	r30, r24
 1d8:	20 81       	ld	r18, Z

000001da <.Loc.28>:
 1da:	82 e2       	ldi	r24, 0x22	; 34
 1dc:	90 e0       	ldi	r25, 0x00	; 0

000001de <.Loc.29>:
 1de:	2f 77       	andi	r18, 0x7F	; 127
 1e0:	fc 01       	movw	r30, r24
 1e2:	20 83       	st	Z, r18

000001e4 <.Loc.30>:
	PORT &= ~(1 << PIN11);
 1e4:	82 e2       	ldi	r24, 0x22	; 34
 1e6:	90 e0       	ldi	r25, 0x00	; 0
 1e8:	fc 01       	movw	r30, r24
 1ea:	20 81       	ld	r18, Z

000001ec <.Loc.31>:
 1ec:	82 e2       	ldi	r24, 0x22	; 34
 1ee:	90 e0       	ldi	r25, 0x00	; 0

000001f0 <.Loc.32>:
 1f0:	2f 7b       	andi	r18, 0xBF	; 191
 1f2:	fc 01       	movw	r30, r24
 1f4:	20 83       	st	Z, r18

000001f6 <.Loc.33>:
	PORT &= ~(1 << PIN12);
 1f6:	82 e2       	ldi	r24, 0x22	; 34
 1f8:	90 e0       	ldi	r25, 0x00	; 0
 1fa:	fc 01       	movw	r30, r24
 1fc:	20 81       	ld	r18, Z

000001fe <.Loc.34>:
 1fe:	82 e2       	ldi	r24, 0x22	; 34
 200:	90 e0       	ldi	r25, 0x00	; 0

00000202 <.Loc.35>:
 202:	2f 7d       	andi	r18, 0xDF	; 223
 204:	fc 01       	movw	r30, r24
 206:	20 83       	st	Z, r18

00000208 <.Loc.36>:
	PORT &= ~(1 << PIN21);
 208:	82 e2       	ldi	r24, 0x22	; 34
 20a:	90 e0       	ldi	r25, 0x00	; 0
 20c:	fc 01       	movw	r30, r24
 20e:	20 81       	ld	r18, Z

00000210 <.Loc.37>:
 210:	82 e2       	ldi	r24, 0x22	; 34
 212:	90 e0       	ldi	r25, 0x00	; 0

00000214 <.Loc.38>:
 214:	2f 7e       	andi	r18, 0xEF	; 239
 216:	fc 01       	movw	r30, r24
 218:	20 83       	st	Z, r18

0000021a <.Loc.39>:
	PORT &= ~(1 << PIN22);
 21a:	82 e2       	ldi	r24, 0x22	; 34
 21c:	90 e0       	ldi	r25, 0x00	; 0
 21e:	fc 01       	movw	r30, r24
 220:	20 81       	ld	r18, Z

00000222 <.Loc.40>:
 222:	82 e2       	ldi	r24, 0x22	; 34
 224:	90 e0       	ldi	r25, 0x00	; 0

00000226 <.Loc.41>:
 226:	27 7f       	andi	r18, 0xF7	; 247
 228:	fc 01       	movw	r30, r24
 22a:	20 83       	st	Z, r18

0000022c <.Loc.42>:
	PORT &= ~(1 << PEN2);
 22c:	82 e2       	ldi	r24, 0x22	; 34
 22e:	90 e0       	ldi	r25, 0x00	; 0
 230:	fc 01       	movw	r30, r24
 232:	20 81       	ld	r18, Z

00000234 <.Loc.43>:
 234:	82 e2       	ldi	r24, 0x22	; 34
 236:	90 e0       	ldi	r25, 0x00	; 0

00000238 <.Loc.44>:
 238:	2b 7f       	andi	r18, 0xFB	; 251
 23a:	fc 01       	movw	r30, r24
 23c:	20 83       	st	Z, r18

0000023e <.Loc.45>:

	//LEDS
    DDR_LED |= (1<<LED_1) | (1<<LED_2);     // enable pins as output
 23e:	8d e2       	ldi	r24, 0x2D	; 45
 240:	90 e0       	ldi	r25, 0x00	; 0
 242:	fc 01       	movw	r30, r24
 244:	20 81       	ld	r18, Z
 246:	8d e2       	ldi	r24, 0x2D	; 45
 248:	90 e0       	ldi	r25, 0x00	; 0

0000024a <.Loc.46>:
 24a:	20 63       	ori	r18, 0x30	; 48
 24c:	fc 01       	movw	r30, r24
 24e:	20 83       	st	Z, r18

00000250 <.Loc.47>:
    PORT_LED &= ~(1<<LED_1) & ~(1<<LED_2);  // put pins low
 250:	8e e2       	ldi	r24, 0x2E	; 46
 252:	90 e0       	ldi	r25, 0x00	; 0
 254:	fc 01       	movw	r30, r24
 256:	20 81       	ld	r18, Z

00000258 <.Loc.48>:
 258:	8e e2       	ldi	r24, 0x2E	; 46
 25a:	90 e0       	ldi	r25, 0x00	; 0

0000025c <.Loc.49>:
 25c:	2f 7c       	andi	r18, 0xCF	; 207
 25e:	fc 01       	movw	r30, r24
 260:	20 83       	st	Z, r18

00000262 <.Loc.50>:
    //Buzzer
    DDR_buzzer |= (1<<buzzer);              // enable pins as output
 262:	8d e2       	ldi	r24, 0x2D	; 45
 264:	90 e0       	ldi	r25, 0x00	; 0
 266:	fc 01       	movw	r30, r24
 268:	20 81       	ld	r18, Z
 26a:	8d e2       	ldi	r24, 0x2D	; 45
 26c:	90 e0       	ldi	r25, 0x00	; 0

0000026e <.Loc.51>:
 26e:	28 60       	ori	r18, 0x08	; 8
 270:	fc 01       	movw	r30, r24
 272:	20 83       	st	Z, r18

00000274 <.Loc.52>:
    PORT_buzzer &= ~(1<<buzzer);            // put pins low
 274:	8e e2       	ldi	r24, 0x2E	; 46
 276:	90 e0       	ldi	r25, 0x00	; 0
 278:	fc 01       	movw	r30, r24
 27a:	20 81       	ld	r18, Z

0000027c <.Loc.53>:
 27c:	8e e2       	ldi	r24, 0x2E	; 46
 27e:	90 e0       	ldi	r25, 0x00	; 0

00000280 <.Loc.54>:
 280:	27 7f       	andi	r18, 0xF7	; 247
 282:	fc 01       	movw	r30, r24
 284:	20 83       	st	Z, r18

00000286 <.Loc.55>:
}
 286:	00 00       	nop
 288:	df 91       	pop	r29
 28a:	cf 91       	pop	r28
 28c:	08 95       	ret

0000028e <__vector_20>:

//H-brug PWMR
ISR(TIMER1_OVF_vect)
{
 28e:	1f 92       	push	r1
 290:	0f 92       	push	r0
 292:	0f b6       	in	r0, 0x3f	; 63
 294:	0f 92       	push	r0
 296:	11 24       	eor	r1, r1
 298:	0b b6       	in	r0, 0x3b	; 59
 29a:	0f 92       	push	r0
 29c:	2f 93       	push	r18
 29e:	3f 93       	push	r19
 2a0:	8f 93       	push	r24
 2a2:	9f 93       	push	r25
 2a4:	ef 93       	push	r30
 2a6:	ff 93       	push	r31
 2a8:	cf 93       	push	r28
 2aa:	df 93       	push	r29
 2ac:	cd b7       	in	r28, 0x3d	; 61
 2ae:	de b7       	in	r29, 0x3e	; 62

000002b0 <.Loc.57>:
    PORT ^= (1 << PEN1);
 2b0:	82 e2       	ldi	r24, 0x22	; 34
 2b2:	90 e0       	ldi	r25, 0x00	; 0
 2b4:	fc 01       	movw	r30, r24
 2b6:	30 81       	ld	r19, Z
 2b8:	82 e2       	ldi	r24, 0x22	; 34
 2ba:	90 e0       	ldi	r25, 0x00	; 0

000002bc <.Loc.58>:
 2bc:	20 e8       	ldi	r18, 0x80	; 128
 2be:	23 27       	eor	r18, r19
 2c0:	fc 01       	movw	r30, r24
 2c2:	20 83       	st	Z, r18

000002c4 <.Loc.59>:
}
 2c4:	00 00       	nop
 2c6:	df 91       	pop	r29
 2c8:	cf 91       	pop	r28
 2ca:	ff 91       	pop	r31
 2cc:	ef 91       	pop	r30
 2ce:	9f 91       	pop	r25
 2d0:	8f 91       	pop	r24
 2d2:	3f 91       	pop	r19
 2d4:	2f 91       	pop	r18
 2d6:	0f 90       	pop	r0
 2d8:	0b be       	out	0x3b, r0	; 59
 2da:	0f 90       	pop	r0
 2dc:	0f be       	out	0x3f, r0	; 63
 2de:	0f 90       	pop	r0
 2e0:	1f 90       	pop	r1
 2e2:	18 95       	reti

000002e4 <__vector_17>:
//H-brug PWMR
ISR(TIMER1_COMPA_vect)
{
 2e4:	1f 92       	push	r1
 2e6:	0f 92       	push	r0
 2e8:	0f b6       	in	r0, 0x3f	; 63
 2ea:	0f 92       	push	r0
 2ec:	11 24       	eor	r1, r1
 2ee:	0b b6       	in	r0, 0x3b	; 59
 2f0:	0f 92       	push	r0
 2f2:	2f 93       	push	r18
 2f4:	8f 93       	push	r24
 2f6:	9f 93       	push	r25
 2f8:	ef 93       	push	r30
 2fa:	ff 93       	push	r31
 2fc:	cf 93       	push	r28
 2fe:	df 93       	push	r29
 300:	cd b7       	in	r28, 0x3d	; 61
 302:	de b7       	in	r29, 0x3e	; 62

00000304 <.Loc.61>:
    PORT |= (1 << PEN1);
 304:	82 e2       	ldi	r24, 0x22	; 34
 306:	90 e0       	ldi	r25, 0x00	; 0
 308:	fc 01       	movw	r30, r24
 30a:	20 81       	ld	r18, Z
 30c:	82 e2       	ldi	r24, 0x22	; 34
 30e:	90 e0       	ldi	r25, 0x00	; 0

00000310 <.Loc.62>:
 310:	20 68       	ori	r18, 0x80	; 128
 312:	fc 01       	movw	r30, r24
 314:	20 83       	st	Z, r18

00000316 <.Loc.63>:
}
 316:	00 00       	nop
 318:	df 91       	pop	r29
 31a:	cf 91       	pop	r28
 31c:	ff 91       	pop	r31
 31e:	ef 91       	pop	r30
 320:	9f 91       	pop	r25
 322:	8f 91       	pop	r24
 324:	2f 91       	pop	r18
 326:	0f 90       	pop	r0
 328:	0b be       	out	0x3b, r0	; 59
 32a:	0f 90       	pop	r0
 32c:	0f be       	out	0x3f, r0	; 63
 32e:	0f 90       	pop	r0
 330:	1f 90       	pop	r1
 332:	18 95       	reti

00000334 <__vector_35>:

//H-brug PWML
ISR(TIMER3_OVF_vect)
{
 334:	1f 92       	push	r1
 336:	0f 92       	push	r0
 338:	0f b6       	in	r0, 0x3f	; 63
 33a:	0f 92       	push	r0
 33c:	11 24       	eor	r1, r1
 33e:	0b b6       	in	r0, 0x3b	; 59
 340:	0f 92       	push	r0
 342:	2f 93       	push	r18
 344:	3f 93       	push	r19
 346:	8f 93       	push	r24
 348:	9f 93       	push	r25
 34a:	ef 93       	push	r30
 34c:	ff 93       	push	r31
 34e:	cf 93       	push	r28
 350:	df 93       	push	r29
 352:	cd b7       	in	r28, 0x3d	; 61
 354:	de b7       	in	r29, 0x3e	; 62

00000356 <.Loc.65>:
    PORT ^= (1 << PEN2);
 356:	82 e2       	ldi	r24, 0x22	; 34
 358:	90 e0       	ldi	r25, 0x00	; 0
 35a:	fc 01       	movw	r30, r24
 35c:	30 81       	ld	r19, Z
 35e:	82 e2       	ldi	r24, 0x22	; 34
 360:	90 e0       	ldi	r25, 0x00	; 0

00000362 <.Loc.66>:
 362:	24 e0       	ldi	r18, 0x04	; 4
 364:	23 27       	eor	r18, r19
 366:	fc 01       	movw	r30, r24
 368:	20 83       	st	Z, r18

0000036a <.Loc.67>:
}
 36a:	00 00       	nop
 36c:	df 91       	pop	r29
 36e:	cf 91       	pop	r28
 370:	ff 91       	pop	r31
 372:	ef 91       	pop	r30
 374:	9f 91       	pop	r25
 376:	8f 91       	pop	r24
 378:	3f 91       	pop	r19
 37a:	2f 91       	pop	r18
 37c:	0f 90       	pop	r0
 37e:	0b be       	out	0x3b, r0	; 59
 380:	0f 90       	pop	r0
 382:	0f be       	out	0x3f, r0	; 63
 384:	0f 90       	pop	r0
 386:	1f 90       	pop	r1
 388:	18 95       	reti

0000038a <__vector_32>:
//H-brug PWML
ISR(TIMER3_COMPA_vect)
{
 38a:	1f 92       	push	r1
 38c:	0f 92       	push	r0
 38e:	0f b6       	in	r0, 0x3f	; 63
 390:	0f 92       	push	r0
 392:	11 24       	eor	r1, r1
 394:	0b b6       	in	r0, 0x3b	; 59
 396:	0f 92       	push	r0
 398:	2f 93       	push	r18
 39a:	8f 93       	push	r24
 39c:	9f 93       	push	r25
 39e:	ef 93       	push	r30
 3a0:	ff 93       	push	r31
 3a2:	cf 93       	push	r28
 3a4:	df 93       	push	r29
 3a6:	cd b7       	in	r28, 0x3d	; 61
 3a8:	de b7       	in	r29, 0x3e	; 62

000003aa <.Loc.69>:
    PORT |= (1 << PEN2);
 3aa:	82 e2       	ldi	r24, 0x22	; 34
 3ac:	90 e0       	ldi	r25, 0x00	; 0
 3ae:	fc 01       	movw	r30, r24
 3b0:	20 81       	ld	r18, Z
 3b2:	82 e2       	ldi	r24, 0x22	; 34
 3b4:	90 e0       	ldi	r25, 0x00	; 0

000003b6 <.Loc.70>:
 3b6:	24 60       	ori	r18, 0x04	; 4
 3b8:	fc 01       	movw	r30, r24
 3ba:	20 83       	st	Z, r18

000003bc <.Loc.71>:
}
 3bc:	00 00       	nop
 3be:	df 91       	pop	r29
 3c0:	cf 91       	pop	r28
 3c2:	ff 91       	pop	r31
 3c4:	ef 91       	pop	r30
 3c6:	9f 91       	pop	r25
 3c8:	8f 91       	pop	r24
 3ca:	2f 91       	pop	r18
 3cc:	0f 90       	pop	r0
 3ce:	0b be       	out	0x3b, r0	; 59
 3d0:	0f 90       	pop	r0
 3d2:	0f be       	out	0x3f, r0	; 63
 3d4:	0f 90       	pop	r0
 3d6:	1f 90       	pop	r1
 3d8:	18 95       	reti

000003da <__vector_23>:

//Timer doorrijden
ISR(TIMER0_OVF_vect)
{
 3da:	1f 92       	push	r1
 3dc:	0f 92       	push	r0
 3de:	0f b6       	in	r0, 0x3f	; 63
 3e0:	0f 92       	push	r0
 3e2:	11 24       	eor	r1, r1
 3e4:	8f 93       	push	r24
 3e6:	9f 93       	push	r25
 3e8:	cf 93       	push	r28
 3ea:	df 93       	push	r29
 3ec:	cd b7       	in	r28, 0x3d	; 61
 3ee:	de b7       	in	r29, 0x3e	; 62

000003f0 <.Loc.73>:
    timerteller ++;
 3f0:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <timerteller>
 3f4:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <timerteller+0x1>
 3f8:	01 96       	adiw	r24, 0x01	; 1
 3fa:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <timerteller+0x1>
 3fe:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <timerteller>

00000402 <.Loc.74>:
}
 402:	00 00       	nop
 404:	df 91       	pop	r29
 406:	cf 91       	pop	r28
 408:	9f 91       	pop	r25
 40a:	8f 91       	pop	r24
 40c:	0f 90       	pop	r0
 40e:	0f be       	out	0x3f, r0	; 63
 410:	0f 90       	pop	r0
 412:	1f 90       	pop	r1
 414:	18 95       	reti

00000416 <main>:

int main(void)
{
 416:	cf 93       	push	r28
 418:	df 93       	push	r29
 41a:	00 d0       	rcall	.+0      	; 0x41c <L0^A>

0000041c <L0^A>:
 41c:	0f 92       	push	r0
 41e:	cd b7       	in	r28, 0x3d	; 61
 420:	de b7       	in	r29, 0x3e	; 62

00000422 <.Loc.76>:
    initding();
 422:	0e 94 88 00 	call	0x110	; 0x110 <initding>

00000426 <.Loc.77>:
    sei();
 426:	78 94       	sei

00000428 <.Loc.78>:
    int toestand = 0;
 428:	1a 82       	std	Y+2, r1	; 0x02
 42a:	19 82       	std	Y+1, r1	; 0x01

0000042c <.L28>:
        PORT &= ~(1 << PIN21);
*/

    while(1)
    {
        if(((IRregister & (1<<IRbakrechts)) == 0) || ((IRregister & (1<<IRbaklinks)) == 0))
 42c:	83 e2       	ldi	r24, 0x23	; 35
 42e:	90 e0       	ldi	r25, 0x00	; 0
 430:	fc 01       	movw	r30, r24
 432:	80 81       	ld	r24, Z

00000434 <.Loc.80>:
 434:	88 2f       	mov	r24, r24
 436:	90 e0       	ldi	r25, 0x00	; 0
 438:	80 72       	andi	r24, 0x20	; 32
 43a:	99 27       	eor	r25, r25

0000043c <.Loc.81>:
 43c:	00 97       	sbiw	r24, 0x00	; 0
 43e:	51 f0       	breq	.+20     	; 0x454 <.L8>

00000440 <.Loc.82>:
 440:	83 e2       	ldi	r24, 0x23	; 35
 442:	90 e0       	ldi	r25, 0x00	; 0
 444:	fc 01       	movw	r30, r24
 446:	80 81       	ld	r24, Z

00000448 <.Loc.83>:
 448:	88 2f       	mov	r24, r24
 44a:	90 e0       	ldi	r25, 0x00	; 0
 44c:	80 71       	andi	r24, 0x10	; 16
 44e:	99 27       	eor	r25, r25

00000450 <.Loc.84>:
 450:	00 97       	sbiw	r24, 0x00	; 0
 452:	21 f4       	brne	.+8      	; 0x45c <.L9>

00000454 <.L8>:
        {
            toestand = 5;
 454:	85 e0       	ldi	r24, 0x05	; 5
 456:	90 e0       	ldi	r25, 0x00	; 0
 458:	9a 83       	std	Y+2, r25	; 0x02
 45a:	89 83       	std	Y+1, r24	; 0x01

0000045c <.L9>:
        }
        switch(toestand)
 45c:	89 81       	ldd	r24, Y+1	; 0x01
 45e:	9a 81       	ldd	r25, Y+2	; 0x02
 460:	85 30       	cpi	r24, 0x05	; 5
 462:	91 05       	cpc	r25, r1
 464:	09 f4       	brne	.+2      	; 0x468 <L0^A+0x2>

00000466 <L0^A>:
 466:	69 c1       	rjmp	.+722    	; 0x73a <.L10>
 468:	89 81       	ldd	r24, Y+1	; 0x01
 46a:	9a 81       	ldd	r25, Y+2	; 0x02
 46c:	85 30       	cpi	r24, 0x05	; 5
 46e:	91 05       	cpc	r25, r1
 470:	09 f0       	breq	.+2      	; 0x474 <L0^A+0x2>

00000472 <L0^A>:
 472:	e4 f6       	brge	.-72     	; 0x42c <.L28>
 474:	89 81       	ldd	r24, Y+1	; 0x01
 476:	9a 81       	ldd	r25, Y+2	; 0x02
 478:	84 30       	cpi	r24, 0x04	; 4
 47a:	91 05       	cpc	r25, r1
 47c:	09 f4       	brne	.+2      	; 0x480 <L0^A+0x2>

0000047e <L0^A>:
 47e:	2a c1       	rjmp	.+596    	; 0x6d4 <.L12>
 480:	89 81       	ldd	r24, Y+1	; 0x01
 482:	9a 81       	ldd	r25, Y+2	; 0x02
 484:	84 30       	cpi	r24, 0x04	; 4
 486:	91 05       	cpc	r25, r1
 488:	09 f0       	breq	.+2      	; 0x48c <L0^A+0x2>

0000048a <L0^A>:
 48a:	84 f6       	brge	.-96     	; 0x42c <.L28>
 48c:	89 81       	ldd	r24, Y+1	; 0x01
 48e:	9a 81       	ldd	r25, Y+2	; 0x02
 490:	83 30       	cpi	r24, 0x03	; 3
 492:	91 05       	cpc	r25, r1
 494:	09 f4       	brne	.+2      	; 0x498 <L0^A+0x2>

00000496 <L0^A>:
 496:	c3 c0       	rjmp	.+390    	; 0x61e <.L13>
 498:	89 81       	ldd	r24, Y+1	; 0x01
 49a:	9a 81       	ldd	r25, Y+2	; 0x02
 49c:	83 30       	cpi	r24, 0x03	; 3
 49e:	91 05       	cpc	r25, r1
 4a0:	09 f0       	breq	.+2      	; 0x4a4 <L0^A+0x2>

000004a2 <L0^A>:
 4a2:	24 f6       	brge	.-120    	; 0x42c <.L28>
 4a4:	89 81       	ldd	r24, Y+1	; 0x01
 4a6:	9a 81       	ldd	r25, Y+2	; 0x02
 4a8:	82 30       	cpi	r24, 0x02	; 2
 4aa:	91 05       	cpc	r25, r1
 4ac:	09 f4       	brne	.+2      	; 0x4b0 <L0^A+0x2>

000004ae <L0^A>:
 4ae:	85 c0       	rjmp	.+266    	; 0x5ba <.L14>
 4b0:	89 81       	ldd	r24, Y+1	; 0x01
 4b2:	9a 81       	ldd	r25, Y+2	; 0x02
 4b4:	82 30       	cpi	r24, 0x02	; 2
 4b6:	91 05       	cpc	r25, r1
 4b8:	11 f0       	breq	.+4      	; 0x4be <L0^A+0x2>

000004ba <L0^A>:
 4ba:	0c f0       	brlt	.+2      	; 0x4be <L0^A+0x2>

000004bc <L0^A>:
 4bc:	b7 cf       	rjmp	.-146    	; 0x42c <.L28>
 4be:	89 81       	ldd	r24, Y+1	; 0x01
 4c0:	9a 81       	ldd	r25, Y+2	; 0x02
 4c2:	00 97       	sbiw	r24, 0x00	; 0
 4c4:	39 f0       	breq	.+14     	; 0x4d4 <.L15>
 4c6:	89 81       	ldd	r24, Y+1	; 0x01
 4c8:	9a 81       	ldd	r25, Y+2	; 0x02
 4ca:	81 30       	cpi	r24, 0x01	; 1
 4cc:	91 05       	cpc	r25, r1
 4ce:	09 f4       	brne	.+2      	; 0x4d2 <L0^A+0x2>

000004d0 <L0^A>:
 4d0:	42 c0       	rjmp	.+132    	; 0x556 <.L16>
 4d2:	75 c1       	rjmp	.+746    	; 0x7be <.L11>

000004d4 <.L15>:
        {
        case 0://begin state
            h_bridgeR_set_percentage(snelheidrechtdoor);
 4d4:	86 e4       	ldi	r24, 0x46	; 70
 4d6:	0e 94 51 05 	call	0xaa2	; 0xaa2 <h_bridgeR_set_percentage>

000004da <.Loc.88>:
            h_bridgeL_set_percentage(snelheidrechtdoor);
 4da:	86 e4       	ldi	r24, 0x46	; 70
 4dc:	0e 94 90 05 	call	0xb20	; 0xb20 <h_bridgeL_set_percentage>

000004e0 <.Loc.89>:
            PORT |= (1 << PIN11);
 4e0:	82 e2       	ldi	r24, 0x22	; 34
 4e2:	90 e0       	ldi	r25, 0x00	; 0
 4e4:	fc 01       	movw	r30, r24
 4e6:	20 81       	ld	r18, Z
 4e8:	82 e2       	ldi	r24, 0x22	; 34
 4ea:	90 e0       	ldi	r25, 0x00	; 0

000004ec <.Loc.90>:
 4ec:	20 64       	ori	r18, 0x40	; 64
 4ee:	fc 01       	movw	r30, r24
 4f0:	20 83       	st	Z, r18

000004f2 <.Loc.91>:
            PORT &= ~(1 << PIN12) ;
 4f2:	82 e2       	ldi	r24, 0x22	; 34
 4f4:	90 e0       	ldi	r25, 0x00	; 0
 4f6:	fc 01       	movw	r30, r24
 4f8:	20 81       	ld	r18, Z

000004fa <.Loc.92>:
 4fa:	82 e2       	ldi	r24, 0x22	; 34
 4fc:	90 e0       	ldi	r25, 0x00	; 0

000004fe <.Loc.93>:
 4fe:	2f 7d       	andi	r18, 0xDF	; 223
 500:	fc 01       	movw	r30, r24
 502:	20 83       	st	Z, r18

00000504 <.Loc.94>:
            PORT &= ~(1 << PIN21);
 504:	82 e2       	ldi	r24, 0x22	; 34
 506:	90 e0       	ldi	r25, 0x00	; 0
 508:	fc 01       	movw	r30, r24
 50a:	20 81       	ld	r18, Z

0000050c <.Loc.95>:
 50c:	82 e2       	ldi	r24, 0x22	; 34
 50e:	90 e0       	ldi	r25, 0x00	; 0

00000510 <.Loc.96>:
 510:	2f 7e       	andi	r18, 0xEF	; 239
 512:	fc 01       	movw	r30, r24
 514:	20 83       	st	Z, r18

00000516 <.Loc.97>:
            PORT |= (1 << PIN22);
 516:	82 e2       	ldi	r24, 0x22	; 34
 518:	90 e0       	ldi	r25, 0x00	; 0
 51a:	fc 01       	movw	r30, r24
 51c:	20 81       	ld	r18, Z
 51e:	82 e2       	ldi	r24, 0x22	; 34
 520:	90 e0       	ldi	r25, 0x00	; 0

00000522 <.Loc.98>:
 522:	28 60       	ori	r18, 0x08	; 8
 524:	fc 01       	movw	r30, r24
 526:	20 83       	st	Z, r18

00000528 <.Loc.99>:
            if(((IRregister & (1 << IRonderrechts)) == 0) && ((IRregister & (1 << IRonderlinks)) == 0))
 528:	83 e2       	ldi	r24, 0x23	; 35
 52a:	90 e0       	ldi	r25, 0x00	; 0
 52c:	fc 01       	movw	r30, r24
 52e:	80 81       	ld	r24, Z

00000530 <.Loc.100>:
 530:	88 23       	and	r24, r24
 532:	0c f4       	brge	.+2      	; 0x536 <.Loc.101>

00000534 <L0^A>:
 534:	3b c1       	rjmp	.+630    	; 0x7ac <.L29>

00000536 <.Loc.101>:
 536:	83 e2       	ldi	r24, 0x23	; 35
 538:	90 e0       	ldi	r25, 0x00	; 0
 53a:	fc 01       	movw	r30, r24
 53c:	80 81       	ld	r24, Z

0000053e <.Loc.102>:
 53e:	88 2f       	mov	r24, r24
 540:	90 e0       	ldi	r25, 0x00	; 0
 542:	80 74       	andi	r24, 0x40	; 64
 544:	99 27       	eor	r25, r25

00000546 <.Loc.103>:
 546:	00 97       	sbiw	r24, 0x00	; 0
 548:	09 f0       	breq	.+2      	; 0x54c <.Loc.104>

0000054a <L0^A>:
 54a:	30 c1       	rjmp	.+608    	; 0x7ac <.L29>

0000054c <.Loc.104>:
            {
                toestand = 3;
 54c:	83 e0       	ldi	r24, 0x03	; 3
 54e:	90 e0       	ldi	r25, 0x00	; 0
 550:	9a 83       	std	Y+2, r25	; 0x02
 552:	89 83       	std	Y+1, r24	; 0x01

00000554 <.Loc.105>:

            }
            break;
 554:	2b c1       	rjmp	.+598    	; 0x7ac <.L29>

00000556 <.L16>:
        case 1://naar links(te dichtbij rechts)
            //Motoren naar links
            h_bridgeR_set_percentage(snelheidhard);
 556:	81 e4       	ldi	r24, 0x41	; 65
 558:	0e 94 51 05 	call	0xaa2	; 0xaa2 <h_bridgeR_set_percentage>

0000055c <.Loc.107>:
            h_bridgeL_set_percentage(snelheidzacht);
 55c:	8b e4       	ldi	r24, 0x4B	; 75
 55e:	0e 94 90 05 	call	0xb20	; 0xb20 <h_bridgeL_set_percentage>

00000562 <.Loc.108>:
            if(((IRregister & (1 << IRonderrechts)) == 0) && ((IRregister & (1 << IRonderlinks)) == 0))
 562:	83 e2       	ldi	r24, 0x23	; 35
 564:	90 e0       	ldi	r25, 0x00	; 0
 566:	fc 01       	movw	r30, r24
 568:	80 81       	ld	r24, Z

0000056a <.Loc.109>:
 56a:	88 23       	and	r24, r24
 56c:	7c f0       	brlt	.+30     	; 0x58c <.L18>

0000056e <.Loc.110>:
 56e:	83 e2       	ldi	r24, 0x23	; 35
 570:	90 e0       	ldi	r25, 0x00	; 0
 572:	fc 01       	movw	r30, r24
 574:	80 81       	ld	r24, Z

00000576 <.Loc.111>:
 576:	88 2f       	mov	r24, r24
 578:	90 e0       	ldi	r25, 0x00	; 0
 57a:	80 74       	andi	r24, 0x40	; 64
 57c:	99 27       	eor	r25, r25

0000057e <.Loc.112>:
 57e:	00 97       	sbiw	r24, 0x00	; 0
 580:	29 f4       	brne	.+10     	; 0x58c <.L18>

00000582 <.Loc.113>:
            {
                toestand = 3;
 582:	83 e0       	ldi	r24, 0x03	; 3
 584:	90 e0       	ldi	r25, 0x00	; 0
 586:	9a 83       	std	Y+2, r25	; 0x02
 588:	89 83       	std	Y+1, r24	; 0x01

0000058a <.Loc.114>:
            }
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
            {
                toestand = 4;
            }
            break;
 58a:	12 c1       	rjmp	.+548    	; 0x7b0 <.L30>

0000058c <.L18>:
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
 58c:	83 e2       	ldi	r24, 0x23	; 35
 58e:	90 e0       	ldi	r25, 0x00	; 0
 590:	fc 01       	movw	r30, r24
 592:	80 81       	ld	r24, Z

00000594 <.Loc.116>:
 594:	88 23       	and	r24, r24
 596:	0c f0       	brlt	.+2      	; 0x59a <.Loc.117>

00000598 <L0^A>:
 598:	0b c1       	rjmp	.+534    	; 0x7b0 <.L30>

0000059a <.Loc.117>:
 59a:	83 e2       	ldi	r24, 0x23	; 35
 59c:	90 e0       	ldi	r25, 0x00	; 0
 59e:	fc 01       	movw	r30, r24
 5a0:	80 81       	ld	r24, Z

000005a2 <.Loc.118>:
 5a2:	88 2f       	mov	r24, r24
 5a4:	90 e0       	ldi	r25, 0x00	; 0
 5a6:	80 74       	andi	r24, 0x40	; 64
 5a8:	99 27       	eor	r25, r25

000005aa <.Loc.119>:
 5aa:	00 97       	sbiw	r24, 0x00	; 0
 5ac:	09 f4       	brne	.+2      	; 0x5b0 <.Loc.120>

000005ae <L0^A>:
 5ae:	00 c1       	rjmp	.+512    	; 0x7b0 <.L30>

000005b0 <.Loc.120>:
                toestand = 4;
 5b0:	84 e0       	ldi	r24, 0x04	; 4
 5b2:	90 e0       	ldi	r25, 0x00	; 0
 5b4:	9a 83       	std	Y+2, r25	; 0x02
 5b6:	89 83       	std	Y+1, r24	; 0x01

000005b8 <.Loc.121>:
            break;
 5b8:	fb c0       	rjmp	.+502    	; 0x7b0 <.L30>

000005ba <.L14>:
        case 2://naar rechts(te dichtbij links)
            //Motoren naar rechts
            h_bridgeR_set_percentage(snelheidzacht);
 5ba:	8b e4       	ldi	r24, 0x4B	; 75
 5bc:	0e 94 51 05 	call	0xaa2	; 0xaa2 <h_bridgeR_set_percentage>

000005c0 <.Loc.123>:
            h_bridgeL_set_percentage(snelheidhard);
 5c0:	81 e4       	ldi	r24, 0x41	; 65
 5c2:	0e 94 90 05 	call	0xb20	; 0xb20 <h_bridgeL_set_percentage>

000005c6 <.Loc.124>:
            if(((IRregister & (1 << IRonderrechts)) == 0) && ((IRregister & (1 << IRonderlinks)) == 0))
 5c6:	83 e2       	ldi	r24, 0x23	; 35
 5c8:	90 e0       	ldi	r25, 0x00	; 0
 5ca:	fc 01       	movw	r30, r24
 5cc:	80 81       	ld	r24, Z

000005ce <.Loc.125>:
 5ce:	88 23       	and	r24, r24
 5d0:	7c f0       	brlt	.+30     	; 0x5f0 <.L20>

000005d2 <.Loc.126>:
 5d2:	83 e2       	ldi	r24, 0x23	; 35
 5d4:	90 e0       	ldi	r25, 0x00	; 0
 5d6:	fc 01       	movw	r30, r24
 5d8:	80 81       	ld	r24, Z

000005da <.Loc.127>:
 5da:	88 2f       	mov	r24, r24
 5dc:	90 e0       	ldi	r25, 0x00	; 0
 5de:	80 74       	andi	r24, 0x40	; 64
 5e0:	99 27       	eor	r25, r25

000005e2 <.Loc.128>:
 5e2:	00 97       	sbiw	r24, 0x00	; 0
 5e4:	29 f4       	brne	.+10     	; 0x5f0 <.L20>

000005e6 <.Loc.129>:
            {
                toestand = 3;
 5e6:	83 e0       	ldi	r24, 0x03	; 3
 5e8:	90 e0       	ldi	r25, 0x00	; 0
 5ea:	9a 83       	std	Y+2, r25	; 0x02
 5ec:	89 83       	std	Y+1, r24	; 0x01

000005ee <.Loc.130>:
            }
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
            {
                toestand = 4;
            }
            break;
 5ee:	e2 c0       	rjmp	.+452    	; 0x7b4 <.L31>

000005f0 <.L20>:
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
 5f0:	83 e2       	ldi	r24, 0x23	; 35
 5f2:	90 e0       	ldi	r25, 0x00	; 0
 5f4:	fc 01       	movw	r30, r24
 5f6:	80 81       	ld	r24, Z

000005f8 <.Loc.132>:
 5f8:	88 23       	and	r24, r24
 5fa:	0c f0       	brlt	.+2      	; 0x5fe <.Loc.133>

000005fc <L0^A>:
 5fc:	db c0       	rjmp	.+438    	; 0x7b4 <.L31>

000005fe <.Loc.133>:
 5fe:	83 e2       	ldi	r24, 0x23	; 35
 600:	90 e0       	ldi	r25, 0x00	; 0
 602:	fc 01       	movw	r30, r24
 604:	80 81       	ld	r24, Z

00000606 <.Loc.134>:
 606:	88 2f       	mov	r24, r24
 608:	90 e0       	ldi	r25, 0x00	; 0
 60a:	80 74       	andi	r24, 0x40	; 64
 60c:	99 27       	eor	r25, r25

0000060e <.Loc.135>:
 60e:	00 97       	sbiw	r24, 0x00	; 0
 610:	09 f4       	brne	.+2      	; 0x614 <.Loc.136>

00000612 <L0^A>:
 612:	d0 c0       	rjmp	.+416    	; 0x7b4 <.L31>

00000614 <.Loc.136>:
                toestand = 4;
 614:	84 e0       	ldi	r24, 0x04	; 4
 616:	90 e0       	ldi	r25, 0x00	; 0
 618:	9a 83       	std	Y+2, r25	; 0x02
 61a:	89 83       	std	Y+1, r24	; 0x01

0000061c <.Loc.137>:
            break;
 61c:	cb c0       	rjmp	.+406    	; 0x7b4 <.L31>

0000061e <.L13>:
        case 3://rechtdoor
            //Motoren naar rechtdoor
            PORT |= (1 << PIN11);
 61e:	82 e2       	ldi	r24, 0x22	; 34
 620:	90 e0       	ldi	r25, 0x00	; 0
 622:	fc 01       	movw	r30, r24
 624:	20 81       	ld	r18, Z
 626:	82 e2       	ldi	r24, 0x22	; 34
 628:	90 e0       	ldi	r25, 0x00	; 0

0000062a <.Loc.139>:
 62a:	20 64       	ori	r18, 0x40	; 64
 62c:	fc 01       	movw	r30, r24
 62e:	20 83       	st	Z, r18

00000630 <.Loc.140>:
            PORT &= ~(1 << PIN12) ;
 630:	82 e2       	ldi	r24, 0x22	; 34
 632:	90 e0       	ldi	r25, 0x00	; 0
 634:	fc 01       	movw	r30, r24
 636:	20 81       	ld	r18, Z

00000638 <.Loc.141>:
 638:	82 e2       	ldi	r24, 0x22	; 34
 63a:	90 e0       	ldi	r25, 0x00	; 0

0000063c <.Loc.142>:
 63c:	2f 7d       	andi	r18, 0xDF	; 223
 63e:	fc 01       	movw	r30, r24
 640:	20 83       	st	Z, r18

00000642 <.Loc.143>:
            PORT &= ~(1 << PIN21);
 642:	82 e2       	ldi	r24, 0x22	; 34
 644:	90 e0       	ldi	r25, 0x00	; 0
 646:	fc 01       	movw	r30, r24
 648:	20 81       	ld	r18, Z

0000064a <.Loc.144>:
 64a:	82 e2       	ldi	r24, 0x22	; 34
 64c:	90 e0       	ldi	r25, 0x00	; 0

0000064e <.Loc.145>:
 64e:	2f 7e       	andi	r18, 0xEF	; 239
 650:	fc 01       	movw	r30, r24
 652:	20 83       	st	Z, r18

00000654 <.Loc.146>:
            PORT |= (1 << PIN22);
 654:	82 e2       	ldi	r24, 0x22	; 34
 656:	90 e0       	ldi	r25, 0x00	; 0
 658:	fc 01       	movw	r30, r24
 65a:	20 81       	ld	r18, Z
 65c:	82 e2       	ldi	r24, 0x22	; 34
 65e:	90 e0       	ldi	r25, 0x00	; 0

00000660 <.Loc.147>:
 660:	28 60       	ori	r18, 0x08	; 8
 662:	fc 01       	movw	r30, r24
 664:	20 83       	st	Z, r18

00000666 <.Loc.148>:
            h_bridgeR_set_percentage(snelheidrechtdoor);
 666:	86 e4       	ldi	r24, 0x46	; 70
 668:	0e 94 51 05 	call	0xaa2	; 0xaa2 <h_bridgeR_set_percentage>

0000066c <.Loc.149>:
            h_bridgeL_set_percentage(snelheidrechtdoor);
 66c:	86 e4       	ldi	r24, 0x46	; 70
 66e:	0e 94 90 05 	call	0xb20	; 0xb20 <h_bridgeL_set_percentage>

00000672 <.Loc.150>:
            if(IRregister & (1 << IRonderrechts))
 672:	83 e2       	ldi	r24, 0x23	; 35
 674:	90 e0       	ldi	r25, 0x00	; 0
 676:	fc 01       	movw	r30, r24
 678:	80 81       	ld	r24, Z

0000067a <.Loc.151>:
 67a:	88 23       	and	r24, r24
 67c:	2c f4       	brge	.+10     	; 0x688 <.L22>

0000067e <.Loc.152>:
            {
                toestand = 1;
 67e:	81 e0       	ldi	r24, 0x01	; 1
 680:	90 e0       	ldi	r25, 0x00	; 0
 682:	9a 83       	std	Y+2, r25	; 0x02
 684:	89 83       	std	Y+1, r24	; 0x01

00000686 <.Loc.153>:
            }
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
            {
                toestand = 4;
            }
            break;
 686:	98 c0       	rjmp	.+304    	; 0x7b8 <.L32>

00000688 <.L22>:
            else if(IRregister & (1 << IRonderlinks))
 688:	83 e2       	ldi	r24, 0x23	; 35
 68a:	90 e0       	ldi	r25, 0x00	; 0
 68c:	fc 01       	movw	r30, r24
 68e:	80 81       	ld	r24, Z

00000690 <.Loc.155>:
 690:	88 2f       	mov	r24, r24
 692:	90 e0       	ldi	r25, 0x00	; 0
 694:	80 74       	andi	r24, 0x40	; 64
 696:	99 27       	eor	r25, r25

00000698 <.Loc.156>:
 698:	00 97       	sbiw	r24, 0x00	; 0
 69a:	29 f0       	breq	.+10     	; 0x6a6 <.L24>

0000069c <.Loc.157>:
                toestand = 2;
 69c:	82 e0       	ldi	r24, 0x02	; 2
 69e:	90 e0       	ldi	r25, 0x00	; 0
 6a0:	9a 83       	std	Y+2, r25	; 0x02
 6a2:	89 83       	std	Y+1, r24	; 0x01

000006a4 <.Loc.158>:
            break;
 6a4:	89 c0       	rjmp	.+274    	; 0x7b8 <.L32>

000006a6 <.L24>:
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
 6a6:	83 e2       	ldi	r24, 0x23	; 35
 6a8:	90 e0       	ldi	r25, 0x00	; 0
 6aa:	fc 01       	movw	r30, r24
 6ac:	80 81       	ld	r24, Z

000006ae <.Loc.160>:
 6ae:	88 23       	and	r24, r24
 6b0:	0c f0       	brlt	.+2      	; 0x6b4 <.Loc.161>

000006b2 <L0^A>:
 6b2:	82 c0       	rjmp	.+260    	; 0x7b8 <.L32>

000006b4 <.Loc.161>:
 6b4:	83 e2       	ldi	r24, 0x23	; 35
 6b6:	90 e0       	ldi	r25, 0x00	; 0
 6b8:	fc 01       	movw	r30, r24
 6ba:	80 81       	ld	r24, Z

000006bc <.Loc.162>:
 6bc:	88 2f       	mov	r24, r24
 6be:	90 e0       	ldi	r25, 0x00	; 0
 6c0:	80 74       	andi	r24, 0x40	; 64
 6c2:	99 27       	eor	r25, r25

000006c4 <.Loc.163>:
 6c4:	00 97       	sbiw	r24, 0x00	; 0
 6c6:	09 f4       	brne	.+2      	; 0x6ca <.Loc.164>

000006c8 <L0^A>:
 6c8:	77 c0       	rjmp	.+238    	; 0x7b8 <.L32>

000006ca <.Loc.164>:
                toestand = 4;
 6ca:	84 e0       	ldi	r24, 0x04	; 4
 6cc:	90 e0       	ldi	r25, 0x00	; 0
 6ce:	9a 83       	std	Y+2, r25	; 0x02
 6d0:	89 83       	std	Y+1, r24	; 0x01

000006d2 <.Loc.165>:
            break;
 6d2:	72 c0       	rjmp	.+228    	; 0x7b8 <.L32>

000006d4 <.L12>:
        case 4://Rijstrook wisselen naar links
            TCCR0B = (1 << CS02) | (0 << CS01) | (1 << CS00);
 6d4:	85 e4       	ldi	r24, 0x45	; 69
 6d6:	90 e0       	ldi	r25, 0x00	; 0

000006d8 <.Loc.167>:
 6d8:	25 e0       	ldi	r18, 0x05	; 5
 6da:	fc 01       	movw	r30, r24
 6dc:	20 83       	st	Z, r18

000006de <.Loc.168>:
            if(timerteller == 15000)//een seconde zijn voorbij
 6de:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <timerteller>
 6e2:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <timerteller+0x1>

000006e6 <.Loc.169>:
 6e6:	88 39       	cpi	r24, 0x98	; 152
 6e8:	fa e3       	ldi	r31, 0x3A	; 58
 6ea:	9f 07       	cpc	r25, r31
 6ec:	09 f0       	breq	.+2      	; 0x6f0 <.Loc.170>

000006ee <L0^A>:
 6ee:	66 c0       	rjmp	.+204    	; 0x7bc <.L33>

000006f0 <.Loc.170>:
            {
                timerteller = 0;
 6f0:	10 92 01 02 	sts	0x0201, r1	; 0x800201 <timerteller+0x1>
 6f4:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <timerteller>

000006f8 <.Loc.171>:
                TCCR0B = 0;
 6f8:	85 e4       	ldi	r24, 0x45	; 69
 6fa:	90 e0       	ldi	r25, 0x00	; 0

000006fc <.Loc.172>:
 6fc:	fc 01       	movw	r30, r24
 6fe:	10 82       	st	Z, r1

00000700 <.Loc.173>:
                h_bridgeR_set_percentage(snelheidhard);
 700:	81 e4       	ldi	r24, 0x41	; 65
 702:	0e 94 51 05 	call	0xaa2	; 0xaa2 <h_bridgeR_set_percentage>

00000706 <.Loc.174>:
                h_bridgeL_set_percentage(snelheidzacht);
 706:	8b e4       	ldi	r24, 0x4B	; 75
 708:	0e 94 90 05 	call	0xb20	; 0xb20 <h_bridgeL_set_percentage>

0000070c <.Loc.175>:
                if(((IRregister & (1 << IRonderlinks)) == 0) && ((IRregister & (1 << IRonderrechts)) == 0))
 70c:	83 e2       	ldi	r24, 0x23	; 35
 70e:	90 e0       	ldi	r25, 0x00	; 0
 710:	fc 01       	movw	r30, r24
 712:	80 81       	ld	r24, Z

00000714 <.Loc.176>:
 714:	88 2f       	mov	r24, r24
 716:	90 e0       	ldi	r25, 0x00	; 0
 718:	80 74       	andi	r24, 0x40	; 64
 71a:	99 27       	eor	r25, r25

0000071c <.Loc.177>:
 71c:	00 97       	sbiw	r24, 0x00	; 0
 71e:	09 f0       	breq	.+2      	; 0x722 <.Loc.178>

00000720 <L0^A>:
 720:	4d c0       	rjmp	.+154    	; 0x7bc <.L33>

00000722 <.Loc.178>:
 722:	83 e2       	ldi	r24, 0x23	; 35
 724:	90 e0       	ldi	r25, 0x00	; 0
 726:	fc 01       	movw	r30, r24
 728:	80 81       	ld	r24, Z

0000072a <.Loc.179>:
 72a:	88 23       	and	r24, r24
 72c:	0c f4       	brge	.+2      	; 0x730 <.Loc.180>

0000072e <L0^A>:
 72e:	46 c0       	rjmp	.+140    	; 0x7bc <.L33>

00000730 <.Loc.180>:
                {
                    toestand = 3;
 730:	83 e0       	ldi	r24, 0x03	; 3
 732:	90 e0       	ldi	r25, 0x00	; 0
 734:	9a 83       	std	Y+2, r25	; 0x02
 736:	89 83       	std	Y+1, r24	; 0x01

00000738 <.Loc.181>:
                }
            }
            break;
 738:	41 c0       	rjmp	.+130    	; 0x7bc <.L33>

0000073a <.L10>:
        case 5://signaal geven
            //motoren uit
            PORT &= ~(1 << PIN11);//MOETEN ZE 1 OF 0!!!!
 73a:	82 e2       	ldi	r24, 0x22	; 34
 73c:	90 e0       	ldi	r25, 0x00	; 0
 73e:	fc 01       	movw	r30, r24
 740:	20 81       	ld	r18, Z

00000742 <.Loc.183>:
 742:	82 e2       	ldi	r24, 0x22	; 34
 744:	90 e0       	ldi	r25, 0x00	; 0

00000746 <.Loc.184>:
 746:	2f 7b       	andi	r18, 0xBF	; 191
 748:	fc 01       	movw	r30, r24
 74a:	20 83       	st	Z, r18

0000074c <.Loc.185>:
            PORT &= ~(1 << PIN12);
 74c:	82 e2       	ldi	r24, 0x22	; 34
 74e:	90 e0       	ldi	r25, 0x00	; 0
 750:	fc 01       	movw	r30, r24
 752:	20 81       	ld	r18, Z

00000754 <.Loc.186>:
 754:	82 e2       	ldi	r24, 0x22	; 34
 756:	90 e0       	ldi	r25, 0x00	; 0

00000758 <.Loc.187>:
 758:	2f 7d       	andi	r18, 0xDF	; 223
 75a:	fc 01       	movw	r30, r24
 75c:	20 83       	st	Z, r18

0000075e <.Loc.188>:
            PORT &= ~(1 << PIN21);
 75e:	82 e2       	ldi	r24, 0x22	; 34
 760:	90 e0       	ldi	r25, 0x00	; 0
 762:	fc 01       	movw	r30, r24
 764:	20 81       	ld	r18, Z

00000766 <.Loc.189>:
 766:	82 e2       	ldi	r24, 0x22	; 34
 768:	90 e0       	ldi	r25, 0x00	; 0

0000076a <.Loc.190>:
 76a:	2f 7e       	andi	r18, 0xEF	; 239
 76c:	fc 01       	movw	r30, r24
 76e:	20 83       	st	Z, r18

00000770 <.Loc.191>:
            PORT &= ~(1 << PIN22);
 770:	82 e2       	ldi	r24, 0x22	; 34
 772:	90 e0       	ldi	r25, 0x00	; 0
 774:	fc 01       	movw	r30, r24
 776:	20 81       	ld	r18, Z

00000778 <.Loc.192>:
 778:	82 e2       	ldi	r24, 0x22	; 34
 77a:	90 e0       	ldi	r25, 0x00	; 0

0000077c <.Loc.193>:
 77c:	27 7f       	andi	r18, 0xF7	; 247
 77e:	fc 01       	movw	r30, r24
 780:	20 83       	st	Z, r18

00000782 <.LBB18>:
            for (int i = 0; i < 10; i++)
 782:	1c 82       	std	Y+4, r1	; 0x04
 784:	1b 82       	std	Y+3, r1	; 0x03

00000786 <.Loc.195>:
 786:	07 c0       	rjmp	.+14     	; 0x796 <.L26>

00000788 <.L27>:
            {
                signaal_geven();
 788:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <signaal_geven>

0000078c <.Loc.197>:
            for (int i = 0; i < 10; i++)
 78c:	8b 81       	ldd	r24, Y+3	; 0x03
 78e:	9c 81       	ldd	r25, Y+4	; 0x04
 790:	01 96       	adiw	r24, 0x01	; 1
 792:	9c 83       	std	Y+4, r25	; 0x04
 794:	8b 83       	std	Y+3, r24	; 0x03

00000796 <.L26>:
 796:	8b 81       	ldd	r24, Y+3	; 0x03
 798:	9c 81       	ldd	r25, Y+4	; 0x04
 79a:	89 30       	cpi	r24, 0x09	; 9
 79c:	91 05       	cpc	r25, r1
 79e:	a1 f3       	breq	.-24     	; 0x788 <.L27>
 7a0:	9c f3       	brlt	.-26     	; 0x788 <.L27>

000007a2 <.LBE18>:
            }
            toestand = 3;
 7a2:	83 e0       	ldi	r24, 0x03	; 3
 7a4:	90 e0       	ldi	r25, 0x00	; 0
 7a6:	9a 83       	std	Y+2, r25	; 0x02
 7a8:	89 83       	std	Y+1, r24	; 0x01

000007aa <.Loc.200>:
            break;
 7aa:	09 c0       	rjmp	.+18     	; 0x7be <.L11>

000007ac <.L29>:
            break;
 7ac:	00 00       	nop
 7ae:	3e ce       	rjmp	.-900    	; 0x42c <.L28>

000007b0 <.L30>:
            break;
 7b0:	00 00       	nop
 7b2:	3c ce       	rjmp	.-904    	; 0x42c <.L28>

000007b4 <.L31>:
            break;
 7b4:	00 00       	nop
 7b6:	3a ce       	rjmp	.-908    	; 0x42c <.L28>

000007b8 <.L32>:
            break;
 7b8:	00 00       	nop
 7ba:	38 ce       	rjmp	.-912    	; 0x42c <.L28>

000007bc <.L33>:
	...

000007be <.L11>:
        if(((IRregister & (1<<IRbakrechts)) == 0) || ((IRregister & (1<<IRbaklinks)) == 0))
 7be:	36 ce       	rjmp	.-916    	; 0x42c <.L28>

000007c0 <signaal_geven>:

    return 0;
}

void signaal_geven()
{
 7c0:	cf 93       	push	r28
 7c2:	df 93       	push	r29
 7c4:	cd b7       	in	r28, 0x3d	; 61
 7c6:	de b7       	in	r29, 0x3e	; 62
 7c8:	c4 54       	subi	r28, 0x44	; 68
 7ca:	d1 09       	sbc	r29, r1
 7cc:	0f b6       	in	r0, 0x3f	; 63
 7ce:	f8 94       	cli
 7d0:	de bf       	out	0x3e, r29	; 62
 7d2:	0f be       	out	0x3f, r0	; 63
 7d4:	cd bf       	out	0x3d, r28	; 61

000007d6 <.Loc.208>:
    PORT_LED |= (1<<LED_1);         // LED 1 aan
 7d6:	8e e2       	ldi	r24, 0x2E	; 46
 7d8:	90 e0       	ldi	r25, 0x00	; 0
 7da:	dc 01       	movw	r26, r24
 7dc:	2c 91       	ld	r18, X
 7de:	8e e2       	ldi	r24, 0x2E	; 46
 7e0:	90 e0       	ldi	r25, 0x00	; 0

000007e2 <.Loc.209>:
 7e2:	20 62       	ori	r18, 0x20	; 32
 7e4:	fc 01       	movw	r30, r24
 7e6:	20 83       	st	Z, r18

000007e8 <.Loc.210>:
    PORT_LED &= ~(1<<LED_2);        // LED 2 uit
 7e8:	8e e2       	ldi	r24, 0x2E	; 46
 7ea:	90 e0       	ldi	r25, 0x00	; 0
 7ec:	dc 01       	movw	r26, r24
 7ee:	2c 91       	ld	r18, X

000007f0 <.Loc.211>:
 7f0:	8e e2       	ldi	r24, 0x2E	; 46
 7f2:	90 e0       	ldi	r25, 0x00	; 0

000007f4 <.Loc.212>:
 7f4:	2f 7e       	andi	r18, 0xEF	; 239
 7f6:	fc 01       	movw	r30, r24
 7f8:	20 83       	st	Z, r18

000007fa <.Loc.213>:
    PORT_buzzer |= (1<<buzzer);     // buzzer aan
 7fa:	8e e2       	ldi	r24, 0x2E	; 46
 7fc:	90 e0       	ldi	r25, 0x00	; 0
 7fe:	dc 01       	movw	r26, r24
 800:	2c 91       	ld	r18, X
 802:	8e e2       	ldi	r24, 0x2E	; 46
 804:	90 e0       	ldi	r25, 0x00	; 0

00000806 <.Loc.214>:
 806:	28 60       	ori	r18, 0x08	; 8
 808:	fc 01       	movw	r30, r24
 80a:	20 83       	st	Z, r18
 80c:	80 e0       	ldi	r24, 0x00	; 0
 80e:	90 e0       	ldi	r25, 0x00	; 0
 810:	aa ef       	ldi	r26, 0xFA	; 250
 812:	b3 e4       	ldi	r27, 0x43	; 67
 814:	8f 87       	std	Y+15, r24	; 0x0f
 816:	98 8b       	std	Y+16, r25	; 0x10
 818:	a9 8b       	std	Y+17, r26	; 0x11
 81a:	ba 8b       	std	Y+18, r27	; 0x12

0000081c <.LBB19>:

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 81c:	20 e0       	ldi	r18, 0x00	; 0
 81e:	30 e0       	ldi	r19, 0x00	; 0
 820:	4a e7       	ldi	r20, 0x7A	; 122
 822:	55 e4       	ldi	r21, 0x45	; 69
 824:	6f 85       	ldd	r22, Y+15	; 0x0f
 826:	78 89       	ldd	r23, Y+16	; 0x10
 828:	89 89       	ldd	r24, Y+17	; 0x11
 82a:	9a 89       	ldd	r25, Y+18	; 0x12
 82c:	0e 94 96 06 	call	0xd2c	; 0xd2c <__mulsf3>
 830:	6d a3       	std	Y+37, r22	; 0x25
 832:	7e a3       	std	Y+38, r23	; 0x26
 834:	8f a3       	std	Y+39, r24	; 0x27
 836:	98 a7       	std	Y+40, r25	; 0x28
 838:	8d a1       	ldd	r24, Y+37	; 0x25
 83a:	9e a1       	ldd	r25, Y+38	; 0x26
 83c:	af a1       	ldd	r26, Y+39	; 0x27
 83e:	b8 a5       	ldd	r27, Y+40	; 0x28
 840:	8b 8b       	std	Y+19, r24	; 0x13
 842:	9c 8b       	std	Y+20, r25	; 0x14
 844:	ad 8b       	std	Y+21, r26	; 0x15
 846:	be 8b       	std	Y+22, r27	; 0x16

00000848 <.Loc.216>:
	if (__tmp < 1.0)
 848:	20 e0       	ldi	r18, 0x00	; 0
 84a:	30 e0       	ldi	r19, 0x00	; 0
 84c:	40 e8       	ldi	r20, 0x80	; 128
 84e:	5f e3       	ldi	r21, 0x3F	; 63
 850:	6b 89       	ldd	r22, Y+19	; 0x13
 852:	7c 89       	ldd	r23, Y+20	; 0x14
 854:	8d 89       	ldd	r24, Y+21	; 0x15
 856:	9e 89       	ldd	r25, Y+22	; 0x16
 858:	0e 94 10 06 	call	0xc20	; 0xc20 <__cmpsf2>
 85c:	88 23       	and	r24, r24
 85e:	2c f4       	brge	.+10     	; 0x86a <.L55>

00000860 <.Loc.217>:
		__ticks = 1;
 860:	81 e0       	ldi	r24, 0x01	; 1
 862:	90 e0       	ldi	r25, 0x00	; 0
 864:	98 8f       	std	Y+24, r25	; 0x18
 866:	8f 8b       	std	Y+23, r24	; 0x17
 868:	55 c0       	rjmp	.+170    	; 0x914 <.L37>

0000086a <.L55>:
	else if (__tmp > 65535)
 86a:	20 e0       	ldi	r18, 0x00	; 0
 86c:	3f ef       	ldi	r19, 0xFF	; 255
 86e:	4f e7       	ldi	r20, 0x7F	; 127
 870:	57 e4       	ldi	r21, 0x47	; 71
 872:	6b 89       	ldd	r22, Y+19	; 0x13
 874:	7c 89       	ldd	r23, Y+20	; 0x14
 876:	8d 89       	ldd	r24, Y+21	; 0x15
 878:	9e 89       	ldd	r25, Y+22	; 0x16
 87a:	0e 94 91 06 	call	0xd22	; 0xd22 <__gesf2>
 87e:	88 23       	and	r24, r24
 880:	d9 f1       	breq	.+118    	; 0x8f8 <.L56>
 882:	d4 f1       	brlt	.+116    	; 0x8f8 <.L56>

00000884 <.Loc.219>:
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 884:	20 e0       	ldi	r18, 0x00	; 0
 886:	30 e0       	ldi	r19, 0x00	; 0
 888:	40 e2       	ldi	r20, 0x20	; 32
 88a:	51 e4       	ldi	r21, 0x41	; 65
 88c:	6f 85       	ldd	r22, Y+15	; 0x0f
 88e:	78 89       	ldd	r23, Y+16	; 0x10
 890:	89 89       	ldd	r24, Y+17	; 0x11
 892:	9a 89       	ldd	r25, Y+18	; 0x12
 894:	0e 94 96 06 	call	0xd2c	; 0xd2c <__mulsf3>
 898:	69 a7       	std	Y+41, r22	; 0x29
 89a:	7a a7       	std	Y+42, r23	; 0x2a
 89c:	8b a7       	std	Y+43, r24	; 0x2b
 89e:	9c a7       	std	Y+44, r25	; 0x2c
 8a0:	89 a5       	ldd	r24, Y+41	; 0x29
 8a2:	9a a5       	ldd	r25, Y+42	; 0x2a
 8a4:	ab a5       	ldd	r26, Y+43	; 0x2b
 8a6:	bc a5       	ldd	r27, Y+44	; 0x2c
 8a8:	89 a3       	std	Y+33, r24	; 0x21
 8aa:	9a a3       	std	Y+34, r25	; 0x22
 8ac:	ab a3       	std	Y+35, r26	; 0x23
 8ae:	bc a3       	std	Y+36, r27	; 0x24

000008b0 <.Loc.220>:
 8b0:	69 a1       	ldd	r22, Y+33	; 0x21
 8b2:	7a a1       	ldd	r23, Y+34	; 0x22
 8b4:	8b a1       	ldd	r24, Y+35	; 0x23
 8b6:	9c a1       	ldd	r25, Y+36	; 0x24
 8b8:	0e 94 15 06 	call	0xc2a	; 0xc2a <__fixunssfsi>
 8bc:	6d a7       	std	Y+45, r22	; 0x2d
 8be:	7e a7       	std	Y+46, r23	; 0x2e
 8c0:	8f a7       	std	Y+47, r24	; 0x2f
 8c2:	98 ab       	std	Y+48, r25	; 0x30
 8c4:	ad a5       	ldd	r26, Y+45	; 0x2d
 8c6:	be a5       	ldd	r27, Y+46	; 0x2e
 8c8:	b8 8f       	std	Y+24, r27	; 0x18
 8ca:	af 8b       	std	Y+23, r26	; 0x17

000008cc <.Loc.221>:
		while(__ticks)
 8cc:	10 c0       	rjmp	.+32     	; 0x8ee <.L40>

000008ce <.L41>:
 8ce:	80 e9       	ldi	r24, 0x90	; 144
 8d0:	91 e0       	ldi	r25, 0x01	; 1
 8d2:	9a 8f       	std	Y+26, r25	; 0x1a
 8d4:	89 8f       	std	Y+25, r24	; 0x19

000008d6 <.LBB21>:
		"sbc %B0,__zero_reg__"    "\n\t"
		"brne 1b"
		: "+d" (__count)
	);
#else
	__asm__ volatile (
 8d6:	89 8d       	ldd	r24, Y+25	; 0x19
 8d8:	9a 8d       	ldd	r25, Y+26	; 0x1a

000008da <.L1^B1>:
 8da:	01 97       	sbiw	r24, 0x01	; 1
 8dc:	f1 f7       	brne	.-4      	; 0x8da <.L1^B1>
 8de:	9a 8f       	std	Y+26, r25	; 0x1a
 8e0:	89 8f       	std	Y+25, r24	; 0x19

000008e2 <.Loc.223>:
	...

000008e4 <.LBE21>:
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 8e4:	8f 89       	ldd	r24, Y+23	; 0x17
 8e6:	98 8d       	ldd	r25, Y+24	; 0x18
 8e8:	01 97       	sbiw	r24, 0x01	; 1
 8ea:	98 8f       	std	Y+24, r25	; 0x18
 8ec:	8f 8b       	std	Y+23, r24	; 0x17

000008ee <.L40>:
		while(__ticks)
 8ee:	8f 89       	ldd	r24, Y+23	; 0x17
 8f0:	98 8d       	ldd	r25, Y+24	; 0x18
 8f2:	00 97       	sbiw	r24, 0x00	; 0
 8f4:	61 f7       	brne	.-40     	; 0x8ce <.L41>

000008f6 <.Loc.226>:
		}
		return;
 8f6:	19 c0       	rjmp	.+50     	; 0x92a <.L42>

000008f8 <.L56>:
	}
	else
		__ticks = (uint16_t)__tmp;
 8f8:	6b 89       	ldd	r22, Y+19	; 0x13
 8fa:	7c 89       	ldd	r23, Y+20	; 0x14
 8fc:	8d 89       	ldd	r24, Y+21	; 0x15
 8fe:	9e 89       	ldd	r25, Y+22	; 0x16
 900:	0e 94 15 06 	call	0xc2a	; 0xc2a <__fixunssfsi>
 904:	69 ab       	std	Y+49, r22	; 0x31
 906:	7a ab       	std	Y+50, r23	; 0x32
 908:	8b ab       	std	Y+51, r24	; 0x33
 90a:	9c ab       	std	Y+52, r25	; 0x34
 90c:	e9 a9       	ldd	r30, Y+49	; 0x31
 90e:	fa a9       	ldd	r31, Y+50	; 0x32
 910:	f8 8f       	std	Y+24, r31	; 0x18
 912:	ef 8b       	std	Y+23, r30	; 0x17

00000914 <.L37>:
 914:	8f 89       	ldd	r24, Y+23	; 0x17
 916:	98 8d       	ldd	r25, Y+24	; 0x18
 918:	9c 8f       	std	Y+28, r25	; 0x1c
 91a:	8b 8f       	std	Y+27, r24	; 0x1b

0000091c <.LBB23>:
 91c:	8b 8d       	ldd	r24, Y+27	; 0x1b
 91e:	9c 8d       	ldd	r25, Y+28	; 0x1c

00000920 <.L1^B2>:
 920:	01 97       	sbiw	r24, 0x01	; 1
 922:	f1 f7       	brne	.-4      	; 0x920 <.L1^B2>
 924:	9c 8f       	std	Y+28, r25	; 0x1c
 926:	8b 8f       	std	Y+27, r24	; 0x1b

00000928 <.Loc.229>:
	...

0000092a <.L42>:
    _delay_ms(500);
    PORT_LED |= (1<<LED_2);         // LED 2 aan
 92a:	8e e2       	ldi	r24, 0x2E	; 46
 92c:	90 e0       	ldi	r25, 0x00	; 0
 92e:	dc 01       	movw	r26, r24
 930:	2c 91       	ld	r18, X
 932:	8e e2       	ldi	r24, 0x2E	; 46
 934:	90 e0       	ldi	r25, 0x00	; 0

00000936 <.Loc.231>:
 936:	20 61       	ori	r18, 0x10	; 16
 938:	fc 01       	movw	r30, r24
 93a:	20 83       	st	Z, r18

0000093c <.Loc.232>:
    PORT_LED &= ~(1<<LED_1);        // LED 1 uit
 93c:	8e e2       	ldi	r24, 0x2E	; 46
 93e:	90 e0       	ldi	r25, 0x00	; 0
 940:	dc 01       	movw	r26, r24
 942:	2c 91       	ld	r18, X

00000944 <.Loc.233>:
 944:	8e e2       	ldi	r24, 0x2E	; 46
 946:	90 e0       	ldi	r25, 0x00	; 0

00000948 <.Loc.234>:
 948:	2f 7d       	andi	r18, 0xDF	; 223
 94a:	fc 01       	movw	r30, r24
 94c:	20 83       	st	Z, r18

0000094e <.Loc.235>:
    PORT_buzzer &= ~(1<<buzzer);    // buzzer uit
 94e:	8e e2       	ldi	r24, 0x2E	; 46
 950:	90 e0       	ldi	r25, 0x00	; 0
 952:	dc 01       	movw	r26, r24
 954:	2c 91       	ld	r18, X

00000956 <.Loc.236>:
 956:	8e e2       	ldi	r24, 0x2E	; 46
 958:	90 e0       	ldi	r25, 0x00	; 0

0000095a <.Loc.237>:
 95a:	27 7f       	andi	r18, 0xF7	; 247
 95c:	fc 01       	movw	r30, r24
 95e:	20 83       	st	Z, r18
 960:	80 e0       	ldi	r24, 0x00	; 0
 962:	90 e0       	ldi	r25, 0x00	; 0
 964:	aa ef       	ldi	r26, 0xFA	; 250
 966:	b3 e4       	ldi	r27, 0x43	; 67
 968:	89 83       	std	Y+1, r24	; 0x01
 96a:	9a 83       	std	Y+2, r25	; 0x02
 96c:	ab 83       	std	Y+3, r26	; 0x03
 96e:	bc 83       	std	Y+4, r27	; 0x04

00000970 <.LBB25>:
	__tmp = ((F_CPU) / 4e3) * __ms;
 970:	20 e0       	ldi	r18, 0x00	; 0
 972:	30 e0       	ldi	r19, 0x00	; 0
 974:	4a e7       	ldi	r20, 0x7A	; 122
 976:	55 e4       	ldi	r21, 0x45	; 69
 978:	69 81       	ldd	r22, Y+1	; 0x01
 97a:	7a 81       	ldd	r23, Y+2	; 0x02
 97c:	8b 81       	ldd	r24, Y+3	; 0x03
 97e:	9c 81       	ldd	r25, Y+4	; 0x04
 980:	0e 94 96 06 	call	0xd2c	; 0xd2c <__mulsf3>
 984:	6d ab       	std	Y+53, r22	; 0x35
 986:	7e ab       	std	Y+54, r23	; 0x36
 988:	8f ab       	std	Y+55, r24	; 0x37
 98a:	98 af       	std	Y+56, r25	; 0x38
 98c:	8d a9       	ldd	r24, Y+53	; 0x35
 98e:	9e a9       	ldd	r25, Y+54	; 0x36
 990:	af a9       	ldd	r26, Y+55	; 0x37
 992:	b8 ad       	ldd	r27, Y+56	; 0x38
 994:	8d 83       	std	Y+5, r24	; 0x05
 996:	9e 83       	std	Y+6, r25	; 0x06
 998:	af 83       	std	Y+7, r26	; 0x07
 99a:	b8 87       	std	Y+8, r27	; 0x08

0000099c <.Loc.239>:
	if (__tmp < 1.0)
 99c:	20 e0       	ldi	r18, 0x00	; 0
 99e:	30 e0       	ldi	r19, 0x00	; 0
 9a0:	40 e8       	ldi	r20, 0x80	; 128
 9a2:	5f e3       	ldi	r21, 0x3F	; 63
 9a4:	6d 81       	ldd	r22, Y+5	; 0x05
 9a6:	7e 81       	ldd	r23, Y+6	; 0x06
 9a8:	8f 81       	ldd	r24, Y+7	; 0x07
 9aa:	98 85       	ldd	r25, Y+8	; 0x08
 9ac:	0e 94 10 06 	call	0xc20	; 0xc20 <__cmpsf2>
 9b0:	88 23       	and	r24, r24
 9b2:	2c f4       	brge	.+10     	; 0x9be <.L57>

000009b4 <.Loc.240>:
		__ticks = 1;
 9b4:	81 e0       	ldi	r24, 0x01	; 1
 9b6:	90 e0       	ldi	r25, 0x00	; 0
 9b8:	9a 87       	std	Y+10, r25	; 0x0a
 9ba:	89 87       	std	Y+9, r24	; 0x09
 9bc:	5c c0       	rjmp	.+184    	; 0xa76 <.L45>

000009be <.L57>:
	else if (__tmp > 65535)
 9be:	20 e0       	ldi	r18, 0x00	; 0
 9c0:	3f ef       	ldi	r19, 0xFF	; 255
 9c2:	4f e7       	ldi	r20, 0x7F	; 127
 9c4:	57 e4       	ldi	r21, 0x47	; 71
 9c6:	6d 81       	ldd	r22, Y+5	; 0x05
 9c8:	7e 81       	ldd	r23, Y+6	; 0x06
 9ca:	8f 81       	ldd	r24, Y+7	; 0x07
 9cc:	98 85       	ldd	r25, Y+8	; 0x08
 9ce:	0e 94 91 06 	call	0xd22	; 0xd22 <__gesf2>
 9d2:	88 23       	and	r24, r24
 9d4:	09 f0       	breq	.+2      	; 0x9d8 <L0^A>

000009d6 <L0^A>:
 9d6:	0c f4       	brge	.+2      	; 0x9da <.Loc.242>

000009d8 <L0^A>:
 9d8:	3c c0       	rjmp	.+120    	; 0xa52 <.L58>

000009da <.Loc.242>:
		__ticks = (uint16_t) (__ms * 10.0);
 9da:	20 e0       	ldi	r18, 0x00	; 0
 9dc:	30 e0       	ldi	r19, 0x00	; 0
 9de:	40 e2       	ldi	r20, 0x20	; 32
 9e0:	51 e4       	ldi	r21, 0x41	; 65
 9e2:	69 81       	ldd	r22, Y+1	; 0x01
 9e4:	7a 81       	ldd	r23, Y+2	; 0x02
 9e6:	8b 81       	ldd	r24, Y+3	; 0x03
 9e8:	9c 81       	ldd	r25, Y+4	; 0x04
 9ea:	0e 94 96 06 	call	0xd2c	; 0xd2c <__mulsf3>
 9ee:	69 af       	std	Y+57, r22	; 0x39
 9f0:	7a af       	std	Y+58, r23	; 0x3a
 9f2:	8b af       	std	Y+59, r24	; 0x3b
 9f4:	9c af       	std	Y+60, r25	; 0x3c
 9f6:	89 ad       	ldd	r24, Y+57	; 0x39
 9f8:	9a ad       	ldd	r25, Y+58	; 0x3a
 9fa:	ab ad       	ldd	r26, Y+59	; 0x3b
 9fc:	bc ad       	ldd	r27, Y+60	; 0x3c
 9fe:	8d 8f       	std	Y+29, r24	; 0x1d
 a00:	9e 8f       	std	Y+30, r25	; 0x1e
 a02:	af 8f       	std	Y+31, r26	; 0x1f
 a04:	b8 a3       	std	Y+32, r27	; 0x20

00000a06 <.Loc.243>:
 a06:	6d 8d       	ldd	r22, Y+29	; 0x1d
 a08:	7e 8d       	ldd	r23, Y+30	; 0x1e
 a0a:	8f 8d       	ldd	r24, Y+31	; 0x1f
 a0c:	98 a1       	ldd	r25, Y+32	; 0x20
 a0e:	0e 94 15 06 	call	0xc2a	; 0xc2a <__fixunssfsi>
 a12:	21 96       	adiw	r28, 0x01	; 1
 a14:	6c af       	std	Y+60, r22	; 0x3c
 a16:	7d af       	std	Y+61, r23	; 0x3d
 a18:	8e af       	std	Y+62, r24	; 0x3e
 a1a:	9f af       	std	Y+63, r25	; 0x3f
 a1c:	21 97       	sbiw	r28, 0x01	; 1
 a1e:	ad ad       	ldd	r26, Y+61	; 0x3d
 a20:	be ad       	ldd	r27, Y+62	; 0x3e
 a22:	ba 87       	std	Y+10, r27	; 0x0a
 a24:	a9 87       	std	Y+9, r26	; 0x09

00000a26 <.Loc.244>:
		while(__ticks)
 a26:	10 c0       	rjmp	.+32     	; 0xa48 <.L48>

00000a28 <.L49>:
 a28:	80 e9       	ldi	r24, 0x90	; 144
 a2a:	91 e0       	ldi	r25, 0x01	; 1
 a2c:	9c 87       	std	Y+12, r25	; 0x0c
 a2e:	8b 87       	std	Y+11, r24	; 0x0b

00000a30 <.LBB27>:
 a30:	8b 85       	ldd	r24, Y+11	; 0x0b
 a32:	9c 85       	ldd	r25, Y+12	; 0x0c

00000a34 <.L1^B3>:
 a34:	01 97       	sbiw	r24, 0x01	; 1
 a36:	f1 f7       	brne	.-4      	; 0xa34 <.L1^B3>
 a38:	9c 87       	std	Y+12, r25	; 0x0c
 a3a:	8b 87       	std	Y+11, r24	; 0x0b

00000a3c <.Loc.246>:
	...

00000a3e <.LBE27>:
			__ticks --;
 a3e:	89 85       	ldd	r24, Y+9	; 0x09
 a40:	9a 85       	ldd	r25, Y+10	; 0x0a
 a42:	01 97       	sbiw	r24, 0x01	; 1
 a44:	9a 87       	std	Y+10, r25	; 0x0a
 a46:	89 87       	std	Y+9, r24	; 0x09

00000a48 <.L48>:
		while(__ticks)
 a48:	89 85       	ldd	r24, Y+9	; 0x09
 a4a:	9a 85       	ldd	r25, Y+10	; 0x0a
 a4c:	00 97       	sbiw	r24, 0x00	; 0
 a4e:	61 f7       	brne	.-40     	; 0xa28 <.L49>

00000a50 <.Loc.249>:
		return;
 a50:	1d c0       	rjmp	.+58     	; 0xa8c <.L50>

00000a52 <.L58>:
		__ticks = (uint16_t)__tmp;
 a52:	6d 81       	ldd	r22, Y+5	; 0x05
 a54:	7e 81       	ldd	r23, Y+6	; 0x06
 a56:	8f 81       	ldd	r24, Y+7	; 0x07
 a58:	98 85       	ldd	r25, Y+8	; 0x08
 a5a:	0e 94 15 06 	call	0xc2a	; 0xc2a <__fixunssfsi>
 a5e:	25 96       	adiw	r28, 0x05	; 5
 a60:	6c af       	std	Y+60, r22	; 0x3c
 a62:	7d af       	std	Y+61, r23	; 0x3d
 a64:	8e af       	std	Y+62, r24	; 0x3e
 a66:	9f af       	std	Y+63, r25	; 0x3f
 a68:	25 97       	sbiw	r28, 0x05	; 5
 a6a:	23 96       	adiw	r28, 0x03	; 3
 a6c:	ee ad       	ldd	r30, Y+62	; 0x3e
 a6e:	ff ad       	ldd	r31, Y+63	; 0x3f
 a70:	23 97       	sbiw	r28, 0x03	; 3
 a72:	fa 87       	std	Y+10, r31	; 0x0a
 a74:	e9 87       	std	Y+9, r30	; 0x09

00000a76 <.L45>:
 a76:	89 85       	ldd	r24, Y+9	; 0x09
 a78:	9a 85       	ldd	r25, Y+10	; 0x0a
 a7a:	9e 87       	std	Y+14, r25	; 0x0e
 a7c:	8d 87       	std	Y+13, r24	; 0x0d

00000a7e <.LBB29>:
 a7e:	8d 85       	ldd	r24, Y+13	; 0x0d
 a80:	9e 85       	ldd	r25, Y+14	; 0x0e

00000a82 <.L1^B4>:
 a82:	01 97       	sbiw	r24, 0x01	; 1
 a84:	f1 f7       	brne	.-4      	; 0xa82 <.L1^B4>
 a86:	9e 87       	std	Y+14, r25	; 0x0e
 a88:	8d 87       	std	Y+13, r24	; 0x0d

00000a8a <.Loc.252>:
	...

00000a8c <.L50>:
    _delay_ms(500);
}
 a8c:	00 00       	nop
 a8e:	cc 5b       	subi	r28, 0xBC	; 188
 a90:	df 4f       	sbci	r29, 0xFF	; 255
 a92:	0f b6       	in	r0, 0x3f	; 63
 a94:	f8 94       	cli
 a96:	de bf       	out	0x3e, r29	; 62
 a98:	0f be       	out	0x3f, r0	; 63
 a9a:	cd bf       	out	0x3d, r28	; 61
 a9c:	df 91       	pop	r29
 a9e:	cf 91       	pop	r28
 aa0:	08 95       	ret

00000aa2 <h_bridgeR_set_percentage>:

void h_bridgeR_set_percentage(signed char percentage)
{
 aa2:	0f 93       	push	r16
 aa4:	1f 93       	push	r17
 aa6:	cf 93       	push	r28
 aa8:	df 93       	push	r29
 aaa:	00 d0       	rcall	.+0      	; 0xaac <L0^A>

00000aac <L0^A>:
 aac:	0f 92       	push	r0
 aae:	0f 92       	push	r0
 ab0:	cd b7       	in	r28, 0x3d	; 61
 ab2:	de b7       	in	r29, 0x3e	; 62
 ab4:	89 83       	std	Y+1, r24	; 0x01

00000ab6 <.Loc.255>:
	if (percentage >= 0 && percentage <= 100)
 ab6:	89 81       	ldd	r24, Y+1	; 0x01
 ab8:	88 23       	and	r24, r24
 aba:	3c f1       	brlt	.+78     	; 0xb0a <.L61>

00000abc <.Loc.256>:
 abc:	89 81       	ldd	r24, Y+1	; 0x01
 abe:	84 36       	cpi	r24, 0x64	; 100
 ac0:	09 f0       	breq	.+2      	; 0xac4 <.Loc.257>

00000ac2 <L0^A>:
 ac2:	1c f5       	brge	.+70     	; 0xb0a <.L61>

00000ac4 <.Loc.257>:
	{
			OCR1A = (65536*percentage)/100;
 ac4:	89 81       	ldd	r24, Y+1	; 0x01
 ac6:	08 2e       	mov	r0, r24
 ac8:	00 0c       	add	r0, r0
 aca:	99 0b       	sbc	r25, r25
 acc:	aa 0b       	sbc	r26, r26
 ace:	bb 0b       	sbc	r27, r27
 ad0:	ac 01       	movw	r20, r24
 ad2:	33 27       	eor	r19, r19
 ad4:	22 27       	eor	r18, r18
 ad6:	2a 83       	std	Y+2, r18	; 0x02
 ad8:	3b 83       	std	Y+3, r19	; 0x03
 ada:	4c 83       	std	Y+4, r20	; 0x04
 adc:	5d 83       	std	Y+5, r21	; 0x05

00000ade <.Loc.258>:
 ade:	04 e6       	ldi	r16, 0x64	; 100
 ae0:	10 e0       	ldi	r17, 0x00	; 0
 ae2:	20 e0       	ldi	r18, 0x00	; 0
 ae4:	30 e0       	ldi	r19, 0x00	; 0
 ae6:	6a 81       	ldd	r22, Y+2	; 0x02
 ae8:	7b 81       	ldd	r23, Y+3	; 0x03
 aea:	8c 81       	ldd	r24, Y+4	; 0x04
 aec:	9d 81       	ldd	r25, Y+5	; 0x05
 aee:	a9 01       	movw	r20, r18
 af0:	98 01       	movw	r18, r16
 af2:	0e 94 cf 05 	call	0xb9e	; 0xb9e <__divmodsi4>
 af6:	da 01       	movw	r26, r20
 af8:	c9 01       	movw	r24, r18
 afa:	ac 01       	movw	r20, r24
 afc:	bd 01       	movw	r22, r26

00000afe <.Loc.259>:
 afe:	88 e8       	ldi	r24, 0x88	; 136
 b00:	90 e0       	ldi	r25, 0x00	; 0

00000b02 <.Loc.260>:
 b02:	9a 01       	movw	r18, r20
 b04:	fc 01       	movw	r30, r24
 b06:	31 83       	std	Z+1, r19	; 0x01
 b08:	20 83       	st	Z, r18

00000b0a <.L61>:
	}
}
 b0a:	00 00       	nop
 b0c:	0f 90       	pop	r0
 b0e:	0f 90       	pop	r0
 b10:	0f 90       	pop	r0
 b12:	0f 90       	pop	r0
 b14:	0f 90       	pop	r0
 b16:	df 91       	pop	r29
 b18:	cf 91       	pop	r28
 b1a:	1f 91       	pop	r17
 b1c:	0f 91       	pop	r16
 b1e:	08 95       	ret

00000b20 <h_bridgeL_set_percentage>:

void h_bridgeL_set_percentage(signed char percentage)
{
 b20:	0f 93       	push	r16
 b22:	1f 93       	push	r17
 b24:	cf 93       	push	r28
 b26:	df 93       	push	r29
 b28:	00 d0       	rcall	.+0      	; 0xb2a <L0^A>

00000b2a <L0^A>:
 b2a:	0f 92       	push	r0
 b2c:	0f 92       	push	r0
 b2e:	cd b7       	in	r28, 0x3d	; 61
 b30:	de b7       	in	r29, 0x3e	; 62
 b32:	89 83       	std	Y+1, r24	; 0x01

00000b34 <.Loc.263>:
	if (percentage >= 0 && percentage <= 100)
 b34:	89 81       	ldd	r24, Y+1	; 0x01
 b36:	88 23       	and	r24, r24
 b38:	3c f1       	brlt	.+78     	; 0xb88 <.L64>

00000b3a <.Loc.264>:
 b3a:	89 81       	ldd	r24, Y+1	; 0x01
 b3c:	84 36       	cpi	r24, 0x64	; 100
 b3e:	09 f0       	breq	.+2      	; 0xb42 <.Loc.265>

00000b40 <L0^A>:
 b40:	1c f5       	brge	.+70     	; 0xb88 <.L64>

00000b42 <.Loc.265>:
	{
			OCR3A = (65536*percentage)/100;
 b42:	89 81       	ldd	r24, Y+1	; 0x01
 b44:	08 2e       	mov	r0, r24
 b46:	00 0c       	add	r0, r0
 b48:	99 0b       	sbc	r25, r25
 b4a:	aa 0b       	sbc	r26, r26
 b4c:	bb 0b       	sbc	r27, r27
 b4e:	ac 01       	movw	r20, r24
 b50:	33 27       	eor	r19, r19
 b52:	22 27       	eor	r18, r18
 b54:	2a 83       	std	Y+2, r18	; 0x02
 b56:	3b 83       	std	Y+3, r19	; 0x03
 b58:	4c 83       	std	Y+4, r20	; 0x04
 b5a:	5d 83       	std	Y+5, r21	; 0x05

00000b5c <.Loc.266>:
 b5c:	04 e6       	ldi	r16, 0x64	; 100
 b5e:	10 e0       	ldi	r17, 0x00	; 0
 b60:	20 e0       	ldi	r18, 0x00	; 0
 b62:	30 e0       	ldi	r19, 0x00	; 0
 b64:	6a 81       	ldd	r22, Y+2	; 0x02
 b66:	7b 81       	ldd	r23, Y+3	; 0x03
 b68:	8c 81       	ldd	r24, Y+4	; 0x04
 b6a:	9d 81       	ldd	r25, Y+5	; 0x05
 b6c:	a9 01       	movw	r20, r18
 b6e:	98 01       	movw	r18, r16
 b70:	0e 94 cf 05 	call	0xb9e	; 0xb9e <__divmodsi4>
 b74:	da 01       	movw	r26, r20
 b76:	c9 01       	movw	r24, r18
 b78:	ac 01       	movw	r20, r24
 b7a:	bd 01       	movw	r22, r26

00000b7c <.Loc.267>:
 b7c:	88 e9       	ldi	r24, 0x98	; 152
 b7e:	90 e0       	ldi	r25, 0x00	; 0

00000b80 <.Loc.268>:
 b80:	9a 01       	movw	r18, r20
 b82:	fc 01       	movw	r30, r24
 b84:	31 83       	std	Z+1, r19	; 0x01
 b86:	20 83       	st	Z, r18

00000b88 <.L64>:
	}
}
 b88:	00 00       	nop
 b8a:	0f 90       	pop	r0
 b8c:	0f 90       	pop	r0
 b8e:	0f 90       	pop	r0
 b90:	0f 90       	pop	r0
 b92:	0f 90       	pop	r0
 b94:	df 91       	pop	r29
 b96:	cf 91       	pop	r28
 b98:	1f 91       	pop	r17
 b9a:	0f 91       	pop	r16
 b9c:	08 95       	ret

00000b9e <__divmodsi4>:
 b9e:	05 2e       	mov	r0, r21

00000ba0 <.Loc.1>:
 ba0:	97 fb       	bst	r25, 7

00000ba2 <.Loc.2>:
 ba2:	1e f4       	brtc	.+6      	; 0xbaa <.L^B1>

00000ba4 <.Loc.3>:
 ba4:	00 94       	com	r0

00000ba6 <.Loc.4>:
 ba6:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__negsi2>

00000baa <.L^B1>:
 baa:	57 fd       	sbrc	r21, 7

00000bac <.Loc.6>:
 bac:	07 d0       	rcall	.+14     	; 0xbbc <__divmodsi4_neg2>

00000bae <.Loc.7>:
 bae:	0e 94 ee 05 	call	0xbdc	; 0xbdc <__udivmodsi4>

00000bb2 <.Loc.8>:
 bb2:	07 fc       	sbrc	r0, 7

00000bb4 <.Loc.9>:
 bb4:	03 d0       	rcall	.+6      	; 0xbbc <__divmodsi4_neg2>

00000bb6 <.Loc.10>:
 bb6:	4e f4       	brtc	.+18     	; 0xbca <__divmodsi4_exit>

00000bb8 <.Loc.11>:
 bb8:	0c 94 e6 05 	jmp	0xbcc	; 0xbcc <__negsi2>

00000bbc <__divmodsi4_neg2>:
 bbc:	50 95       	com	r21

00000bbe <.Loc.13>:
 bbe:	40 95       	com	r20

00000bc0 <.Loc.14>:
 bc0:	30 95       	com	r19

00000bc2 <.Loc.15>:
 bc2:	21 95       	neg	r18

00000bc4 <.Loc.16>:
 bc4:	3f 4f       	sbci	r19, 0xFF	; 255

00000bc6 <.Loc.17>:
 bc6:	4f 4f       	sbci	r20, 0xFF	; 255

00000bc8 <.Loc.18>:
 bc8:	5f 4f       	sbci	r21, 0xFF	; 255

00000bca <__divmodsi4_exit>:
 bca:	08 95       	ret

00000bcc <__negsi2>:
 bcc:	90 95       	com	r25
 bce:	80 95       	com	r24
 bd0:	70 95       	com	r23
 bd2:	61 95       	neg	r22
 bd4:	7f 4f       	sbci	r23, 0xFF	; 255
 bd6:	8f 4f       	sbci	r24, 0xFF	; 255
 bd8:	9f 4f       	sbci	r25, 0xFF	; 255

00000bda <.Loc.1>:
 bda:	08 95       	ret

00000bdc <__udivmodsi4>:
 bdc:	a1 e2       	ldi	r26, 0x21	; 33

00000bde <.Loc.1>:
 bde:	1a 2e       	mov	r1, r26

00000be0 <.Loc.2>:
 be0:	aa 1b       	sub	r26, r26

00000be2 <.Loc.3>:
 be2:	bb 1b       	sub	r27, r27

00000be4 <.Loc.4>:
 be4:	fd 01       	movw	r30, r26

00000be6 <.Loc.5>:
 be6:	0d c0       	rjmp	.+26     	; 0xc02 <__udivmodsi4_ep>

00000be8 <__udivmodsi4_loop>:
 be8:	aa 1f       	adc	r26, r26

00000bea <.Loc.7>:
 bea:	bb 1f       	adc	r27, r27

00000bec <.Loc.8>:
 bec:	ee 1f       	adc	r30, r30

00000bee <.Loc.9>:
 bee:	ff 1f       	adc	r31, r31

00000bf0 <.Loc.10>:
 bf0:	a2 17       	cp	r26, r18

00000bf2 <.Loc.11>:
 bf2:	b3 07       	cpc	r27, r19

00000bf4 <.Loc.12>:
 bf4:	e4 07       	cpc	r30, r20

00000bf6 <.Loc.13>:
 bf6:	f5 07       	cpc	r31, r21

00000bf8 <.Loc.14>:
 bf8:	20 f0       	brcs	.+8      	; 0xc02 <__udivmodsi4_ep>

00000bfa <.Loc.15>:
 bfa:	a2 1b       	sub	r26, r18

00000bfc <.Loc.16>:
 bfc:	b3 0b       	sbc	r27, r19

00000bfe <.Loc.17>:
 bfe:	e4 0b       	sbc	r30, r20

00000c00 <.Loc.18>:
 c00:	f5 0b       	sbc	r31, r21

00000c02 <__udivmodsi4_ep>:
 c02:	66 1f       	adc	r22, r22

00000c04 <.Loc.20>:
 c04:	77 1f       	adc	r23, r23

00000c06 <.Loc.21>:
 c06:	88 1f       	adc	r24, r24

00000c08 <.Loc.22>:
 c08:	99 1f       	adc	r25, r25

00000c0a <.Loc.23>:
 c0a:	1a 94       	dec	r1

00000c0c <.Loc.24>:
 c0c:	69 f7       	brne	.-38     	; 0xbe8 <__udivmodsi4_loop>

00000c0e <.Loc.25>:
 c0e:	60 95       	com	r22

00000c10 <.Loc.26>:
 c10:	70 95       	com	r23

00000c12 <.Loc.27>:
 c12:	80 95       	com	r24

00000c14 <.Loc.28>:
 c14:	90 95       	com	r25

00000c16 <.Loc.29>:
 c16:	9b 01       	movw	r18, r22

00000c18 <.Loc.30>:
 c18:	ac 01       	movw	r20, r24

00000c1a <.Loc.31>:
 c1a:	bd 01       	movw	r22, r26

00000c1c <.Loc.32>:
 c1c:	cf 01       	movw	r24, r30

00000c1e <.Loc.33>:
 c1e:	08 95       	ret

00000c20 <__cmpsf2>:
 c20:	0e 94 44 06 	call	0xc88	; 0xc88 <__fp_cmp>
 c24:	08 f4       	brcc	.+2      	; 0xc28 <.L1^B1>
 c26:	81 e0       	ldi	r24, 0x01	; 1

00000c28 <.L1^B1>:
 c28:	08 95       	ret

00000c2a <__fixunssfsi>:
 c2a:	0e 94 70 06 	call	0xce0	; 0xce0 <__fp_splitA>
 c2e:	88 f0       	brcs	.+34     	; 0xc52 <.L_err>
 c30:	9f 57       	subi	r25, 0x7F	; 127
 c32:	98 f0       	brcs	.+38     	; 0xc5a <.L_zr>
 c34:	b9 2f       	mov	r27, r25
 c36:	99 27       	eor	r25, r25
 c38:	b7 51       	subi	r27, 0x17	; 23
 c3a:	b0 f0       	brcs	.+44     	; 0xc68 <.L4^B1>
 c3c:	e1 f0       	breq	.+56     	; 0xc76 <.L_sign>

00000c3e <.L1^B1>:
 c3e:	66 0f       	add	r22, r22
 c40:	77 1f       	adc	r23, r23
 c42:	88 1f       	adc	r24, r24
 c44:	99 1f       	adc	r25, r25
 c46:	1a f0       	brmi	.+6      	; 0xc4e <.L2^B1>
 c48:	ba 95       	dec	r27
 c4a:	c9 f7       	brne	.-14     	; 0xc3e <.L1^B1>
 c4c:	14 c0       	rjmp	.+40     	; 0xc76 <.L_sign>

00000c4e <.L2^B1>:
 c4e:	b1 30       	cpi	r27, 0x01	; 1
 c50:	91 f0       	breq	.+36     	; 0xc76 <.L_sign>

00000c52 <.L_err>:
 c52:	0e 94 8a 06 	call	0xd14	; 0xd14 <__fp_zero>
 c56:	b1 e0       	ldi	r27, 0x01	; 1
 c58:	08 95       	ret

00000c5a <.L_zr>:
 c5a:	0c 94 8a 06 	jmp	0xd14	; 0xd14 <__fp_zero>

00000c5e <.L3^B1>:
 c5e:	67 2f       	mov	r22, r23
 c60:	78 2f       	mov	r23, r24
 c62:	88 27       	eor	r24, r24
 c64:	b8 5f       	subi	r27, 0xF8	; 248
 c66:	39 f0       	breq	.+14     	; 0xc76 <.L_sign>

00000c68 <.L4^B1>:
 c68:	b9 3f       	cpi	r27, 0xF9	; 249
 c6a:	cc f3       	brlt	.-14     	; 0xc5e <.L3^B1>

00000c6c <.L5^B1>:
 c6c:	86 95       	lsr	r24
 c6e:	77 95       	ror	r23
 c70:	67 95       	ror	r22
 c72:	b3 95       	inc	r27
 c74:	d9 f7       	brne	.-10     	; 0xc6c <.L5^B1>

00000c76 <.L_sign>:
 c76:	3e f4       	brtc	.+14     	; 0xc86 <.L6^B1>
 c78:	90 95       	com	r25
 c7a:	80 95       	com	r24
 c7c:	70 95       	com	r23
 c7e:	61 95       	neg	r22
 c80:	7f 4f       	sbci	r23, 0xFF	; 255
 c82:	8f 4f       	sbci	r24, 0xFF	; 255
 c84:	9f 4f       	sbci	r25, 0xFF	; 255

00000c86 <.L6^B1>:
 c86:	08 95       	ret

00000c88 <__fp_cmp>:
 c88:	99 0f       	add	r25, r25
 c8a:	00 08       	sbc	r0, r0
 c8c:	55 0f       	add	r21, r21
 c8e:	aa 0b       	sbc	r26, r26
 c90:	e0 e8       	ldi	r30, 0x80	; 128
 c92:	fe ef       	ldi	r31, 0xFE	; 254
 c94:	16 16       	cp	r1, r22
 c96:	17 06       	cpc	r1, r23
 c98:	e8 07       	cpc	r30, r24
 c9a:	f9 07       	cpc	r31, r25
 c9c:	c0 f0       	brcs	.+48     	; 0xcce <.L9^B1>
 c9e:	12 16       	cp	r1, r18
 ca0:	13 06       	cpc	r1, r19
 ca2:	e4 07       	cpc	r30, r20
 ca4:	f5 07       	cpc	r31, r21
 ca6:	98 f0       	brcs	.+38     	; 0xcce <.L9^B1>
 ca8:	62 1b       	sub	r22, r18
 caa:	73 0b       	sbc	r23, r19
 cac:	84 0b       	sbc	r24, r20
 cae:	95 0b       	sbc	r25, r21
 cb0:	39 f4       	brne	.+14     	; 0xcc0 <.L1^B1>
 cb2:	0a 26       	eor	r0, r26
 cb4:	61 f0       	breq	.+24     	; 0xcce <.L9^B1>
 cb6:	23 2b       	or	r18, r19
 cb8:	24 2b       	or	r18, r20
 cba:	25 2b       	or	r18, r21
 cbc:	21 f4       	brne	.+8      	; 0xcc6 <.L2^B1>
 cbe:	08 95       	ret

00000cc0 <.L1^B1>:
 cc0:	0a 26       	eor	r0, r26
 cc2:	09 f4       	brne	.+2      	; 0xcc6 <.L2^B1>
 cc4:	a1 40       	sbci	r26, 0x01	; 1

00000cc6 <.L2^B1>:
 cc6:	a6 95       	lsr	r26
 cc8:	8f ef       	ldi	r24, 0xFF	; 255
 cca:	81 1d       	adc	r24, r1
 ccc:	81 1d       	adc	r24, r1

00000cce <.L9^B1>:
 cce:	08 95       	ret

00000cd0 <__fp_split3>:
 cd0:	57 fd       	sbrc	r21, 7
 cd2:	90 58       	subi	r25, 0x80	; 128
 cd4:	44 0f       	add	r20, r20
 cd6:	55 1f       	adc	r21, r21
 cd8:	59 f0       	breq	.+22     	; 0xcf0 <.L4^B1>
 cda:	5f 3f       	cpi	r21, 0xFF	; 255
 cdc:	71 f0       	breq	.+28     	; 0xcfa <.L5^B1>

00000cde <.L1^B1>:
 cde:	47 95       	ror	r20

00000ce0 <__fp_splitA>:
 ce0:	88 0f       	add	r24, r24
 ce2:	97 fb       	bst	r25, 7
 ce4:	99 1f       	adc	r25, r25
 ce6:	61 f0       	breq	.+24     	; 0xd00 <.L6^B1>
 ce8:	9f 3f       	cpi	r25, 0xFF	; 255
 cea:	79 f0       	breq	.+30     	; 0xd0a <.L7^B1>

00000cec <.L3^B1>:
 cec:	87 95       	ror	r24
 cee:	08 95       	ret

00000cf0 <.L4^B1>:
 cf0:	12 16       	cp	r1, r18
 cf2:	13 06       	cpc	r1, r19
 cf4:	14 06       	cpc	r1, r20
 cf6:	55 1f       	adc	r21, r21
 cf8:	f2 cf       	rjmp	.-28     	; 0xcde <.L1^B1>

00000cfa <.L5^B1>:
 cfa:	46 95       	lsr	r20
 cfc:	f1 df       	rcall	.-30     	; 0xce0 <__fp_splitA>
 cfe:	08 c0       	rjmp	.+16     	; 0xd10 <.L8^B1>

00000d00 <.L6^B1>:
 d00:	16 16       	cp	r1, r22
 d02:	17 06       	cpc	r1, r23
 d04:	18 06       	cpc	r1, r24
 d06:	99 1f       	adc	r25, r25
 d08:	f1 cf       	rjmp	.-30     	; 0xcec <.L3^B1>

00000d0a <.L7^B1>:
 d0a:	86 95       	lsr	r24
 d0c:	71 05       	cpc	r23, r1
 d0e:	61 05       	cpc	r22, r1

00000d10 <.L8^B1>:
 d10:	08 94       	sec
 d12:	08 95       	ret

00000d14 <__fp_zero>:
 d14:	e8 94       	clt

00000d16 <__fp_szero>:
 d16:	bb 27       	eor	r27, r27
 d18:	66 27       	eor	r22, r22
 d1a:	77 27       	eor	r23, r23
 d1c:	cb 01       	movw	r24, r22
 d1e:	97 f9       	bld	r25, 7
 d20:	08 95       	ret

00000d22 <__gesf2>:
 d22:	0e 94 44 06 	call	0xc88	; 0xc88 <__fp_cmp>
 d26:	08 f4       	brcc	.+2      	; 0xd2a <.L1^B1>
 d28:	8f ef       	ldi	r24, 0xFF	; 255

00000d2a <.L1^B1>:
 d2a:	08 95       	ret

00000d2c <__mulsf3>:
 d2c:	0e 94 a9 06 	call	0xd52	; 0xd52 <__mulsf3x>
 d30:	0c 94 1a 07 	jmp	0xe34	; 0xe34 <__fp_round>

00000d34 <.L^B1>:
 d34:	0e 94 0c 07 	call	0xe18	; 0xe18 <__fp_pscA>
 d38:	38 f0       	brcs	.+14     	; 0xd48 <.L1^B1>
 d3a:	0e 94 13 07 	call	0xe26	; 0xe26 <__fp_pscB>
 d3e:	20 f0       	brcs	.+8      	; 0xd48 <.L1^B1>
 d40:	95 23       	and	r25, r21
 d42:	11 f0       	breq	.+4      	; 0xd48 <.L1^B1>
 d44:	0c 94 03 07 	jmp	0xe06	; 0xe06 <__fp_inf>

00000d48 <.L1^B1>:
 d48:	0c 94 09 07 	jmp	0xe12	; 0xe12 <__fp_nan>

00000d4c <.L2^B1>:
 d4c:	11 24       	eor	r1, r1
 d4e:	0c 94 8b 06 	jmp	0xd16	; 0xd16 <__fp_szero>

00000d52 <__mulsf3x>:
 d52:	0e 94 68 06 	call	0xcd0	; 0xcd0 <__fp_split3>
 d56:	70 f3       	brcs	.-36     	; 0xd34 <.L^B1>

00000d58 <__mulsf3_pse>:
 d58:	95 9f       	mul	r25, r21
 d5a:	c1 f3       	breq	.-16     	; 0xd4c <.L2^B1>
 d5c:	95 0f       	add	r25, r21
 d5e:	50 e0       	ldi	r21, 0x00	; 0
 d60:	55 1f       	adc	r21, r21
 d62:	62 9f       	mul	r22, r18
 d64:	f0 01       	movw	r30, r0
 d66:	72 9f       	mul	r23, r18
 d68:	bb 27       	eor	r27, r27
 d6a:	f0 0d       	add	r31, r0
 d6c:	b1 1d       	adc	r27, r1
 d6e:	63 9f       	mul	r22, r19
 d70:	aa 27       	eor	r26, r26
 d72:	f0 0d       	add	r31, r0
 d74:	b1 1d       	adc	r27, r1
 d76:	aa 1f       	adc	r26, r26
 d78:	64 9f       	mul	r22, r20
 d7a:	66 27       	eor	r22, r22
 d7c:	b0 0d       	add	r27, r0
 d7e:	a1 1d       	adc	r26, r1
 d80:	66 1f       	adc	r22, r22
 d82:	82 9f       	mul	r24, r18
 d84:	22 27       	eor	r18, r18
 d86:	b0 0d       	add	r27, r0
 d88:	a1 1d       	adc	r26, r1
 d8a:	62 1f       	adc	r22, r18
 d8c:	73 9f       	mul	r23, r19
 d8e:	b0 0d       	add	r27, r0
 d90:	a1 1d       	adc	r26, r1
 d92:	62 1f       	adc	r22, r18
 d94:	83 9f       	mul	r24, r19
 d96:	a0 0d       	add	r26, r0
 d98:	61 1d       	adc	r22, r1
 d9a:	22 1f       	adc	r18, r18
 d9c:	74 9f       	mul	r23, r20
 d9e:	33 27       	eor	r19, r19
 da0:	a0 0d       	add	r26, r0
 da2:	61 1d       	adc	r22, r1
 da4:	23 1f       	adc	r18, r19
 da6:	84 9f       	mul	r24, r20
 da8:	60 0d       	add	r22, r0
 daa:	21 1d       	adc	r18, r1
 dac:	82 2f       	mov	r24, r18
 dae:	76 2f       	mov	r23, r22
 db0:	6a 2f       	mov	r22, r26
 db2:	11 24       	eor	r1, r1
 db4:	9f 57       	subi	r25, 0x7F	; 127
 db6:	50 40       	sbci	r21, 0x00	; 0
 db8:	9a f0       	brmi	.+38     	; 0xde0 <.L13^B1>
 dba:	f1 f0       	breq	.+60     	; 0xdf8 <.L15^B1>

00000dbc <.L10^B1>:
 dbc:	88 23       	and	r24, r24
 dbe:	4a f0       	brmi	.+18     	; 0xdd2 <.L11^B1>
 dc0:	ee 0f       	add	r30, r30
 dc2:	ff 1f       	adc	r31, r31
 dc4:	bb 1f       	adc	r27, r27
 dc6:	66 1f       	adc	r22, r22
 dc8:	77 1f       	adc	r23, r23
 dca:	88 1f       	adc	r24, r24
 dcc:	91 50       	subi	r25, 0x01	; 1
 dce:	50 40       	sbci	r21, 0x00	; 0
 dd0:	a9 f7       	brne	.-22     	; 0xdbc <.L10^B1>

00000dd2 <.L11^B1>:
 dd2:	9e 3f       	cpi	r25, 0xFE	; 254
 dd4:	51 05       	cpc	r21, r1
 dd6:	80 f0       	brcs	.+32     	; 0xdf8 <.L15^B1>
 dd8:	0c 94 03 07 	jmp	0xe06	; 0xe06 <__fp_inf>

00000ddc <.L12^B1>:
 ddc:	0c 94 8b 06 	jmp	0xd16	; 0xd16 <__fp_szero>

00000de0 <.L13^B1>:
 de0:	5f 3f       	cpi	r21, 0xFF	; 255
 de2:	e4 f3       	brlt	.-8      	; 0xddc <.L12^B1>
 de4:	98 3e       	cpi	r25, 0xE8	; 232
 de6:	d4 f3       	brlt	.-12     	; 0xddc <.L12^B1>

00000de8 <.L14^B1>:
 de8:	86 95       	lsr	r24
 dea:	77 95       	ror	r23
 dec:	67 95       	ror	r22
 dee:	b7 95       	ror	r27
 df0:	f7 95       	ror	r31
 df2:	e7 95       	ror	r30
 df4:	9f 5f       	subi	r25, 0xFF	; 255
 df6:	c1 f7       	brne	.-16     	; 0xde8 <.L14^B1>

00000df8 <.L15^B1>:
 df8:	fe 2b       	or	r31, r30
 dfa:	88 0f       	add	r24, r24
 dfc:	91 1d       	adc	r25, r1
 dfe:	96 95       	lsr	r25
 e00:	87 95       	ror	r24
 e02:	97 f9       	bld	r25, 7
 e04:	08 95       	ret

00000e06 <__fp_inf>:
 e06:	97 f9       	bld	r25, 7
 e08:	9f 67       	ori	r25, 0x7F	; 127
 e0a:	80 e8       	ldi	r24, 0x80	; 128
 e0c:	70 e0       	ldi	r23, 0x00	; 0
 e0e:	60 e0       	ldi	r22, 0x00	; 0
 e10:	08 95       	ret

00000e12 <__fp_nan>:
 e12:	9f ef       	ldi	r25, 0xFF	; 255
 e14:	80 ec       	ldi	r24, 0xC0	; 192
 e16:	08 95       	ret

00000e18 <__fp_pscA>:
 e18:	00 24       	eor	r0, r0
 e1a:	0a 94       	dec	r0
 e1c:	16 16       	cp	r1, r22
 e1e:	17 06       	cpc	r1, r23
 e20:	18 06       	cpc	r1, r24
 e22:	09 06       	cpc	r0, r25
 e24:	08 95       	ret

00000e26 <__fp_pscB>:
 e26:	00 24       	eor	r0, r0
 e28:	0a 94       	dec	r0
 e2a:	12 16       	cp	r1, r18
 e2c:	13 06       	cpc	r1, r19
 e2e:	14 06       	cpc	r1, r20
 e30:	05 06       	cpc	r0, r21
 e32:	08 95       	ret

00000e34 <__fp_round>:
 e34:	09 2e       	mov	r0, r25
 e36:	03 94       	inc	r0
 e38:	00 0c       	add	r0, r0
 e3a:	11 f4       	brne	.+4      	; 0xe40 <.L1^B1>
 e3c:	88 23       	and	r24, r24
 e3e:	52 f0       	brmi	.+20     	; 0xe54 <.L3^B1>

00000e40 <.L1^B1>:
 e40:	bb 0f       	add	r27, r27
 e42:	40 f4       	brcc	.+16     	; 0xe54 <.L3^B1>
 e44:	bf 2b       	or	r27, r31
 e46:	11 f4       	brne	.+4      	; 0xe4c <.L2^B1>
 e48:	60 ff       	sbrs	r22, 0
 e4a:	04 c0       	rjmp	.+8      	; 0xe54 <.L3^B1>

00000e4c <.L2^B1>:
 e4c:	6f 5f       	subi	r22, 0xFF	; 255
 e4e:	7f 4f       	sbci	r23, 0xFF	; 255
 e50:	8f 4f       	sbci	r24, 0xFF	; 255
 e52:	9f 4f       	sbci	r25, 0xFF	; 255

00000e54 <.L3^B1>:
 e54:	08 95       	ret

00000e56 <_exit>:
 e56:	f8 94       	cli

00000e58 <__stop_program>:
 e58:	ff cf       	rjmp	.-2      	; 0xe58 <__stop_program>
