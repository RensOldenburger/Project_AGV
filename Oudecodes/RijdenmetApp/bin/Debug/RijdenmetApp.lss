
bin\Debug\RijdenmetApp.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00000ed6  00000f8a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000ed6  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000008  00800200  00800200  00000f8a  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  00000f8a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      00000012  00000000  00000000  00000f8d  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000fa0  2**2
                  CONTENTS, READONLY, OCTETS
  6 .debug_aranges 000000f8  00000000  00000000  00000fe0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_info   00001085  00000000  00000000  000010d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_abbrev 00000e2b  00000000  00000000  0000215d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line   00000cf5  00000000  00000000  00002f88  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_frame  00000280  00000000  00000000  00003c80  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_str    00000619  00000000  00000000  00003f00  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_line_str 00000180  00000000  00000000  00004519  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
   4:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
   8:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
   c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  10:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  14:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  18:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  1c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  20:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  24:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  28:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  2c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  30:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  34:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  38:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  3c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  40:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  44:	0c 94 c9 01 	jmp	0x392	; 0x392 <__vector_17>
  48:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  4c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  50:	0c 94 9e 01 	jmp	0x33c	; 0x33c <__vector_20>
  54:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  58:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  5c:	0c 94 44 02 	jmp	0x488	; 0x488 <__vector_23>
  60:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  64:	0c 94 88 00 	jmp	0x110	; 0x110 <__vector_25>
  68:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  6c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  70:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  74:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  78:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  7c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  80:	0c 94 1c 02 	jmp	0x438	; 0x438 <__vector_32>
  84:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  88:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  8c:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__vector_35>
  90:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  94:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  98:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  9c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  a0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  a4:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  a8:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  ac:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  b0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  b4:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  b8:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  bc:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  c0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  c4:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  c8:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  cc:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  d0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  d4:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  d8:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  dc:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  e0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_clear_bss>:
  f4:	22 e0       	ldi	r18, 0x02	; 2

000000f6 <.Loc.1>:
  f6:	a0 e0       	ldi	r26, 0x00	; 0

000000f8 <.Loc.2>:
  f8:	b2 e0       	ldi	r27, 0x02	; 2

000000fa <.Loc.3>:
  fa:	01 c0       	rjmp	.+2      	; 0xfe <.Loc.5>

000000fc <.Loc.4>:
  fc:	1d 92       	st	X+, r1

000000fe <.Loc.5>:
  fe:	a8 30       	cpi	r26, 0x08	; 8

00000100 <.Loc.6>:
 100:	b2 07       	cpc	r27, r18

00000102 <.Loc.7>:
 102:	e1 f7       	brne	.-8      	; 0xfc <.Loc.4>

00000104 <L0^A>:
 104:	0e 94 62 02 	call	0x4c4	; 0x4c4 <main>
 108:	0c 94 69 07 	jmp	0xed2	; 0xed2 <_exit>

0000010c <__bad_interrupt>:
 10c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000110 <__vector_25>:
int Bluetooth_Getal = 0;//BLUETOOTH GETAL
int verandergetal = 0;//ONNODIG
int veranderandergetal = 0;//ONNODIG

ISR(USART0_RX_vect)
{
 110:	1f 92       	push	r1
 112:	0f 92       	push	r0
 114:	0f b6       	in	r0, 0x3f	; 63
 116:	0f 92       	push	r0
 118:	11 24       	eor	r1, r1
 11a:	0b b6       	in	r0, 0x3b	; 59
 11c:	0f 92       	push	r0
 11e:	8f 93       	push	r24
 120:	9f 93       	push	r25
 122:	ef 93       	push	r30
 124:	ff 93       	push	r31
 126:	cf 93       	push	r28
 128:	df 93       	push	r29
 12a:	cd b7       	in	r28, 0x3d	; 61
 12c:	de b7       	in	r29, 0x3e	; 62

0000012e <.Loc.1>:
    Bluetooth_Getal = UDR0;
 12e:	86 ec       	ldi	r24, 0xC6	; 198
 130:	90 e0       	ldi	r25, 0x00	; 0
 132:	fc 01       	movw	r30, r24
 134:	80 81       	ld	r24, Z
 136:	88 2f       	mov	r24, r24
 138:	90 e0       	ldi	r25, 0x00	; 0

0000013a <.Loc.2>:
 13a:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <Bluetooth_Getal+0x1>
 13e:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <Bluetooth_Getal>

00000142 <.Loc.3>:
    if (verandergetal == 0)//ONNODIG
 142:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <verandergetal>
 146:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <verandergetal+0x1>

0000014a <.Loc.4>:
 14a:	00 97       	sbiw	r24, 0x00	; 0
 14c:	51 f4       	brne	.+20     	; 0x162 <.L2>

0000014e <.Loc.5>:
    {//ONNODIG
        verandergetal++;//ONNODIG
 14e:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <verandergetal>
 152:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <verandergetal+0x1>
 156:	01 96       	adiw	r24, 0x01	; 1
 158:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <verandergetal+0x1>
 15c:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <verandergetal>

00000160 <.Loc.6>:
    }//ONNODIG
    else//ONNODIG
    {//ONNODIG
        verandergetal = 0;//ONNODIG
    }//ONNODIG
}
 160:	04 c0       	rjmp	.+8      	; 0x16a <.L4>

00000162 <.L2>:
        verandergetal = 0;//ONNODIG
 162:	10 92 03 02 	sts	0x0203, r1	; 0x800203 <verandergetal+0x1>
 166:	10 92 02 02 	sts	0x0202, r1	; 0x800202 <verandergetal>

0000016a <.L4>:
}
 16a:	00 00       	nop
 16c:	df 91       	pop	r29
 16e:	cf 91       	pop	r28
 170:	ff 91       	pop	r31
 172:	ef 91       	pop	r30
 174:	9f 91       	pop	r25
 176:	8f 91       	pop	r24
 178:	0f 90       	pop	r0
 17a:	0b be       	out	0x3b, r0	; 59
 17c:	0f 90       	pop	r0
 17e:	0f be       	out	0x3f, r0	; 63
 180:	0f 90       	pop	r0
 182:	1f 90       	pop	r1
 184:	18 95       	reti

00000186 <init>:

void init(void)
{
 186:	cf 93       	push	r28
 188:	df 93       	push	r29
 18a:	cd b7       	in	r28, 0x3d	; 61
 18c:	de b7       	in	r29, 0x3e	; 62

0000018e <.Loc.10>:
    //Bluetooth
    UBRR0H = (BRC >> 8);
 18e:	85 ec       	ldi	r24, 0xC5	; 197
 190:	90 e0       	ldi	r25, 0x00	; 0

00000192 <.Loc.11>:
 192:	fc 01       	movw	r30, r24
 194:	10 82       	st	Z, r1

00000196 <.Loc.12>:
    UBRR0L = BRC;
 196:	84 ec       	ldi	r24, 0xC4	; 196
 198:	90 e0       	ldi	r25, 0x00	; 0

0000019a <.Loc.13>:
 19a:	27 e6       	ldi	r18, 0x67	; 103
 19c:	fc 01       	movw	r30, r24
 19e:	20 83       	st	Z, r18

000001a0 <.Loc.14>:

    UCSR0B = (1 << RXEN0) |(1 << RXCIE0) |(1 << TXEN0) | (1 << TXCIE0);
 1a0:	81 ec       	ldi	r24, 0xC1	; 193
 1a2:	90 e0       	ldi	r25, 0x00	; 0

000001a4 <.Loc.15>:
 1a4:	28 ed       	ldi	r18, 0xD8	; 216
 1a6:	fc 01       	movw	r30, r24
 1a8:	20 83       	st	Z, r18

000001aa <.Loc.16>:
    UCSR0C = (1 << UCSZ01) | (1 << UCSZ00);
 1aa:	82 ec       	ldi	r24, 0xC2	; 194
 1ac:	90 e0       	ldi	r25, 0x00	; 0

000001ae <.Loc.17>:
 1ae:	26 e0       	ldi	r18, 0x06	; 6
 1b0:	fc 01       	movw	r30, r24
 1b2:	20 83       	st	Z, r18

000001b4 <.Loc.18>:

    sei();
 1b4:	78 94       	sei

000001b6 <.Loc.19>:
}
 1b6:	00 00       	nop
 1b8:	df 91       	pop	r29
 1ba:	cf 91       	pop	r28
 1bc:	08 95       	ret

000001be <initding>:
void signaal_geven();

volatile int timerteller = 0;

void initding()
{
 1be:	cf 93       	push	r28
 1c0:	df 93       	push	r29
 1c2:	cd b7       	in	r28, 0x3d	; 61
 1c4:	de b7       	in	r29, 0x3e	; 62

000001c6 <.Loc.1>:
    //timer PWM motorenR
    TCCR1B = (0 << CS12) | (0 << CS11) | (1 << CS10);
 1c6:	81 e8       	ldi	r24, 0x81	; 129
 1c8:	90 e0       	ldi	r25, 0x00	; 0

000001ca <.Loc.2>:
 1ca:	21 e0       	ldi	r18, 0x01	; 1
 1cc:	fc 01       	movw	r30, r24
 1ce:	20 83       	st	Z, r18

000001d0 <.Loc.3>:
    TIMSK1 = (1 << OCIE1A) | (1 << TOIE1);
 1d0:	8f e6       	ldi	r24, 0x6F	; 111
 1d2:	90 e0       	ldi	r25, 0x00	; 0

000001d4 <.Loc.4>:
 1d4:	23 e0       	ldi	r18, 0x03	; 3
 1d6:	fc 01       	movw	r30, r24
 1d8:	20 83       	st	Z, r18

000001da <.Loc.5>:

    OCR1A = 0;
 1da:	88 e8       	ldi	r24, 0x88	; 136
 1dc:	90 e0       	ldi	r25, 0x00	; 0

000001de <.Loc.6>:
 1de:	fc 01       	movw	r30, r24
 1e0:	11 82       	std	Z+1, r1	; 0x01
 1e2:	10 82       	st	Z, r1

000001e4 <.Loc.7>:
    //timer PWM motorenL
    TCCR3B = (0 << CS32) | (0 << CS31) | (1 << CS30);
 1e4:	81 e9       	ldi	r24, 0x91	; 145
 1e6:	90 e0       	ldi	r25, 0x00	; 0

000001e8 <.Loc.8>:
 1e8:	21 e0       	ldi	r18, 0x01	; 1
 1ea:	fc 01       	movw	r30, r24
 1ec:	20 83       	st	Z, r18

000001ee <.Loc.9>:
    TIMSK3 = (1 << OCIE3A) | (1 << TOIE3);
 1ee:	81 e7       	ldi	r24, 0x71	; 113
 1f0:	90 e0       	ldi	r25, 0x00	; 0

000001f2 <.Loc.10>:
 1f2:	23 e0       	ldi	r18, 0x03	; 3
 1f4:	fc 01       	movw	r30, r24
 1f6:	20 83       	st	Z, r18

000001f8 <.Loc.11>:

    OCR3A = 0;
 1f8:	88 e9       	ldi	r24, 0x98	; 152
 1fa:	90 e0       	ldi	r25, 0x00	; 0

000001fc <.Loc.12>:
 1fc:	fc 01       	movw	r30, r24
 1fe:	11 82       	std	Z+1, r1	; 0x01
 200:	10 82       	st	Z, r1

00000202 <.Loc.13>:

    //timer doorrijden
    TIMSK0 |= (1 << TOIE0);
 202:	8e e6       	ldi	r24, 0x6E	; 110
 204:	90 e0       	ldi	r25, 0x00	; 0
 206:	fc 01       	movw	r30, r24
 208:	20 81       	ld	r18, Z
 20a:	8e e6       	ldi	r24, 0x6E	; 110
 20c:	90 e0       	ldi	r25, 0x00	; 0

0000020e <.Loc.14>:
 20e:	21 60       	ori	r18, 0x01	; 1
 210:	fc 01       	movw	r30, r24
 212:	20 83       	st	Z, r18

00000214 <.Loc.15>:

    //pinout h-brug
    DDR |= (1 << PEN1);
 214:	81 e2       	ldi	r24, 0x21	; 33
 216:	90 e0       	ldi	r25, 0x00	; 0
 218:	fc 01       	movw	r30, r24
 21a:	20 81       	ld	r18, Z
 21c:	81 e2       	ldi	r24, 0x21	; 33
 21e:	90 e0       	ldi	r25, 0x00	; 0

00000220 <.Loc.16>:
 220:	20 68       	ori	r18, 0x80	; 128
 222:	fc 01       	movw	r30, r24
 224:	20 83       	st	Z, r18

00000226 <.Loc.17>:
    DDR |= (1 << PIN11);
 226:	81 e2       	ldi	r24, 0x21	; 33
 228:	90 e0       	ldi	r25, 0x00	; 0
 22a:	fc 01       	movw	r30, r24
 22c:	20 81       	ld	r18, Z
 22e:	81 e2       	ldi	r24, 0x21	; 33
 230:	90 e0       	ldi	r25, 0x00	; 0

00000232 <.Loc.18>:
 232:	20 64       	ori	r18, 0x40	; 64
 234:	fc 01       	movw	r30, r24
 236:	20 83       	st	Z, r18

00000238 <.Loc.19>:
    DDR |= (1 << PIN12);
 238:	81 e2       	ldi	r24, 0x21	; 33
 23a:	90 e0       	ldi	r25, 0x00	; 0
 23c:	fc 01       	movw	r30, r24
 23e:	20 81       	ld	r18, Z
 240:	81 e2       	ldi	r24, 0x21	; 33
 242:	90 e0       	ldi	r25, 0x00	; 0

00000244 <.Loc.20>:
 244:	20 62       	ori	r18, 0x20	; 32
 246:	fc 01       	movw	r30, r24
 248:	20 83       	st	Z, r18

0000024a <.Loc.21>:
    DDR |= (1 << PIN21);
 24a:	81 e2       	ldi	r24, 0x21	; 33
 24c:	90 e0       	ldi	r25, 0x00	; 0
 24e:	fc 01       	movw	r30, r24
 250:	20 81       	ld	r18, Z
 252:	81 e2       	ldi	r24, 0x21	; 33
 254:	90 e0       	ldi	r25, 0x00	; 0

00000256 <.Loc.22>:
 256:	20 61       	ori	r18, 0x10	; 16
 258:	fc 01       	movw	r30, r24
 25a:	20 83       	st	Z, r18

0000025c <.Loc.23>:
    DDR |= (1 << PIN22);
 25c:	81 e2       	ldi	r24, 0x21	; 33
 25e:	90 e0       	ldi	r25, 0x00	; 0
 260:	fc 01       	movw	r30, r24
 262:	20 81       	ld	r18, Z
 264:	81 e2       	ldi	r24, 0x21	; 33
 266:	90 e0       	ldi	r25, 0x00	; 0

00000268 <.Loc.24>:
 268:	28 60       	ori	r18, 0x08	; 8
 26a:	fc 01       	movw	r30, r24
 26c:	20 83       	st	Z, r18

0000026e <.Loc.25>:
    DDR |= (1 << PEN2);
 26e:	81 e2       	ldi	r24, 0x21	; 33
 270:	90 e0       	ldi	r25, 0x00	; 0
 272:	fc 01       	movw	r30, r24
 274:	20 81       	ld	r18, Z
 276:	81 e2       	ldi	r24, 0x21	; 33
 278:	90 e0       	ldi	r25, 0x00	; 0

0000027a <.Loc.26>:
 27a:	24 60       	ori	r18, 0x04	; 4
 27c:	fc 01       	movw	r30, r24
 27e:	20 83       	st	Z, r18

00000280 <.Loc.27>:

    //H-brug pinnen LOW
    PORT &= ~(1 << PEN1);
 280:	82 e2       	ldi	r24, 0x22	; 34
 282:	90 e0       	ldi	r25, 0x00	; 0
 284:	fc 01       	movw	r30, r24
 286:	20 81       	ld	r18, Z

00000288 <.Loc.28>:
 288:	82 e2       	ldi	r24, 0x22	; 34
 28a:	90 e0       	ldi	r25, 0x00	; 0

0000028c <.Loc.29>:
 28c:	2f 77       	andi	r18, 0x7F	; 127
 28e:	fc 01       	movw	r30, r24
 290:	20 83       	st	Z, r18

00000292 <.Loc.30>:
	PORT &= ~(1 << PIN11);
 292:	82 e2       	ldi	r24, 0x22	; 34
 294:	90 e0       	ldi	r25, 0x00	; 0
 296:	fc 01       	movw	r30, r24
 298:	20 81       	ld	r18, Z

0000029a <.Loc.31>:
 29a:	82 e2       	ldi	r24, 0x22	; 34
 29c:	90 e0       	ldi	r25, 0x00	; 0

0000029e <.Loc.32>:
 29e:	2f 7b       	andi	r18, 0xBF	; 191
 2a0:	fc 01       	movw	r30, r24
 2a2:	20 83       	st	Z, r18

000002a4 <.Loc.33>:
	PORT &= ~(1 << PIN12);
 2a4:	82 e2       	ldi	r24, 0x22	; 34
 2a6:	90 e0       	ldi	r25, 0x00	; 0
 2a8:	fc 01       	movw	r30, r24
 2aa:	20 81       	ld	r18, Z

000002ac <.Loc.34>:
 2ac:	82 e2       	ldi	r24, 0x22	; 34
 2ae:	90 e0       	ldi	r25, 0x00	; 0

000002b0 <.Loc.35>:
 2b0:	2f 7d       	andi	r18, 0xDF	; 223
 2b2:	fc 01       	movw	r30, r24
 2b4:	20 83       	st	Z, r18

000002b6 <.Loc.36>:
	PORT &= ~(1 << PIN21);
 2b6:	82 e2       	ldi	r24, 0x22	; 34
 2b8:	90 e0       	ldi	r25, 0x00	; 0
 2ba:	fc 01       	movw	r30, r24
 2bc:	20 81       	ld	r18, Z

000002be <.Loc.37>:
 2be:	82 e2       	ldi	r24, 0x22	; 34
 2c0:	90 e0       	ldi	r25, 0x00	; 0

000002c2 <.Loc.38>:
 2c2:	2f 7e       	andi	r18, 0xEF	; 239
 2c4:	fc 01       	movw	r30, r24
 2c6:	20 83       	st	Z, r18

000002c8 <.Loc.39>:
	PORT &= ~(1 << PIN22);
 2c8:	82 e2       	ldi	r24, 0x22	; 34
 2ca:	90 e0       	ldi	r25, 0x00	; 0
 2cc:	fc 01       	movw	r30, r24
 2ce:	20 81       	ld	r18, Z

000002d0 <.Loc.40>:
 2d0:	82 e2       	ldi	r24, 0x22	; 34
 2d2:	90 e0       	ldi	r25, 0x00	; 0

000002d4 <.Loc.41>:
 2d4:	27 7f       	andi	r18, 0xF7	; 247
 2d6:	fc 01       	movw	r30, r24
 2d8:	20 83       	st	Z, r18

000002da <.Loc.42>:
	PORT &= ~(1 << PEN2);
 2da:	82 e2       	ldi	r24, 0x22	; 34
 2dc:	90 e0       	ldi	r25, 0x00	; 0
 2de:	fc 01       	movw	r30, r24
 2e0:	20 81       	ld	r18, Z

000002e2 <.Loc.43>:
 2e2:	82 e2       	ldi	r24, 0x22	; 34
 2e4:	90 e0       	ldi	r25, 0x00	; 0

000002e6 <.Loc.44>:
 2e6:	2b 7f       	andi	r18, 0xFB	; 251
 2e8:	fc 01       	movw	r30, r24
 2ea:	20 83       	st	Z, r18

000002ec <.Loc.45>:

	//LEDS
    DDR_LED |= (1<<LED_1) | (1<<LED_2);     // enable pins as output
 2ec:	8d e2       	ldi	r24, 0x2D	; 45
 2ee:	90 e0       	ldi	r25, 0x00	; 0
 2f0:	fc 01       	movw	r30, r24
 2f2:	20 81       	ld	r18, Z
 2f4:	8d e2       	ldi	r24, 0x2D	; 45
 2f6:	90 e0       	ldi	r25, 0x00	; 0

000002f8 <.Loc.46>:
 2f8:	20 63       	ori	r18, 0x30	; 48
 2fa:	fc 01       	movw	r30, r24
 2fc:	20 83       	st	Z, r18

000002fe <.Loc.47>:
    PORT_LED &= ~(1<<LED_1) & ~(1<<LED_2);  // put pins low
 2fe:	8e e2       	ldi	r24, 0x2E	; 46
 300:	90 e0       	ldi	r25, 0x00	; 0
 302:	fc 01       	movw	r30, r24
 304:	20 81       	ld	r18, Z

00000306 <.Loc.48>:
 306:	8e e2       	ldi	r24, 0x2E	; 46
 308:	90 e0       	ldi	r25, 0x00	; 0

0000030a <.Loc.49>:
 30a:	2f 7c       	andi	r18, 0xCF	; 207
 30c:	fc 01       	movw	r30, r24
 30e:	20 83       	st	Z, r18

00000310 <.Loc.50>:
    //Buzzer
    DDR_buzzer |= (1<<buzzer);              // enable pins as output
 310:	8d e2       	ldi	r24, 0x2D	; 45
 312:	90 e0       	ldi	r25, 0x00	; 0
 314:	fc 01       	movw	r30, r24
 316:	20 81       	ld	r18, Z
 318:	8d e2       	ldi	r24, 0x2D	; 45
 31a:	90 e0       	ldi	r25, 0x00	; 0

0000031c <.Loc.51>:
 31c:	28 60       	ori	r18, 0x08	; 8
 31e:	fc 01       	movw	r30, r24
 320:	20 83       	st	Z, r18

00000322 <.Loc.52>:
    PORT_buzzer &= ~(1<<buzzer);            // put pins low
 322:	8e e2       	ldi	r24, 0x2E	; 46
 324:	90 e0       	ldi	r25, 0x00	; 0
 326:	fc 01       	movw	r30, r24
 328:	20 81       	ld	r18, Z

0000032a <.Loc.53>:
 32a:	8e e2       	ldi	r24, 0x2E	; 46
 32c:	90 e0       	ldi	r25, 0x00	; 0

0000032e <.Loc.54>:
 32e:	27 7f       	andi	r18, 0xF7	; 247
 330:	fc 01       	movw	r30, r24
 332:	20 83       	st	Z, r18

00000334 <.Loc.55>:
}
 334:	00 00       	nop
 336:	df 91       	pop	r29
 338:	cf 91       	pop	r28
 33a:	08 95       	ret

0000033c <__vector_20>:

//H-brug PWMR
ISR(TIMER1_OVF_vect)
{
 33c:	1f 92       	push	r1
 33e:	0f 92       	push	r0
 340:	0f b6       	in	r0, 0x3f	; 63
 342:	0f 92       	push	r0
 344:	11 24       	eor	r1, r1
 346:	0b b6       	in	r0, 0x3b	; 59
 348:	0f 92       	push	r0
 34a:	2f 93       	push	r18
 34c:	3f 93       	push	r19
 34e:	8f 93       	push	r24
 350:	9f 93       	push	r25
 352:	ef 93       	push	r30
 354:	ff 93       	push	r31
 356:	cf 93       	push	r28
 358:	df 93       	push	r29
 35a:	cd b7       	in	r28, 0x3d	; 61
 35c:	de b7       	in	r29, 0x3e	; 62

0000035e <.Loc.57>:
    PORT ^= (1 << PEN1);
 35e:	82 e2       	ldi	r24, 0x22	; 34
 360:	90 e0       	ldi	r25, 0x00	; 0
 362:	fc 01       	movw	r30, r24
 364:	30 81       	ld	r19, Z
 366:	82 e2       	ldi	r24, 0x22	; 34
 368:	90 e0       	ldi	r25, 0x00	; 0

0000036a <.Loc.58>:
 36a:	20 e8       	ldi	r18, 0x80	; 128
 36c:	23 27       	eor	r18, r19
 36e:	fc 01       	movw	r30, r24
 370:	20 83       	st	Z, r18

00000372 <.Loc.59>:
}
 372:	00 00       	nop
 374:	df 91       	pop	r29
 376:	cf 91       	pop	r28
 378:	ff 91       	pop	r31
 37a:	ef 91       	pop	r30
 37c:	9f 91       	pop	r25
 37e:	8f 91       	pop	r24
 380:	3f 91       	pop	r19
 382:	2f 91       	pop	r18
 384:	0f 90       	pop	r0
 386:	0b be       	out	0x3b, r0	; 59
 388:	0f 90       	pop	r0
 38a:	0f be       	out	0x3f, r0	; 63
 38c:	0f 90       	pop	r0
 38e:	1f 90       	pop	r1
 390:	18 95       	reti

00000392 <__vector_17>:
//H-brug PWMR
ISR(TIMER1_COMPA_vect)
{
 392:	1f 92       	push	r1
 394:	0f 92       	push	r0
 396:	0f b6       	in	r0, 0x3f	; 63
 398:	0f 92       	push	r0
 39a:	11 24       	eor	r1, r1
 39c:	0b b6       	in	r0, 0x3b	; 59
 39e:	0f 92       	push	r0
 3a0:	2f 93       	push	r18
 3a2:	8f 93       	push	r24
 3a4:	9f 93       	push	r25
 3a6:	ef 93       	push	r30
 3a8:	ff 93       	push	r31
 3aa:	cf 93       	push	r28
 3ac:	df 93       	push	r29
 3ae:	cd b7       	in	r28, 0x3d	; 61
 3b0:	de b7       	in	r29, 0x3e	; 62

000003b2 <.Loc.61>:
    PORT |= (1 << PEN1);
 3b2:	82 e2       	ldi	r24, 0x22	; 34
 3b4:	90 e0       	ldi	r25, 0x00	; 0
 3b6:	fc 01       	movw	r30, r24
 3b8:	20 81       	ld	r18, Z
 3ba:	82 e2       	ldi	r24, 0x22	; 34
 3bc:	90 e0       	ldi	r25, 0x00	; 0

000003be <.Loc.62>:
 3be:	20 68       	ori	r18, 0x80	; 128
 3c0:	fc 01       	movw	r30, r24
 3c2:	20 83       	st	Z, r18

000003c4 <.Loc.63>:
}
 3c4:	00 00       	nop
 3c6:	df 91       	pop	r29
 3c8:	cf 91       	pop	r28
 3ca:	ff 91       	pop	r31
 3cc:	ef 91       	pop	r30
 3ce:	9f 91       	pop	r25
 3d0:	8f 91       	pop	r24
 3d2:	2f 91       	pop	r18
 3d4:	0f 90       	pop	r0
 3d6:	0b be       	out	0x3b, r0	; 59
 3d8:	0f 90       	pop	r0
 3da:	0f be       	out	0x3f, r0	; 63
 3dc:	0f 90       	pop	r0
 3de:	1f 90       	pop	r1
 3e0:	18 95       	reti

000003e2 <__vector_35>:

//H-brug PWML
ISR(TIMER3_OVF_vect)
{
 3e2:	1f 92       	push	r1
 3e4:	0f 92       	push	r0
 3e6:	0f b6       	in	r0, 0x3f	; 63
 3e8:	0f 92       	push	r0
 3ea:	11 24       	eor	r1, r1
 3ec:	0b b6       	in	r0, 0x3b	; 59
 3ee:	0f 92       	push	r0
 3f0:	2f 93       	push	r18
 3f2:	3f 93       	push	r19
 3f4:	8f 93       	push	r24
 3f6:	9f 93       	push	r25
 3f8:	ef 93       	push	r30
 3fa:	ff 93       	push	r31
 3fc:	cf 93       	push	r28
 3fe:	df 93       	push	r29
 400:	cd b7       	in	r28, 0x3d	; 61
 402:	de b7       	in	r29, 0x3e	; 62

00000404 <.Loc.65>:
    PORT ^= (1 << PEN2);
 404:	82 e2       	ldi	r24, 0x22	; 34
 406:	90 e0       	ldi	r25, 0x00	; 0
 408:	fc 01       	movw	r30, r24
 40a:	30 81       	ld	r19, Z
 40c:	82 e2       	ldi	r24, 0x22	; 34
 40e:	90 e0       	ldi	r25, 0x00	; 0

00000410 <.Loc.66>:
 410:	24 e0       	ldi	r18, 0x04	; 4
 412:	23 27       	eor	r18, r19
 414:	fc 01       	movw	r30, r24
 416:	20 83       	st	Z, r18

00000418 <.Loc.67>:
}
 418:	00 00       	nop
 41a:	df 91       	pop	r29
 41c:	cf 91       	pop	r28
 41e:	ff 91       	pop	r31
 420:	ef 91       	pop	r30
 422:	9f 91       	pop	r25
 424:	8f 91       	pop	r24
 426:	3f 91       	pop	r19
 428:	2f 91       	pop	r18
 42a:	0f 90       	pop	r0
 42c:	0b be       	out	0x3b, r0	; 59
 42e:	0f 90       	pop	r0
 430:	0f be       	out	0x3f, r0	; 63
 432:	0f 90       	pop	r0
 434:	1f 90       	pop	r1
 436:	18 95       	reti

00000438 <__vector_32>:
//H-brug PWML
ISR(TIMER3_COMPA_vect)
{
 438:	1f 92       	push	r1
 43a:	0f 92       	push	r0
 43c:	0f b6       	in	r0, 0x3f	; 63
 43e:	0f 92       	push	r0
 440:	11 24       	eor	r1, r1
 442:	0b b6       	in	r0, 0x3b	; 59
 444:	0f 92       	push	r0
 446:	2f 93       	push	r18
 448:	8f 93       	push	r24
 44a:	9f 93       	push	r25
 44c:	ef 93       	push	r30
 44e:	ff 93       	push	r31
 450:	cf 93       	push	r28
 452:	df 93       	push	r29
 454:	cd b7       	in	r28, 0x3d	; 61
 456:	de b7       	in	r29, 0x3e	; 62

00000458 <.Loc.69>:
    PORT |= (1 << PEN2);
 458:	82 e2       	ldi	r24, 0x22	; 34
 45a:	90 e0       	ldi	r25, 0x00	; 0
 45c:	fc 01       	movw	r30, r24
 45e:	20 81       	ld	r18, Z
 460:	82 e2       	ldi	r24, 0x22	; 34
 462:	90 e0       	ldi	r25, 0x00	; 0

00000464 <.Loc.70>:
 464:	24 60       	ori	r18, 0x04	; 4
 466:	fc 01       	movw	r30, r24
 468:	20 83       	st	Z, r18

0000046a <.Loc.71>:
}
 46a:	00 00       	nop
 46c:	df 91       	pop	r29
 46e:	cf 91       	pop	r28
 470:	ff 91       	pop	r31
 472:	ef 91       	pop	r30
 474:	9f 91       	pop	r25
 476:	8f 91       	pop	r24
 478:	2f 91       	pop	r18
 47a:	0f 90       	pop	r0
 47c:	0b be       	out	0x3b, r0	; 59
 47e:	0f 90       	pop	r0
 480:	0f be       	out	0x3f, r0	; 63
 482:	0f 90       	pop	r0
 484:	1f 90       	pop	r1
 486:	18 95       	reti

00000488 <__vector_23>:

//Timer doorrijden
ISR(TIMER0_OVF_vect)
{
 488:	1f 92       	push	r1
 48a:	0f 92       	push	r0
 48c:	0f b6       	in	r0, 0x3f	; 63
 48e:	0f 92       	push	r0
 490:	11 24       	eor	r1, r1
 492:	8f 93       	push	r24
 494:	9f 93       	push	r25
 496:	cf 93       	push	r28
 498:	df 93       	push	r29
 49a:	cd b7       	in	r28, 0x3d	; 61
 49c:	de b7       	in	r29, 0x3e	; 62

0000049e <.Loc.73>:
    timerteller ++;
 49e:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <timerteller>
 4a2:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <timerteller+0x1>
 4a6:	01 96       	adiw	r24, 0x01	; 1
 4a8:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <timerteller+0x1>
 4ac:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <timerteller>

000004b0 <.Loc.74>:
}
 4b0:	00 00       	nop
 4b2:	df 91       	pop	r29
 4b4:	cf 91       	pop	r28
 4b6:	9f 91       	pop	r25
 4b8:	8f 91       	pop	r24
 4ba:	0f 90       	pop	r0
 4bc:	0f be       	out	0x3f, r0	; 63
 4be:	0f 90       	pop	r0
 4c0:	1f 90       	pop	r1
 4c2:	18 95       	reti

000004c4 <main>:

int main(void)
{
 4c4:	cf 93       	push	r28
 4c6:	df 93       	push	r29
 4c8:	00 d0       	rcall	.+0      	; 0x4ca <L0^A>

000004ca <L0^A>:
 4ca:	0f 92       	push	r0
 4cc:	cd b7       	in	r28, 0x3d	; 61
 4ce:	de b7       	in	r29, 0x3e	; 62

000004d0 <.Loc.76>:
    initding();
 4d0:	0e 94 df 00 	call	0x1be	; 0x1be <initding>

000004d4 <.Loc.77>:
    sei();
 4d4:	78 94       	sei

000004d6 <.Loc.78>:
    int toestand = 0;
 4d6:	1a 82       	std	Y+2, r1	; 0x02
 4d8:	19 82       	std	Y+1, r1	; 0x01

000004da <.L26>:
//            PORT |= (1 << PIN22);
//        if(((IRregister & (1<<IRbakrechts)) == 0) || ((IRregister & (1<<IRbaklinks)) == 0))
//        {
//            toestand = 5;
//        }
        switch(toestand)
 4da:	89 81       	ldd	r24, Y+1	; 0x01
 4dc:	9a 81       	ldd	r25, Y+2	; 0x02
 4de:	85 30       	cpi	r24, 0x05	; 5
 4e0:	91 05       	cpc	r25, r1
 4e2:	09 f4       	brne	.+2      	; 0x4e6 <L0^A+0x2>

000004e4 <L0^A>:
 4e4:	68 c1       	rjmp	.+720    	; 0x7b6 <.L8>
 4e6:	89 81       	ldd	r24, Y+1	; 0x01
 4e8:	9a 81       	ldd	r25, Y+2	; 0x02
 4ea:	85 30       	cpi	r24, 0x05	; 5
 4ec:	91 05       	cpc	r25, r1
 4ee:	09 f0       	breq	.+2      	; 0x4f2 <L0^A+0x2>

000004f0 <L0^A>:
 4f0:	a4 f7       	brge	.-24     	; 0x4da <.L26>
 4f2:	89 81       	ldd	r24, Y+1	; 0x01
 4f4:	9a 81       	ldd	r25, Y+2	; 0x02
 4f6:	84 30       	cpi	r24, 0x04	; 4
 4f8:	91 05       	cpc	r25, r1
 4fa:	09 f4       	brne	.+2      	; 0x4fe <L0^A+0x2>

000004fc <L0^A>:
 4fc:	29 c1       	rjmp	.+594    	; 0x750 <.L10>
 4fe:	89 81       	ldd	r24, Y+1	; 0x01
 500:	9a 81       	ldd	r25, Y+2	; 0x02
 502:	84 30       	cpi	r24, 0x04	; 4
 504:	91 05       	cpc	r25, r1
 506:	09 f0       	breq	.+2      	; 0x50a <L0^A+0x2>

00000508 <L0^A>:
 508:	44 f7       	brge	.-48     	; 0x4da <.L26>
 50a:	89 81       	ldd	r24, Y+1	; 0x01
 50c:	9a 81       	ldd	r25, Y+2	; 0x02
 50e:	83 30       	cpi	r24, 0x03	; 3
 510:	91 05       	cpc	r25, r1
 512:	09 f4       	brne	.+2      	; 0x516 <L0^A+0x2>

00000514 <L0^A>:
 514:	c2 c0       	rjmp	.+388    	; 0x69a <.L11>
 516:	89 81       	ldd	r24, Y+1	; 0x01
 518:	9a 81       	ldd	r25, Y+2	; 0x02
 51a:	83 30       	cpi	r24, 0x03	; 3
 51c:	91 05       	cpc	r25, r1
 51e:	09 f0       	breq	.+2      	; 0x522 <L0^A+0x2>

00000520 <L0^A>:
 520:	e4 f6       	brge	.-72     	; 0x4da <.L26>
 522:	89 81       	ldd	r24, Y+1	; 0x01
 524:	9a 81       	ldd	r25, Y+2	; 0x02
 526:	82 30       	cpi	r24, 0x02	; 2
 528:	91 05       	cpc	r25, r1
 52a:	09 f4       	brne	.+2      	; 0x52e <L0^A+0x2>

0000052c <L0^A>:
 52c:	84 c0       	rjmp	.+264    	; 0x636 <.L12>
 52e:	89 81       	ldd	r24, Y+1	; 0x01
 530:	9a 81       	ldd	r25, Y+2	; 0x02
 532:	82 30       	cpi	r24, 0x02	; 2
 534:	91 05       	cpc	r25, r1
 536:	09 f0       	breq	.+2      	; 0x53a <L0^A+0x2>

00000538 <L0^A>:
 538:	84 f6       	brge	.-96     	; 0x4da <.L26>
 53a:	89 81       	ldd	r24, Y+1	; 0x01
 53c:	9a 81       	ldd	r25, Y+2	; 0x02
 53e:	00 97       	sbiw	r24, 0x00	; 0
 540:	39 f0       	breq	.+14     	; 0x550 <.L13>
 542:	89 81       	ldd	r24, Y+1	; 0x01
 544:	9a 81       	ldd	r25, Y+2	; 0x02
 546:	81 30       	cpi	r24, 0x01	; 1
 548:	91 05       	cpc	r25, r1
 54a:	09 f4       	brne	.+2      	; 0x54e <L0^A+0x2>

0000054c <L0^A>:
 54c:	42 c0       	rjmp	.+132    	; 0x5d2 <.L14>
 54e:	c5 cf       	rjmp	.-118    	; 0x4da <.L26>

00000550 <.L13>:
        {
        case 0://begin state
            h_bridgeR_set_percentage(snelheidrechtdoor);
 550:	8e e1       	ldi	r24, 0x1E	; 30
 552:	0e 94 8f 05 	call	0xb1e	; 0xb1e <h_bridgeR_set_percentage>

00000556 <.Loc.81>:
            h_bridgeL_set_percentage(snelheidrechtdoor);
 556:	8e e1       	ldi	r24, 0x1E	; 30
 558:	0e 94 ce 05 	call	0xb9c	; 0xb9c <h_bridgeL_set_percentage>

0000055c <.Loc.82>:
            PORT |= (1 << PIN11);
 55c:	82 e2       	ldi	r24, 0x22	; 34
 55e:	90 e0       	ldi	r25, 0x00	; 0
 560:	fc 01       	movw	r30, r24
 562:	20 81       	ld	r18, Z
 564:	82 e2       	ldi	r24, 0x22	; 34
 566:	90 e0       	ldi	r25, 0x00	; 0

00000568 <.Loc.83>:
 568:	20 64       	ori	r18, 0x40	; 64
 56a:	fc 01       	movw	r30, r24
 56c:	20 83       	st	Z, r18

0000056e <.Loc.84>:
            PORT &= ~(1 << PIN12) ;
 56e:	82 e2       	ldi	r24, 0x22	; 34
 570:	90 e0       	ldi	r25, 0x00	; 0
 572:	fc 01       	movw	r30, r24
 574:	20 81       	ld	r18, Z

00000576 <.Loc.85>:
 576:	82 e2       	ldi	r24, 0x22	; 34
 578:	90 e0       	ldi	r25, 0x00	; 0

0000057a <.Loc.86>:
 57a:	2f 7d       	andi	r18, 0xDF	; 223
 57c:	fc 01       	movw	r30, r24
 57e:	20 83       	st	Z, r18

00000580 <.Loc.87>:
            PORT &= ~(1 << PIN21);
 580:	82 e2       	ldi	r24, 0x22	; 34
 582:	90 e0       	ldi	r25, 0x00	; 0
 584:	fc 01       	movw	r30, r24
 586:	20 81       	ld	r18, Z

00000588 <.Loc.88>:
 588:	82 e2       	ldi	r24, 0x22	; 34
 58a:	90 e0       	ldi	r25, 0x00	; 0

0000058c <.Loc.89>:
 58c:	2f 7e       	andi	r18, 0xEF	; 239
 58e:	fc 01       	movw	r30, r24
 590:	20 83       	st	Z, r18

00000592 <.Loc.90>:
            PORT |= (1 << PIN22);
 592:	82 e2       	ldi	r24, 0x22	; 34
 594:	90 e0       	ldi	r25, 0x00	; 0
 596:	fc 01       	movw	r30, r24
 598:	20 81       	ld	r18, Z
 59a:	82 e2       	ldi	r24, 0x22	; 34
 59c:	90 e0       	ldi	r25, 0x00	; 0

0000059e <.Loc.91>:
 59e:	28 60       	ori	r18, 0x08	; 8
 5a0:	fc 01       	movw	r30, r24
 5a2:	20 83       	st	Z, r18

000005a4 <.Loc.92>:
            if(((IRregister & (1 << IRonderrechts)) == 0) && ((IRregister & (1 << IRonderlinks)) == 0))
 5a4:	83 e2       	ldi	r24, 0x23	; 35
 5a6:	90 e0       	ldi	r25, 0x00	; 0
 5a8:	fc 01       	movw	r30, r24
 5aa:	80 81       	ld	r24, Z

000005ac <.Loc.93>:
 5ac:	88 23       	and	r24, r24
 5ae:	0c f4       	brge	.+2      	; 0x5b2 <.Loc.94>

000005b0 <L0^A>:
 5b0:	3b c1       	rjmp	.+630    	; 0x828 <.L27>

000005b2 <.Loc.94>:
 5b2:	83 e2       	ldi	r24, 0x23	; 35
 5b4:	90 e0       	ldi	r25, 0x00	; 0
 5b6:	fc 01       	movw	r30, r24
 5b8:	80 81       	ld	r24, Z

000005ba <.Loc.95>:
 5ba:	88 2f       	mov	r24, r24
 5bc:	90 e0       	ldi	r25, 0x00	; 0
 5be:	80 74       	andi	r24, 0x40	; 64
 5c0:	99 27       	eor	r25, r25

000005c2 <.Loc.96>:
 5c2:	00 97       	sbiw	r24, 0x00	; 0
 5c4:	09 f0       	breq	.+2      	; 0x5c8 <.Loc.97>

000005c6 <L0^A>:
 5c6:	30 c1       	rjmp	.+608    	; 0x828 <.L27>

000005c8 <.Loc.97>:
            {
                toestand = 3;
 5c8:	83 e0       	ldi	r24, 0x03	; 3
 5ca:	90 e0       	ldi	r25, 0x00	; 0
 5cc:	9a 83       	std	Y+2, r25	; 0x02
 5ce:	89 83       	std	Y+1, r24	; 0x01

000005d0 <.Loc.98>:

            }
            break;
 5d0:	2b c1       	rjmp	.+598    	; 0x828 <.L27>

000005d2 <.L14>:
        case 1://naar links(te dichtbij rechts)
            //Motoren naar links
            h_bridgeR_set_percentage(snelheidhard);
 5d2:	83 e2       	ldi	r24, 0x23	; 35
 5d4:	0e 94 8f 05 	call	0xb1e	; 0xb1e <h_bridgeR_set_percentage>

000005d8 <.Loc.100>:
            h_bridgeL_set_percentage(snelheidzacht);
 5d8:	89 e1       	ldi	r24, 0x19	; 25
 5da:	0e 94 ce 05 	call	0xb9c	; 0xb9c <h_bridgeL_set_percentage>

000005de <.Loc.101>:
            if(((IRregister & (1 << IRonderrechts)) == 0) && ((IRregister & (1 << IRonderlinks)) == 0))
 5de:	83 e2       	ldi	r24, 0x23	; 35
 5e0:	90 e0       	ldi	r25, 0x00	; 0
 5e2:	fc 01       	movw	r30, r24
 5e4:	80 81       	ld	r24, Z

000005e6 <.Loc.102>:
 5e6:	88 23       	and	r24, r24
 5e8:	7c f0       	brlt	.+30     	; 0x608 <.L16>

000005ea <.Loc.103>:
 5ea:	83 e2       	ldi	r24, 0x23	; 35
 5ec:	90 e0       	ldi	r25, 0x00	; 0
 5ee:	fc 01       	movw	r30, r24
 5f0:	80 81       	ld	r24, Z

000005f2 <.Loc.104>:
 5f2:	88 2f       	mov	r24, r24
 5f4:	90 e0       	ldi	r25, 0x00	; 0
 5f6:	80 74       	andi	r24, 0x40	; 64
 5f8:	99 27       	eor	r25, r25

000005fa <.Loc.105>:
 5fa:	00 97       	sbiw	r24, 0x00	; 0
 5fc:	29 f4       	brne	.+10     	; 0x608 <.L16>

000005fe <.Loc.106>:
            {
                toestand = 3;
 5fe:	83 e0       	ldi	r24, 0x03	; 3
 600:	90 e0       	ldi	r25, 0x00	; 0
 602:	9a 83       	std	Y+2, r25	; 0x02
 604:	89 83       	std	Y+1, r24	; 0x01

00000606 <.Loc.107>:
            }
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
            {
                toestand = 4;
            }
            break;
 606:	12 c1       	rjmp	.+548    	; 0x82c <.L28>

00000608 <.L16>:
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
 608:	83 e2       	ldi	r24, 0x23	; 35
 60a:	90 e0       	ldi	r25, 0x00	; 0
 60c:	fc 01       	movw	r30, r24
 60e:	80 81       	ld	r24, Z

00000610 <.Loc.109>:
 610:	88 23       	and	r24, r24
 612:	0c f0       	brlt	.+2      	; 0x616 <.Loc.110>

00000614 <L0^A>:
 614:	0b c1       	rjmp	.+534    	; 0x82c <.L28>

00000616 <.Loc.110>:
 616:	83 e2       	ldi	r24, 0x23	; 35
 618:	90 e0       	ldi	r25, 0x00	; 0
 61a:	fc 01       	movw	r30, r24
 61c:	80 81       	ld	r24, Z

0000061e <.Loc.111>:
 61e:	88 2f       	mov	r24, r24
 620:	90 e0       	ldi	r25, 0x00	; 0
 622:	80 74       	andi	r24, 0x40	; 64
 624:	99 27       	eor	r25, r25

00000626 <.Loc.112>:
 626:	00 97       	sbiw	r24, 0x00	; 0
 628:	09 f4       	brne	.+2      	; 0x62c <.Loc.113>

0000062a <L0^A>:
 62a:	00 c1       	rjmp	.+512    	; 0x82c <.L28>

0000062c <.Loc.113>:
                toestand = 4;
 62c:	84 e0       	ldi	r24, 0x04	; 4
 62e:	90 e0       	ldi	r25, 0x00	; 0
 630:	9a 83       	std	Y+2, r25	; 0x02
 632:	89 83       	std	Y+1, r24	; 0x01

00000634 <.Loc.114>:
            break;
 634:	fb c0       	rjmp	.+502    	; 0x82c <.L28>

00000636 <.L12>:
        case 2://naar rechts(te dichtbij links)
            //Motoren naar rechts
            h_bridgeR_set_percentage(snelheidzacht);
 636:	89 e1       	ldi	r24, 0x19	; 25
 638:	0e 94 8f 05 	call	0xb1e	; 0xb1e <h_bridgeR_set_percentage>

0000063c <.Loc.116>:
            h_bridgeL_set_percentage(snelheidhard);
 63c:	83 e2       	ldi	r24, 0x23	; 35
 63e:	0e 94 ce 05 	call	0xb9c	; 0xb9c <h_bridgeL_set_percentage>

00000642 <.Loc.117>:
            if(((IRregister & (1 << IRonderrechts)) == 0) && ((IRregister & (1 << IRonderlinks)) == 0))
 642:	83 e2       	ldi	r24, 0x23	; 35
 644:	90 e0       	ldi	r25, 0x00	; 0
 646:	fc 01       	movw	r30, r24
 648:	80 81       	ld	r24, Z

0000064a <.Loc.118>:
 64a:	88 23       	and	r24, r24
 64c:	7c f0       	brlt	.+30     	; 0x66c <.L18>

0000064e <.Loc.119>:
 64e:	83 e2       	ldi	r24, 0x23	; 35
 650:	90 e0       	ldi	r25, 0x00	; 0
 652:	fc 01       	movw	r30, r24
 654:	80 81       	ld	r24, Z

00000656 <.Loc.120>:
 656:	88 2f       	mov	r24, r24
 658:	90 e0       	ldi	r25, 0x00	; 0
 65a:	80 74       	andi	r24, 0x40	; 64
 65c:	99 27       	eor	r25, r25

0000065e <.Loc.121>:
 65e:	00 97       	sbiw	r24, 0x00	; 0
 660:	29 f4       	brne	.+10     	; 0x66c <.L18>

00000662 <.Loc.122>:
            {
                toestand = 3;
 662:	83 e0       	ldi	r24, 0x03	; 3
 664:	90 e0       	ldi	r25, 0x00	; 0
 666:	9a 83       	std	Y+2, r25	; 0x02
 668:	89 83       	std	Y+1, r24	; 0x01

0000066a <.Loc.123>:
            }
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
            {
                toestand = 4;
            }
            break;
 66a:	e2 c0       	rjmp	.+452    	; 0x830 <.L29>

0000066c <.L18>:
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
 66c:	83 e2       	ldi	r24, 0x23	; 35
 66e:	90 e0       	ldi	r25, 0x00	; 0
 670:	fc 01       	movw	r30, r24
 672:	80 81       	ld	r24, Z

00000674 <.Loc.125>:
 674:	88 23       	and	r24, r24
 676:	0c f0       	brlt	.+2      	; 0x67a <.Loc.126>

00000678 <L0^A>:
 678:	db c0       	rjmp	.+438    	; 0x830 <.L29>

0000067a <.Loc.126>:
 67a:	83 e2       	ldi	r24, 0x23	; 35
 67c:	90 e0       	ldi	r25, 0x00	; 0
 67e:	fc 01       	movw	r30, r24
 680:	80 81       	ld	r24, Z

00000682 <.Loc.127>:
 682:	88 2f       	mov	r24, r24
 684:	90 e0       	ldi	r25, 0x00	; 0
 686:	80 74       	andi	r24, 0x40	; 64
 688:	99 27       	eor	r25, r25

0000068a <.Loc.128>:
 68a:	00 97       	sbiw	r24, 0x00	; 0
 68c:	09 f4       	brne	.+2      	; 0x690 <.Loc.129>

0000068e <L0^A>:
 68e:	d0 c0       	rjmp	.+416    	; 0x830 <.L29>

00000690 <.Loc.129>:
                toestand = 4;
 690:	84 e0       	ldi	r24, 0x04	; 4
 692:	90 e0       	ldi	r25, 0x00	; 0
 694:	9a 83       	std	Y+2, r25	; 0x02
 696:	89 83       	std	Y+1, r24	; 0x01

00000698 <.Loc.130>:
            break;
 698:	cb c0       	rjmp	.+406    	; 0x830 <.L29>

0000069a <.L11>:
        case 3://rechtdoor
            //Motoren naar rechtdoor
            PORT |= (1 << PIN11);
 69a:	82 e2       	ldi	r24, 0x22	; 34
 69c:	90 e0       	ldi	r25, 0x00	; 0
 69e:	fc 01       	movw	r30, r24
 6a0:	20 81       	ld	r18, Z
 6a2:	82 e2       	ldi	r24, 0x22	; 34
 6a4:	90 e0       	ldi	r25, 0x00	; 0

000006a6 <.Loc.132>:
 6a6:	20 64       	ori	r18, 0x40	; 64
 6a8:	fc 01       	movw	r30, r24
 6aa:	20 83       	st	Z, r18

000006ac <.Loc.133>:
            PORT &= ~(1 << PIN12) ;
 6ac:	82 e2       	ldi	r24, 0x22	; 34
 6ae:	90 e0       	ldi	r25, 0x00	; 0
 6b0:	fc 01       	movw	r30, r24
 6b2:	20 81       	ld	r18, Z

000006b4 <.Loc.134>:
 6b4:	82 e2       	ldi	r24, 0x22	; 34
 6b6:	90 e0       	ldi	r25, 0x00	; 0

000006b8 <.Loc.135>:
 6b8:	2f 7d       	andi	r18, 0xDF	; 223
 6ba:	fc 01       	movw	r30, r24
 6bc:	20 83       	st	Z, r18

000006be <.Loc.136>:
            PORT &= ~(1 << PIN21);
 6be:	82 e2       	ldi	r24, 0x22	; 34
 6c0:	90 e0       	ldi	r25, 0x00	; 0
 6c2:	fc 01       	movw	r30, r24
 6c4:	20 81       	ld	r18, Z

000006c6 <.Loc.137>:
 6c6:	82 e2       	ldi	r24, 0x22	; 34
 6c8:	90 e0       	ldi	r25, 0x00	; 0

000006ca <.Loc.138>:
 6ca:	2f 7e       	andi	r18, 0xEF	; 239
 6cc:	fc 01       	movw	r30, r24
 6ce:	20 83       	st	Z, r18

000006d0 <.Loc.139>:
            PORT |= (1 << PIN22);
 6d0:	82 e2       	ldi	r24, 0x22	; 34
 6d2:	90 e0       	ldi	r25, 0x00	; 0
 6d4:	fc 01       	movw	r30, r24
 6d6:	20 81       	ld	r18, Z
 6d8:	82 e2       	ldi	r24, 0x22	; 34
 6da:	90 e0       	ldi	r25, 0x00	; 0

000006dc <.Loc.140>:
 6dc:	28 60       	ori	r18, 0x08	; 8
 6de:	fc 01       	movw	r30, r24
 6e0:	20 83       	st	Z, r18

000006e2 <.Loc.141>:
            h_bridgeR_set_percentage(snelheidrechtdoor);
 6e2:	8e e1       	ldi	r24, 0x1E	; 30
 6e4:	0e 94 8f 05 	call	0xb1e	; 0xb1e <h_bridgeR_set_percentage>

000006e8 <.Loc.142>:
            h_bridgeL_set_percentage(snelheidrechtdoor);
 6e8:	8e e1       	ldi	r24, 0x1E	; 30
 6ea:	0e 94 ce 05 	call	0xb9c	; 0xb9c <h_bridgeL_set_percentage>

000006ee <.Loc.143>:
            if(IRregister & (1 << IRonderrechts))
 6ee:	83 e2       	ldi	r24, 0x23	; 35
 6f0:	90 e0       	ldi	r25, 0x00	; 0
 6f2:	fc 01       	movw	r30, r24
 6f4:	80 81       	ld	r24, Z

000006f6 <.Loc.144>:
 6f6:	88 23       	and	r24, r24
 6f8:	2c f4       	brge	.+10     	; 0x704 <.L20>

000006fa <.Loc.145>:
            {
                toestand = 1;
 6fa:	81 e0       	ldi	r24, 0x01	; 1
 6fc:	90 e0       	ldi	r25, 0x00	; 0
 6fe:	9a 83       	std	Y+2, r25	; 0x02
 700:	89 83       	std	Y+1, r24	; 0x01

00000702 <.Loc.146>:
            }
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
            {
                toestand = 4;
            }
            break;
 702:	98 c0       	rjmp	.+304    	; 0x834 <.L30>

00000704 <.L20>:
            else if(IRregister & (1 << IRonderlinks))
 704:	83 e2       	ldi	r24, 0x23	; 35
 706:	90 e0       	ldi	r25, 0x00	; 0
 708:	fc 01       	movw	r30, r24
 70a:	80 81       	ld	r24, Z

0000070c <.Loc.148>:
 70c:	88 2f       	mov	r24, r24
 70e:	90 e0       	ldi	r25, 0x00	; 0
 710:	80 74       	andi	r24, 0x40	; 64
 712:	99 27       	eor	r25, r25

00000714 <.Loc.149>:
 714:	00 97       	sbiw	r24, 0x00	; 0
 716:	29 f0       	breq	.+10     	; 0x722 <.L22>

00000718 <.Loc.150>:
                toestand = 2;
 718:	82 e0       	ldi	r24, 0x02	; 2
 71a:	90 e0       	ldi	r25, 0x00	; 0
 71c:	9a 83       	std	Y+2, r25	; 0x02
 71e:	89 83       	std	Y+1, r24	; 0x01

00000720 <.Loc.151>:
            break;
 720:	89 c0       	rjmp	.+274    	; 0x834 <.L30>

00000722 <.L22>:
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
 722:	83 e2       	ldi	r24, 0x23	; 35
 724:	90 e0       	ldi	r25, 0x00	; 0
 726:	fc 01       	movw	r30, r24
 728:	80 81       	ld	r24, Z

0000072a <.Loc.153>:
 72a:	88 23       	and	r24, r24
 72c:	0c f0       	brlt	.+2      	; 0x730 <.Loc.154>

0000072e <L0^A>:
 72e:	82 c0       	rjmp	.+260    	; 0x834 <.L30>

00000730 <.Loc.154>:
 730:	83 e2       	ldi	r24, 0x23	; 35
 732:	90 e0       	ldi	r25, 0x00	; 0
 734:	fc 01       	movw	r30, r24
 736:	80 81       	ld	r24, Z

00000738 <.Loc.155>:
 738:	88 2f       	mov	r24, r24
 73a:	90 e0       	ldi	r25, 0x00	; 0
 73c:	80 74       	andi	r24, 0x40	; 64
 73e:	99 27       	eor	r25, r25

00000740 <.Loc.156>:
 740:	00 97       	sbiw	r24, 0x00	; 0
 742:	09 f4       	brne	.+2      	; 0x746 <.Loc.157>

00000744 <L0^A>:
 744:	77 c0       	rjmp	.+238    	; 0x834 <.L30>

00000746 <.Loc.157>:
                toestand = 4;
 746:	84 e0       	ldi	r24, 0x04	; 4
 748:	90 e0       	ldi	r25, 0x00	; 0
 74a:	9a 83       	std	Y+2, r25	; 0x02
 74c:	89 83       	std	Y+1, r24	; 0x01

0000074e <.Loc.158>:
            break;
 74e:	72 c0       	rjmp	.+228    	; 0x834 <.L30>

00000750 <.L10>:
        case 4://Rijstrook wisselen naar links
            TCCR0B = (1 << CS02) | (0 << CS01) | (1 << CS00);
 750:	85 e4       	ldi	r24, 0x45	; 69
 752:	90 e0       	ldi	r25, 0x00	; 0

00000754 <.Loc.160>:
 754:	25 e0       	ldi	r18, 0x05	; 5
 756:	fc 01       	movw	r30, r24
 758:	20 83       	st	Z, r18

0000075a <.Loc.161>:
            if(timerteller == 15000)//een seconde zijn voorbij
 75a:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <timerteller>
 75e:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <timerteller+0x1>

00000762 <.Loc.162>:
 762:	88 39       	cpi	r24, 0x98	; 152
 764:	fa e3       	ldi	r31, 0x3A	; 58
 766:	9f 07       	cpc	r25, r31
 768:	09 f0       	breq	.+2      	; 0x76c <.Loc.163>

0000076a <L0^A>:
 76a:	66 c0       	rjmp	.+204    	; 0x838 <.L31>

0000076c <.Loc.163>:
            {
                timerteller = 0;
 76c:	10 92 07 02 	sts	0x0207, r1	; 0x800207 <timerteller+0x1>
 770:	10 92 06 02 	sts	0x0206, r1	; 0x800206 <timerteller>

00000774 <.Loc.164>:
                TCCR0B = 0;
 774:	85 e4       	ldi	r24, 0x45	; 69
 776:	90 e0       	ldi	r25, 0x00	; 0

00000778 <.Loc.165>:
 778:	fc 01       	movw	r30, r24
 77a:	10 82       	st	Z, r1

0000077c <.Loc.166>:
                h_bridgeR_set_percentage(snelheidhard);
 77c:	83 e2       	ldi	r24, 0x23	; 35
 77e:	0e 94 8f 05 	call	0xb1e	; 0xb1e <h_bridgeR_set_percentage>

00000782 <.Loc.167>:
                h_bridgeL_set_percentage(snelheidzacht);
 782:	89 e1       	ldi	r24, 0x19	; 25
 784:	0e 94 ce 05 	call	0xb9c	; 0xb9c <h_bridgeL_set_percentage>

00000788 <.Loc.168>:
                if(((IRregister & (1 << IRonderlinks)) == 0) && ((IRregister & (1 << IRonderrechts)) == 0))
 788:	83 e2       	ldi	r24, 0x23	; 35
 78a:	90 e0       	ldi	r25, 0x00	; 0
 78c:	fc 01       	movw	r30, r24
 78e:	80 81       	ld	r24, Z

00000790 <.Loc.169>:
 790:	88 2f       	mov	r24, r24
 792:	90 e0       	ldi	r25, 0x00	; 0
 794:	80 74       	andi	r24, 0x40	; 64
 796:	99 27       	eor	r25, r25

00000798 <.Loc.170>:
 798:	00 97       	sbiw	r24, 0x00	; 0
 79a:	09 f0       	breq	.+2      	; 0x79e <.Loc.171>

0000079c <L0^A>:
 79c:	4d c0       	rjmp	.+154    	; 0x838 <.L31>

0000079e <.Loc.171>:
 79e:	83 e2       	ldi	r24, 0x23	; 35
 7a0:	90 e0       	ldi	r25, 0x00	; 0
 7a2:	fc 01       	movw	r30, r24
 7a4:	80 81       	ld	r24, Z

000007a6 <.Loc.172>:
 7a6:	88 23       	and	r24, r24
 7a8:	0c f4       	brge	.+2      	; 0x7ac <.Loc.173>

000007aa <L0^A>:
 7aa:	46 c0       	rjmp	.+140    	; 0x838 <.L31>

000007ac <.Loc.173>:
                {
                    toestand = 3;
 7ac:	83 e0       	ldi	r24, 0x03	; 3
 7ae:	90 e0       	ldi	r25, 0x00	; 0
 7b0:	9a 83       	std	Y+2, r25	; 0x02
 7b2:	89 83       	std	Y+1, r24	; 0x01

000007b4 <.Loc.174>:
                }
            }
            break;
 7b4:	41 c0       	rjmp	.+130    	; 0x838 <.L31>

000007b6 <.L8>:
        case 5://signaal geven
            //motoren uit
            PORT &= ~(1 << PIN11);//MOETEN ZE 1 OF 0!!!!
 7b6:	82 e2       	ldi	r24, 0x22	; 34
 7b8:	90 e0       	ldi	r25, 0x00	; 0
 7ba:	fc 01       	movw	r30, r24
 7bc:	20 81       	ld	r18, Z

000007be <.Loc.176>:
 7be:	82 e2       	ldi	r24, 0x22	; 34
 7c0:	90 e0       	ldi	r25, 0x00	; 0

000007c2 <.Loc.177>:
 7c2:	2f 7b       	andi	r18, 0xBF	; 191
 7c4:	fc 01       	movw	r30, r24
 7c6:	20 83       	st	Z, r18

000007c8 <.Loc.178>:
            PORT &= ~(1 << PIN12);
 7c8:	82 e2       	ldi	r24, 0x22	; 34
 7ca:	90 e0       	ldi	r25, 0x00	; 0
 7cc:	fc 01       	movw	r30, r24
 7ce:	20 81       	ld	r18, Z

000007d0 <.Loc.179>:
 7d0:	82 e2       	ldi	r24, 0x22	; 34
 7d2:	90 e0       	ldi	r25, 0x00	; 0

000007d4 <.Loc.180>:
 7d4:	2f 7d       	andi	r18, 0xDF	; 223
 7d6:	fc 01       	movw	r30, r24
 7d8:	20 83       	st	Z, r18

000007da <.Loc.181>:
            PORT &= ~(1 << PIN21);
 7da:	82 e2       	ldi	r24, 0x22	; 34
 7dc:	90 e0       	ldi	r25, 0x00	; 0
 7de:	fc 01       	movw	r30, r24
 7e0:	20 81       	ld	r18, Z

000007e2 <.Loc.182>:
 7e2:	82 e2       	ldi	r24, 0x22	; 34
 7e4:	90 e0       	ldi	r25, 0x00	; 0

000007e6 <.Loc.183>:
 7e6:	2f 7e       	andi	r18, 0xEF	; 239
 7e8:	fc 01       	movw	r30, r24
 7ea:	20 83       	st	Z, r18

000007ec <.Loc.184>:
            PORT &= ~(1 << PIN22);
 7ec:	82 e2       	ldi	r24, 0x22	; 34
 7ee:	90 e0       	ldi	r25, 0x00	; 0
 7f0:	fc 01       	movw	r30, r24
 7f2:	20 81       	ld	r18, Z

000007f4 <.Loc.185>:
 7f4:	82 e2       	ldi	r24, 0x22	; 34
 7f6:	90 e0       	ldi	r25, 0x00	; 0

000007f8 <.Loc.186>:
 7f8:	27 7f       	andi	r18, 0xF7	; 247
 7fa:	fc 01       	movw	r30, r24
 7fc:	20 83       	st	Z, r18

000007fe <.LBB18>:
            for (int i = 0; i < 10; i++)
 7fe:	1c 82       	std	Y+4, r1	; 0x04
 800:	1b 82       	std	Y+3, r1	; 0x03

00000802 <.Loc.188>:
 802:	07 c0       	rjmp	.+14     	; 0x812 <.L24>

00000804 <.L25>:
            {
                signaal_geven();
 804:	0e 94 1e 04 	call	0x83c	; 0x83c <signaal_geven>

00000808 <.Loc.190>:
            for (int i = 0; i < 10; i++)
 808:	8b 81       	ldd	r24, Y+3	; 0x03
 80a:	9c 81       	ldd	r25, Y+4	; 0x04
 80c:	01 96       	adiw	r24, 0x01	; 1
 80e:	9c 83       	std	Y+4, r25	; 0x04
 810:	8b 83       	std	Y+3, r24	; 0x03

00000812 <.L24>:
 812:	8b 81       	ldd	r24, Y+3	; 0x03
 814:	9c 81       	ldd	r25, Y+4	; 0x04
 816:	89 30       	cpi	r24, 0x09	; 9
 818:	91 05       	cpc	r25, r1
 81a:	a1 f3       	breq	.-24     	; 0x804 <.L25>
 81c:	9c f3       	brlt	.-26     	; 0x804 <.L25>

0000081e <.LBE18>:
            }
            toestand = 3;
 81e:	83 e0       	ldi	r24, 0x03	; 3
 820:	90 e0       	ldi	r25, 0x00	; 0
 822:	9a 83       	std	Y+2, r25	; 0x02
 824:	89 83       	std	Y+1, r24	; 0x01

00000826 <.Loc.193>:
            break;
 826:	09 c0       	rjmp	.+18     	; 0x83a <.L9>

00000828 <.L27>:
            break;
 828:	00 00       	nop
 82a:	57 ce       	rjmp	.-850    	; 0x4da <.L26>

0000082c <.L28>:
            break;
 82c:	00 00       	nop
 82e:	55 ce       	rjmp	.-854    	; 0x4da <.L26>

00000830 <.L29>:
            break;
 830:	00 00       	nop
 832:	53 ce       	rjmp	.-858    	; 0x4da <.L26>

00000834 <.L30>:
            break;
 834:	00 00       	nop
 836:	51 ce       	rjmp	.-862    	; 0x4da <.L26>

00000838 <.L31>:
	...

0000083a <.L9>:
        switch(toestand)
 83a:	4f ce       	rjmp	.-866    	; 0x4da <.L26>

0000083c <signaal_geven>:

    return 0;
}

void signaal_geven()
{
 83c:	cf 93       	push	r28
 83e:	df 93       	push	r29
 840:	cd b7       	in	r28, 0x3d	; 61
 842:	de b7       	in	r29, 0x3e	; 62
 844:	c4 54       	subi	r28, 0x44	; 68
 846:	d1 09       	sbc	r29, r1
 848:	0f b6       	in	r0, 0x3f	; 63
 84a:	f8 94       	cli
 84c:	de bf       	out	0x3e, r29	; 62
 84e:	0f be       	out	0x3f, r0	; 63
 850:	cd bf       	out	0x3d, r28	; 61

00000852 <.Loc.201>:
    PORT_LED |= (1<<LED_1);         // LED 1 aan
 852:	8e e2       	ldi	r24, 0x2E	; 46
 854:	90 e0       	ldi	r25, 0x00	; 0
 856:	dc 01       	movw	r26, r24
 858:	2c 91       	ld	r18, X
 85a:	8e e2       	ldi	r24, 0x2E	; 46
 85c:	90 e0       	ldi	r25, 0x00	; 0

0000085e <.Loc.202>:
 85e:	20 62       	ori	r18, 0x20	; 32
 860:	fc 01       	movw	r30, r24
 862:	20 83       	st	Z, r18

00000864 <.Loc.203>:
    PORT_LED &= ~(1<<LED_2);        // LED 2 uit
 864:	8e e2       	ldi	r24, 0x2E	; 46
 866:	90 e0       	ldi	r25, 0x00	; 0
 868:	dc 01       	movw	r26, r24
 86a:	2c 91       	ld	r18, X

0000086c <.Loc.204>:
 86c:	8e e2       	ldi	r24, 0x2E	; 46
 86e:	90 e0       	ldi	r25, 0x00	; 0

00000870 <.Loc.205>:
 870:	2f 7e       	andi	r18, 0xEF	; 239
 872:	fc 01       	movw	r30, r24
 874:	20 83       	st	Z, r18

00000876 <.Loc.206>:
    PORT_buzzer |= (1<<buzzer);     // buzzer aan
 876:	8e e2       	ldi	r24, 0x2E	; 46
 878:	90 e0       	ldi	r25, 0x00	; 0
 87a:	dc 01       	movw	r26, r24
 87c:	2c 91       	ld	r18, X
 87e:	8e e2       	ldi	r24, 0x2E	; 46
 880:	90 e0       	ldi	r25, 0x00	; 0

00000882 <.Loc.207>:
 882:	28 60       	ori	r18, 0x08	; 8
 884:	fc 01       	movw	r30, r24
 886:	20 83       	st	Z, r18
 888:	80 e0       	ldi	r24, 0x00	; 0
 88a:	90 e0       	ldi	r25, 0x00	; 0
 88c:	aa ef       	ldi	r26, 0xFA	; 250
 88e:	b3 e4       	ldi	r27, 0x43	; 67
 890:	8f 87       	std	Y+15, r24	; 0x0f
 892:	98 8b       	std	Y+16, r25	; 0x10
 894:	a9 8b       	std	Y+17, r26	; 0x11
 896:	ba 8b       	std	Y+18, r27	; 0x12

00000898 <.LBB19>:

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 898:	20 e0       	ldi	r18, 0x00	; 0
 89a:	30 e0       	ldi	r19, 0x00	; 0
 89c:	4a e7       	ldi	r20, 0x7A	; 122
 89e:	55 e4       	ldi	r21, 0x45	; 69
 8a0:	6f 85       	ldd	r22, Y+15	; 0x0f
 8a2:	78 89       	ldd	r23, Y+16	; 0x10
 8a4:	89 89       	ldd	r24, Y+17	; 0x11
 8a6:	9a 89       	ldd	r25, Y+18	; 0x12
 8a8:	0e 94 d4 06 	call	0xda8	; 0xda8 <__mulsf3>
 8ac:	6d a3       	std	Y+37, r22	; 0x25
 8ae:	7e a3       	std	Y+38, r23	; 0x26
 8b0:	8f a3       	std	Y+39, r24	; 0x27
 8b2:	98 a7       	std	Y+40, r25	; 0x28
 8b4:	8d a1       	ldd	r24, Y+37	; 0x25
 8b6:	9e a1       	ldd	r25, Y+38	; 0x26
 8b8:	af a1       	ldd	r26, Y+39	; 0x27
 8ba:	b8 a5       	ldd	r27, Y+40	; 0x28
 8bc:	8b 8b       	std	Y+19, r24	; 0x13
 8be:	9c 8b       	std	Y+20, r25	; 0x14
 8c0:	ad 8b       	std	Y+21, r26	; 0x15
 8c2:	be 8b       	std	Y+22, r27	; 0x16

000008c4 <.Loc.209>:
	if (__tmp < 1.0)
 8c4:	20 e0       	ldi	r18, 0x00	; 0
 8c6:	30 e0       	ldi	r19, 0x00	; 0
 8c8:	40 e8       	ldi	r20, 0x80	; 128
 8ca:	5f e3       	ldi	r21, 0x3F	; 63
 8cc:	6b 89       	ldd	r22, Y+19	; 0x13
 8ce:	7c 89       	ldd	r23, Y+20	; 0x14
 8d0:	8d 89       	ldd	r24, Y+21	; 0x15
 8d2:	9e 89       	ldd	r25, Y+22	; 0x16
 8d4:	0e 94 4e 06 	call	0xc9c	; 0xc9c <__cmpsf2>
 8d8:	88 23       	and	r24, r24
 8da:	2c f4       	brge	.+10     	; 0x8e6 <.L53>

000008dc <.Loc.210>:
		__ticks = 1;
 8dc:	81 e0       	ldi	r24, 0x01	; 1
 8de:	90 e0       	ldi	r25, 0x00	; 0
 8e0:	98 8f       	std	Y+24, r25	; 0x18
 8e2:	8f 8b       	std	Y+23, r24	; 0x17
 8e4:	55 c0       	rjmp	.+170    	; 0x990 <.L35>

000008e6 <.L53>:
	else if (__tmp > 65535)
 8e6:	20 e0       	ldi	r18, 0x00	; 0
 8e8:	3f ef       	ldi	r19, 0xFF	; 255
 8ea:	4f e7       	ldi	r20, 0x7F	; 127
 8ec:	57 e4       	ldi	r21, 0x47	; 71
 8ee:	6b 89       	ldd	r22, Y+19	; 0x13
 8f0:	7c 89       	ldd	r23, Y+20	; 0x14
 8f2:	8d 89       	ldd	r24, Y+21	; 0x15
 8f4:	9e 89       	ldd	r25, Y+22	; 0x16
 8f6:	0e 94 cf 06 	call	0xd9e	; 0xd9e <__gesf2>
 8fa:	88 23       	and	r24, r24
 8fc:	d9 f1       	breq	.+118    	; 0x974 <.L54>
 8fe:	d4 f1       	brlt	.+116    	; 0x974 <.L54>

00000900 <.Loc.212>:
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 900:	20 e0       	ldi	r18, 0x00	; 0
 902:	30 e0       	ldi	r19, 0x00	; 0
 904:	40 e2       	ldi	r20, 0x20	; 32
 906:	51 e4       	ldi	r21, 0x41	; 65
 908:	6f 85       	ldd	r22, Y+15	; 0x0f
 90a:	78 89       	ldd	r23, Y+16	; 0x10
 90c:	89 89       	ldd	r24, Y+17	; 0x11
 90e:	9a 89       	ldd	r25, Y+18	; 0x12
 910:	0e 94 d4 06 	call	0xda8	; 0xda8 <__mulsf3>
 914:	69 a7       	std	Y+41, r22	; 0x29
 916:	7a a7       	std	Y+42, r23	; 0x2a
 918:	8b a7       	std	Y+43, r24	; 0x2b
 91a:	9c a7       	std	Y+44, r25	; 0x2c
 91c:	89 a5       	ldd	r24, Y+41	; 0x29
 91e:	9a a5       	ldd	r25, Y+42	; 0x2a
 920:	ab a5       	ldd	r26, Y+43	; 0x2b
 922:	bc a5       	ldd	r27, Y+44	; 0x2c
 924:	89 a3       	std	Y+33, r24	; 0x21
 926:	9a a3       	std	Y+34, r25	; 0x22
 928:	ab a3       	std	Y+35, r26	; 0x23
 92a:	bc a3       	std	Y+36, r27	; 0x24

0000092c <.Loc.213>:
 92c:	69 a1       	ldd	r22, Y+33	; 0x21
 92e:	7a a1       	ldd	r23, Y+34	; 0x22
 930:	8b a1       	ldd	r24, Y+35	; 0x23
 932:	9c a1       	ldd	r25, Y+36	; 0x24
 934:	0e 94 53 06 	call	0xca6	; 0xca6 <__fixunssfsi>
 938:	6d a7       	std	Y+45, r22	; 0x2d
 93a:	7e a7       	std	Y+46, r23	; 0x2e
 93c:	8f a7       	std	Y+47, r24	; 0x2f
 93e:	98 ab       	std	Y+48, r25	; 0x30
 940:	ad a5       	ldd	r26, Y+45	; 0x2d
 942:	be a5       	ldd	r27, Y+46	; 0x2e
 944:	b8 8f       	std	Y+24, r27	; 0x18
 946:	af 8b       	std	Y+23, r26	; 0x17

00000948 <.Loc.214>:
		while(__ticks)
 948:	10 c0       	rjmp	.+32     	; 0x96a <.L38>

0000094a <.L39>:
 94a:	80 e9       	ldi	r24, 0x90	; 144
 94c:	91 e0       	ldi	r25, 0x01	; 1
 94e:	9a 8f       	std	Y+26, r25	; 0x1a
 950:	89 8f       	std	Y+25, r24	; 0x19

00000952 <.LBB21>:
		"sbc %B0,__zero_reg__"    "\n\t"
		"brne 1b"
		: "+d" (__count)
	);
#else
	__asm__ volatile (
 952:	89 8d       	ldd	r24, Y+25	; 0x19
 954:	9a 8d       	ldd	r25, Y+26	; 0x1a

00000956 <.L1^B1>:
 956:	01 97       	sbiw	r24, 0x01	; 1
 958:	f1 f7       	brne	.-4      	; 0x956 <.L1^B1>
 95a:	9a 8f       	std	Y+26, r25	; 0x1a
 95c:	89 8f       	std	Y+25, r24	; 0x19

0000095e <.Loc.216>:
	...

00000960 <.LBE21>:
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 960:	8f 89       	ldd	r24, Y+23	; 0x17
 962:	98 8d       	ldd	r25, Y+24	; 0x18
 964:	01 97       	sbiw	r24, 0x01	; 1
 966:	98 8f       	std	Y+24, r25	; 0x18
 968:	8f 8b       	std	Y+23, r24	; 0x17

0000096a <.L38>:
		while(__ticks)
 96a:	8f 89       	ldd	r24, Y+23	; 0x17
 96c:	98 8d       	ldd	r25, Y+24	; 0x18
 96e:	00 97       	sbiw	r24, 0x00	; 0
 970:	61 f7       	brne	.-40     	; 0x94a <.L39>

00000972 <.Loc.219>:
		}
		return;
 972:	19 c0       	rjmp	.+50     	; 0x9a6 <.L40>

00000974 <.L54>:
	}
	else
		__ticks = (uint16_t)__tmp;
 974:	6b 89       	ldd	r22, Y+19	; 0x13
 976:	7c 89       	ldd	r23, Y+20	; 0x14
 978:	8d 89       	ldd	r24, Y+21	; 0x15
 97a:	9e 89       	ldd	r25, Y+22	; 0x16
 97c:	0e 94 53 06 	call	0xca6	; 0xca6 <__fixunssfsi>
 980:	69 ab       	std	Y+49, r22	; 0x31
 982:	7a ab       	std	Y+50, r23	; 0x32
 984:	8b ab       	std	Y+51, r24	; 0x33
 986:	9c ab       	std	Y+52, r25	; 0x34
 988:	e9 a9       	ldd	r30, Y+49	; 0x31
 98a:	fa a9       	ldd	r31, Y+50	; 0x32
 98c:	f8 8f       	std	Y+24, r31	; 0x18
 98e:	ef 8b       	std	Y+23, r30	; 0x17

00000990 <.L35>:
 990:	8f 89       	ldd	r24, Y+23	; 0x17
 992:	98 8d       	ldd	r25, Y+24	; 0x18
 994:	9c 8f       	std	Y+28, r25	; 0x1c
 996:	8b 8f       	std	Y+27, r24	; 0x1b

00000998 <.LBB23>:
 998:	8b 8d       	ldd	r24, Y+27	; 0x1b
 99a:	9c 8d       	ldd	r25, Y+28	; 0x1c

0000099c <.L1^B2>:
 99c:	01 97       	sbiw	r24, 0x01	; 1
 99e:	f1 f7       	brne	.-4      	; 0x99c <.L1^B2>
 9a0:	9c 8f       	std	Y+28, r25	; 0x1c
 9a2:	8b 8f       	std	Y+27, r24	; 0x1b

000009a4 <.Loc.222>:
	...

000009a6 <.L40>:
    _delay_ms(500);
    PORT_LED |= (1<<LED_2);         // LED 2 aan
 9a6:	8e e2       	ldi	r24, 0x2E	; 46
 9a8:	90 e0       	ldi	r25, 0x00	; 0
 9aa:	dc 01       	movw	r26, r24
 9ac:	2c 91       	ld	r18, X
 9ae:	8e e2       	ldi	r24, 0x2E	; 46
 9b0:	90 e0       	ldi	r25, 0x00	; 0

000009b2 <.Loc.224>:
 9b2:	20 61       	ori	r18, 0x10	; 16
 9b4:	fc 01       	movw	r30, r24
 9b6:	20 83       	st	Z, r18

000009b8 <.Loc.225>:
    PORT_LED &= ~(1<<LED_1);        // LED 1 uit
 9b8:	8e e2       	ldi	r24, 0x2E	; 46
 9ba:	90 e0       	ldi	r25, 0x00	; 0
 9bc:	dc 01       	movw	r26, r24
 9be:	2c 91       	ld	r18, X

000009c0 <.Loc.226>:
 9c0:	8e e2       	ldi	r24, 0x2E	; 46
 9c2:	90 e0       	ldi	r25, 0x00	; 0

000009c4 <.Loc.227>:
 9c4:	2f 7d       	andi	r18, 0xDF	; 223
 9c6:	fc 01       	movw	r30, r24
 9c8:	20 83       	st	Z, r18

000009ca <.Loc.228>:
    PORT_buzzer &= ~(1<<buzzer);    // buzzer uit
 9ca:	8e e2       	ldi	r24, 0x2E	; 46
 9cc:	90 e0       	ldi	r25, 0x00	; 0
 9ce:	dc 01       	movw	r26, r24
 9d0:	2c 91       	ld	r18, X

000009d2 <.Loc.229>:
 9d2:	8e e2       	ldi	r24, 0x2E	; 46
 9d4:	90 e0       	ldi	r25, 0x00	; 0

000009d6 <.Loc.230>:
 9d6:	27 7f       	andi	r18, 0xF7	; 247
 9d8:	fc 01       	movw	r30, r24
 9da:	20 83       	st	Z, r18
 9dc:	80 e0       	ldi	r24, 0x00	; 0
 9de:	90 e0       	ldi	r25, 0x00	; 0
 9e0:	aa ef       	ldi	r26, 0xFA	; 250
 9e2:	b3 e4       	ldi	r27, 0x43	; 67
 9e4:	89 83       	std	Y+1, r24	; 0x01
 9e6:	9a 83       	std	Y+2, r25	; 0x02
 9e8:	ab 83       	std	Y+3, r26	; 0x03
 9ea:	bc 83       	std	Y+4, r27	; 0x04

000009ec <.LBB25>:
	__tmp = ((F_CPU) / 4e3) * __ms;
 9ec:	20 e0       	ldi	r18, 0x00	; 0
 9ee:	30 e0       	ldi	r19, 0x00	; 0
 9f0:	4a e7       	ldi	r20, 0x7A	; 122
 9f2:	55 e4       	ldi	r21, 0x45	; 69
 9f4:	69 81       	ldd	r22, Y+1	; 0x01
 9f6:	7a 81       	ldd	r23, Y+2	; 0x02
 9f8:	8b 81       	ldd	r24, Y+3	; 0x03
 9fa:	9c 81       	ldd	r25, Y+4	; 0x04
 9fc:	0e 94 d4 06 	call	0xda8	; 0xda8 <__mulsf3>
 a00:	6d ab       	std	Y+53, r22	; 0x35
 a02:	7e ab       	std	Y+54, r23	; 0x36
 a04:	8f ab       	std	Y+55, r24	; 0x37
 a06:	98 af       	std	Y+56, r25	; 0x38
 a08:	8d a9       	ldd	r24, Y+53	; 0x35
 a0a:	9e a9       	ldd	r25, Y+54	; 0x36
 a0c:	af a9       	ldd	r26, Y+55	; 0x37
 a0e:	b8 ad       	ldd	r27, Y+56	; 0x38
 a10:	8d 83       	std	Y+5, r24	; 0x05
 a12:	9e 83       	std	Y+6, r25	; 0x06
 a14:	af 83       	std	Y+7, r26	; 0x07
 a16:	b8 87       	std	Y+8, r27	; 0x08

00000a18 <.Loc.232>:
	if (__tmp < 1.0)
 a18:	20 e0       	ldi	r18, 0x00	; 0
 a1a:	30 e0       	ldi	r19, 0x00	; 0
 a1c:	40 e8       	ldi	r20, 0x80	; 128
 a1e:	5f e3       	ldi	r21, 0x3F	; 63
 a20:	6d 81       	ldd	r22, Y+5	; 0x05
 a22:	7e 81       	ldd	r23, Y+6	; 0x06
 a24:	8f 81       	ldd	r24, Y+7	; 0x07
 a26:	98 85       	ldd	r25, Y+8	; 0x08
 a28:	0e 94 4e 06 	call	0xc9c	; 0xc9c <__cmpsf2>
 a2c:	88 23       	and	r24, r24
 a2e:	2c f4       	brge	.+10     	; 0xa3a <.L55>

00000a30 <.Loc.233>:
		__ticks = 1;
 a30:	81 e0       	ldi	r24, 0x01	; 1
 a32:	90 e0       	ldi	r25, 0x00	; 0
 a34:	9a 87       	std	Y+10, r25	; 0x0a
 a36:	89 87       	std	Y+9, r24	; 0x09
 a38:	5c c0       	rjmp	.+184    	; 0xaf2 <.L43>

00000a3a <.L55>:
	else if (__tmp > 65535)
 a3a:	20 e0       	ldi	r18, 0x00	; 0
 a3c:	3f ef       	ldi	r19, 0xFF	; 255
 a3e:	4f e7       	ldi	r20, 0x7F	; 127
 a40:	57 e4       	ldi	r21, 0x47	; 71
 a42:	6d 81       	ldd	r22, Y+5	; 0x05
 a44:	7e 81       	ldd	r23, Y+6	; 0x06
 a46:	8f 81       	ldd	r24, Y+7	; 0x07
 a48:	98 85       	ldd	r25, Y+8	; 0x08
 a4a:	0e 94 cf 06 	call	0xd9e	; 0xd9e <__gesf2>
 a4e:	88 23       	and	r24, r24
 a50:	09 f0       	breq	.+2      	; 0xa54 <L0^A>

00000a52 <L0^A>:
 a52:	0c f4       	brge	.+2      	; 0xa56 <.Loc.235>

00000a54 <L0^A>:
 a54:	3c c0       	rjmp	.+120    	; 0xace <.L56>

00000a56 <.Loc.235>:
		__ticks = (uint16_t) (__ms * 10.0);
 a56:	20 e0       	ldi	r18, 0x00	; 0
 a58:	30 e0       	ldi	r19, 0x00	; 0
 a5a:	40 e2       	ldi	r20, 0x20	; 32
 a5c:	51 e4       	ldi	r21, 0x41	; 65
 a5e:	69 81       	ldd	r22, Y+1	; 0x01
 a60:	7a 81       	ldd	r23, Y+2	; 0x02
 a62:	8b 81       	ldd	r24, Y+3	; 0x03
 a64:	9c 81       	ldd	r25, Y+4	; 0x04
 a66:	0e 94 d4 06 	call	0xda8	; 0xda8 <__mulsf3>
 a6a:	69 af       	std	Y+57, r22	; 0x39
 a6c:	7a af       	std	Y+58, r23	; 0x3a
 a6e:	8b af       	std	Y+59, r24	; 0x3b
 a70:	9c af       	std	Y+60, r25	; 0x3c
 a72:	89 ad       	ldd	r24, Y+57	; 0x39
 a74:	9a ad       	ldd	r25, Y+58	; 0x3a
 a76:	ab ad       	ldd	r26, Y+59	; 0x3b
 a78:	bc ad       	ldd	r27, Y+60	; 0x3c
 a7a:	8d 8f       	std	Y+29, r24	; 0x1d
 a7c:	9e 8f       	std	Y+30, r25	; 0x1e
 a7e:	af 8f       	std	Y+31, r26	; 0x1f
 a80:	b8 a3       	std	Y+32, r27	; 0x20

00000a82 <.Loc.236>:
 a82:	6d 8d       	ldd	r22, Y+29	; 0x1d
 a84:	7e 8d       	ldd	r23, Y+30	; 0x1e
 a86:	8f 8d       	ldd	r24, Y+31	; 0x1f
 a88:	98 a1       	ldd	r25, Y+32	; 0x20
 a8a:	0e 94 53 06 	call	0xca6	; 0xca6 <__fixunssfsi>
 a8e:	21 96       	adiw	r28, 0x01	; 1
 a90:	6c af       	std	Y+60, r22	; 0x3c
 a92:	7d af       	std	Y+61, r23	; 0x3d
 a94:	8e af       	std	Y+62, r24	; 0x3e
 a96:	9f af       	std	Y+63, r25	; 0x3f
 a98:	21 97       	sbiw	r28, 0x01	; 1
 a9a:	ad ad       	ldd	r26, Y+61	; 0x3d
 a9c:	be ad       	ldd	r27, Y+62	; 0x3e
 a9e:	ba 87       	std	Y+10, r27	; 0x0a
 aa0:	a9 87       	std	Y+9, r26	; 0x09

00000aa2 <.Loc.237>:
		while(__ticks)
 aa2:	10 c0       	rjmp	.+32     	; 0xac4 <.L46>

00000aa4 <.L47>:
 aa4:	80 e9       	ldi	r24, 0x90	; 144
 aa6:	91 e0       	ldi	r25, 0x01	; 1
 aa8:	9c 87       	std	Y+12, r25	; 0x0c
 aaa:	8b 87       	std	Y+11, r24	; 0x0b

00000aac <.LBB27>:
 aac:	8b 85       	ldd	r24, Y+11	; 0x0b
 aae:	9c 85       	ldd	r25, Y+12	; 0x0c

00000ab0 <.L1^B3>:
 ab0:	01 97       	sbiw	r24, 0x01	; 1
 ab2:	f1 f7       	brne	.-4      	; 0xab0 <.L1^B3>
 ab4:	9c 87       	std	Y+12, r25	; 0x0c
 ab6:	8b 87       	std	Y+11, r24	; 0x0b

00000ab8 <.Loc.239>:
	...

00000aba <.LBE27>:
			__ticks --;
 aba:	89 85       	ldd	r24, Y+9	; 0x09
 abc:	9a 85       	ldd	r25, Y+10	; 0x0a
 abe:	01 97       	sbiw	r24, 0x01	; 1
 ac0:	9a 87       	std	Y+10, r25	; 0x0a
 ac2:	89 87       	std	Y+9, r24	; 0x09

00000ac4 <.L46>:
		while(__ticks)
 ac4:	89 85       	ldd	r24, Y+9	; 0x09
 ac6:	9a 85       	ldd	r25, Y+10	; 0x0a
 ac8:	00 97       	sbiw	r24, 0x00	; 0
 aca:	61 f7       	brne	.-40     	; 0xaa4 <.L47>

00000acc <.Loc.242>:
		return;
 acc:	1d c0       	rjmp	.+58     	; 0xb08 <.L48>

00000ace <.L56>:
		__ticks = (uint16_t)__tmp;
 ace:	6d 81       	ldd	r22, Y+5	; 0x05
 ad0:	7e 81       	ldd	r23, Y+6	; 0x06
 ad2:	8f 81       	ldd	r24, Y+7	; 0x07
 ad4:	98 85       	ldd	r25, Y+8	; 0x08
 ad6:	0e 94 53 06 	call	0xca6	; 0xca6 <__fixunssfsi>
 ada:	25 96       	adiw	r28, 0x05	; 5
 adc:	6c af       	std	Y+60, r22	; 0x3c
 ade:	7d af       	std	Y+61, r23	; 0x3d
 ae0:	8e af       	std	Y+62, r24	; 0x3e
 ae2:	9f af       	std	Y+63, r25	; 0x3f
 ae4:	25 97       	sbiw	r28, 0x05	; 5
 ae6:	23 96       	adiw	r28, 0x03	; 3
 ae8:	ee ad       	ldd	r30, Y+62	; 0x3e
 aea:	ff ad       	ldd	r31, Y+63	; 0x3f
 aec:	23 97       	sbiw	r28, 0x03	; 3
 aee:	fa 87       	std	Y+10, r31	; 0x0a
 af0:	e9 87       	std	Y+9, r30	; 0x09

00000af2 <.L43>:
 af2:	89 85       	ldd	r24, Y+9	; 0x09
 af4:	9a 85       	ldd	r25, Y+10	; 0x0a
 af6:	9e 87       	std	Y+14, r25	; 0x0e
 af8:	8d 87       	std	Y+13, r24	; 0x0d

00000afa <.LBB29>:
 afa:	8d 85       	ldd	r24, Y+13	; 0x0d
 afc:	9e 85       	ldd	r25, Y+14	; 0x0e

00000afe <.L1^B4>:
 afe:	01 97       	sbiw	r24, 0x01	; 1
 b00:	f1 f7       	brne	.-4      	; 0xafe <.L1^B4>
 b02:	9e 87       	std	Y+14, r25	; 0x0e
 b04:	8d 87       	std	Y+13, r24	; 0x0d

00000b06 <.Loc.245>:
	...

00000b08 <.L48>:
    _delay_ms(500);
}
 b08:	00 00       	nop
 b0a:	cc 5b       	subi	r28, 0xBC	; 188
 b0c:	df 4f       	sbci	r29, 0xFF	; 255
 b0e:	0f b6       	in	r0, 0x3f	; 63
 b10:	f8 94       	cli
 b12:	de bf       	out	0x3e, r29	; 62
 b14:	0f be       	out	0x3f, r0	; 63
 b16:	cd bf       	out	0x3d, r28	; 61
 b18:	df 91       	pop	r29
 b1a:	cf 91       	pop	r28
 b1c:	08 95       	ret

00000b1e <h_bridgeR_set_percentage>:

void h_bridgeR_set_percentage(signed char percentage)
{
 b1e:	0f 93       	push	r16
 b20:	1f 93       	push	r17
 b22:	cf 93       	push	r28
 b24:	df 93       	push	r29
 b26:	00 d0       	rcall	.+0      	; 0xb28 <L0^A>

00000b28 <L0^A>:
 b28:	0f 92       	push	r0
 b2a:	0f 92       	push	r0
 b2c:	cd b7       	in	r28, 0x3d	; 61
 b2e:	de b7       	in	r29, 0x3e	; 62
 b30:	89 83       	std	Y+1, r24	; 0x01

00000b32 <.Loc.248>:
	if (percentage >= 0 && percentage <= 100)
 b32:	89 81       	ldd	r24, Y+1	; 0x01
 b34:	88 23       	and	r24, r24
 b36:	3c f1       	brlt	.+78     	; 0xb86 <.L59>

00000b38 <.Loc.249>:
 b38:	89 81       	ldd	r24, Y+1	; 0x01
 b3a:	84 36       	cpi	r24, 0x64	; 100
 b3c:	09 f0       	breq	.+2      	; 0xb40 <.Loc.250>

00000b3e <L0^A>:
 b3e:	1c f5       	brge	.+70     	; 0xb86 <.L59>

00000b40 <.Loc.250>:
	{
			OCR1A = (65536*percentage)/100;
 b40:	89 81       	ldd	r24, Y+1	; 0x01
 b42:	08 2e       	mov	r0, r24
 b44:	00 0c       	add	r0, r0
 b46:	99 0b       	sbc	r25, r25
 b48:	aa 0b       	sbc	r26, r26
 b4a:	bb 0b       	sbc	r27, r27
 b4c:	ac 01       	movw	r20, r24
 b4e:	33 27       	eor	r19, r19
 b50:	22 27       	eor	r18, r18
 b52:	2a 83       	std	Y+2, r18	; 0x02
 b54:	3b 83       	std	Y+3, r19	; 0x03
 b56:	4c 83       	std	Y+4, r20	; 0x04
 b58:	5d 83       	std	Y+5, r21	; 0x05

00000b5a <.Loc.251>:
 b5a:	04 e6       	ldi	r16, 0x64	; 100
 b5c:	10 e0       	ldi	r17, 0x00	; 0
 b5e:	20 e0       	ldi	r18, 0x00	; 0
 b60:	30 e0       	ldi	r19, 0x00	; 0
 b62:	6a 81       	ldd	r22, Y+2	; 0x02
 b64:	7b 81       	ldd	r23, Y+3	; 0x03
 b66:	8c 81       	ldd	r24, Y+4	; 0x04
 b68:	9d 81       	ldd	r25, Y+5	; 0x05
 b6a:	a9 01       	movw	r20, r18
 b6c:	98 01       	movw	r18, r16
 b6e:	0e 94 0d 06 	call	0xc1a	; 0xc1a <__divmodsi4>
 b72:	da 01       	movw	r26, r20
 b74:	c9 01       	movw	r24, r18
 b76:	ac 01       	movw	r20, r24
 b78:	bd 01       	movw	r22, r26

00000b7a <.Loc.252>:
 b7a:	88 e8       	ldi	r24, 0x88	; 136
 b7c:	90 e0       	ldi	r25, 0x00	; 0

00000b7e <.Loc.253>:
 b7e:	9a 01       	movw	r18, r20
 b80:	fc 01       	movw	r30, r24
 b82:	31 83       	std	Z+1, r19	; 0x01
 b84:	20 83       	st	Z, r18

00000b86 <.L59>:
	}
}
 b86:	00 00       	nop
 b88:	0f 90       	pop	r0
 b8a:	0f 90       	pop	r0
 b8c:	0f 90       	pop	r0
 b8e:	0f 90       	pop	r0
 b90:	0f 90       	pop	r0
 b92:	df 91       	pop	r29
 b94:	cf 91       	pop	r28
 b96:	1f 91       	pop	r17
 b98:	0f 91       	pop	r16
 b9a:	08 95       	ret

00000b9c <h_bridgeL_set_percentage>:

void h_bridgeL_set_percentage(signed char percentage)
{
 b9c:	0f 93       	push	r16
 b9e:	1f 93       	push	r17
 ba0:	cf 93       	push	r28
 ba2:	df 93       	push	r29
 ba4:	00 d0       	rcall	.+0      	; 0xba6 <L0^A>

00000ba6 <L0^A>:
 ba6:	0f 92       	push	r0
 ba8:	0f 92       	push	r0
 baa:	cd b7       	in	r28, 0x3d	; 61
 bac:	de b7       	in	r29, 0x3e	; 62
 bae:	89 83       	std	Y+1, r24	; 0x01

00000bb0 <.Loc.256>:
	if (percentage >= 0 && percentage <= 100)
 bb0:	89 81       	ldd	r24, Y+1	; 0x01
 bb2:	88 23       	and	r24, r24
 bb4:	3c f1       	brlt	.+78     	; 0xc04 <.L62>

00000bb6 <.Loc.257>:
 bb6:	89 81       	ldd	r24, Y+1	; 0x01
 bb8:	84 36       	cpi	r24, 0x64	; 100
 bba:	09 f0       	breq	.+2      	; 0xbbe <.Loc.258>

00000bbc <L0^A>:
 bbc:	1c f5       	brge	.+70     	; 0xc04 <.L62>

00000bbe <.Loc.258>:
	{
			OCR3A = (65536*percentage)/100;
 bbe:	89 81       	ldd	r24, Y+1	; 0x01
 bc0:	08 2e       	mov	r0, r24
 bc2:	00 0c       	add	r0, r0
 bc4:	99 0b       	sbc	r25, r25
 bc6:	aa 0b       	sbc	r26, r26
 bc8:	bb 0b       	sbc	r27, r27
 bca:	ac 01       	movw	r20, r24
 bcc:	33 27       	eor	r19, r19
 bce:	22 27       	eor	r18, r18
 bd0:	2a 83       	std	Y+2, r18	; 0x02
 bd2:	3b 83       	std	Y+3, r19	; 0x03
 bd4:	4c 83       	std	Y+4, r20	; 0x04
 bd6:	5d 83       	std	Y+5, r21	; 0x05

00000bd8 <.Loc.259>:
 bd8:	04 e6       	ldi	r16, 0x64	; 100
 bda:	10 e0       	ldi	r17, 0x00	; 0
 bdc:	20 e0       	ldi	r18, 0x00	; 0
 bde:	30 e0       	ldi	r19, 0x00	; 0
 be0:	6a 81       	ldd	r22, Y+2	; 0x02
 be2:	7b 81       	ldd	r23, Y+3	; 0x03
 be4:	8c 81       	ldd	r24, Y+4	; 0x04
 be6:	9d 81       	ldd	r25, Y+5	; 0x05
 be8:	a9 01       	movw	r20, r18
 bea:	98 01       	movw	r18, r16
 bec:	0e 94 0d 06 	call	0xc1a	; 0xc1a <__divmodsi4>
 bf0:	da 01       	movw	r26, r20
 bf2:	c9 01       	movw	r24, r18
 bf4:	ac 01       	movw	r20, r24
 bf6:	bd 01       	movw	r22, r26

00000bf8 <.Loc.260>:
 bf8:	88 e9       	ldi	r24, 0x98	; 152
 bfa:	90 e0       	ldi	r25, 0x00	; 0

00000bfc <.Loc.261>:
 bfc:	9a 01       	movw	r18, r20
 bfe:	fc 01       	movw	r30, r24
 c00:	31 83       	std	Z+1, r19	; 0x01
 c02:	20 83       	st	Z, r18

00000c04 <.L62>:
	}
}
 c04:	00 00       	nop
 c06:	0f 90       	pop	r0
 c08:	0f 90       	pop	r0
 c0a:	0f 90       	pop	r0
 c0c:	0f 90       	pop	r0
 c0e:	0f 90       	pop	r0
 c10:	df 91       	pop	r29
 c12:	cf 91       	pop	r28
 c14:	1f 91       	pop	r17
 c16:	0f 91       	pop	r16
 c18:	08 95       	ret

00000c1a <__divmodsi4>:
 c1a:	05 2e       	mov	r0, r21

00000c1c <.Loc.1>:
 c1c:	97 fb       	bst	r25, 7

00000c1e <.Loc.2>:
 c1e:	1e f4       	brtc	.+6      	; 0xc26 <.L^B1>

00000c20 <.Loc.3>:
 c20:	00 94       	com	r0

00000c22 <.Loc.4>:
 c22:	0e 94 24 06 	call	0xc48	; 0xc48 <__negsi2>

00000c26 <.L^B1>:
 c26:	57 fd       	sbrc	r21, 7

00000c28 <.Loc.6>:
 c28:	07 d0       	rcall	.+14     	; 0xc38 <__divmodsi4_neg2>

00000c2a <.Loc.7>:
 c2a:	0e 94 2c 06 	call	0xc58	; 0xc58 <__udivmodsi4>

00000c2e <.Loc.8>:
 c2e:	07 fc       	sbrc	r0, 7

00000c30 <.Loc.9>:
 c30:	03 d0       	rcall	.+6      	; 0xc38 <__divmodsi4_neg2>

00000c32 <.Loc.10>:
 c32:	4e f4       	brtc	.+18     	; 0xc46 <__divmodsi4_exit>

00000c34 <.Loc.11>:
 c34:	0c 94 24 06 	jmp	0xc48	; 0xc48 <__negsi2>

00000c38 <__divmodsi4_neg2>:
 c38:	50 95       	com	r21

00000c3a <.Loc.13>:
 c3a:	40 95       	com	r20

00000c3c <.Loc.14>:
 c3c:	30 95       	com	r19

00000c3e <.Loc.15>:
 c3e:	21 95       	neg	r18

00000c40 <.Loc.16>:
 c40:	3f 4f       	sbci	r19, 0xFF	; 255

00000c42 <.Loc.17>:
 c42:	4f 4f       	sbci	r20, 0xFF	; 255

00000c44 <.Loc.18>:
 c44:	5f 4f       	sbci	r21, 0xFF	; 255

00000c46 <__divmodsi4_exit>:
 c46:	08 95       	ret

00000c48 <__negsi2>:
 c48:	90 95       	com	r25
 c4a:	80 95       	com	r24
 c4c:	70 95       	com	r23
 c4e:	61 95       	neg	r22
 c50:	7f 4f       	sbci	r23, 0xFF	; 255
 c52:	8f 4f       	sbci	r24, 0xFF	; 255
 c54:	9f 4f       	sbci	r25, 0xFF	; 255

00000c56 <.Loc.1>:
 c56:	08 95       	ret

00000c58 <__udivmodsi4>:
 c58:	a1 e2       	ldi	r26, 0x21	; 33

00000c5a <.Loc.1>:
 c5a:	1a 2e       	mov	r1, r26

00000c5c <.Loc.2>:
 c5c:	aa 1b       	sub	r26, r26

00000c5e <.Loc.3>:
 c5e:	bb 1b       	sub	r27, r27

00000c60 <.Loc.4>:
 c60:	fd 01       	movw	r30, r26

00000c62 <.Loc.5>:
 c62:	0d c0       	rjmp	.+26     	; 0xc7e <__udivmodsi4_ep>

00000c64 <__udivmodsi4_loop>:
 c64:	aa 1f       	adc	r26, r26

00000c66 <.Loc.7>:
 c66:	bb 1f       	adc	r27, r27

00000c68 <.Loc.8>:
 c68:	ee 1f       	adc	r30, r30

00000c6a <.Loc.9>:
 c6a:	ff 1f       	adc	r31, r31

00000c6c <.Loc.10>:
 c6c:	a2 17       	cp	r26, r18

00000c6e <.Loc.11>:
 c6e:	b3 07       	cpc	r27, r19

00000c70 <.Loc.12>:
 c70:	e4 07       	cpc	r30, r20

00000c72 <.Loc.13>:
 c72:	f5 07       	cpc	r31, r21

00000c74 <.Loc.14>:
 c74:	20 f0       	brcs	.+8      	; 0xc7e <__udivmodsi4_ep>

00000c76 <.Loc.15>:
 c76:	a2 1b       	sub	r26, r18

00000c78 <.Loc.16>:
 c78:	b3 0b       	sbc	r27, r19

00000c7a <.Loc.17>:
 c7a:	e4 0b       	sbc	r30, r20

00000c7c <.Loc.18>:
 c7c:	f5 0b       	sbc	r31, r21

00000c7e <__udivmodsi4_ep>:
 c7e:	66 1f       	adc	r22, r22

00000c80 <.Loc.20>:
 c80:	77 1f       	adc	r23, r23

00000c82 <.Loc.21>:
 c82:	88 1f       	adc	r24, r24

00000c84 <.Loc.22>:
 c84:	99 1f       	adc	r25, r25

00000c86 <.Loc.23>:
 c86:	1a 94       	dec	r1

00000c88 <.Loc.24>:
 c88:	69 f7       	brne	.-38     	; 0xc64 <__udivmodsi4_loop>

00000c8a <.Loc.25>:
 c8a:	60 95       	com	r22

00000c8c <.Loc.26>:
 c8c:	70 95       	com	r23

00000c8e <.Loc.27>:
 c8e:	80 95       	com	r24

00000c90 <.Loc.28>:
 c90:	90 95       	com	r25

00000c92 <.Loc.29>:
 c92:	9b 01       	movw	r18, r22

00000c94 <.Loc.30>:
 c94:	ac 01       	movw	r20, r24

00000c96 <.Loc.31>:
 c96:	bd 01       	movw	r22, r26

00000c98 <.Loc.32>:
 c98:	cf 01       	movw	r24, r30

00000c9a <.Loc.33>:
 c9a:	08 95       	ret

00000c9c <__cmpsf2>:
 c9c:	0e 94 82 06 	call	0xd04	; 0xd04 <__fp_cmp>
 ca0:	08 f4       	brcc	.+2      	; 0xca4 <.L1^B1>
 ca2:	81 e0       	ldi	r24, 0x01	; 1

00000ca4 <.L1^B1>:
 ca4:	08 95       	ret

00000ca6 <__fixunssfsi>:
 ca6:	0e 94 ae 06 	call	0xd5c	; 0xd5c <__fp_splitA>
 caa:	88 f0       	brcs	.+34     	; 0xcce <.L_err>
 cac:	9f 57       	subi	r25, 0x7F	; 127
 cae:	98 f0       	brcs	.+38     	; 0xcd6 <.L_zr>
 cb0:	b9 2f       	mov	r27, r25
 cb2:	99 27       	eor	r25, r25
 cb4:	b7 51       	subi	r27, 0x17	; 23
 cb6:	b0 f0       	brcs	.+44     	; 0xce4 <.L4^B1>
 cb8:	e1 f0       	breq	.+56     	; 0xcf2 <.L_sign>

00000cba <.L1^B1>:
 cba:	66 0f       	add	r22, r22
 cbc:	77 1f       	adc	r23, r23
 cbe:	88 1f       	adc	r24, r24
 cc0:	99 1f       	adc	r25, r25
 cc2:	1a f0       	brmi	.+6      	; 0xcca <.L2^B1>
 cc4:	ba 95       	dec	r27
 cc6:	c9 f7       	brne	.-14     	; 0xcba <.L1^B1>
 cc8:	14 c0       	rjmp	.+40     	; 0xcf2 <.L_sign>

00000cca <.L2^B1>:
 cca:	b1 30       	cpi	r27, 0x01	; 1
 ccc:	91 f0       	breq	.+36     	; 0xcf2 <.L_sign>

00000cce <.L_err>:
 cce:	0e 94 c8 06 	call	0xd90	; 0xd90 <__fp_zero>
 cd2:	b1 e0       	ldi	r27, 0x01	; 1
 cd4:	08 95       	ret

00000cd6 <.L_zr>:
 cd6:	0c 94 c8 06 	jmp	0xd90	; 0xd90 <__fp_zero>

00000cda <.L3^B1>:
 cda:	67 2f       	mov	r22, r23
 cdc:	78 2f       	mov	r23, r24
 cde:	88 27       	eor	r24, r24
 ce0:	b8 5f       	subi	r27, 0xF8	; 248
 ce2:	39 f0       	breq	.+14     	; 0xcf2 <.L_sign>

00000ce4 <.L4^B1>:
 ce4:	b9 3f       	cpi	r27, 0xF9	; 249
 ce6:	cc f3       	brlt	.-14     	; 0xcda <.L3^B1>

00000ce8 <.L5^B1>:
 ce8:	86 95       	lsr	r24
 cea:	77 95       	ror	r23
 cec:	67 95       	ror	r22
 cee:	b3 95       	inc	r27
 cf0:	d9 f7       	brne	.-10     	; 0xce8 <.L5^B1>

00000cf2 <.L_sign>:
 cf2:	3e f4       	brtc	.+14     	; 0xd02 <.L6^B1>
 cf4:	90 95       	com	r25
 cf6:	80 95       	com	r24
 cf8:	70 95       	com	r23
 cfa:	61 95       	neg	r22
 cfc:	7f 4f       	sbci	r23, 0xFF	; 255
 cfe:	8f 4f       	sbci	r24, 0xFF	; 255
 d00:	9f 4f       	sbci	r25, 0xFF	; 255

00000d02 <.L6^B1>:
 d02:	08 95       	ret

00000d04 <__fp_cmp>:
 d04:	99 0f       	add	r25, r25
 d06:	00 08       	sbc	r0, r0
 d08:	55 0f       	add	r21, r21
 d0a:	aa 0b       	sbc	r26, r26
 d0c:	e0 e8       	ldi	r30, 0x80	; 128
 d0e:	fe ef       	ldi	r31, 0xFE	; 254
 d10:	16 16       	cp	r1, r22
 d12:	17 06       	cpc	r1, r23
 d14:	e8 07       	cpc	r30, r24
 d16:	f9 07       	cpc	r31, r25
 d18:	c0 f0       	brcs	.+48     	; 0xd4a <.L9^B1>
 d1a:	12 16       	cp	r1, r18
 d1c:	13 06       	cpc	r1, r19
 d1e:	e4 07       	cpc	r30, r20
 d20:	f5 07       	cpc	r31, r21
 d22:	98 f0       	brcs	.+38     	; 0xd4a <.L9^B1>
 d24:	62 1b       	sub	r22, r18
 d26:	73 0b       	sbc	r23, r19
 d28:	84 0b       	sbc	r24, r20
 d2a:	95 0b       	sbc	r25, r21
 d2c:	39 f4       	brne	.+14     	; 0xd3c <.L1^B1>
 d2e:	0a 26       	eor	r0, r26
 d30:	61 f0       	breq	.+24     	; 0xd4a <.L9^B1>
 d32:	23 2b       	or	r18, r19
 d34:	24 2b       	or	r18, r20
 d36:	25 2b       	or	r18, r21
 d38:	21 f4       	brne	.+8      	; 0xd42 <.L2^B1>
 d3a:	08 95       	ret

00000d3c <.L1^B1>:
 d3c:	0a 26       	eor	r0, r26
 d3e:	09 f4       	brne	.+2      	; 0xd42 <.L2^B1>
 d40:	a1 40       	sbci	r26, 0x01	; 1

00000d42 <.L2^B1>:
 d42:	a6 95       	lsr	r26
 d44:	8f ef       	ldi	r24, 0xFF	; 255
 d46:	81 1d       	adc	r24, r1
 d48:	81 1d       	adc	r24, r1

00000d4a <.L9^B1>:
 d4a:	08 95       	ret

00000d4c <__fp_split3>:
 d4c:	57 fd       	sbrc	r21, 7
 d4e:	90 58       	subi	r25, 0x80	; 128
 d50:	44 0f       	add	r20, r20
 d52:	55 1f       	adc	r21, r21
 d54:	59 f0       	breq	.+22     	; 0xd6c <.L4^B1>
 d56:	5f 3f       	cpi	r21, 0xFF	; 255
 d58:	71 f0       	breq	.+28     	; 0xd76 <.L5^B1>

00000d5a <.L1^B1>:
 d5a:	47 95       	ror	r20

00000d5c <__fp_splitA>:
 d5c:	88 0f       	add	r24, r24
 d5e:	97 fb       	bst	r25, 7
 d60:	99 1f       	adc	r25, r25
 d62:	61 f0       	breq	.+24     	; 0xd7c <.L6^B1>
 d64:	9f 3f       	cpi	r25, 0xFF	; 255
 d66:	79 f0       	breq	.+30     	; 0xd86 <.L7^B1>

00000d68 <.L3^B1>:
 d68:	87 95       	ror	r24
 d6a:	08 95       	ret

00000d6c <.L4^B1>:
 d6c:	12 16       	cp	r1, r18
 d6e:	13 06       	cpc	r1, r19
 d70:	14 06       	cpc	r1, r20
 d72:	55 1f       	adc	r21, r21
 d74:	f2 cf       	rjmp	.-28     	; 0xd5a <.L1^B1>

00000d76 <.L5^B1>:
 d76:	46 95       	lsr	r20
 d78:	f1 df       	rcall	.-30     	; 0xd5c <__fp_splitA>
 d7a:	08 c0       	rjmp	.+16     	; 0xd8c <.L8^B1>

00000d7c <.L6^B1>:
 d7c:	16 16       	cp	r1, r22
 d7e:	17 06       	cpc	r1, r23
 d80:	18 06       	cpc	r1, r24
 d82:	99 1f       	adc	r25, r25
 d84:	f1 cf       	rjmp	.-30     	; 0xd68 <.L3^B1>

00000d86 <.L7^B1>:
 d86:	86 95       	lsr	r24
 d88:	71 05       	cpc	r23, r1
 d8a:	61 05       	cpc	r22, r1

00000d8c <.L8^B1>:
 d8c:	08 94       	sec
 d8e:	08 95       	ret

00000d90 <__fp_zero>:
 d90:	e8 94       	clt

00000d92 <__fp_szero>:
 d92:	bb 27       	eor	r27, r27
 d94:	66 27       	eor	r22, r22
 d96:	77 27       	eor	r23, r23
 d98:	cb 01       	movw	r24, r22
 d9a:	97 f9       	bld	r25, 7
 d9c:	08 95       	ret

00000d9e <__gesf2>:
 d9e:	0e 94 82 06 	call	0xd04	; 0xd04 <__fp_cmp>
 da2:	08 f4       	brcc	.+2      	; 0xda6 <.L1^B1>
 da4:	8f ef       	ldi	r24, 0xFF	; 255

00000da6 <.L1^B1>:
 da6:	08 95       	ret

00000da8 <__mulsf3>:
 da8:	0e 94 e7 06 	call	0xdce	; 0xdce <__mulsf3x>
 dac:	0c 94 58 07 	jmp	0xeb0	; 0xeb0 <__fp_round>

00000db0 <.L^B1>:
 db0:	0e 94 4a 07 	call	0xe94	; 0xe94 <__fp_pscA>
 db4:	38 f0       	brcs	.+14     	; 0xdc4 <.L1^B1>
 db6:	0e 94 51 07 	call	0xea2	; 0xea2 <__fp_pscB>
 dba:	20 f0       	brcs	.+8      	; 0xdc4 <.L1^B1>
 dbc:	95 23       	and	r25, r21
 dbe:	11 f0       	breq	.+4      	; 0xdc4 <.L1^B1>
 dc0:	0c 94 41 07 	jmp	0xe82	; 0xe82 <__fp_inf>

00000dc4 <.L1^B1>:
 dc4:	0c 94 47 07 	jmp	0xe8e	; 0xe8e <__fp_nan>

00000dc8 <.L2^B1>:
 dc8:	11 24       	eor	r1, r1
 dca:	0c 94 c9 06 	jmp	0xd92	; 0xd92 <__fp_szero>

00000dce <__mulsf3x>:
 dce:	0e 94 a6 06 	call	0xd4c	; 0xd4c <__fp_split3>
 dd2:	70 f3       	brcs	.-36     	; 0xdb0 <.L^B1>

00000dd4 <__mulsf3_pse>:
 dd4:	95 9f       	mul	r25, r21
 dd6:	c1 f3       	breq	.-16     	; 0xdc8 <.L2^B1>
 dd8:	95 0f       	add	r25, r21
 dda:	50 e0       	ldi	r21, 0x00	; 0
 ddc:	55 1f       	adc	r21, r21
 dde:	62 9f       	mul	r22, r18
 de0:	f0 01       	movw	r30, r0
 de2:	72 9f       	mul	r23, r18
 de4:	bb 27       	eor	r27, r27
 de6:	f0 0d       	add	r31, r0
 de8:	b1 1d       	adc	r27, r1
 dea:	63 9f       	mul	r22, r19
 dec:	aa 27       	eor	r26, r26
 dee:	f0 0d       	add	r31, r0
 df0:	b1 1d       	adc	r27, r1
 df2:	aa 1f       	adc	r26, r26
 df4:	64 9f       	mul	r22, r20
 df6:	66 27       	eor	r22, r22
 df8:	b0 0d       	add	r27, r0
 dfa:	a1 1d       	adc	r26, r1
 dfc:	66 1f       	adc	r22, r22
 dfe:	82 9f       	mul	r24, r18
 e00:	22 27       	eor	r18, r18
 e02:	b0 0d       	add	r27, r0
 e04:	a1 1d       	adc	r26, r1
 e06:	62 1f       	adc	r22, r18
 e08:	73 9f       	mul	r23, r19
 e0a:	b0 0d       	add	r27, r0
 e0c:	a1 1d       	adc	r26, r1
 e0e:	62 1f       	adc	r22, r18
 e10:	83 9f       	mul	r24, r19
 e12:	a0 0d       	add	r26, r0
 e14:	61 1d       	adc	r22, r1
 e16:	22 1f       	adc	r18, r18
 e18:	74 9f       	mul	r23, r20
 e1a:	33 27       	eor	r19, r19
 e1c:	a0 0d       	add	r26, r0
 e1e:	61 1d       	adc	r22, r1
 e20:	23 1f       	adc	r18, r19
 e22:	84 9f       	mul	r24, r20
 e24:	60 0d       	add	r22, r0
 e26:	21 1d       	adc	r18, r1
 e28:	82 2f       	mov	r24, r18
 e2a:	76 2f       	mov	r23, r22
 e2c:	6a 2f       	mov	r22, r26
 e2e:	11 24       	eor	r1, r1
 e30:	9f 57       	subi	r25, 0x7F	; 127
 e32:	50 40       	sbci	r21, 0x00	; 0
 e34:	9a f0       	brmi	.+38     	; 0xe5c <.L13^B1>
 e36:	f1 f0       	breq	.+60     	; 0xe74 <.L15^B1>

00000e38 <.L10^B1>:
 e38:	88 23       	and	r24, r24
 e3a:	4a f0       	brmi	.+18     	; 0xe4e <.L11^B1>
 e3c:	ee 0f       	add	r30, r30
 e3e:	ff 1f       	adc	r31, r31
 e40:	bb 1f       	adc	r27, r27
 e42:	66 1f       	adc	r22, r22
 e44:	77 1f       	adc	r23, r23
 e46:	88 1f       	adc	r24, r24
 e48:	91 50       	subi	r25, 0x01	; 1
 e4a:	50 40       	sbci	r21, 0x00	; 0
 e4c:	a9 f7       	brne	.-22     	; 0xe38 <.L10^B1>

00000e4e <.L11^B1>:
 e4e:	9e 3f       	cpi	r25, 0xFE	; 254
 e50:	51 05       	cpc	r21, r1
 e52:	80 f0       	brcs	.+32     	; 0xe74 <.L15^B1>
 e54:	0c 94 41 07 	jmp	0xe82	; 0xe82 <__fp_inf>

00000e58 <.L12^B1>:
 e58:	0c 94 c9 06 	jmp	0xd92	; 0xd92 <__fp_szero>

00000e5c <.L13^B1>:
 e5c:	5f 3f       	cpi	r21, 0xFF	; 255
 e5e:	e4 f3       	brlt	.-8      	; 0xe58 <.L12^B1>
 e60:	98 3e       	cpi	r25, 0xE8	; 232
 e62:	d4 f3       	brlt	.-12     	; 0xe58 <.L12^B1>

00000e64 <.L14^B1>:
 e64:	86 95       	lsr	r24
 e66:	77 95       	ror	r23
 e68:	67 95       	ror	r22
 e6a:	b7 95       	ror	r27
 e6c:	f7 95       	ror	r31
 e6e:	e7 95       	ror	r30
 e70:	9f 5f       	subi	r25, 0xFF	; 255
 e72:	c1 f7       	brne	.-16     	; 0xe64 <.L14^B1>

00000e74 <.L15^B1>:
 e74:	fe 2b       	or	r31, r30
 e76:	88 0f       	add	r24, r24
 e78:	91 1d       	adc	r25, r1
 e7a:	96 95       	lsr	r25
 e7c:	87 95       	ror	r24
 e7e:	97 f9       	bld	r25, 7
 e80:	08 95       	ret

00000e82 <__fp_inf>:
 e82:	97 f9       	bld	r25, 7
 e84:	9f 67       	ori	r25, 0x7F	; 127
 e86:	80 e8       	ldi	r24, 0x80	; 128
 e88:	70 e0       	ldi	r23, 0x00	; 0
 e8a:	60 e0       	ldi	r22, 0x00	; 0
 e8c:	08 95       	ret

00000e8e <__fp_nan>:
 e8e:	9f ef       	ldi	r25, 0xFF	; 255
 e90:	80 ec       	ldi	r24, 0xC0	; 192
 e92:	08 95       	ret

00000e94 <__fp_pscA>:
 e94:	00 24       	eor	r0, r0
 e96:	0a 94       	dec	r0
 e98:	16 16       	cp	r1, r22
 e9a:	17 06       	cpc	r1, r23
 e9c:	18 06       	cpc	r1, r24
 e9e:	09 06       	cpc	r0, r25
 ea0:	08 95       	ret

00000ea2 <__fp_pscB>:
 ea2:	00 24       	eor	r0, r0
 ea4:	0a 94       	dec	r0
 ea6:	12 16       	cp	r1, r18
 ea8:	13 06       	cpc	r1, r19
 eaa:	14 06       	cpc	r1, r20
 eac:	05 06       	cpc	r0, r21
 eae:	08 95       	ret

00000eb0 <__fp_round>:
 eb0:	09 2e       	mov	r0, r25
 eb2:	03 94       	inc	r0
 eb4:	00 0c       	add	r0, r0
 eb6:	11 f4       	brne	.+4      	; 0xebc <.L1^B1>
 eb8:	88 23       	and	r24, r24
 eba:	52 f0       	brmi	.+20     	; 0xed0 <.L3^B1>

00000ebc <.L1^B1>:
 ebc:	bb 0f       	add	r27, r27
 ebe:	40 f4       	brcc	.+16     	; 0xed0 <.L3^B1>
 ec0:	bf 2b       	or	r27, r31
 ec2:	11 f4       	brne	.+4      	; 0xec8 <.L2^B1>
 ec4:	60 ff       	sbrs	r22, 0
 ec6:	04 c0       	rjmp	.+8      	; 0xed0 <.L3^B1>

00000ec8 <.L2^B1>:
 ec8:	6f 5f       	subi	r22, 0xFF	; 255
 eca:	7f 4f       	sbci	r23, 0xFF	; 255
 ecc:	8f 4f       	sbci	r24, 0xFF	; 255
 ece:	9f 4f       	sbci	r25, 0xFF	; 255

00000ed0 <.L3^B1>:
 ed0:	08 95       	ret

00000ed2 <_exit>:
 ed2:	f8 94       	cli

00000ed4 <__stop_program>:
 ed4:	ff cf       	rjmp	.-2      	; 0xed4 <__stop_program>
