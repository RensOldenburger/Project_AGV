
bin\Debug\Beetjecodemetapp.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00001994  00001a48  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001994  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000010  00800200  00800200  00001a48  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  00001a48  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      00000012  00000000  00000000  00001a4b  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001a60  2**2
                  CONTENTS, READONLY, OCTETS
  6 .debug_aranges 00000138  00000000  00000000  00001aa0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_info   000014a7  00000000  00000000  00001bd8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_abbrev 00001047  00000000  00000000  0000307f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line   00001494  00000000  00000000  000040c6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_frame  000003e4  00000000  00000000  0000555c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_str    000006ea  00000000  00000000  00005940  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_line_str 000001bc  00000000  00000000  0000602a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__ctors_end>
       4:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
       8:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
       c:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      10:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      14:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      18:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      1c:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      20:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      24:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      28:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      2c:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      30:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      34:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      38:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      3c:	0c 94 86 0a 	jmp	0x150c	; 0x150c <__vector_15>
      40:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      44:	0c 94 bd 03 	jmp	0x77a	; 0x77a <__vector_17>
      48:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      4c:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      50:	0c 94 92 03 	jmp	0x724	; 0x724 <__vector_20>
      54:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      58:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      5c:	0c 94 38 04 	jmp	0x870	; 0x870 <__vector_23>
      60:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      64:	0c 94 9c 00 	jmp	0x138	; 0x138 <__vector_25>
      68:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      6c:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      70:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      74:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      78:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      7c:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      80:	0c 94 10 04 	jmp	0x820	; 0x820 <__vector_32>
      84:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      88:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      8c:	0c 94 e5 03 	jmp	0x7ca	; 0x7ca <__vector_35>
      90:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      94:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      98:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      9c:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      a0:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      a4:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      a8:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      ac:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      b0:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      b4:	0c 94 56 04 	jmp	0x8ac	; 0x8ac <__vector_45>
      b8:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      bc:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      c0:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      c4:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      c8:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      cc:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      d0:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      d4:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      d8:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      dc:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      e0:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>

000000e4 <__trampolines_start>:
      e4:	0c 94 e3 05 	jmp	0xbc6	; 0xbc6 <.L18>
      e8:	0c 94 45 06 	jmp	0xc8a	; 0xc8a <.L16>
      ec:	0c 94 0f 06 	jmp	0xc1e	; 0xc1e <.L17>
      f0:	0c 94 5d 07 	jmp	0xeba	; 0xeba <.L13>
      f4:	0c 94 b1 05 	jmp	0xb62	; 0xb62 <.L20>
      f8:	0c 94 ae 06 	jmp	0xd5c	; 0xd5c <.L14>
      fc:	0c 94 74 06 	jmp	0xce8	; 0xce8 <.L15>
     100:	0c 94 6a 07 	jmp	0xed4	; 0xed4 <.L11>
     104:	0c 94 95 05 	jmp	0xb2a	; 0xb2a <.L21>
     108:	0c 94 cd 05 	jmp	0xb9a	; 0xb9a <.L19>

0000010c <__ctors_end>:
     10c:	11 24       	eor	r1, r1
     10e:	1f be       	out	0x3f, r1	; 63
     110:	cf ef       	ldi	r28, 0xFF	; 255
     112:	d1 e2       	ldi	r29, 0x21	; 33
     114:	de bf       	out	0x3e, r29	; 62
     116:	cd bf       	out	0x3d, r28	; 61
     118:	00 e0       	ldi	r16, 0x00	; 0
     11a:	0c bf       	out	0x3c, r16	; 60

0000011c <__do_clear_bss>:
     11c:	22 e0       	ldi	r18, 0x02	; 2

0000011e <.Loc.1>:
     11e:	a0 e0       	ldi	r26, 0x00	; 0

00000120 <.Loc.2>:
     120:	b2 e0       	ldi	r27, 0x02	; 2

00000122 <.Loc.3>:
     122:	01 c0       	rjmp	.+2      	; 0x126 <.Loc.5>

00000124 <.Loc.4>:
     124:	1d 92       	st	X+, r1

00000126 <.Loc.5>:
     126:	a0 31       	cpi	r26, 0x10	; 16

00000128 <.Loc.6>:
     128:	b2 07       	cpc	r27, r18

0000012a <.Loc.7>:
     12a:	e1 f7       	brne	.-8      	; 0x124 <.Loc.4>

0000012c <L0^A>:
     12c:	0e 94 8c 04 	call	0x918	; 0x918 <main>
     130:	0c 94 be 0c 	jmp	0x197c	; 0x197c <_exit>

00000134 <__bad_interrupt>:
     134:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000138 <__vector_25>:
int Bluetooth_Getal = 0;//BLUETOOTH GETAL
int verandergetal = 0;//ONNODIG
int veranderandergetal = 0;//ONNODIG

ISR(USART0_RX_vect)
{
     138:	1f 92       	push	r1
     13a:	0f 92       	push	r0
     13c:	0f b6       	in	r0, 0x3f	; 63
     13e:	0f 92       	push	r0
     140:	11 24       	eor	r1, r1
     142:	0b b6       	in	r0, 0x3b	; 59
     144:	0f 92       	push	r0
     146:	8f 93       	push	r24
     148:	9f 93       	push	r25
     14a:	ef 93       	push	r30
     14c:	ff 93       	push	r31
     14e:	cf 93       	push	r28
     150:	df 93       	push	r29
     152:	cd b7       	in	r28, 0x3d	; 61
     154:	de b7       	in	r29, 0x3e	; 62

00000156 <.Loc.1>:
    Bluetooth_Getal = UDR0;
     156:	86 ec       	ldi	r24, 0xC6	; 198
     158:	90 e0       	ldi	r25, 0x00	; 0
     15a:	fc 01       	movw	r30, r24
     15c:	80 81       	ld	r24, Z
     15e:	88 2f       	mov	r24, r24
     160:	90 e0       	ldi	r25, 0x00	; 0

00000162 <.Loc.2>:
     162:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <Bluetooth_Getal+0x1>
     166:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <Bluetooth_Getal>

0000016a <.Loc.3>:
    if (verandergetal == 0)//ONNODIG
     16a:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <verandergetal>
     16e:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <verandergetal+0x1>

00000172 <.Loc.4>:
     172:	00 97       	sbiw	r24, 0x00	; 0
     174:	51 f4       	brne	.+20     	; 0x18a <.L2>

00000176 <.Loc.5>:
    {//ONNODIG
        verandergetal++;//ONNODIG
     176:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <verandergetal>
     17a:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <verandergetal+0x1>
     17e:	01 96       	adiw	r24, 0x01	; 1
     180:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <verandergetal+0x1>
     184:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <verandergetal>

00000188 <.Loc.6>:
    }//ONNODIG
    else//ONNODIG
    {//ONNODIG
        verandergetal = 0;//ONNODIG
    }//ONNODIG
}
     188:	04 c0       	rjmp	.+8      	; 0x192 <.L4>

0000018a <.L2>:
        verandergetal = 0;//ONNODIG
     18a:	10 92 03 02 	sts	0x0203, r1	; 0x800203 <verandergetal+0x1>
     18e:	10 92 02 02 	sts	0x0202, r1	; 0x800202 <verandergetal>

00000192 <.L4>:
}
     192:	00 00       	nop
     194:	df 91       	pop	r29
     196:	cf 91       	pop	r28
     198:	ff 91       	pop	r31
     19a:	ef 91       	pop	r30
     19c:	9f 91       	pop	r25
     19e:	8f 91       	pop	r24
     1a0:	0f 90       	pop	r0
     1a2:	0b be       	out	0x3b, r0	; 59
     1a4:	0f 90       	pop	r0
     1a6:	0f be       	out	0x3f, r0	; 63
     1a8:	0f 90       	pop	r0
     1aa:	1f 90       	pop	r1
     1ac:	18 95       	reti

000001ae <initBluetooth>:

void initBluetooth(void)
{
     1ae:	cf 93       	push	r28
     1b0:	df 93       	push	r29
     1b2:	cd b7       	in	r28, 0x3d	; 61
     1b4:	de b7       	in	r29, 0x3e	; 62

000001b6 <.Loc.10>:
    //Bluetooth
    UBRR0H = (BRC >> 8);
     1b6:	85 ec       	ldi	r24, 0xC5	; 197
     1b8:	90 e0       	ldi	r25, 0x00	; 0

000001ba <.Loc.11>:
     1ba:	fc 01       	movw	r30, r24
     1bc:	10 82       	st	Z, r1

000001be <.Loc.12>:
    UBRR0L = BRC;
     1be:	84 ec       	ldi	r24, 0xC4	; 196
     1c0:	90 e0       	ldi	r25, 0x00	; 0

000001c2 <.Loc.13>:
     1c2:	27 e6       	ldi	r18, 0x67	; 103
     1c4:	fc 01       	movw	r30, r24
     1c6:	20 83       	st	Z, r18

000001c8 <.Loc.14>:

    UCSR0B = (1 << RXEN0) |(1 << RXCIE0) |(1 << TXEN0) | (1 << TXCIE0);
     1c8:	81 ec       	ldi	r24, 0xC1	; 193
     1ca:	90 e0       	ldi	r25, 0x00	; 0

000001cc <.Loc.15>:
     1cc:	28 ed       	ldi	r18, 0xD8	; 216
     1ce:	fc 01       	movw	r30, r24
     1d0:	20 83       	st	Z, r18

000001d2 <.Loc.16>:
    UCSR0C = (1 << UCSZ01) | (1 << UCSZ00);
     1d2:	82 ec       	ldi	r24, 0xC2	; 194
     1d4:	90 e0       	ldi	r25, 0x00	; 0

000001d6 <.Loc.17>:
     1d6:	26 e0       	ldi	r18, 0x06	; 6
     1d8:	fc 01       	movw	r30, r24
     1da:	20 83       	st	Z, r18

000001dc <.Loc.18>:

    sei();
     1dc:	78 94       	sei

000001de <.Loc.19>:
}
     1de:	00 00       	nop
     1e0:	df 91       	pop	r29
     1e2:	cf 91       	pop	r28
     1e4:	08 95       	ret

000001e6 <rechtdoorrijden>:
volatile int timerteller = 0;
volatile int timertellerbak = 0;
volatile int bakvar = 0;

void rechtdoorrijden()
{
     1e6:	cf 93       	push	r28
     1e8:	df 93       	push	r29
     1ea:	cd b7       	in	r28, 0x3d	; 61
     1ec:	de b7       	in	r29, 0x3e	; 62

000001ee <.Loc.1>:
    PORT &= ~(1 << PIN11);
     1ee:	82 e2       	ldi	r24, 0x22	; 34
     1f0:	90 e0       	ldi	r25, 0x00	; 0
     1f2:	fc 01       	movw	r30, r24
     1f4:	20 81       	ld	r18, Z

000001f6 <.Loc.2>:
     1f6:	82 e2       	ldi	r24, 0x22	; 34
     1f8:	90 e0       	ldi	r25, 0x00	; 0

000001fa <.Loc.3>:
     1fa:	2f 7b       	andi	r18, 0xBF	; 191
     1fc:	fc 01       	movw	r30, r24
     1fe:	20 83       	st	Z, r18

00000200 <.Loc.4>:
    PORT |= (1 << PIN12);
     200:	82 e2       	ldi	r24, 0x22	; 34
     202:	90 e0       	ldi	r25, 0x00	; 0
     204:	fc 01       	movw	r30, r24
     206:	20 81       	ld	r18, Z
     208:	82 e2       	ldi	r24, 0x22	; 34
     20a:	90 e0       	ldi	r25, 0x00	; 0

0000020c <.Loc.5>:
     20c:	20 62       	ori	r18, 0x20	; 32
     20e:	fc 01       	movw	r30, r24
     210:	20 83       	st	Z, r18

00000212 <.Loc.6>:
    PORT |= (1 << PIN21);
     212:	82 e2       	ldi	r24, 0x22	; 34
     214:	90 e0       	ldi	r25, 0x00	; 0
     216:	fc 01       	movw	r30, r24
     218:	20 81       	ld	r18, Z
     21a:	82 e2       	ldi	r24, 0x22	; 34
     21c:	90 e0       	ldi	r25, 0x00	; 0

0000021e <.Loc.7>:
     21e:	20 61       	ori	r18, 0x10	; 16
     220:	fc 01       	movw	r30, r24
     222:	20 83       	st	Z, r18

00000224 <.Loc.8>:
    PORT &= ~(1 << PIN22);
     224:	82 e2       	ldi	r24, 0x22	; 34
     226:	90 e0       	ldi	r25, 0x00	; 0
     228:	fc 01       	movw	r30, r24
     22a:	20 81       	ld	r18, Z

0000022c <.Loc.9>:
     22c:	82 e2       	ldi	r24, 0x22	; 34
     22e:	90 e0       	ldi	r25, 0x00	; 0

00000230 <.Loc.10>:
     230:	27 7f       	andi	r18, 0xF7	; 247
     232:	fc 01       	movw	r30, r24
     234:	20 83       	st	Z, r18

00000236 <.Loc.11>:
}
     236:	00 00       	nop
     238:	df 91       	pop	r29
     23a:	cf 91       	pop	r28
     23c:	08 95       	ret

0000023e <achteruitrijden>:

void achteruitrijden()
{
     23e:	cf 93       	push	r28
     240:	df 93       	push	r29
     242:	cd b7       	in	r28, 0x3d	; 61
     244:	de b7       	in	r29, 0x3e	; 62

00000246 <.Loc.13>:
    PORT |= (1 << PIN11);
     246:	82 e2       	ldi	r24, 0x22	; 34
     248:	90 e0       	ldi	r25, 0x00	; 0
     24a:	fc 01       	movw	r30, r24
     24c:	20 81       	ld	r18, Z
     24e:	82 e2       	ldi	r24, 0x22	; 34
     250:	90 e0       	ldi	r25, 0x00	; 0

00000252 <.Loc.14>:
     252:	20 64       	ori	r18, 0x40	; 64
     254:	fc 01       	movw	r30, r24
     256:	20 83       	st	Z, r18

00000258 <.Loc.15>:
    PORT &= ~(1 << PIN12);
     258:	82 e2       	ldi	r24, 0x22	; 34
     25a:	90 e0       	ldi	r25, 0x00	; 0
     25c:	fc 01       	movw	r30, r24
     25e:	20 81       	ld	r18, Z

00000260 <.Loc.16>:
     260:	82 e2       	ldi	r24, 0x22	; 34
     262:	90 e0       	ldi	r25, 0x00	; 0

00000264 <.Loc.17>:
     264:	2f 7d       	andi	r18, 0xDF	; 223
     266:	fc 01       	movw	r30, r24
     268:	20 83       	st	Z, r18

0000026a <.Loc.18>:
    PORT &= ~(1 << PIN21);
     26a:	82 e2       	ldi	r24, 0x22	; 34
     26c:	90 e0       	ldi	r25, 0x00	; 0
     26e:	fc 01       	movw	r30, r24
     270:	20 81       	ld	r18, Z

00000272 <.Loc.19>:
     272:	82 e2       	ldi	r24, 0x22	; 34
     274:	90 e0       	ldi	r25, 0x00	; 0

00000276 <.Loc.20>:
     276:	2f 7e       	andi	r18, 0xEF	; 239
     278:	fc 01       	movw	r30, r24
     27a:	20 83       	st	Z, r18

0000027c <.Loc.21>:
    PORT |= (1 << PIN22);
     27c:	82 e2       	ldi	r24, 0x22	; 34
     27e:	90 e0       	ldi	r25, 0x00	; 0
     280:	fc 01       	movw	r30, r24
     282:	20 81       	ld	r18, Z
     284:	82 e2       	ldi	r24, 0x22	; 34
     286:	90 e0       	ldi	r25, 0x00	; 0

00000288 <.Loc.22>:
     288:	28 60       	ori	r18, 0x08	; 8
     28a:	fc 01       	movw	r30, r24
     28c:	20 83       	st	Z, r18

0000028e <.Loc.23>:
}
     28e:	00 00       	nop
     290:	df 91       	pop	r29
     292:	cf 91       	pop	r28
     294:	08 95       	ret

00000296 <naarrechtsrijden>:

void naarrechtsrijden()
{
     296:	cf 93       	push	r28
     298:	df 93       	push	r29
     29a:	cd b7       	in	r28, 0x3d	; 61
     29c:	de b7       	in	r29, 0x3e	; 62

0000029e <.Loc.25>:
    PORT &= ~(1 << PIN12);
     29e:	82 e2       	ldi	r24, 0x22	; 34
     2a0:	90 e0       	ldi	r25, 0x00	; 0
     2a2:	fc 01       	movw	r30, r24
     2a4:	20 81       	ld	r18, Z

000002a6 <.Loc.26>:
     2a6:	82 e2       	ldi	r24, 0x22	; 34
     2a8:	90 e0       	ldi	r25, 0x00	; 0

000002aa <.Loc.27>:
     2aa:	2f 7d       	andi	r18, 0xDF	; 223
     2ac:	fc 01       	movw	r30, r24
     2ae:	20 83       	st	Z, r18

000002b0 <.Loc.28>:
    PORT |= (1 << PIN11);
     2b0:	82 e2       	ldi	r24, 0x22	; 34
     2b2:	90 e0       	ldi	r25, 0x00	; 0
     2b4:	fc 01       	movw	r30, r24
     2b6:	20 81       	ld	r18, Z
     2b8:	82 e2       	ldi	r24, 0x22	; 34
     2ba:	90 e0       	ldi	r25, 0x00	; 0

000002bc <.Loc.29>:
     2bc:	20 64       	ori	r18, 0x40	; 64
     2be:	fc 01       	movw	r30, r24
     2c0:	20 83       	st	Z, r18

000002c2 <.Loc.30>:
    PORT &= ~(1 << PIN22);
     2c2:	82 e2       	ldi	r24, 0x22	; 34
     2c4:	90 e0       	ldi	r25, 0x00	; 0
     2c6:	fc 01       	movw	r30, r24
     2c8:	20 81       	ld	r18, Z

000002ca <.Loc.31>:
     2ca:	82 e2       	ldi	r24, 0x22	; 34
     2cc:	90 e0       	ldi	r25, 0x00	; 0

000002ce <.Loc.32>:
     2ce:	27 7f       	andi	r18, 0xF7	; 247
     2d0:	fc 01       	movw	r30, r24
     2d2:	20 83       	st	Z, r18

000002d4 <.Loc.33>:
    PORT |= (1 << PIN21);
     2d4:	82 e2       	ldi	r24, 0x22	; 34
     2d6:	90 e0       	ldi	r25, 0x00	; 0
     2d8:	fc 01       	movw	r30, r24
     2da:	20 81       	ld	r18, Z
     2dc:	82 e2       	ldi	r24, 0x22	; 34
     2de:	90 e0       	ldi	r25, 0x00	; 0

000002e0 <.Loc.34>:
     2e0:	20 61       	ori	r18, 0x10	; 16
     2e2:	fc 01       	movw	r30, r24
     2e4:	20 83       	st	Z, r18

000002e6 <.Loc.35>:
}
     2e6:	00 00       	nop
     2e8:	df 91       	pop	r29
     2ea:	cf 91       	pop	r28
     2ec:	08 95       	ret

000002ee <naarlinkssrijden>:

void naarlinkssrijden()
{
     2ee:	cf 93       	push	r28
     2f0:	df 93       	push	r29
     2f2:	cd b7       	in	r28, 0x3d	; 61
     2f4:	de b7       	in	r29, 0x3e	; 62

000002f6 <.Loc.37>:
    PORT |= (1 << PIN12);
     2f6:	82 e2       	ldi	r24, 0x22	; 34
     2f8:	90 e0       	ldi	r25, 0x00	; 0
     2fa:	fc 01       	movw	r30, r24
     2fc:	20 81       	ld	r18, Z
     2fe:	82 e2       	ldi	r24, 0x22	; 34
     300:	90 e0       	ldi	r25, 0x00	; 0

00000302 <.Loc.38>:
     302:	20 62       	ori	r18, 0x20	; 32
     304:	fc 01       	movw	r30, r24
     306:	20 83       	st	Z, r18

00000308 <.Loc.39>:
    PORT &= ~(1 << PIN11);
     308:	82 e2       	ldi	r24, 0x22	; 34
     30a:	90 e0       	ldi	r25, 0x00	; 0
     30c:	fc 01       	movw	r30, r24
     30e:	20 81       	ld	r18, Z

00000310 <.Loc.40>:
     310:	82 e2       	ldi	r24, 0x22	; 34
     312:	90 e0       	ldi	r25, 0x00	; 0

00000314 <.Loc.41>:
     314:	2f 7b       	andi	r18, 0xBF	; 191
     316:	fc 01       	movw	r30, r24
     318:	20 83       	st	Z, r18

0000031a <.Loc.42>:
    PORT |= (1 << PIN22);
     31a:	82 e2       	ldi	r24, 0x22	; 34
     31c:	90 e0       	ldi	r25, 0x00	; 0
     31e:	fc 01       	movw	r30, r24
     320:	20 81       	ld	r18, Z
     322:	82 e2       	ldi	r24, 0x22	; 34
     324:	90 e0       	ldi	r25, 0x00	; 0

00000326 <.Loc.43>:
     326:	28 60       	ori	r18, 0x08	; 8
     328:	fc 01       	movw	r30, r24
     32a:	20 83       	st	Z, r18

0000032c <.Loc.44>:
    PORT &= ~(1 << PIN21);
     32c:	82 e2       	ldi	r24, 0x22	; 34
     32e:	90 e0       	ldi	r25, 0x00	; 0
     330:	fc 01       	movw	r30, r24
     332:	20 81       	ld	r18, Z

00000334 <.Loc.45>:
     334:	82 e2       	ldi	r24, 0x22	; 34
     336:	90 e0       	ldi	r25, 0x00	; 0

00000338 <.Loc.46>:
     338:	2f 7e       	andi	r18, 0xEF	; 239
     33a:	fc 01       	movw	r30, r24
     33c:	20 83       	st	Z, r18

0000033e <.Loc.47>:
}
     33e:	00 00       	nop
     340:	df 91       	pop	r29
     342:	cf 91       	pop	r28
     344:	08 95       	ret

00000346 <signaal_geven>:

void signaal_geven()
{
     346:	cf 93       	push	r28
     348:	df 93       	push	r29
     34a:	cd b7       	in	r28, 0x3d	; 61
     34c:	de b7       	in	r29, 0x3e	; 62
     34e:	c4 54       	subi	r28, 0x44	; 68
     350:	d1 09       	sbc	r29, r1
     352:	0f b6       	in	r0, 0x3f	; 63
     354:	f8 94       	cli
     356:	de bf       	out	0x3e, r29	; 62
     358:	0f be       	out	0x3f, r0	; 63
     35a:	cd bf       	out	0x3d, r28	; 61

0000035c <.Loc.49>:
    PORT_LED |= (1<<LED_1);         // LED 1 aan
     35c:	82 e0       	ldi	r24, 0x02	; 2
     35e:	91 e0       	ldi	r25, 0x01	; 1
     360:	dc 01       	movw	r26, r24
     362:	2c 91       	ld	r18, X
     364:	82 e0       	ldi	r24, 0x02	; 2
     366:	91 e0       	ldi	r25, 0x01	; 1

00000368 <.Loc.50>:
     368:	20 61       	ori	r18, 0x10	; 16
     36a:	fc 01       	movw	r30, r24
     36c:	20 83       	st	Z, r18

0000036e <.Loc.51>:
    PORT_LED &= ~(1<<LED_2);        // LED 2 uit
     36e:	82 e0       	ldi	r24, 0x02	; 2
     370:	91 e0       	ldi	r25, 0x01	; 1
     372:	dc 01       	movw	r26, r24
     374:	2c 91       	ld	r18, X

00000376 <.Loc.52>:
     376:	82 e0       	ldi	r24, 0x02	; 2
     378:	91 e0       	ldi	r25, 0x01	; 1

0000037a <.Loc.53>:
     37a:	2f 7d       	andi	r18, 0xDF	; 223
     37c:	fc 01       	movw	r30, r24
     37e:	20 83       	st	Z, r18

00000380 <.Loc.54>:
    PORT_buzzer |= (1<<buzzer);     // buzzer aan
     380:	82 e0       	ldi	r24, 0x02	; 2
     382:	91 e0       	ldi	r25, 0x01	; 1
     384:	dc 01       	movw	r26, r24
     386:	2c 91       	ld	r18, X
     388:	82 e0       	ldi	r24, 0x02	; 2
     38a:	91 e0       	ldi	r25, 0x01	; 1

0000038c <.Loc.55>:
     38c:	28 60       	ori	r18, 0x08	; 8
     38e:	fc 01       	movw	r30, r24
     390:	20 83       	st	Z, r18
     392:	80 e0       	ldi	r24, 0x00	; 0
     394:	90 e0       	ldi	r25, 0x00	; 0
     396:	aa ef       	ldi	r26, 0xFA	; 250
     398:	b3 e4       	ldi	r27, 0x43	; 67
     39a:	8f 87       	std	Y+15, r24	; 0x0f
     39c:	98 8b       	std	Y+16, r25	; 0x10
     39e:	a9 8b       	std	Y+17, r26	; 0x11
     3a0:	ba 8b       	std	Y+18, r27	; 0x12

000003a2 <.LBB18>:

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     3a2:	20 e0       	ldi	r18, 0x00	; 0
     3a4:	30 e0       	ldi	r19, 0x00	; 0
     3a6:	4a e7       	ldi	r20, 0x7A	; 122
     3a8:	55 e4       	ldi	r21, 0x45	; 69
     3aa:	6f 85       	ldd	r22, Y+15	; 0x0f
     3ac:	78 89       	ldd	r23, Y+16	; 0x10
     3ae:	89 89       	ldd	r24, Y+17	; 0x11
     3b0:	9a 89       	ldd	r25, Y+18	; 0x12
     3b2:	0e 94 51 0c 	call	0x18a2	; 0x18a2 <__mulsf3>
     3b6:	6d a3       	std	Y+37, r22	; 0x25
     3b8:	7e a3       	std	Y+38, r23	; 0x26
     3ba:	8f a3       	std	Y+39, r24	; 0x27
     3bc:	98 a7       	std	Y+40, r25	; 0x28
     3be:	8d a1       	ldd	r24, Y+37	; 0x25
     3c0:	9e a1       	ldd	r25, Y+38	; 0x26
     3c2:	af a1       	ldd	r26, Y+39	; 0x27
     3c4:	b8 a5       	ldd	r27, Y+40	; 0x28
     3c6:	8b 8b       	std	Y+19, r24	; 0x13
     3c8:	9c 8b       	std	Y+20, r25	; 0x14
     3ca:	ad 8b       	std	Y+21, r26	; 0x15
     3cc:	be 8b       	std	Y+22, r27	; 0x16

000003ce <.Loc.57>:
	if (__tmp < 1.0)
     3ce:	20 e0       	ldi	r18, 0x00	; 0
     3d0:	30 e0       	ldi	r19, 0x00	; 0
     3d2:	40 e8       	ldi	r20, 0x80	; 128
     3d4:	5f e3       	ldi	r21, 0x3F	; 63
     3d6:	6b 89       	ldd	r22, Y+19	; 0x13
     3d8:	7c 89       	ldd	r23, Y+20	; 0x14
     3da:	8d 89       	ldd	r24, Y+21	; 0x15
     3dc:	9e 89       	ldd	r25, Y+22	; 0x16
     3de:	0e 94 ed 0a 	call	0x15da	; 0x15da <__cmpsf2>
     3e2:	88 23       	and	r24, r24
     3e4:	2c f4       	brge	.+10     	; 0x3f0 <.L26>

000003e6 <.Loc.58>:
		__ticks = 1;
     3e6:	81 e0       	ldi	r24, 0x01	; 1
     3e8:	90 e0       	ldi	r25, 0x00	; 0
     3ea:	98 8f       	std	Y+24, r25	; 0x18
     3ec:	8f 8b       	std	Y+23, r24	; 0x17
     3ee:	55 c0       	rjmp	.+170    	; 0x49a <.L8>

000003f0 <.L26>:
	else if (__tmp > 65535)
     3f0:	20 e0       	ldi	r18, 0x00	; 0
     3f2:	3f ef       	ldi	r19, 0xFF	; 255
     3f4:	4f e7       	ldi	r20, 0x7F	; 127
     3f6:	57 e4       	ldi	r21, 0x47	; 71
     3f8:	6b 89       	ldd	r22, Y+19	; 0x13
     3fa:	7c 89       	ldd	r23, Y+20	; 0x14
     3fc:	8d 89       	ldd	r24, Y+21	; 0x15
     3fe:	9e 89       	ldd	r25, Y+22	; 0x16
     400:	0e 94 4c 0c 	call	0x1898	; 0x1898 <__gesf2>
     404:	88 23       	and	r24, r24
     406:	d9 f1       	breq	.+118    	; 0x47e <.L27>
     408:	d4 f1       	brlt	.+116    	; 0x47e <.L27>

0000040a <.Loc.60>:
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     40a:	20 e0       	ldi	r18, 0x00	; 0
     40c:	30 e0       	ldi	r19, 0x00	; 0
     40e:	40 e2       	ldi	r20, 0x20	; 32
     410:	51 e4       	ldi	r21, 0x41	; 65
     412:	6f 85       	ldd	r22, Y+15	; 0x0f
     414:	78 89       	ldd	r23, Y+16	; 0x10
     416:	89 89       	ldd	r24, Y+17	; 0x11
     418:	9a 89       	ldd	r25, Y+18	; 0x12
     41a:	0e 94 51 0c 	call	0x18a2	; 0x18a2 <__mulsf3>
     41e:	69 a7       	std	Y+41, r22	; 0x29
     420:	7a a7       	std	Y+42, r23	; 0x2a
     422:	8b a7       	std	Y+43, r24	; 0x2b
     424:	9c a7       	std	Y+44, r25	; 0x2c
     426:	89 a5       	ldd	r24, Y+41	; 0x29
     428:	9a a5       	ldd	r25, Y+42	; 0x2a
     42a:	ab a5       	ldd	r26, Y+43	; 0x2b
     42c:	bc a5       	ldd	r27, Y+44	; 0x2c
     42e:	89 a3       	std	Y+33, r24	; 0x21
     430:	9a a3       	std	Y+34, r25	; 0x22
     432:	ab a3       	std	Y+35, r26	; 0x23
     434:	bc a3       	std	Y+36, r27	; 0x24

00000436 <.Loc.61>:
     436:	69 a1       	ldd	r22, Y+33	; 0x21
     438:	7a a1       	ldd	r23, Y+34	; 0x22
     43a:	8b a1       	ldd	r24, Y+35	; 0x23
     43c:	9c a1       	ldd	r25, Y+36	; 0x24
     43e:	0e 94 6b 0b 	call	0x16d6	; 0x16d6 <__fixunssfsi>
     442:	6d a7       	std	Y+45, r22	; 0x2d
     444:	7e a7       	std	Y+46, r23	; 0x2e
     446:	8f a7       	std	Y+47, r24	; 0x2f
     448:	98 ab       	std	Y+48, r25	; 0x30
     44a:	ad a5       	ldd	r26, Y+45	; 0x2d
     44c:	be a5       	ldd	r27, Y+46	; 0x2e
     44e:	b8 8f       	std	Y+24, r27	; 0x18
     450:	af 8b       	std	Y+23, r26	; 0x17

00000452 <.Loc.62>:
		while(__ticks)
     452:	10 c0       	rjmp	.+32     	; 0x474 <.L11>

00000454 <.L12>:
     454:	80 e9       	ldi	r24, 0x90	; 144
     456:	91 e0       	ldi	r25, 0x01	; 1
     458:	9a 8f       	std	Y+26, r25	; 0x1a
     45a:	89 8f       	std	Y+25, r24	; 0x19

0000045c <.LBB20>:
		"sbc %B0,__zero_reg__"    "\n\t"
		"brne 1b"
		: "+d" (__count)
	);
#else
	__asm__ volatile (
     45c:	89 8d       	ldd	r24, Y+25	; 0x19
     45e:	9a 8d       	ldd	r25, Y+26	; 0x1a

00000460 <.L1^B1>:
     460:	01 97       	sbiw	r24, 0x01	; 1
     462:	f1 f7       	brne	.-4      	; 0x460 <.L1^B1>
     464:	9a 8f       	std	Y+26, r25	; 0x1a
     466:	89 8f       	std	Y+25, r24	; 0x19

00000468 <.Loc.64>:
	...

0000046a <.LBE20>:
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     46a:	8f 89       	ldd	r24, Y+23	; 0x17
     46c:	98 8d       	ldd	r25, Y+24	; 0x18
     46e:	01 97       	sbiw	r24, 0x01	; 1
     470:	98 8f       	std	Y+24, r25	; 0x18
     472:	8f 8b       	std	Y+23, r24	; 0x17

00000474 <.L11>:
		while(__ticks)
     474:	8f 89       	ldd	r24, Y+23	; 0x17
     476:	98 8d       	ldd	r25, Y+24	; 0x18
     478:	00 97       	sbiw	r24, 0x00	; 0
     47a:	61 f7       	brne	.-40     	; 0x454 <.L12>

0000047c <.Loc.67>:
		}
		return;
     47c:	19 c0       	rjmp	.+50     	; 0x4b0 <.L13>

0000047e <.L27>:
	}
	else
		__ticks = (uint16_t)__tmp;
     47e:	6b 89       	ldd	r22, Y+19	; 0x13
     480:	7c 89       	ldd	r23, Y+20	; 0x14
     482:	8d 89       	ldd	r24, Y+21	; 0x15
     484:	9e 89       	ldd	r25, Y+22	; 0x16
     486:	0e 94 6b 0b 	call	0x16d6	; 0x16d6 <__fixunssfsi>
     48a:	69 ab       	std	Y+49, r22	; 0x31
     48c:	7a ab       	std	Y+50, r23	; 0x32
     48e:	8b ab       	std	Y+51, r24	; 0x33
     490:	9c ab       	std	Y+52, r25	; 0x34
     492:	e9 a9       	ldd	r30, Y+49	; 0x31
     494:	fa a9       	ldd	r31, Y+50	; 0x32
     496:	f8 8f       	std	Y+24, r31	; 0x18
     498:	ef 8b       	std	Y+23, r30	; 0x17

0000049a <.L8>:
     49a:	8f 89       	ldd	r24, Y+23	; 0x17
     49c:	98 8d       	ldd	r25, Y+24	; 0x18
     49e:	9c 8f       	std	Y+28, r25	; 0x1c
     4a0:	8b 8f       	std	Y+27, r24	; 0x1b

000004a2 <.LBB22>:
     4a2:	8b 8d       	ldd	r24, Y+27	; 0x1b
     4a4:	9c 8d       	ldd	r25, Y+28	; 0x1c

000004a6 <.L1^B2>:
     4a6:	01 97       	sbiw	r24, 0x01	; 1
     4a8:	f1 f7       	brne	.-4      	; 0x4a6 <.L1^B2>
     4aa:	9c 8f       	std	Y+28, r25	; 0x1c
     4ac:	8b 8f       	std	Y+27, r24	; 0x1b

000004ae <.Loc.70>:
	...

000004b0 <.L13>:
    _delay_ms(500);
    PORT_LED |= (1<<LED_2);         // LED 2 aan
     4b0:	82 e0       	ldi	r24, 0x02	; 2
     4b2:	91 e0       	ldi	r25, 0x01	; 1
     4b4:	dc 01       	movw	r26, r24
     4b6:	2c 91       	ld	r18, X
     4b8:	82 e0       	ldi	r24, 0x02	; 2
     4ba:	91 e0       	ldi	r25, 0x01	; 1

000004bc <.Loc.72>:
     4bc:	20 62       	ori	r18, 0x20	; 32
     4be:	fc 01       	movw	r30, r24
     4c0:	20 83       	st	Z, r18

000004c2 <.Loc.73>:
    PORT_LED &= ~(1<<LED_1);        // LED 1 uit
     4c2:	82 e0       	ldi	r24, 0x02	; 2
     4c4:	91 e0       	ldi	r25, 0x01	; 1
     4c6:	dc 01       	movw	r26, r24
     4c8:	2c 91       	ld	r18, X

000004ca <.Loc.74>:
     4ca:	82 e0       	ldi	r24, 0x02	; 2
     4cc:	91 e0       	ldi	r25, 0x01	; 1

000004ce <.Loc.75>:
     4ce:	2f 7e       	andi	r18, 0xEF	; 239
     4d0:	fc 01       	movw	r30, r24
     4d2:	20 83       	st	Z, r18

000004d4 <.Loc.76>:
    PORT_buzzer &= ~(1<<buzzer);    // buzzer uit
     4d4:	82 e0       	ldi	r24, 0x02	; 2
     4d6:	91 e0       	ldi	r25, 0x01	; 1
     4d8:	dc 01       	movw	r26, r24
     4da:	2c 91       	ld	r18, X

000004dc <.Loc.77>:
     4dc:	82 e0       	ldi	r24, 0x02	; 2
     4de:	91 e0       	ldi	r25, 0x01	; 1

000004e0 <.Loc.78>:
     4e0:	27 7f       	andi	r18, 0xF7	; 247
     4e2:	fc 01       	movw	r30, r24
     4e4:	20 83       	st	Z, r18
     4e6:	80 e0       	ldi	r24, 0x00	; 0
     4e8:	90 e0       	ldi	r25, 0x00	; 0
     4ea:	aa ef       	ldi	r26, 0xFA	; 250
     4ec:	b3 e4       	ldi	r27, 0x43	; 67
     4ee:	89 83       	std	Y+1, r24	; 0x01
     4f0:	9a 83       	std	Y+2, r25	; 0x02
     4f2:	ab 83       	std	Y+3, r26	; 0x03
     4f4:	bc 83       	std	Y+4, r27	; 0x04

000004f6 <.LBB24>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     4f6:	20 e0       	ldi	r18, 0x00	; 0
     4f8:	30 e0       	ldi	r19, 0x00	; 0
     4fa:	4a e7       	ldi	r20, 0x7A	; 122
     4fc:	55 e4       	ldi	r21, 0x45	; 69
     4fe:	69 81       	ldd	r22, Y+1	; 0x01
     500:	7a 81       	ldd	r23, Y+2	; 0x02
     502:	8b 81       	ldd	r24, Y+3	; 0x03
     504:	9c 81       	ldd	r25, Y+4	; 0x04
     506:	0e 94 51 0c 	call	0x18a2	; 0x18a2 <__mulsf3>
     50a:	6d ab       	std	Y+53, r22	; 0x35
     50c:	7e ab       	std	Y+54, r23	; 0x36
     50e:	8f ab       	std	Y+55, r24	; 0x37
     510:	98 af       	std	Y+56, r25	; 0x38
     512:	8d a9       	ldd	r24, Y+53	; 0x35
     514:	9e a9       	ldd	r25, Y+54	; 0x36
     516:	af a9       	ldd	r26, Y+55	; 0x37
     518:	b8 ad       	ldd	r27, Y+56	; 0x38
     51a:	8d 83       	std	Y+5, r24	; 0x05
     51c:	9e 83       	std	Y+6, r25	; 0x06
     51e:	af 83       	std	Y+7, r26	; 0x07
     520:	b8 87       	std	Y+8, r27	; 0x08

00000522 <.Loc.80>:
	if (__tmp < 1.0)
     522:	20 e0       	ldi	r18, 0x00	; 0
     524:	30 e0       	ldi	r19, 0x00	; 0
     526:	40 e8       	ldi	r20, 0x80	; 128
     528:	5f e3       	ldi	r21, 0x3F	; 63
     52a:	6d 81       	ldd	r22, Y+5	; 0x05
     52c:	7e 81       	ldd	r23, Y+6	; 0x06
     52e:	8f 81       	ldd	r24, Y+7	; 0x07
     530:	98 85       	ldd	r25, Y+8	; 0x08
     532:	0e 94 ed 0a 	call	0x15da	; 0x15da <__cmpsf2>
     536:	88 23       	and	r24, r24
     538:	2c f4       	brge	.+10     	; 0x544 <.L28>

0000053a <.Loc.81>:
		__ticks = 1;
     53a:	81 e0       	ldi	r24, 0x01	; 1
     53c:	90 e0       	ldi	r25, 0x00	; 0
     53e:	9a 87       	std	Y+10, r25	; 0x0a
     540:	89 87       	std	Y+9, r24	; 0x09
     542:	5c c0       	rjmp	.+184    	; 0x5fc <.L16>

00000544 <.L28>:
	else if (__tmp > 65535)
     544:	20 e0       	ldi	r18, 0x00	; 0
     546:	3f ef       	ldi	r19, 0xFF	; 255
     548:	4f e7       	ldi	r20, 0x7F	; 127
     54a:	57 e4       	ldi	r21, 0x47	; 71
     54c:	6d 81       	ldd	r22, Y+5	; 0x05
     54e:	7e 81       	ldd	r23, Y+6	; 0x06
     550:	8f 81       	ldd	r24, Y+7	; 0x07
     552:	98 85       	ldd	r25, Y+8	; 0x08
     554:	0e 94 4c 0c 	call	0x1898	; 0x1898 <__gesf2>
     558:	88 23       	and	r24, r24
     55a:	09 f0       	breq	.+2      	; 0x55e <L0^A>

0000055c <L0^A>:
     55c:	0c f4       	brge	.+2      	; 0x560 <.Loc.83>

0000055e <L0^A>:
     55e:	3c c0       	rjmp	.+120    	; 0x5d8 <.L29>

00000560 <.Loc.83>:
		__ticks = (uint16_t) (__ms * 10.0);
     560:	20 e0       	ldi	r18, 0x00	; 0
     562:	30 e0       	ldi	r19, 0x00	; 0
     564:	40 e2       	ldi	r20, 0x20	; 32
     566:	51 e4       	ldi	r21, 0x41	; 65
     568:	69 81       	ldd	r22, Y+1	; 0x01
     56a:	7a 81       	ldd	r23, Y+2	; 0x02
     56c:	8b 81       	ldd	r24, Y+3	; 0x03
     56e:	9c 81       	ldd	r25, Y+4	; 0x04
     570:	0e 94 51 0c 	call	0x18a2	; 0x18a2 <__mulsf3>
     574:	69 af       	std	Y+57, r22	; 0x39
     576:	7a af       	std	Y+58, r23	; 0x3a
     578:	8b af       	std	Y+59, r24	; 0x3b
     57a:	9c af       	std	Y+60, r25	; 0x3c
     57c:	89 ad       	ldd	r24, Y+57	; 0x39
     57e:	9a ad       	ldd	r25, Y+58	; 0x3a
     580:	ab ad       	ldd	r26, Y+59	; 0x3b
     582:	bc ad       	ldd	r27, Y+60	; 0x3c
     584:	8d 8f       	std	Y+29, r24	; 0x1d
     586:	9e 8f       	std	Y+30, r25	; 0x1e
     588:	af 8f       	std	Y+31, r26	; 0x1f
     58a:	b8 a3       	std	Y+32, r27	; 0x20

0000058c <.Loc.84>:
     58c:	6d 8d       	ldd	r22, Y+29	; 0x1d
     58e:	7e 8d       	ldd	r23, Y+30	; 0x1e
     590:	8f 8d       	ldd	r24, Y+31	; 0x1f
     592:	98 a1       	ldd	r25, Y+32	; 0x20
     594:	0e 94 6b 0b 	call	0x16d6	; 0x16d6 <__fixunssfsi>
     598:	21 96       	adiw	r28, 0x01	; 1
     59a:	6c af       	std	Y+60, r22	; 0x3c
     59c:	7d af       	std	Y+61, r23	; 0x3d
     59e:	8e af       	std	Y+62, r24	; 0x3e
     5a0:	9f af       	std	Y+63, r25	; 0x3f
     5a2:	21 97       	sbiw	r28, 0x01	; 1
     5a4:	ad ad       	ldd	r26, Y+61	; 0x3d
     5a6:	be ad       	ldd	r27, Y+62	; 0x3e
     5a8:	ba 87       	std	Y+10, r27	; 0x0a
     5aa:	a9 87       	std	Y+9, r26	; 0x09

000005ac <.Loc.85>:
		while(__ticks)
     5ac:	10 c0       	rjmp	.+32     	; 0x5ce <.L19>

000005ae <.L20>:
     5ae:	80 e9       	ldi	r24, 0x90	; 144
     5b0:	91 e0       	ldi	r25, 0x01	; 1
     5b2:	9c 87       	std	Y+12, r25	; 0x0c
     5b4:	8b 87       	std	Y+11, r24	; 0x0b

000005b6 <.LBB26>:
     5b6:	8b 85       	ldd	r24, Y+11	; 0x0b
     5b8:	9c 85       	ldd	r25, Y+12	; 0x0c

000005ba <.L1^B3>:
     5ba:	01 97       	sbiw	r24, 0x01	; 1
     5bc:	f1 f7       	brne	.-4      	; 0x5ba <.L1^B3>
     5be:	9c 87       	std	Y+12, r25	; 0x0c
     5c0:	8b 87       	std	Y+11, r24	; 0x0b

000005c2 <.Loc.87>:
	...

000005c4 <.LBE26>:
			__ticks --;
     5c4:	89 85       	ldd	r24, Y+9	; 0x09
     5c6:	9a 85       	ldd	r25, Y+10	; 0x0a
     5c8:	01 97       	sbiw	r24, 0x01	; 1
     5ca:	9a 87       	std	Y+10, r25	; 0x0a
     5cc:	89 87       	std	Y+9, r24	; 0x09

000005ce <.L19>:
		while(__ticks)
     5ce:	89 85       	ldd	r24, Y+9	; 0x09
     5d0:	9a 85       	ldd	r25, Y+10	; 0x0a
     5d2:	00 97       	sbiw	r24, 0x00	; 0
     5d4:	61 f7       	brne	.-40     	; 0x5ae <.L20>

000005d6 <.Loc.90>:
		return;
     5d6:	1d c0       	rjmp	.+58     	; 0x612 <.L21>

000005d8 <.L29>:
		__ticks = (uint16_t)__tmp;
     5d8:	6d 81       	ldd	r22, Y+5	; 0x05
     5da:	7e 81       	ldd	r23, Y+6	; 0x06
     5dc:	8f 81       	ldd	r24, Y+7	; 0x07
     5de:	98 85       	ldd	r25, Y+8	; 0x08
     5e0:	0e 94 6b 0b 	call	0x16d6	; 0x16d6 <__fixunssfsi>
     5e4:	25 96       	adiw	r28, 0x05	; 5
     5e6:	6c af       	std	Y+60, r22	; 0x3c
     5e8:	7d af       	std	Y+61, r23	; 0x3d
     5ea:	8e af       	std	Y+62, r24	; 0x3e
     5ec:	9f af       	std	Y+63, r25	; 0x3f
     5ee:	25 97       	sbiw	r28, 0x05	; 5
     5f0:	23 96       	adiw	r28, 0x03	; 3
     5f2:	ee ad       	ldd	r30, Y+62	; 0x3e
     5f4:	ff ad       	ldd	r31, Y+63	; 0x3f
     5f6:	23 97       	sbiw	r28, 0x03	; 3
     5f8:	fa 87       	std	Y+10, r31	; 0x0a
     5fa:	e9 87       	std	Y+9, r30	; 0x09

000005fc <.L16>:
     5fc:	89 85       	ldd	r24, Y+9	; 0x09
     5fe:	9a 85       	ldd	r25, Y+10	; 0x0a
     600:	9e 87       	std	Y+14, r25	; 0x0e
     602:	8d 87       	std	Y+13, r24	; 0x0d

00000604 <.LBB28>:
     604:	8d 85       	ldd	r24, Y+13	; 0x0d
     606:	9e 85       	ldd	r25, Y+14	; 0x0e

00000608 <.L1^B4>:
     608:	01 97       	sbiw	r24, 0x01	; 1
     60a:	f1 f7       	brne	.-4      	; 0x608 <.L1^B4>
     60c:	9e 87       	std	Y+14, r25	; 0x0e
     60e:	8d 87       	std	Y+13, r24	; 0x0d

00000610 <.Loc.93>:
	...

00000612 <.L21>:
    _delay_ms(500);
}
     612:	00 00       	nop
     614:	cc 5b       	subi	r28, 0xBC	; 188
     616:	df 4f       	sbci	r29, 0xFF	; 255
     618:	0f b6       	in	r0, 0x3f	; 63
     61a:	f8 94       	cli
     61c:	de bf       	out	0x3e, r29	; 62
     61e:	0f be       	out	0x3f, r0	; 63
     620:	cd bf       	out	0x3d, r28	; 61
     622:	df 91       	pop	r29
     624:	cf 91       	pop	r28
     626:	08 95       	ret

00000628 <h_bridgeR_set_percentage>:

void h_bridgeR_set_percentage(signed char percentage)
{
     628:	0f 93       	push	r16
     62a:	1f 93       	push	r17
     62c:	cf 93       	push	r28
     62e:	df 93       	push	r29
     630:	00 d0       	rcall	.+0      	; 0x632 <L0^A>

00000632 <L0^A>:
     632:	0f 92       	push	r0
     634:	0f 92       	push	r0
     636:	cd b7       	in	r28, 0x3d	; 61
     638:	de b7       	in	r29, 0x3e	; 62
     63a:	89 83       	std	Y+1, r24	; 0x01

0000063c <.Loc.96>:
	if (percentage >= 0 && percentage <= 100)
     63c:	89 81       	ldd	r24, Y+1	; 0x01
     63e:	88 23       	and	r24, r24
     640:	3c f1       	brlt	.+78     	; 0x690 <.L32>

00000642 <.Loc.97>:
     642:	89 81       	ldd	r24, Y+1	; 0x01
     644:	84 36       	cpi	r24, 0x64	; 100
     646:	09 f0       	breq	.+2      	; 0x64a <.Loc.98>

00000648 <L0^A>:
     648:	1c f5       	brge	.+70     	; 0x690 <.L32>

0000064a <.Loc.98>:
	{
			OCR1A = (65536*percentage)/100;
     64a:	89 81       	ldd	r24, Y+1	; 0x01
     64c:	08 2e       	mov	r0, r24
     64e:	00 0c       	add	r0, r0
     650:	99 0b       	sbc	r25, r25
     652:	aa 0b       	sbc	r26, r26
     654:	bb 0b       	sbc	r27, r27
     656:	ac 01       	movw	r20, r24
     658:	33 27       	eor	r19, r19
     65a:	22 27       	eor	r18, r18
     65c:	2a 83       	std	Y+2, r18	; 0x02
     65e:	3b 83       	std	Y+3, r19	; 0x03
     660:	4c 83       	std	Y+4, r20	; 0x04
     662:	5d 83       	std	Y+5, r21	; 0x05

00000664 <.Loc.99>:
     664:	04 e6       	ldi	r16, 0x64	; 100
     666:	10 e0       	ldi	r17, 0x00	; 0
     668:	20 e0       	ldi	r18, 0x00	; 0
     66a:	30 e0       	ldi	r19, 0x00	; 0
     66c:	6a 81       	ldd	r22, Y+2	; 0x02
     66e:	7b 81       	ldd	r23, Y+3	; 0x03
     670:	8c 81       	ldd	r24, Y+4	; 0x04
     672:	9d 81       	ldd	r25, Y+5	; 0x05
     674:	a9 01       	movw	r20, r18
     676:	98 01       	movw	r18, r16
     678:	0e 94 a4 0a 	call	0x1548	; 0x1548 <__divmodsi4>
     67c:	da 01       	movw	r26, r20
     67e:	c9 01       	movw	r24, r18
     680:	ac 01       	movw	r20, r24
     682:	bd 01       	movw	r22, r26

00000684 <.Loc.100>:
     684:	88 e8       	ldi	r24, 0x88	; 136
     686:	90 e0       	ldi	r25, 0x00	; 0

00000688 <.Loc.101>:
     688:	9a 01       	movw	r18, r20
     68a:	fc 01       	movw	r30, r24
     68c:	31 83       	std	Z+1, r19	; 0x01
     68e:	20 83       	st	Z, r18

00000690 <.L32>:
	}
}
     690:	00 00       	nop
     692:	0f 90       	pop	r0
     694:	0f 90       	pop	r0
     696:	0f 90       	pop	r0
     698:	0f 90       	pop	r0
     69a:	0f 90       	pop	r0
     69c:	df 91       	pop	r29
     69e:	cf 91       	pop	r28
     6a0:	1f 91       	pop	r17
     6a2:	0f 91       	pop	r16
     6a4:	08 95       	ret

000006a6 <h_bridgeL_set_percentage>:

void h_bridgeL_set_percentage(signed char percentage)
{
     6a6:	0f 93       	push	r16
     6a8:	1f 93       	push	r17
     6aa:	cf 93       	push	r28
     6ac:	df 93       	push	r29
     6ae:	00 d0       	rcall	.+0      	; 0x6b0 <L0^A>

000006b0 <L0^A>:
     6b0:	0f 92       	push	r0
     6b2:	0f 92       	push	r0
     6b4:	cd b7       	in	r28, 0x3d	; 61
     6b6:	de b7       	in	r29, 0x3e	; 62
     6b8:	89 83       	std	Y+1, r24	; 0x01

000006ba <.Loc.104>:
	if (percentage >= 0 && percentage <= 100)
     6ba:	89 81       	ldd	r24, Y+1	; 0x01
     6bc:	88 23       	and	r24, r24
     6be:	3c f1       	brlt	.+78     	; 0x70e <.L35>

000006c0 <.Loc.105>:
     6c0:	89 81       	ldd	r24, Y+1	; 0x01
     6c2:	84 36       	cpi	r24, 0x64	; 100
     6c4:	09 f0       	breq	.+2      	; 0x6c8 <.Loc.106>

000006c6 <L0^A>:
     6c6:	1c f5       	brge	.+70     	; 0x70e <.L35>

000006c8 <.Loc.106>:
	{
			OCR3A = (65536*percentage)/100;
     6c8:	89 81       	ldd	r24, Y+1	; 0x01
     6ca:	08 2e       	mov	r0, r24
     6cc:	00 0c       	add	r0, r0
     6ce:	99 0b       	sbc	r25, r25
     6d0:	aa 0b       	sbc	r26, r26
     6d2:	bb 0b       	sbc	r27, r27
     6d4:	ac 01       	movw	r20, r24
     6d6:	33 27       	eor	r19, r19
     6d8:	22 27       	eor	r18, r18
     6da:	2a 83       	std	Y+2, r18	; 0x02
     6dc:	3b 83       	std	Y+3, r19	; 0x03
     6de:	4c 83       	std	Y+4, r20	; 0x04
     6e0:	5d 83       	std	Y+5, r21	; 0x05

000006e2 <.Loc.107>:
     6e2:	04 e6       	ldi	r16, 0x64	; 100
     6e4:	10 e0       	ldi	r17, 0x00	; 0
     6e6:	20 e0       	ldi	r18, 0x00	; 0
     6e8:	30 e0       	ldi	r19, 0x00	; 0
     6ea:	6a 81       	ldd	r22, Y+2	; 0x02
     6ec:	7b 81       	ldd	r23, Y+3	; 0x03
     6ee:	8c 81       	ldd	r24, Y+4	; 0x04
     6f0:	9d 81       	ldd	r25, Y+5	; 0x05
     6f2:	a9 01       	movw	r20, r18
     6f4:	98 01       	movw	r18, r16
     6f6:	0e 94 a4 0a 	call	0x1548	; 0x1548 <__divmodsi4>
     6fa:	da 01       	movw	r26, r20
     6fc:	c9 01       	movw	r24, r18
     6fe:	ac 01       	movw	r20, r24
     700:	bd 01       	movw	r22, r26

00000702 <.Loc.108>:
     702:	88 e9       	ldi	r24, 0x98	; 152
     704:	90 e0       	ldi	r25, 0x00	; 0

00000706 <.Loc.109>:
     706:	9a 01       	movw	r18, r20
     708:	fc 01       	movw	r30, r24
     70a:	31 83       	std	Z+1, r19	; 0x01
     70c:	20 83       	st	Z, r18

0000070e <.L35>:
	}
}
     70e:	00 00       	nop
     710:	0f 90       	pop	r0
     712:	0f 90       	pop	r0
     714:	0f 90       	pop	r0
     716:	0f 90       	pop	r0
     718:	0f 90       	pop	r0
     71a:	df 91       	pop	r29
     71c:	cf 91       	pop	r28
     71e:	1f 91       	pop	r17
     720:	0f 91       	pop	r16
     722:	08 95       	ret

00000724 <__vector_20>:

//H-brug PWMR
ISR(TIMER1_OVF_vect)
{
     724:	1f 92       	push	r1
     726:	0f 92       	push	r0
     728:	0f b6       	in	r0, 0x3f	; 63
     72a:	0f 92       	push	r0
     72c:	11 24       	eor	r1, r1
     72e:	0b b6       	in	r0, 0x3b	; 59
     730:	0f 92       	push	r0
     732:	2f 93       	push	r18
     734:	3f 93       	push	r19
     736:	8f 93       	push	r24
     738:	9f 93       	push	r25
     73a:	ef 93       	push	r30
     73c:	ff 93       	push	r31
     73e:	cf 93       	push	r28
     740:	df 93       	push	r29
     742:	cd b7       	in	r28, 0x3d	; 61
     744:	de b7       	in	r29, 0x3e	; 62

00000746 <.Loc.112>:
    PORT ^= (1 << PEN1);
     746:	82 e2       	ldi	r24, 0x22	; 34
     748:	90 e0       	ldi	r25, 0x00	; 0
     74a:	fc 01       	movw	r30, r24
     74c:	30 81       	ld	r19, Z
     74e:	82 e2       	ldi	r24, 0x22	; 34
     750:	90 e0       	ldi	r25, 0x00	; 0

00000752 <.Loc.113>:
     752:	20 e8       	ldi	r18, 0x80	; 128
     754:	23 27       	eor	r18, r19
     756:	fc 01       	movw	r30, r24
     758:	20 83       	st	Z, r18

0000075a <.Loc.114>:
}
     75a:	00 00       	nop
     75c:	df 91       	pop	r29
     75e:	cf 91       	pop	r28
     760:	ff 91       	pop	r31
     762:	ef 91       	pop	r30
     764:	9f 91       	pop	r25
     766:	8f 91       	pop	r24
     768:	3f 91       	pop	r19
     76a:	2f 91       	pop	r18
     76c:	0f 90       	pop	r0
     76e:	0b be       	out	0x3b, r0	; 59
     770:	0f 90       	pop	r0
     772:	0f be       	out	0x3f, r0	; 63
     774:	0f 90       	pop	r0
     776:	1f 90       	pop	r1
     778:	18 95       	reti

0000077a <__vector_17>:
//H-brug PWMR
ISR(TIMER1_COMPA_vect)
{
     77a:	1f 92       	push	r1
     77c:	0f 92       	push	r0
     77e:	0f b6       	in	r0, 0x3f	; 63
     780:	0f 92       	push	r0
     782:	11 24       	eor	r1, r1
     784:	0b b6       	in	r0, 0x3b	; 59
     786:	0f 92       	push	r0
     788:	2f 93       	push	r18
     78a:	8f 93       	push	r24
     78c:	9f 93       	push	r25
     78e:	ef 93       	push	r30
     790:	ff 93       	push	r31
     792:	cf 93       	push	r28
     794:	df 93       	push	r29
     796:	cd b7       	in	r28, 0x3d	; 61
     798:	de b7       	in	r29, 0x3e	; 62

0000079a <.Loc.116>:
    PORT |= (1 << PEN1);
     79a:	82 e2       	ldi	r24, 0x22	; 34
     79c:	90 e0       	ldi	r25, 0x00	; 0
     79e:	fc 01       	movw	r30, r24
     7a0:	20 81       	ld	r18, Z
     7a2:	82 e2       	ldi	r24, 0x22	; 34
     7a4:	90 e0       	ldi	r25, 0x00	; 0

000007a6 <.Loc.117>:
     7a6:	20 68       	ori	r18, 0x80	; 128
     7a8:	fc 01       	movw	r30, r24
     7aa:	20 83       	st	Z, r18

000007ac <.Loc.118>:
}
     7ac:	00 00       	nop
     7ae:	df 91       	pop	r29
     7b0:	cf 91       	pop	r28
     7b2:	ff 91       	pop	r31
     7b4:	ef 91       	pop	r30
     7b6:	9f 91       	pop	r25
     7b8:	8f 91       	pop	r24
     7ba:	2f 91       	pop	r18
     7bc:	0f 90       	pop	r0
     7be:	0b be       	out	0x3b, r0	; 59
     7c0:	0f 90       	pop	r0
     7c2:	0f be       	out	0x3f, r0	; 63
     7c4:	0f 90       	pop	r0
     7c6:	1f 90       	pop	r1
     7c8:	18 95       	reti

000007ca <__vector_35>:

//H-brug PWML
ISR(TIMER3_OVF_vect)
{
     7ca:	1f 92       	push	r1
     7cc:	0f 92       	push	r0
     7ce:	0f b6       	in	r0, 0x3f	; 63
     7d0:	0f 92       	push	r0
     7d2:	11 24       	eor	r1, r1
     7d4:	0b b6       	in	r0, 0x3b	; 59
     7d6:	0f 92       	push	r0
     7d8:	2f 93       	push	r18
     7da:	3f 93       	push	r19
     7dc:	8f 93       	push	r24
     7de:	9f 93       	push	r25
     7e0:	ef 93       	push	r30
     7e2:	ff 93       	push	r31
     7e4:	cf 93       	push	r28
     7e6:	df 93       	push	r29
     7e8:	cd b7       	in	r28, 0x3d	; 61
     7ea:	de b7       	in	r29, 0x3e	; 62

000007ec <.Loc.120>:
    PORT ^= (1 << PEN2);
     7ec:	82 e2       	ldi	r24, 0x22	; 34
     7ee:	90 e0       	ldi	r25, 0x00	; 0
     7f0:	fc 01       	movw	r30, r24
     7f2:	30 81       	ld	r19, Z
     7f4:	82 e2       	ldi	r24, 0x22	; 34
     7f6:	90 e0       	ldi	r25, 0x00	; 0

000007f8 <.Loc.121>:
     7f8:	24 e0       	ldi	r18, 0x04	; 4
     7fa:	23 27       	eor	r18, r19
     7fc:	fc 01       	movw	r30, r24
     7fe:	20 83       	st	Z, r18

00000800 <.Loc.122>:
}
     800:	00 00       	nop
     802:	df 91       	pop	r29
     804:	cf 91       	pop	r28
     806:	ff 91       	pop	r31
     808:	ef 91       	pop	r30
     80a:	9f 91       	pop	r25
     80c:	8f 91       	pop	r24
     80e:	3f 91       	pop	r19
     810:	2f 91       	pop	r18
     812:	0f 90       	pop	r0
     814:	0b be       	out	0x3b, r0	; 59
     816:	0f 90       	pop	r0
     818:	0f be       	out	0x3f, r0	; 63
     81a:	0f 90       	pop	r0
     81c:	1f 90       	pop	r1
     81e:	18 95       	reti

00000820 <__vector_32>:
//H-brug PWML
ISR(TIMER3_COMPA_vect)
{
     820:	1f 92       	push	r1
     822:	0f 92       	push	r0
     824:	0f b6       	in	r0, 0x3f	; 63
     826:	0f 92       	push	r0
     828:	11 24       	eor	r1, r1
     82a:	0b b6       	in	r0, 0x3b	; 59
     82c:	0f 92       	push	r0
     82e:	2f 93       	push	r18
     830:	8f 93       	push	r24
     832:	9f 93       	push	r25
     834:	ef 93       	push	r30
     836:	ff 93       	push	r31
     838:	cf 93       	push	r28
     83a:	df 93       	push	r29
     83c:	cd b7       	in	r28, 0x3d	; 61
     83e:	de b7       	in	r29, 0x3e	; 62

00000840 <.Loc.124>:
    PORT |= (1 << PEN2);
     840:	82 e2       	ldi	r24, 0x22	; 34
     842:	90 e0       	ldi	r25, 0x00	; 0
     844:	fc 01       	movw	r30, r24
     846:	20 81       	ld	r18, Z
     848:	82 e2       	ldi	r24, 0x22	; 34
     84a:	90 e0       	ldi	r25, 0x00	; 0

0000084c <.Loc.125>:
     84c:	24 60       	ori	r18, 0x04	; 4
     84e:	fc 01       	movw	r30, r24
     850:	20 83       	st	Z, r18

00000852 <.Loc.126>:
}
     852:	00 00       	nop
     854:	df 91       	pop	r29
     856:	cf 91       	pop	r28
     858:	ff 91       	pop	r31
     85a:	ef 91       	pop	r30
     85c:	9f 91       	pop	r25
     85e:	8f 91       	pop	r24
     860:	2f 91       	pop	r18
     862:	0f 90       	pop	r0
     864:	0b be       	out	0x3b, r0	; 59
     866:	0f 90       	pop	r0
     868:	0f be       	out	0x3f, r0	; 63
     86a:	0f 90       	pop	r0
     86c:	1f 90       	pop	r1
     86e:	18 95       	reti

00000870 <__vector_23>:

//Timer Noodtoestand
ISR(TIMER0_OVF_vect)
{
     870:	1f 92       	push	r1
     872:	0f 92       	push	r0
     874:	0f b6       	in	r0, 0x3f	; 63
     876:	0f 92       	push	r0
     878:	11 24       	eor	r1, r1
     87a:	8f 93       	push	r24
     87c:	9f 93       	push	r25
     87e:	cf 93       	push	r28
     880:	df 93       	push	r29
     882:	cd b7       	in	r28, 0x3d	; 61
     884:	de b7       	in	r29, 0x3e	; 62

00000886 <.Loc.128>:
    timerteller ++;
     886:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <timerteller>
     88a:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <timerteller+0x1>
     88e:	01 96       	adiw	r24, 0x01	; 1
     890:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <timerteller+0x1>
     894:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <timerteller>

00000898 <.Loc.129>:
}
     898:	00 00       	nop
     89a:	df 91       	pop	r29
     89c:	cf 91       	pop	r28
     89e:	9f 91       	pop	r25
     8a0:	8f 91       	pop	r24
     8a2:	0f 90       	pop	r0
     8a4:	0f be       	out	0x3f, r0	; 63
     8a6:	0f 90       	pop	r0
     8a8:	1f 90       	pop	r1
     8aa:	18 95       	reti

000008ac <__vector_45>:

//Timer Bak detectie
ISR(TIMER4_OVF_vect)
{
     8ac:	1f 92       	push	r1
     8ae:	0f 92       	push	r0
     8b0:	0f b6       	in	r0, 0x3f	; 63
     8b2:	0f 92       	push	r0
     8b4:	11 24       	eor	r1, r1
     8b6:	0b b6       	in	r0, 0x3b	; 59
     8b8:	0f 92       	push	r0
     8ba:	8f 93       	push	r24
     8bc:	9f 93       	push	r25
     8be:	ef 93       	push	r30
     8c0:	ff 93       	push	r31
     8c2:	cf 93       	push	r28
     8c4:	df 93       	push	r29
     8c6:	cd b7       	in	r28, 0x3d	; 61
     8c8:	de b7       	in	r29, 0x3e	; 62

000008ca <.Loc.131>:
    if(timertellerbak > 30)
     8ca:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <timertellerbak>
     8ce:	90 91 09 02 	lds	r25, 0x0209	; 0x800209 <timertellerbak+0x1>

000008d2 <.Loc.132>:
     8d2:	8e 31       	cpi	r24, 0x1E	; 30
     8d4:	91 05       	cpc	r25, r1
     8d6:	49 f0       	breq	.+18     	; 0x8ea <.L42>
     8d8:	44 f0       	brlt	.+16     	; 0x8ea <.L42>

000008da <.Loc.133>:
    {
        bakvar = 0;
     8da:	10 92 0b 02 	sts	0x020B, r1	; 0x80020b <bakvar+0x1>
     8de:	10 92 0a 02 	sts	0x020A, r1	; 0x80020a <bakvar>

000008e2 <.Loc.134>:
        TCCR4B = 0;
     8e2:	81 ea       	ldi	r24, 0xA1	; 161
     8e4:	90 e0       	ldi	r25, 0x00	; 0

000008e6 <.Loc.135>:
     8e6:	fc 01       	movw	r30, r24
     8e8:	10 82       	st	Z, r1

000008ea <.L42>:
    }
    timertellerbak ++;
     8ea:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <timertellerbak>
     8ee:	90 91 09 02 	lds	r25, 0x0209	; 0x800209 <timertellerbak+0x1>
     8f2:	01 96       	adiw	r24, 0x01	; 1
     8f4:	90 93 09 02 	sts	0x0209, r25	; 0x800209 <timertellerbak+0x1>
     8f8:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <timertellerbak>

000008fc <.Loc.137>:
}
     8fc:	00 00       	nop
     8fe:	df 91       	pop	r29
     900:	cf 91       	pop	r28
     902:	ff 91       	pop	r31
     904:	ef 91       	pop	r30
     906:	9f 91       	pop	r25
     908:	8f 91       	pop	r24
     90a:	0f 90       	pop	r0
     90c:	0b be       	out	0x3b, r0	; 59
     90e:	0f 90       	pop	r0
     910:	0f be       	out	0x3f, r0	; 63
     912:	0f 90       	pop	r0
     914:	1f 90       	pop	r1
     916:	18 95       	reti

00000918 <main>:
7: Noodknop ingedrukt
8: Noodknop uitgedrukt
*/

int main(void)
{
     918:	cf 93       	push	r28
     91a:	df 93       	push	r29
     91c:	cd b7       	in	r28, 0x3d	; 61
     91e:	de b7       	in	r29, 0x3e	; 62
     920:	a6 97       	sbiw	r28, 0x26	; 38
     922:	0f b6       	in	r0, 0x3f	; 63
     924:	f8 94       	cli
     926:	de bf       	out	0x3e, r29	; 62
     928:	0f be       	out	0x3f, r0	; 63
     92a:	cd bf       	out	0x3d, r28	; 61

0000092c <.Loc.1>:
    init();
     92c:	0e 94 8f 07 	call	0xf1e	; 0xf1e <init>

00000930 <.Loc.2>:

    initTimer();
     930:	0e 94 71 08 	call	0x10e2	; 0x10e2 <initTimer>

00000934 <.Loc.3>:
    int waarde;

    int toestand = 0;
     934:	1a 82       	std	Y+2, r1	; 0x02
     936:	19 82       	std	Y+1, r1	; 0x01

00000938 <.L46>:

    while(1)
    {
        //waarde = GetDistance();

        if(Bluetooth_Getal == 2)//Bluetooth verbroken
     938:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <Bluetooth_Getal>
     93c:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <Bluetooth_Getal+0x1>

00000940 <.Loc.5>:
     940:	82 30       	cpi	r24, 0x02	; 2
     942:	91 05       	cpc	r25, r1
     944:	11 f4       	brne	.+4      	; 0x94a <.L2>

00000946 <.Loc.6>:
        {
            toestand = 0;
     946:	1a 82       	std	Y+2, r1	; 0x02
     948:	19 82       	std	Y+1, r1	; 0x01

0000094a <.L2>:
        }
        if(Bluetooth_Getal == 6)//Uitknop ingedrukt
     94a:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <Bluetooth_Getal>
     94e:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <Bluetooth_Getal+0x1>

00000952 <.Loc.8>:
     952:	86 30       	cpi	r24, 0x06	; 6
     954:	91 05       	cpc	r25, r1
     956:	21 f4       	brne	.+8      	; 0x960 <.L3>

00000958 <.Loc.9>:
        {
            toestand = 1;
     958:	81 e0       	ldi	r24, 0x01	; 1
     95a:	90 e0       	ldi	r25, 0x00	; 0
     95c:	9a 83       	std	Y+2, r25	; 0x02
     95e:	89 83       	std	Y+1, r24	; 0x01

00000960 <.L3>:
        }
        if(Bluetooth_Getal == 7)// || (Noodknopport & (1<<Noodknoppin)) == 0))
     960:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <Bluetooth_Getal>
     964:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <Bluetooth_Getal+0x1>

00000968 <.Loc.11>:
     968:	87 30       	cpi	r24, 0x07	; 7
     96a:	91 05       	cpc	r25, r1
     96c:	21 f4       	brne	.+8      	; 0x976 <.L4>

0000096e <.Loc.12>:
        {
            toestand = 99;
     96e:	83 e6       	ldi	r24, 0x63	; 99
     970:	90 e0       	ldi	r25, 0x00	; 0
     972:	9a 83       	std	Y+2, r25	; 0x02
     974:	89 83       	std	Y+1, r24	; 0x01

00000976 <.L4>:
        }
        if(((IRregister & (1 << IRbaklinks)) == 0) || ((IRregister & (1 << IRbakrechts)) == 0))//Plantenbak gedetecteerd
     976:	86 e2       	ldi	r24, 0x26	; 38
     978:	90 e0       	ldi	r25, 0x00	; 0
     97a:	dc 01       	movw	r26, r24
     97c:	8c 91       	ld	r24, X

0000097e <.Loc.14>:
     97e:	88 2f       	mov	r24, r24
     980:	90 e0       	ldi	r25, 0x00	; 0
     982:	80 72       	andi	r24, 0x20	; 32
     984:	99 27       	eor	r25, r25

00000986 <.Loc.15>:
     986:	00 97       	sbiw	r24, 0x00	; 0
     988:	51 f0       	breq	.+20     	; 0x99e <.L5>

0000098a <.Loc.16>:
     98a:	86 e2       	ldi	r24, 0x26	; 38
     98c:	90 e0       	ldi	r25, 0x00	; 0
     98e:	fc 01       	movw	r30, r24
     990:	80 81       	ld	r24, Z

00000992 <.Loc.17>:
     992:	88 2f       	mov	r24, r24
     994:	90 e0       	ldi	r25, 0x00	; 0
     996:	80 71       	andi	r24, 0x10	; 16
     998:	99 27       	eor	r25, r25

0000099a <.Loc.18>:
     99a:	00 97       	sbiw	r24, 0x00	; 0
     99c:	d1 f4       	brne	.+52     	; 0x9d2 <.L6>

0000099e <.L5>:
        {
            if(bakvar != 1)
     99e:	80 91 0a 02 	lds	r24, 0x020A	; 0x80020a <bakvar>
     9a2:	90 91 0b 02 	lds	r25, 0x020B	; 0x80020b <bakvar+0x1>

000009a6 <.Loc.20>:
     9a6:	81 30       	cpi	r24, 0x01	; 1
     9a8:	91 05       	cpc	r25, r1
     9aa:	99 f0       	breq	.+38     	; 0x9d2 <.L6>

000009ac <.Loc.21>:
            {
                bakvar = 1;
     9ac:	81 e0       	ldi	r24, 0x01	; 1
     9ae:	90 e0       	ldi	r25, 0x00	; 0
     9b0:	90 93 0b 02 	sts	0x020B, r25	; 0x80020b <bakvar+0x1>
     9b4:	80 93 0a 02 	sts	0x020A, r24	; 0x80020a <bakvar>

000009b8 <.Loc.22>:
                TCCR4B |= (1 << CS42);
     9b8:	81 ea       	ldi	r24, 0xA1	; 161
     9ba:	90 e0       	ldi	r25, 0x00	; 0
     9bc:	dc 01       	movw	r26, r24
     9be:	2c 91       	ld	r18, X
     9c0:	81 ea       	ldi	r24, 0xA1	; 161
     9c2:	90 e0       	ldi	r25, 0x00	; 0

000009c4 <.Loc.23>:
     9c4:	24 60       	ori	r18, 0x04	; 4
     9c6:	fc 01       	movw	r30, r24
     9c8:	20 83       	st	Z, r18

000009ca <.Loc.24>:
                toestand = 8;
     9ca:	88 e0       	ldi	r24, 0x08	; 8
     9cc:	90 e0       	ldi	r25, 0x00	; 0
     9ce:	9a 83       	std	Y+2, r25	; 0x02
     9d0:	89 83       	std	Y+1, r24	; 0x01

000009d2 <.L6>:
            }
        }
        if(waarde < 30)//voor ultrasoon ziet iets
     9d2:	8b 81       	ldd	r24, Y+3	; 0x03
     9d4:	9c 81       	ldd	r25, Y+4	; 0x04
     9d6:	8d 31       	cpi	r24, 0x1D	; 29
     9d8:	91 05       	cpc	r25, r1
     9da:	09 f0       	breq	.+2      	; 0x9de <.Loc.26>

000009dc <L0^A>:
     9dc:	24 f4       	brge	.+8      	; 0x9e6 <.L7>

000009de <.Loc.26>:
        {
            toestand = 9;
     9de:	89 e0       	ldi	r24, 0x09	; 9
     9e0:	90 e0       	ldi	r25, 0x00	; 0
     9e2:	9a 83       	std	Y+2, r25	; 0x02
     9e4:	89 83       	std	Y+1, r24	; 0x01

000009e6 <.L7>:
        }
        if(((IRregister & (1 << IRonderlinks)) == 0) && ((IRregister & (1 << IRonderrechts)) == 0))//Einde rijstrook beide ir zien niks
     9e6:	86 e2       	ldi	r24, 0x26	; 38
     9e8:	90 e0       	ldi	r25, 0x00	; 0
     9ea:	dc 01       	movw	r26, r24
     9ec:	8c 91       	ld	r24, X

000009ee <.Loc.28>:
     9ee:	88 2f       	mov	r24, r24
     9f0:	90 e0       	ldi	r25, 0x00	; 0
     9f2:	88 70       	andi	r24, 0x08	; 8
     9f4:	99 27       	eor	r25, r25

000009f6 <.Loc.29>:
     9f6:	00 97       	sbiw	r24, 0x00	; 0
     9f8:	71 f4       	brne	.+28     	; 0xa16 <.L8>

000009fa <.Loc.30>:
     9fa:	86 e2       	ldi	r24, 0x26	; 38
     9fc:	90 e0       	ldi	r25, 0x00	; 0
     9fe:	fc 01       	movw	r30, r24
     a00:	80 81       	ld	r24, Z

00000a02 <.Loc.31>:
     a02:	88 2f       	mov	r24, r24
     a04:	90 e0       	ldi	r25, 0x00	; 0
     a06:	84 70       	andi	r24, 0x04	; 4
     a08:	99 27       	eor	r25, r25

00000a0a <.Loc.32>:
     a0a:	00 97       	sbiw	r24, 0x00	; 0
     a0c:	21 f4       	brne	.+8      	; 0xa16 <.L8>

00000a0e <.Loc.33>:
        {
            toestand = 7;
     a0e:	87 e0       	ldi	r24, 0x07	; 7
     a10:	90 e0       	ldi	r25, 0x00	; 0
     a12:	9a 83       	std	Y+2, r25	; 0x02
     a14:	89 83       	std	Y+1, r24	; 0x01

00000a16 <.L8>:
        }
        switch(toestand)
     a16:	89 81       	ldd	r24, Y+1	; 0x01
     a18:	9a 81       	ldd	r25, Y+2	; 0x02
     a1a:	89 30       	cpi	r24, 0x09	; 9
     a1c:	91 05       	cpc	r25, r1
     a1e:	09 f0       	breq	.+2      	; 0xa22 <L0^A+0x2>

00000a20 <L0^A>:
     a20:	cc f4       	brge	.+50     	; 0xa54 <.L9>
     a22:	89 81       	ldd	r24, Y+1	; 0x01
     a24:	9a 81       	ldd	r25, Y+2	; 0x02
     a26:	99 23       	and	r25, r25
     a28:	0c f4       	brge	.+2      	; 0xa2c <L0^A+0x2>

00000a2a <L0^A>:
     a2a:	86 cf       	rjmp	.-244    	; 0x938 <.L46>
     a2c:	89 81       	ldd	r24, Y+1	; 0x01
     a2e:	9a 81       	ldd	r25, Y+2	; 0x02
     a30:	09 2e       	mov	r0, r25
     a32:	00 0c       	add	r0, r0
     a34:	aa 0b       	sbc	r26, r26
     a36:	bb 0b       	sbc	r27, r27
     a38:	89 30       	cpi	r24, 0x09	; 9
     a3a:	91 05       	cpc	r25, r1
     a3c:	a1 05       	cpc	r26, r1
     a3e:	b1 05       	cpc	r27, r1
     a40:	11 f0       	breq	.+4      	; 0xa46 <L0^A+0x2>

00000a42 <L0^A>:
     a42:	08 f0       	brcs	.+2      	; 0xa46 <L0^A+0x2>

00000a44 <L0^A>:
     a44:	79 cf       	rjmp	.-270    	; 0x938 <.L46>
     a46:	fc 01       	movw	r30, r24
     a48:	88 27       	eor	r24, r24
     a4a:	e0 54       	subi	r30, 0x40	; 64
     a4c:	f3 4f       	sbci	r31, 0xF3	; 243
     a4e:	8f 4f       	sbci	r24, 0xFF	; 255
     a50:	0c 94 c3 0a 	jmp	0x1586	; 0x1586 <__tablejump2__>

00000a54 <.L9>:
     a54:	89 81       	ldd	r24, Y+1	; 0x01
     a56:	9a 81       	ldd	r25, Y+2	; 0x02
     a58:	83 36       	cpi	r24, 0x63	; 99
     a5a:	91 05       	cpc	r25, r1
     a5c:	09 f0       	breq	.+2      	; 0xa60 <.Loc.35>

00000a5e <L0^A>:
     a5e:	6c cf       	rjmp	.-296    	; 0x938 <.L46>

00000a60 <.Loc.35>:
        {
        case 99://Noodtoestand
            h_bridgeR_set_percentage(snelheiduit);//motoren uit
     a60:	83 e6       	ldi	r24, 0x63	; 99
     a62:	0e 94 14 03 	call	0x628	; 0x628 <h_bridgeR_set_percentage>

00000a66 <.Loc.36>:
            h_bridgeL_set_percentage(snelheiduit);
     a66:	83 e6       	ldi	r24, 0x63	; 99
     a68:	0e 94 53 03 	call	0x6a6	; 0x6a6 <h_bridgeL_set_percentage>

00000a6c <.Loc.37>:
            if(timerteller <= 30)
     a6c:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <timerteller>
     a70:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <timerteller+0x1>

00000a74 <.Loc.38>:
     a74:	8e 31       	cpi	r24, 0x1E	; 30
     a76:	91 05       	cpc	r25, r1
     a78:	09 f0       	breq	.+2      	; 0xa7c <.Loc.39>

00000a7a <L0^A>:
     a7a:	dc f4       	brge	.+54     	; 0xab2 <.L22>

00000a7c <.Loc.39>:
            {
                PORT_buzzer &= ~(1<<buzzer);//buzzer
     a7c:	82 e0       	ldi	r24, 0x02	; 2
     a7e:	91 e0       	ldi	r25, 0x01	; 1
     a80:	dc 01       	movw	r26, r24
     a82:	2c 91       	ld	r18, X

00000a84 <.Loc.40>:
     a84:	82 e0       	ldi	r24, 0x02	; 2
     a86:	91 e0       	ldi	r25, 0x01	; 1

00000a88 <.Loc.41>:
     a88:	27 7f       	andi	r18, 0xF7	; 247
     a8a:	fc 01       	movw	r30, r24
     a8c:	20 83       	st	Z, r18

00000a8e <.Loc.42>:
                PORT_LED &= ~(1<<LED_1);//LED
     a8e:	82 e0       	ldi	r24, 0x02	; 2
     a90:	91 e0       	ldi	r25, 0x01	; 1
     a92:	dc 01       	movw	r26, r24
     a94:	2c 91       	ld	r18, X

00000a96 <.Loc.43>:
     a96:	82 e0       	ldi	r24, 0x02	; 2
     a98:	91 e0       	ldi	r25, 0x01	; 1

00000a9a <.Loc.44>:
     a9a:	2f 7e       	andi	r18, 0xEF	; 239
     a9c:	fc 01       	movw	r30, r24
     a9e:	20 83       	st	Z, r18

00000aa0 <.Loc.45>:
                PORT_LED &= ~(1<<LED_2);//LED
     aa0:	82 e0       	ldi	r24, 0x02	; 2
     aa2:	91 e0       	ldi	r25, 0x01	; 1
     aa4:	dc 01       	movw	r26, r24
     aa6:	2c 91       	ld	r18, X

00000aa8 <.Loc.46>:
     aa8:	82 e0       	ldi	r24, 0x02	; 2
     aaa:	91 e0       	ldi	r25, 0x01	; 1

00000aac <.Loc.47>:
     aac:	2f 7d       	andi	r18, 0xDF	; 223
     aae:	fc 01       	movw	r30, r24
     ab0:	20 83       	st	Z, r18

00000ab2 <.L22>:
            }
            if(timerteller >= 30)
     ab2:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <timerteller>
     ab6:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <timerteller+0x1>

00000aba <.Loc.49>:
     aba:	8d 31       	cpi	r24, 0x1D	; 29
     abc:	91 05       	cpc	r25, r1
     abe:	41 f1       	breq	.+80     	; 0xb10 <.L23>
     ac0:	3c f1       	brlt	.+78     	; 0xb10 <.L23>

00000ac2 <.Loc.50>:
            {
                PORT_buzzer |= (1<<buzzer);//buzzer
     ac2:	82 e0       	ldi	r24, 0x02	; 2
     ac4:	91 e0       	ldi	r25, 0x01	; 1
     ac6:	dc 01       	movw	r26, r24
     ac8:	2c 91       	ld	r18, X
     aca:	82 e0       	ldi	r24, 0x02	; 2
     acc:	91 e0       	ldi	r25, 0x01	; 1

00000ace <.Loc.51>:
     ace:	28 60       	ori	r18, 0x08	; 8
     ad0:	fc 01       	movw	r30, r24
     ad2:	20 83       	st	Z, r18

00000ad4 <.Loc.52>:
                PORT_LED |= (1<<LED_1);//LED
     ad4:	82 e0       	ldi	r24, 0x02	; 2
     ad6:	91 e0       	ldi	r25, 0x01	; 1
     ad8:	dc 01       	movw	r26, r24
     ada:	2c 91       	ld	r18, X
     adc:	82 e0       	ldi	r24, 0x02	; 2
     ade:	91 e0       	ldi	r25, 0x01	; 1

00000ae0 <.Loc.53>:
     ae0:	20 61       	ori	r18, 0x10	; 16
     ae2:	fc 01       	movw	r30, r24
     ae4:	20 83       	st	Z, r18

00000ae6 <.Loc.54>:
                PORT_LED |= (1<<LED_2);//LED
     ae6:	82 e0       	ldi	r24, 0x02	; 2
     ae8:	91 e0       	ldi	r25, 0x01	; 1
     aea:	dc 01       	movw	r26, r24
     aec:	2c 91       	ld	r18, X
     aee:	82 e0       	ldi	r24, 0x02	; 2
     af0:	91 e0       	ldi	r25, 0x01	; 1

00000af2 <.Loc.55>:
     af2:	20 62       	ori	r18, 0x20	; 32
     af4:	fc 01       	movw	r30, r24
     af6:	20 83       	st	Z, r18

00000af8 <.Loc.56>:
                if(timerteller >= 60)
     af8:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <timerteller>
     afc:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <timerteller+0x1>

00000b00 <.Loc.57>:
     b00:	8b 33       	cpi	r24, 0x3B	; 59
     b02:	91 05       	cpc	r25, r1
     b04:	29 f0       	breq	.+10     	; 0xb10 <.L23>
     b06:	24 f0       	brlt	.+8      	; 0xb10 <.L23>

00000b08 <.Loc.58>:
                {
                    timerteller = 0;
     b08:	10 92 07 02 	sts	0x0207, r1	; 0x800207 <timerteller+0x1>
     b0c:	10 92 06 02 	sts	0x0206, r1	; 0x800206 <timerteller>

00000b10 <.L23>:
                }
            }
            if((Bluetooth_Getal == 8))// && ((Noodknopport & (1<<Noodknoppin)) != 0))
     b10:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <Bluetooth_Getal>
     b14:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <Bluetooth_Getal+0x1>

00000b18 <.Loc.60>:
     b18:	88 30       	cpi	r24, 0x08	; 8
     b1a:	91 05       	cpc	r25, r1
     b1c:	09 f0       	breq	.+2      	; 0xb20 <.Loc.61>

00000b1e <L0^A>:
     b1e:	eb c1       	rjmp	.+982    	; 0xef6 <.L51>

00000b20 <.Loc.61>:
            {
                toestand = 2;
     b20:	82 e0       	ldi	r24, 0x02	; 2
     b22:	90 e0       	ldi	r25, 0x00	; 0
     b24:	9a 83       	std	Y+2, r25	; 0x02
     b26:	89 83       	std	Y+1, r24	; 0x01

00000b28 <.Loc.62>:
            }
            break;
     b28:	e6 c1       	rjmp	.+972    	; 0xef6 <.L51>

00000b2a <.L21>:
        case 0:
            PORT_LED |= (1<<LED_2);
     b2a:	82 e0       	ldi	r24, 0x02	; 2
     b2c:	91 e0       	ldi	r25, 0x01	; 1
     b2e:	dc 01       	movw	r26, r24
     b30:	2c 91       	ld	r18, X
     b32:	82 e0       	ldi	r24, 0x02	; 2
     b34:	91 e0       	ldi	r25, 0x01	; 1

00000b36 <.Loc.64>:
     b36:	20 62       	ori	r18, 0x20	; 32
     b38:	fc 01       	movw	r30, r24
     b3a:	20 83       	st	Z, r18

00000b3c <.Loc.65>:
            h_bridgeL_set_percentage(snelheiduit);//motoren uit
     b3c:	83 e6       	ldi	r24, 0x63	; 99
     b3e:	0e 94 53 03 	call	0x6a6	; 0x6a6 <h_bridgeL_set_percentage>

00000b42 <.Loc.66>:
            h_bridgeR_set_percentage(snelheiduit);
     b42:	83 e6       	ldi	r24, 0x63	; 99
     b44:	0e 94 14 03 	call	0x628	; 0x628 <h_bridgeR_set_percentage>

00000b48 <.Loc.67>:
            if(Bluetooth_Getal == 1)//Bluetooth verbonden
     b48:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <Bluetooth_Getal>
     b4c:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <Bluetooth_Getal+0x1>

00000b50 <.Loc.68>:
     b50:	81 30       	cpi	r24, 0x01	; 1
     b52:	91 05       	cpc	r25, r1
     b54:	09 f0       	breq	.+2      	; 0xb58 <.Loc.69>

00000b56 <L0^A>:
     b56:	d1 c1       	rjmp	.+930    	; 0xefa <.L52>

00000b58 <.Loc.69>:
            {
                toestand = 1;
     b58:	81 e0       	ldi	r24, 0x01	; 1
     b5a:	90 e0       	ldi	r25, 0x00	; 0
     b5c:	9a 83       	std	Y+2, r25	; 0x02
     b5e:	89 83       	std	Y+1, r24	; 0x01

00000b60 <.Loc.70>:
            }
            break;
     b60:	cc c1       	rjmp	.+920    	; 0xefa <.L52>

00000b62 <.L20>:
        case 1://wachten op aan knop
            PORT_LED |= (1<<LED_1);
     b62:	82 e0       	ldi	r24, 0x02	; 2
     b64:	91 e0       	ldi	r25, 0x01	; 1
     b66:	dc 01       	movw	r26, r24
     b68:	2c 91       	ld	r18, X
     b6a:	82 e0       	ldi	r24, 0x02	; 2
     b6c:	91 e0       	ldi	r25, 0x01	; 1

00000b6e <.Loc.72>:
     b6e:	20 61       	ori	r18, 0x10	; 16
     b70:	fc 01       	movw	r30, r24
     b72:	20 83       	st	Z, r18

00000b74 <.Loc.73>:
            h_bridgeL_set_percentage(snelheiduit);//motoren uit
     b74:	83 e6       	ldi	r24, 0x63	; 99
     b76:	0e 94 53 03 	call	0x6a6	; 0x6a6 <h_bridgeL_set_percentage>

00000b7a <.Loc.74>:
            h_bridgeR_set_percentage(snelheiduit);
     b7a:	83 e6       	ldi	r24, 0x63	; 99
     b7c:	0e 94 14 03 	call	0x628	; 0x628 <h_bridgeR_set_percentage>

00000b80 <.Loc.75>:
            if(Bluetooth_Getal == 3)//Aanknop
     b80:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <Bluetooth_Getal>
     b84:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <Bluetooth_Getal+0x1>

00000b88 <.Loc.76>:
     b88:	83 30       	cpi	r24, 0x03	; 3
     b8a:	91 05       	cpc	r25, r1
     b8c:	09 f0       	breq	.+2      	; 0xb90 <.Loc.77>

00000b8e <L0^A>:
     b8e:	b7 c1       	rjmp	.+878    	; 0xefe <.L53>

00000b90 <.Loc.77>:
            {
                toestand = 2;
     b90:	82 e0       	ldi	r24, 0x02	; 2
     b92:	90 e0       	ldi	r25, 0x00	; 0
     b94:	9a 83       	std	Y+2, r25	; 0x02
     b96:	89 83       	std	Y+1, r24	; 0x01

00000b98 <.Loc.78>:
            }
            break;
     b98:	b2 c1       	rjmp	.+868    	; 0xefe <.L53>

00000b9a <.L19>:
        case 2://toestand keuze case
            PORT_LED &= ~(1<<LED_1);
     b9a:	82 e0       	ldi	r24, 0x02	; 2
     b9c:	91 e0       	ldi	r25, 0x01	; 1
     b9e:	dc 01       	movw	r26, r24
     ba0:	2c 91       	ld	r18, X

00000ba2 <.Loc.80>:
     ba2:	82 e0       	ldi	r24, 0x02	; 2
     ba4:	91 e0       	ldi	r25, 0x01	; 1

00000ba6 <.Loc.81>:
     ba6:	2f 7e       	andi	r18, 0xEF	; 239
     ba8:	fc 01       	movw	r30, r24
     baa:	20 83       	st	Z, r18

00000bac <.Loc.82>:
            if(Bluetooth_Getal == 4)//Autonoomknop
     bac:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <Bluetooth_Getal>
     bb0:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <Bluetooth_Getal+0x1>

00000bb4 <.Loc.83>:
     bb4:	84 30       	cpi	r24, 0x04	; 4
     bb6:	91 05       	cpc	r25, r1
     bb8:	09 f0       	breq	.+2      	; 0xbbc <.Loc.84>

00000bba <L0^A>:
     bba:	a3 c1       	rjmp	.+838    	; 0xf02 <.L54>

00000bbc <.Loc.84>:
            {
                toestand = 3;
     bbc:	83 e0       	ldi	r24, 0x03	; 3
     bbe:	90 e0       	ldi	r25, 0x00	; 0
     bc0:	9a 83       	std	Y+2, r25	; 0x02
     bc2:	89 83       	std	Y+1, r24	; 0x01

00000bc4 <.Loc.85>:
            }
            break;
     bc4:	9e c1       	rjmp	.+828    	; 0xf02 <.L54>

00000bc6 <.L18>:
        case 3://rijstrook inrijden
            PORT_LED &= ~(1<<LED_2);
     bc6:	82 e0       	ldi	r24, 0x02	; 2
     bc8:	91 e0       	ldi	r25, 0x01	; 1
     bca:	dc 01       	movw	r26, r24
     bcc:	2c 91       	ld	r18, X

00000bce <.Loc.87>:
     bce:	82 e0       	ldi	r24, 0x02	; 2
     bd0:	91 e0       	ldi	r25, 0x01	; 1

00000bd2 <.Loc.88>:
     bd2:	2f 7d       	andi	r18, 0xDF	; 223
     bd4:	fc 01       	movw	r30, r24
     bd6:	20 83       	st	Z, r18

00000bd8 <.Loc.89>:
            h_bridgeR_set_percentage(snelheidrechtdoor);
     bd8:	8d e4       	ldi	r24, 0x4D	; 77
     bda:	0e 94 14 03 	call	0x628	; 0x628 <h_bridgeR_set_percentage>

00000bde <.Loc.90>:
            h_bridgeL_set_percentage(snelheidrechtdoor);
     bde:	8d e4       	ldi	r24, 0x4D	; 77
     be0:	0e 94 53 03 	call	0x6a6	; 0x6a6 <h_bridgeL_set_percentage>

00000be4 <.Loc.91>:
            rechtdoorrijden();
     be4:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <rechtdoorrijden>

00000be8 <.Loc.92>:
            if(((IRregister & (1 << IRonderrechts)) == 0) && ((IRregister & (1 << IRonderlinks)) == 0))
     be8:	86 e2       	ldi	r24, 0x26	; 38
     bea:	90 e0       	ldi	r25, 0x00	; 0
     bec:	dc 01       	movw	r26, r24
     bee:	8c 91       	ld	r24, X

00000bf0 <.Loc.93>:
     bf0:	88 2f       	mov	r24, r24
     bf2:	90 e0       	ldi	r25, 0x00	; 0
     bf4:	84 70       	andi	r24, 0x04	; 4
     bf6:	99 27       	eor	r25, r25

00000bf8 <.Loc.94>:
     bf8:	00 97       	sbiw	r24, 0x00	; 0
     bfa:	09 f0       	breq	.+2      	; 0xbfe <.Loc.95>

00000bfc <L0^A>:
     bfc:	84 c1       	rjmp	.+776    	; 0xf06 <.L55>

00000bfe <.Loc.95>:
     bfe:	86 e2       	ldi	r24, 0x26	; 38
     c00:	90 e0       	ldi	r25, 0x00	; 0
     c02:	fc 01       	movw	r30, r24
     c04:	80 81       	ld	r24, Z

00000c06 <.Loc.96>:
     c06:	88 2f       	mov	r24, r24
     c08:	90 e0       	ldi	r25, 0x00	; 0
     c0a:	88 70       	andi	r24, 0x08	; 8
     c0c:	99 27       	eor	r25, r25

00000c0e <.Loc.97>:
     c0e:	00 97       	sbiw	r24, 0x00	; 0
     c10:	09 f0       	breq	.+2      	; 0xc14 <.Loc.98>

00000c12 <L0^A>:
     c12:	79 c1       	rjmp	.+754    	; 0xf06 <.L55>

00000c14 <.Loc.98>:
            {
                toestand = 4;
     c14:	84 e0       	ldi	r24, 0x04	; 4
     c16:	90 e0       	ldi	r25, 0x00	; 0
     c18:	9a 83       	std	Y+2, r25	; 0x02
     c1a:	89 83       	std	Y+1, r24	; 0x01

00000c1c <.Loc.99>:
            }
            break;
     c1c:	74 c1       	rjmp	.+744    	; 0xf06 <.L55>

00000c1e <.L17>:
        case 4://Tussen de balken rechtdoor
            //Motoren naar rechtdoor
            rechtdoorrijden();
     c1e:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <rechtdoorrijden>

00000c22 <.Loc.101>:
            h_bridgeR_set_percentage(snelheidrechtdoor);
     c22:	8d e4       	ldi	r24, 0x4D	; 77
     c24:	0e 94 14 03 	call	0x628	; 0x628 <h_bridgeR_set_percentage>

00000c28 <.Loc.102>:
            h_bridgeL_set_percentage(snelheidrechtdoor);
     c28:	8d e4       	ldi	r24, 0x4D	; 77
     c2a:	0e 94 53 03 	call	0x6a6	; 0x6a6 <h_bridgeL_set_percentage>

00000c2e <.Loc.103>:
            if(IRregister & (1 << IRonderrechts))
     c2e:	86 e2       	ldi	r24, 0x26	; 38
     c30:	90 e0       	ldi	r25, 0x00	; 0
     c32:	dc 01       	movw	r26, r24
     c34:	8c 91       	ld	r24, X

00000c36 <.Loc.104>:
     c36:	88 2f       	mov	r24, r24
     c38:	90 e0       	ldi	r25, 0x00	; 0
     c3a:	84 70       	andi	r24, 0x04	; 4
     c3c:	99 27       	eor	r25, r25

00000c3e <.Loc.105>:
     c3e:	00 97       	sbiw	r24, 0x00	; 0
     c40:	29 f0       	breq	.+10     	; 0xc4c <.L29>

00000c42 <.Loc.106>:
            {
                toestand = 5;
     c42:	85 e0       	ldi	r24, 0x05	; 5
     c44:	90 e0       	ldi	r25, 0x00	; 0
     c46:	9a 83       	std	Y+2, r25	; 0x02
     c48:	89 83       	std	Y+1, r24	; 0x01

00000c4a <.Loc.107>:
            }
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
            {
                //toestand = 7;
            }
            break;
     c4a:	5f c1       	rjmp	.+702    	; 0xf0a <.L56>

00000c4c <.L29>:
            else if(IRregister & (1 << IRonderlinks))
     c4c:	86 e2       	ldi	r24, 0x26	; 38
     c4e:	90 e0       	ldi	r25, 0x00	; 0
     c50:	fc 01       	movw	r30, r24
     c52:	80 81       	ld	r24, Z

00000c54 <.Loc.109>:
     c54:	88 2f       	mov	r24, r24
     c56:	90 e0       	ldi	r25, 0x00	; 0
     c58:	88 70       	andi	r24, 0x08	; 8
     c5a:	99 27       	eor	r25, r25

00000c5c <.Loc.110>:
     c5c:	00 97       	sbiw	r24, 0x00	; 0
     c5e:	29 f0       	breq	.+10     	; 0xc6a <.L31>

00000c60 <.Loc.111>:
                toestand = 6;
     c60:	86 e0       	ldi	r24, 0x06	; 6
     c62:	90 e0       	ldi	r25, 0x00	; 0
     c64:	9a 83       	std	Y+2, r25	; 0x02
     c66:	89 83       	std	Y+1, r24	; 0x01

00000c68 <.Loc.112>:
            break;
     c68:	50 c1       	rjmp	.+672    	; 0xf0a <.L56>

00000c6a <.L31>:
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
     c6a:	86 e2       	ldi	r24, 0x26	; 38
     c6c:	90 e0       	ldi	r25, 0x00	; 0
     c6e:	dc 01       	movw	r26, r24
     c70:	8c 91       	ld	r24, X

00000c72 <.Loc.114>:
     c72:	88 2f       	mov	r24, r24
     c74:	90 e0       	ldi	r25, 0x00	; 0
     c76:	84 70       	andi	r24, 0x04	; 4
     c78:	99 27       	eor	r25, r25

00000c7a <.Loc.115>:
     c7a:	00 97       	sbiw	r24, 0x00	; 0
     c7c:	09 f4       	brne	.+2      	; 0xc80 <.Loc.116>

00000c7e <L0^A>:
     c7e:	45 c1       	rjmp	.+650    	; 0xf0a <.L56>

00000c80 <.Loc.116>:
     c80:	86 e2       	ldi	r24, 0x26	; 38
     c82:	90 e0       	ldi	r25, 0x00	; 0
     c84:	fc 01       	movw	r30, r24
     c86:	80 81       	ld	r24, Z

00000c88 <.Loc.117>:
            break;
     c88:	40 c1       	rjmp	.+640    	; 0xf0a <.L56>

00000c8a <.L16>:
        case 5://Naar links rijden
            //Motoren naar rechts
            h_bridgeR_set_percentage(snelheidhard);
     c8a:	86 e4       	ldi	r24, 0x46	; 70
     c8c:	0e 94 14 03 	call	0x628	; 0x628 <h_bridgeR_set_percentage>

00000c90 <.Loc.119>:
            h_bridgeL_set_percentage(snelheidzacht);
     c90:	82 e5       	ldi	r24, 0x52	; 82
     c92:	0e 94 53 03 	call	0x6a6	; 0x6a6 <h_bridgeL_set_percentage>

00000c96 <.Loc.120>:
            if(((IRregister & (1 << IRonderrechts)) == 0) && ((IRregister & (1 << IRonderlinks)) == 0))
     c96:	86 e2       	ldi	r24, 0x26	; 38
     c98:	90 e0       	ldi	r25, 0x00	; 0
     c9a:	dc 01       	movw	r26, r24
     c9c:	8c 91       	ld	r24, X

00000c9e <.Loc.121>:
     c9e:	88 2f       	mov	r24, r24
     ca0:	90 e0       	ldi	r25, 0x00	; 0
     ca2:	84 70       	andi	r24, 0x04	; 4
     ca4:	99 27       	eor	r25, r25

00000ca6 <.Loc.122>:
     ca6:	00 97       	sbiw	r24, 0x00	; 0
     ca8:	79 f4       	brne	.+30     	; 0xcc8 <.L32>

00000caa <.Loc.123>:
     caa:	86 e2       	ldi	r24, 0x26	; 38
     cac:	90 e0       	ldi	r25, 0x00	; 0
     cae:	fc 01       	movw	r30, r24
     cb0:	80 81       	ld	r24, Z

00000cb2 <.Loc.124>:
     cb2:	88 2f       	mov	r24, r24
     cb4:	90 e0       	ldi	r25, 0x00	; 0
     cb6:	88 70       	andi	r24, 0x08	; 8
     cb8:	99 27       	eor	r25, r25

00000cba <.Loc.125>:
     cba:	00 97       	sbiw	r24, 0x00	; 0
     cbc:	29 f4       	brne	.+10     	; 0xcc8 <.L32>

00000cbe <.Loc.126>:
            {
                toestand = 4;
     cbe:	84 e0       	ldi	r24, 0x04	; 4
     cc0:	90 e0       	ldi	r25, 0x00	; 0
     cc2:	9a 83       	std	Y+2, r25	; 0x02
     cc4:	89 83       	std	Y+1, r24	; 0x01

00000cc6 <.Loc.127>:
            }
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
            {
                //toestand = 7;
            }
            break;
     cc6:	23 c1       	rjmp	.+582    	; 0xf0e <.L57>

00000cc8 <.L32>:
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
     cc8:	86 e2       	ldi	r24, 0x26	; 38
     cca:	90 e0       	ldi	r25, 0x00	; 0
     ccc:	dc 01       	movw	r26, r24
     cce:	8c 91       	ld	r24, X

00000cd0 <.Loc.129>:
     cd0:	88 2f       	mov	r24, r24
     cd2:	90 e0       	ldi	r25, 0x00	; 0
     cd4:	84 70       	andi	r24, 0x04	; 4
     cd6:	99 27       	eor	r25, r25

00000cd8 <.Loc.130>:
     cd8:	00 97       	sbiw	r24, 0x00	; 0
     cda:	09 f4       	brne	.+2      	; 0xcde <.Loc.131>

00000cdc <L0^A>:
     cdc:	18 c1       	rjmp	.+560    	; 0xf0e <.L57>

00000cde <.Loc.131>:
     cde:	86 e2       	ldi	r24, 0x26	; 38
     ce0:	90 e0       	ldi	r25, 0x00	; 0
     ce2:	fc 01       	movw	r30, r24
     ce4:	80 81       	ld	r24, Z

00000ce6 <.Loc.132>:
            break;
     ce6:	13 c1       	rjmp	.+550    	; 0xf0e <.L57>

00000ce8 <.L15>:
        case 6://Naar rechts rijden
            //Motoren naar links
            h_bridgeR_set_percentage(snelheidzacht);
     ce8:	82 e5       	ldi	r24, 0x52	; 82
     cea:	0e 94 14 03 	call	0x628	; 0x628 <h_bridgeR_set_percentage>

00000cee <.Loc.134>:
            h_bridgeL_set_percentage(snelheidhard);
     cee:	86 e4       	ldi	r24, 0x46	; 70
     cf0:	0e 94 53 03 	call	0x6a6	; 0x6a6 <h_bridgeL_set_percentage>

00000cf4 <.Loc.135>:
            if(((IRregister & (1 << IRonderrechts)) == 0) && ((IRregister & (1 << IRonderlinks)) == 0))
     cf4:	86 e2       	ldi	r24, 0x26	; 38
     cf6:	90 e0       	ldi	r25, 0x00	; 0
     cf8:	dc 01       	movw	r26, r24
     cfa:	8c 91       	ld	r24, X

00000cfc <.Loc.136>:
     cfc:	88 2f       	mov	r24, r24
     cfe:	90 e0       	ldi	r25, 0x00	; 0
     d00:	84 70       	andi	r24, 0x04	; 4
     d02:	99 27       	eor	r25, r25

00000d04 <.Loc.137>:
     d04:	00 97       	sbiw	r24, 0x00	; 0
     d06:	79 f4       	brne	.+30     	; 0xd26 <.L34>

00000d08 <.Loc.138>:
     d08:	86 e2       	ldi	r24, 0x26	; 38
     d0a:	90 e0       	ldi	r25, 0x00	; 0
     d0c:	fc 01       	movw	r30, r24
     d0e:	80 81       	ld	r24, Z

00000d10 <.Loc.139>:
     d10:	88 2f       	mov	r24, r24
     d12:	90 e0       	ldi	r25, 0x00	; 0
     d14:	88 70       	andi	r24, 0x08	; 8
     d16:	99 27       	eor	r25, r25

00000d18 <.Loc.140>:
     d18:	00 97       	sbiw	r24, 0x00	; 0
     d1a:	29 f4       	brne	.+10     	; 0xd26 <.L34>

00000d1c <.Loc.141>:
            {
                toestand = 4;
     d1c:	84 e0       	ldi	r24, 0x04	; 4
     d1e:	90 e0       	ldi	r25, 0x00	; 0
     d20:	9a 83       	std	Y+2, r25	; 0x02
     d22:	89 83       	std	Y+1, r24	; 0x01

00000d24 <.Loc.142>:
            }
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
            {
                toestand = 7;
            }
            break;
     d24:	f6 c0       	rjmp	.+492    	; 0xf12 <.L58>

00000d26 <.L34>:
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
     d26:	86 e2       	ldi	r24, 0x26	; 38
     d28:	90 e0       	ldi	r25, 0x00	; 0
     d2a:	dc 01       	movw	r26, r24
     d2c:	8c 91       	ld	r24, X

00000d2e <.Loc.144>:
     d2e:	88 2f       	mov	r24, r24
     d30:	90 e0       	ldi	r25, 0x00	; 0
     d32:	84 70       	andi	r24, 0x04	; 4
     d34:	99 27       	eor	r25, r25

00000d36 <.Loc.145>:
     d36:	00 97       	sbiw	r24, 0x00	; 0
     d38:	09 f4       	brne	.+2      	; 0xd3c <.Loc.146>

00000d3a <L0^A>:
     d3a:	eb c0       	rjmp	.+470    	; 0xf12 <.L58>

00000d3c <.Loc.146>:
     d3c:	86 e2       	ldi	r24, 0x26	; 38
     d3e:	90 e0       	ldi	r25, 0x00	; 0
     d40:	fc 01       	movw	r30, r24
     d42:	80 81       	ld	r24, Z

00000d44 <.Loc.147>:
     d44:	88 2f       	mov	r24, r24
     d46:	90 e0       	ldi	r25, 0x00	; 0
     d48:	88 70       	andi	r24, 0x08	; 8
     d4a:	99 27       	eor	r25, r25

00000d4c <.Loc.148>:
     d4c:	00 97       	sbiw	r24, 0x00	; 0
     d4e:	09 f4       	brne	.+2      	; 0xd52 <.Loc.149>

00000d50 <L0^A>:
     d50:	e0 c0       	rjmp	.+448    	; 0xf12 <.L58>

00000d52 <.Loc.149>:
                toestand = 7;
     d52:	87 e0       	ldi	r24, 0x07	; 7
     d54:	90 e0       	ldi	r25, 0x00	; 0
     d56:	9a 83       	std	Y+2, r25	; 0x02
     d58:	89 83       	std	Y+1, r24	; 0x01

00000d5a <.Loc.150>:
            break;
     d5a:	db c0       	rjmp	.+438    	; 0xf12 <.L58>

00000d5c <.L14>:
     d5c:	80 e0       	ldi	r24, 0x00	; 0
     d5e:	90 e0       	ldi	r25, 0x00	; 0
     d60:	aa ef       	ldi	r26, 0xFA	; 250
     d62:	b4 e4       	ldi	r27, 0x44	; 68
     d64:	8d 83       	std	Y+5, r24	; 0x05
     d66:	9e 83       	std	Y+6, r25	; 0x06
     d68:	af 83       	std	Y+7, r26	; 0x07
     d6a:	b8 87       	std	Y+8, r27	; 0x08

00000d6c <.LBB36>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     d6c:	20 e0       	ldi	r18, 0x00	; 0
     d6e:	30 e0       	ldi	r19, 0x00	; 0
     d70:	4a e7       	ldi	r20, 0x7A	; 122
     d72:	55 e4       	ldi	r21, 0x45	; 69
     d74:	6d 81       	ldd	r22, Y+5	; 0x05
     d76:	7e 81       	ldd	r23, Y+6	; 0x06
     d78:	8f 81       	ldd	r24, Y+7	; 0x07
     d7a:	98 85       	ldd	r25, Y+8	; 0x08
     d7c:	0e 94 51 0c 	call	0x18a2	; 0x18a2 <__mulsf3>
     d80:	6f 8b       	std	Y+23, r22	; 0x17
     d82:	78 8f       	std	Y+24, r23	; 0x18
     d84:	89 8f       	std	Y+25, r24	; 0x19
     d86:	9a 8f       	std	Y+26, r25	; 0x1a
     d88:	8f 89       	ldd	r24, Y+23	; 0x17
     d8a:	98 8d       	ldd	r25, Y+24	; 0x18
     d8c:	a9 8d       	ldd	r26, Y+25	; 0x19
     d8e:	ba 8d       	ldd	r27, Y+26	; 0x1a
     d90:	89 87       	std	Y+9, r24	; 0x09
     d92:	9a 87       	std	Y+10, r25	; 0x0a
     d94:	ab 87       	std	Y+11, r26	; 0x0b
     d96:	bc 87       	std	Y+12, r27	; 0x0c

00000d98 <.Loc.152>:
	if (__tmp < 1.0)
     d98:	20 e0       	ldi	r18, 0x00	; 0
     d9a:	30 e0       	ldi	r19, 0x00	; 0
     d9c:	40 e8       	ldi	r20, 0x80	; 128
     d9e:	5f e3       	ldi	r21, 0x3F	; 63
     da0:	69 85       	ldd	r22, Y+9	; 0x09
     da2:	7a 85       	ldd	r23, Y+10	; 0x0a
     da4:	8b 85       	ldd	r24, Y+11	; 0x0b
     da6:	9c 85       	ldd	r25, Y+12	; 0x0c
     da8:	0e 94 ed 0a 	call	0x15da	; 0x15da <__cmpsf2>
     dac:	88 23       	and	r24, r24
     dae:	2c f4       	brge	.+10     	; 0xdba <.L49>

00000db0 <.Loc.153>:
		__ticks = 1;
     db0:	81 e0       	ldi	r24, 0x01	; 1
     db2:	90 e0       	ldi	r25, 0x00	; 0
     db4:	9e 87       	std	Y+14, r25	; 0x0e
     db6:	8d 87       	std	Y+13, r24	; 0x0d
     db8:	55 c0       	rjmp	.+170    	; 0xe64 <.L38>

00000dba <.L49>:
	else if (__tmp > 65535)
     dba:	20 e0       	ldi	r18, 0x00	; 0
     dbc:	3f ef       	ldi	r19, 0xFF	; 255
     dbe:	4f e7       	ldi	r20, 0x7F	; 127
     dc0:	57 e4       	ldi	r21, 0x47	; 71
     dc2:	69 85       	ldd	r22, Y+9	; 0x09
     dc4:	7a 85       	ldd	r23, Y+10	; 0x0a
     dc6:	8b 85       	ldd	r24, Y+11	; 0x0b
     dc8:	9c 85       	ldd	r25, Y+12	; 0x0c
     dca:	0e 94 4c 0c 	call	0x1898	; 0x1898 <__gesf2>
     dce:	88 23       	and	r24, r24
     dd0:	d9 f1       	breq	.+118    	; 0xe48 <.L50>
     dd2:	d4 f1       	brlt	.+116    	; 0xe48 <.L50>

00000dd4 <.Loc.155>:
		__ticks = (uint16_t) (__ms * 10.0);
     dd4:	20 e0       	ldi	r18, 0x00	; 0
     dd6:	30 e0       	ldi	r19, 0x00	; 0
     dd8:	40 e2       	ldi	r20, 0x20	; 32
     dda:	51 e4       	ldi	r21, 0x41	; 65
     ddc:	6d 81       	ldd	r22, Y+5	; 0x05
     dde:	7e 81       	ldd	r23, Y+6	; 0x06
     de0:	8f 81       	ldd	r24, Y+7	; 0x07
     de2:	98 85       	ldd	r25, Y+8	; 0x08
     de4:	0e 94 51 0c 	call	0x18a2	; 0x18a2 <__mulsf3>
     de8:	6b 8f       	std	Y+27, r22	; 0x1b
     dea:	7c 8f       	std	Y+28, r23	; 0x1c
     dec:	8d 8f       	std	Y+29, r24	; 0x1d
     dee:	9e 8f       	std	Y+30, r25	; 0x1e
     df0:	8b 8d       	ldd	r24, Y+27	; 0x1b
     df2:	9c 8d       	ldd	r25, Y+28	; 0x1c
     df4:	ad 8d       	ldd	r26, Y+29	; 0x1d
     df6:	be 8d       	ldd	r27, Y+30	; 0x1e
     df8:	8b 8b       	std	Y+19, r24	; 0x13
     dfa:	9c 8b       	std	Y+20, r25	; 0x14
     dfc:	ad 8b       	std	Y+21, r26	; 0x15
     dfe:	be 8b       	std	Y+22, r27	; 0x16

00000e00 <.Loc.156>:
     e00:	6b 89       	ldd	r22, Y+19	; 0x13
     e02:	7c 89       	ldd	r23, Y+20	; 0x14
     e04:	8d 89       	ldd	r24, Y+21	; 0x15
     e06:	9e 89       	ldd	r25, Y+22	; 0x16
     e08:	0e 94 6b 0b 	call	0x16d6	; 0x16d6 <__fixunssfsi>
     e0c:	6f 8f       	std	Y+31, r22	; 0x1f
     e0e:	78 a3       	std	Y+32, r23	; 0x20
     e10:	89 a3       	std	Y+33, r24	; 0x21
     e12:	9a a3       	std	Y+34, r25	; 0x22
     e14:	af 8d       	ldd	r26, Y+31	; 0x1f
     e16:	b8 a1       	ldd	r27, Y+32	; 0x20
     e18:	be 87       	std	Y+14, r27	; 0x0e
     e1a:	ad 87       	std	Y+13, r26	; 0x0d

00000e1c <.Loc.157>:
		while(__ticks)
     e1c:	10 c0       	rjmp	.+32     	; 0xe3e <.L41>

00000e1e <.L42>:
     e1e:	80 e9       	ldi	r24, 0x90	; 144
     e20:	91 e0       	ldi	r25, 0x01	; 1
     e22:	98 8b       	std	Y+16, r25	; 0x10
     e24:	8f 87       	std	Y+15, r24	; 0x0f

00000e26 <.LBB38>:
     e26:	8f 85       	ldd	r24, Y+15	; 0x0f
     e28:	98 89       	ldd	r25, Y+16	; 0x10

00000e2a <.L1^B1>:
     e2a:	01 97       	sbiw	r24, 0x01	; 1
     e2c:	f1 f7       	brne	.-4      	; 0xe2a <.L1^B1>
     e2e:	98 8b       	std	Y+16, r25	; 0x10
     e30:	8f 87       	std	Y+15, r24	; 0x0f

00000e32 <.Loc.159>:
	...

00000e34 <.LBE38>:
			__ticks --;
     e34:	8d 85       	ldd	r24, Y+13	; 0x0d
     e36:	9e 85       	ldd	r25, Y+14	; 0x0e
     e38:	01 97       	sbiw	r24, 0x01	; 1
     e3a:	9e 87       	std	Y+14, r25	; 0x0e
     e3c:	8d 87       	std	Y+13, r24	; 0x0d

00000e3e <.L41>:
		while(__ticks)
     e3e:	8d 85       	ldd	r24, Y+13	; 0x0d
     e40:	9e 85       	ldd	r25, Y+14	; 0x0e
     e42:	00 97       	sbiw	r24, 0x00	; 0
     e44:	61 f7       	brne	.-40     	; 0xe1e <.L42>

00000e46 <.Loc.162>:
		return;
     e46:	19 c0       	rjmp	.+50     	; 0xe7a <.L43>

00000e48 <.L50>:
		__ticks = (uint16_t)__tmp;
     e48:	69 85       	ldd	r22, Y+9	; 0x09
     e4a:	7a 85       	ldd	r23, Y+10	; 0x0a
     e4c:	8b 85       	ldd	r24, Y+11	; 0x0b
     e4e:	9c 85       	ldd	r25, Y+12	; 0x0c
     e50:	0e 94 6b 0b 	call	0x16d6	; 0x16d6 <__fixunssfsi>
     e54:	6b a3       	std	Y+35, r22	; 0x23
     e56:	7c a3       	std	Y+36, r23	; 0x24
     e58:	8d a3       	std	Y+37, r24	; 0x25
     e5a:	9e a3       	std	Y+38, r25	; 0x26
     e5c:	eb a1       	ldd	r30, Y+35	; 0x23
     e5e:	fc a1       	ldd	r31, Y+36	; 0x24
     e60:	fe 87       	std	Y+14, r31	; 0x0e
     e62:	ed 87       	std	Y+13, r30	; 0x0d

00000e64 <.L38>:
     e64:	8d 85       	ldd	r24, Y+13	; 0x0d
     e66:	9e 85       	ldd	r25, Y+14	; 0x0e
     e68:	9a 8b       	std	Y+18, r25	; 0x12
     e6a:	89 8b       	std	Y+17, r24	; 0x11

00000e6c <.LBB40>:
     e6c:	89 89       	ldd	r24, Y+17	; 0x11
     e6e:	9a 89       	ldd	r25, Y+18	; 0x12

00000e70 <.L1^B2>:
     e70:	01 97       	sbiw	r24, 0x01	; 1
     e72:	f1 f7       	brne	.-4      	; 0xe70 <.L1^B2>
     e74:	9a 8b       	std	Y+18, r25	; 0x12
     e76:	89 8b       	std	Y+17, r24	; 0x11

00000e78 <.Loc.165>:
	...

00000e7a <.L43>:
        case 7://Balken niet meer in zicht en bocht maken
            _delay_ms(2000);
            h_bridgeR_set_percentage(snelheidhard);
     e7a:	86 e4       	ldi	r24, 0x46	; 70
     e7c:	0e 94 14 03 	call	0x628	; 0x628 <h_bridgeR_set_percentage>

00000e80 <.Loc.167>:
            h_bridgeL_set_percentage(snelheidzacht);
     e80:	82 e5       	ldi	r24, 0x52	; 82
     e82:	0e 94 53 03 	call	0x6a6	; 0x6a6 <h_bridgeL_set_percentage>

00000e86 <.Loc.168>:
            if(((IRregister & (1 << IRonderlinks)) == 0) && ((IRregister & (1 << IRonderrechts)) == 0))
     e86:	86 e2       	ldi	r24, 0x26	; 38
     e88:	90 e0       	ldi	r25, 0x00	; 0
     e8a:	dc 01       	movw	r26, r24
     e8c:	8c 91       	ld	r24, X

00000e8e <.Loc.169>:
     e8e:	88 2f       	mov	r24, r24
     e90:	90 e0       	ldi	r25, 0x00	; 0
     e92:	88 70       	andi	r24, 0x08	; 8
     e94:	99 27       	eor	r25, r25

00000e96 <.Loc.170>:
     e96:	00 97       	sbiw	r24, 0x00	; 0
     e98:	09 f0       	breq	.+2      	; 0xe9c <.Loc.171>

00000e9a <L0^A>:
     e9a:	3d c0       	rjmp	.+122    	; 0xf16 <.L59>

00000e9c <.Loc.171>:
     e9c:	86 e2       	ldi	r24, 0x26	; 38
     e9e:	90 e0       	ldi	r25, 0x00	; 0
     ea0:	fc 01       	movw	r30, r24
     ea2:	80 81       	ld	r24, Z

00000ea4 <.Loc.172>:
     ea4:	88 2f       	mov	r24, r24
     ea6:	90 e0       	ldi	r25, 0x00	; 0
     ea8:	84 70       	andi	r24, 0x04	; 4
     eaa:	99 27       	eor	r25, r25

00000eac <.Loc.173>:
     eac:	00 97       	sbiw	r24, 0x00	; 0
     eae:	99 f5       	brne	.+102    	; 0xf16 <.L59>

00000eb0 <.Loc.174>:
            {
                toestand = 4;
     eb0:	84 e0       	ldi	r24, 0x04	; 4
     eb2:	90 e0       	ldi	r25, 0x00	; 0
     eb4:	9a 83       	std	Y+2, r25	; 0x02
     eb6:	89 83       	std	Y+1, r24	; 0x01

00000eb8 <.Loc.175>:
            }
            break;
     eb8:	2e c0       	rjmp	.+92     	; 0xf16 <.L59>

00000eba <.L13>:
        case 8://signaleren
            h_bridgeR_set_percentage(snelheiduit);
     eba:	83 e6       	ldi	r24, 0x63	; 99
     ebc:	0e 94 14 03 	call	0x628	; 0x628 <h_bridgeR_set_percentage>

00000ec0 <.Loc.177>:
            h_bridgeL_set_percentage(snelheiduit);
     ec0:	83 e6       	ldi	r24, 0x63	; 99
     ec2:	0e 94 53 03 	call	0x6a6	; 0x6a6 <h_bridgeL_set_percentage>

00000ec6 <.Loc.178>:
            signaal_geven();
     ec6:	0e 94 a3 01 	call	0x346	; 0x346 <signaal_geven>

00000eca <.Loc.179>:
            toestand = 4;
     eca:	84 e0       	ldi	r24, 0x04	; 4
     ecc:	90 e0       	ldi	r25, 0x00	; 0
     ece:	9a 83       	std	Y+2, r25	; 0x02
     ed0:	89 83       	std	Y+1, r24	; 0x01

00000ed2 <.Loc.180>:
            break;
     ed2:	24 c0       	rjmp	.+72     	; 0xf1c <.L10>

00000ed4 <.L11>:
        case 9://Voorultrasoon ziet iets
            h_bridgeR_set_percentage(snelheiduit);
     ed4:	83 e6       	ldi	r24, 0x63	; 99
     ed6:	0e 94 14 03 	call	0x628	; 0x628 <h_bridgeR_set_percentage>

00000eda <.Loc.182>:
            h_bridgeL_set_percentage(snelheiduit);
     eda:	83 e6       	ldi	r24, 0x63	; 99
     edc:	0e 94 53 03 	call	0x6a6	; 0x6a6 <h_bridgeL_set_percentage>

00000ee0 <.Loc.183>:
            if(waarde > 30)
     ee0:	8b 81       	ldd	r24, Y+3	; 0x03
     ee2:	9c 81       	ldd	r25, Y+4	; 0x04
     ee4:	8e 31       	cpi	r24, 0x1E	; 30
     ee6:	91 05       	cpc	r25, r1
     ee8:	c1 f0       	breq	.+48     	; 0xf1a <.L60>
     eea:	bc f0       	brlt	.+46     	; 0xf1a <.L60>

00000eec <.Loc.184>:
            {
                toestand = 4;
     eec:	84 e0       	ldi	r24, 0x04	; 4
     eee:	90 e0       	ldi	r25, 0x00	; 0
     ef0:	9a 83       	std	Y+2, r25	; 0x02
     ef2:	89 83       	std	Y+1, r24	; 0x01

00000ef4 <.Loc.185>:
            }
            break;
     ef4:	12 c0       	rjmp	.+36     	; 0xf1a <.L60>

00000ef6 <.L51>:
            break;
     ef6:	00 00       	nop
     ef8:	1f cd       	rjmp	.-1474   	; 0x938 <.L46>

00000efa <.L52>:
            break;
     efa:	00 00       	nop
     efc:	1d cd       	rjmp	.-1478   	; 0x938 <.L46>

00000efe <.L53>:
            break;
     efe:	00 00       	nop
     f00:	1b cd       	rjmp	.-1482   	; 0x938 <.L46>

00000f02 <.L54>:
            break;
     f02:	00 00       	nop
     f04:	19 cd       	rjmp	.-1486   	; 0x938 <.L46>

00000f06 <.L55>:
            break;
     f06:	00 00       	nop
     f08:	17 cd       	rjmp	.-1490   	; 0x938 <.L46>

00000f0a <.L56>:
            break;
     f0a:	00 00       	nop
     f0c:	15 cd       	rjmp	.-1494   	; 0x938 <.L46>

00000f0e <.L57>:
            break;
     f0e:	00 00       	nop
     f10:	13 cd       	rjmp	.-1498   	; 0x938 <.L46>

00000f12 <.L58>:
            break;
     f12:	00 00       	nop
     f14:	11 cd       	rjmp	.-1502   	; 0x938 <.L46>

00000f16 <.L59>:
            break;
     f16:	00 00       	nop
     f18:	0f cd       	rjmp	.-1506   	; 0x938 <.L46>

00000f1a <.L60>:
	...

00000f1c <.L10>:
        if(Bluetooth_Getal == 2)//Bluetooth verbroken
     f1c:	0d cd       	rjmp	.-1510   	; 0x938 <.L46>

00000f1e <init>:

    return 0;
}

void init()
{
     f1e:	cf 93       	push	r28
     f20:	df 93       	push	r29
     f22:	cd b7       	in	r28, 0x3d	; 61
     f24:	de b7       	in	r29, 0x3e	; 62

00000f26 <.Loc.198>:
    initBluetooth();
     f26:	0e 94 d7 00 	call	0x1ae	; 0x1ae <initBluetooth>

00000f2a <.Loc.199>:
    sei();
     f2a:	78 94       	sei

00000f2c <.Loc.200>:

    //timer PWM motorenR
    TCCR1B = (0 << CS12) | (0 << CS11) | (1 << CS10);
     f2c:	81 e8       	ldi	r24, 0x81	; 129
     f2e:	90 e0       	ldi	r25, 0x00	; 0

00000f30 <.Loc.201>:
     f30:	21 e0       	ldi	r18, 0x01	; 1
     f32:	fc 01       	movw	r30, r24
     f34:	20 83       	st	Z, r18

00000f36 <.Loc.202>:
    TIMSK1 = (1 << OCIE1A) | (1 << TOIE1);
     f36:	8f e6       	ldi	r24, 0x6F	; 111
     f38:	90 e0       	ldi	r25, 0x00	; 0

00000f3a <.Loc.203>:
     f3a:	23 e0       	ldi	r18, 0x03	; 3
     f3c:	fc 01       	movw	r30, r24
     f3e:	20 83       	st	Z, r18

00000f40 <.Loc.204>:

    OCR1A = 0;
     f40:	88 e8       	ldi	r24, 0x88	; 136
     f42:	90 e0       	ldi	r25, 0x00	; 0

00000f44 <.Loc.205>:
     f44:	fc 01       	movw	r30, r24
     f46:	11 82       	std	Z+1, r1	; 0x01
     f48:	10 82       	st	Z, r1

00000f4a <.Loc.206>:
    //timer PWM motorenL
    TCCR3B = (0 << CS32) | (0 << CS31) | (1 << CS30);
     f4a:	81 e9       	ldi	r24, 0x91	; 145
     f4c:	90 e0       	ldi	r25, 0x00	; 0

00000f4e <.Loc.207>:
     f4e:	21 e0       	ldi	r18, 0x01	; 1
     f50:	fc 01       	movw	r30, r24
     f52:	20 83       	st	Z, r18

00000f54 <.Loc.208>:
    TIMSK3 = (1 << OCIE3A) | (1 << TOIE3);
     f54:	81 e7       	ldi	r24, 0x71	; 113
     f56:	90 e0       	ldi	r25, 0x00	; 0

00000f58 <.Loc.209>:
     f58:	23 e0       	ldi	r18, 0x03	; 3
     f5a:	fc 01       	movw	r30, r24
     f5c:	20 83       	st	Z, r18

00000f5e <.Loc.210>:

    OCR3A = 0;
     f5e:	88 e9       	ldi	r24, 0x98	; 152
     f60:	90 e0       	ldi	r25, 0x00	; 0

00000f62 <.Loc.211>:
     f62:	fc 01       	movw	r30, r24
     f64:	11 82       	std	Z+1, r1	; 0x01
     f66:	10 82       	st	Z, r1

00000f68 <.Loc.212>:

    //timer noodtoestand
    TCCR0B = (1 << CS02) | (1 << CS00);
     f68:	85 e4       	ldi	r24, 0x45	; 69
     f6a:	90 e0       	ldi	r25, 0x00	; 0

00000f6c <.Loc.213>:
     f6c:	25 e0       	ldi	r18, 0x05	; 5
     f6e:	fc 01       	movw	r30, r24
     f70:	20 83       	st	Z, r18

00000f72 <.Loc.214>:
    TIMSK0 |= (1 << TOIE0);
     f72:	8e e6       	ldi	r24, 0x6E	; 110
     f74:	90 e0       	ldi	r25, 0x00	; 0
     f76:	fc 01       	movw	r30, r24
     f78:	20 81       	ld	r18, Z
     f7a:	8e e6       	ldi	r24, 0x6E	; 110
     f7c:	90 e0       	ldi	r25, 0x00	; 0

00000f7e <.Loc.215>:
     f7e:	21 60       	ori	r18, 0x01	; 1
     f80:	fc 01       	movw	r30, r24
     f82:	20 83       	st	Z, r18

00000f84 <.Loc.216>:

    //timer noodtoestand
    //TCCR4B = (1 << CS42) | (1 << CS40);
    TIMSK4 |= (1 << TOIE4);
     f84:	82 e7       	ldi	r24, 0x72	; 114
     f86:	90 e0       	ldi	r25, 0x00	; 0
     f88:	fc 01       	movw	r30, r24
     f8a:	20 81       	ld	r18, Z
     f8c:	82 e7       	ldi	r24, 0x72	; 114
     f8e:	90 e0       	ldi	r25, 0x00	; 0

00000f90 <.Loc.217>:
     f90:	21 60       	ori	r18, 0x01	; 1
     f92:	fc 01       	movw	r30, r24
     f94:	20 83       	st	Z, r18

00000f96 <.Loc.218>:

    //pinout h-brug
    DDR |= (1 << PEN1);
     f96:	81 e2       	ldi	r24, 0x21	; 33
     f98:	90 e0       	ldi	r25, 0x00	; 0
     f9a:	fc 01       	movw	r30, r24
     f9c:	20 81       	ld	r18, Z
     f9e:	81 e2       	ldi	r24, 0x21	; 33
     fa0:	90 e0       	ldi	r25, 0x00	; 0

00000fa2 <.Loc.219>:
     fa2:	20 68       	ori	r18, 0x80	; 128
     fa4:	fc 01       	movw	r30, r24
     fa6:	20 83       	st	Z, r18

00000fa8 <.Loc.220>:
    DDR |= (1 << PIN11);
     fa8:	81 e2       	ldi	r24, 0x21	; 33
     faa:	90 e0       	ldi	r25, 0x00	; 0
     fac:	fc 01       	movw	r30, r24
     fae:	20 81       	ld	r18, Z
     fb0:	81 e2       	ldi	r24, 0x21	; 33
     fb2:	90 e0       	ldi	r25, 0x00	; 0

00000fb4 <.Loc.221>:
     fb4:	20 64       	ori	r18, 0x40	; 64
     fb6:	fc 01       	movw	r30, r24
     fb8:	20 83       	st	Z, r18

00000fba <.Loc.222>:
    DDR |= (1 << PIN12);
     fba:	81 e2       	ldi	r24, 0x21	; 33
     fbc:	90 e0       	ldi	r25, 0x00	; 0
     fbe:	fc 01       	movw	r30, r24
     fc0:	20 81       	ld	r18, Z
     fc2:	81 e2       	ldi	r24, 0x21	; 33
     fc4:	90 e0       	ldi	r25, 0x00	; 0

00000fc6 <.Loc.223>:
     fc6:	20 62       	ori	r18, 0x20	; 32
     fc8:	fc 01       	movw	r30, r24
     fca:	20 83       	st	Z, r18

00000fcc <.Loc.224>:
    DDR |= (1 << PIN21);
     fcc:	81 e2       	ldi	r24, 0x21	; 33
     fce:	90 e0       	ldi	r25, 0x00	; 0
     fd0:	fc 01       	movw	r30, r24
     fd2:	20 81       	ld	r18, Z
     fd4:	81 e2       	ldi	r24, 0x21	; 33
     fd6:	90 e0       	ldi	r25, 0x00	; 0

00000fd8 <.Loc.225>:
     fd8:	20 61       	ori	r18, 0x10	; 16
     fda:	fc 01       	movw	r30, r24
     fdc:	20 83       	st	Z, r18

00000fde <.Loc.226>:
    DDR |= (1 << PIN22);
     fde:	81 e2       	ldi	r24, 0x21	; 33
     fe0:	90 e0       	ldi	r25, 0x00	; 0
     fe2:	fc 01       	movw	r30, r24
     fe4:	20 81       	ld	r18, Z
     fe6:	81 e2       	ldi	r24, 0x21	; 33
     fe8:	90 e0       	ldi	r25, 0x00	; 0

00000fea <.Loc.227>:
     fea:	28 60       	ori	r18, 0x08	; 8
     fec:	fc 01       	movw	r30, r24
     fee:	20 83       	st	Z, r18

00000ff0 <.Loc.228>:
    DDR |= (1 << PEN2);
     ff0:	81 e2       	ldi	r24, 0x21	; 33
     ff2:	90 e0       	ldi	r25, 0x00	; 0
     ff4:	fc 01       	movw	r30, r24
     ff6:	20 81       	ld	r18, Z
     ff8:	81 e2       	ldi	r24, 0x21	; 33
     ffa:	90 e0       	ldi	r25, 0x00	; 0

00000ffc <.Loc.229>:
     ffc:	24 60       	ori	r18, 0x04	; 4
     ffe:	fc 01       	movw	r30, r24
    1000:	20 83       	st	Z, r18

00001002 <.Loc.230>:

    //H-brug pinnen LOW
    PORT &= ~(1 << PEN1);
    1002:	82 e2       	ldi	r24, 0x22	; 34
    1004:	90 e0       	ldi	r25, 0x00	; 0
    1006:	fc 01       	movw	r30, r24
    1008:	20 81       	ld	r18, Z

0000100a <.Loc.231>:
    100a:	82 e2       	ldi	r24, 0x22	; 34
    100c:	90 e0       	ldi	r25, 0x00	; 0

0000100e <.Loc.232>:
    100e:	2f 77       	andi	r18, 0x7F	; 127
    1010:	fc 01       	movw	r30, r24
    1012:	20 83       	st	Z, r18

00001014 <.Loc.233>:
	PORT &= ~(1 << PIN11);
    1014:	82 e2       	ldi	r24, 0x22	; 34
    1016:	90 e0       	ldi	r25, 0x00	; 0
    1018:	fc 01       	movw	r30, r24
    101a:	20 81       	ld	r18, Z

0000101c <.Loc.234>:
    101c:	82 e2       	ldi	r24, 0x22	; 34
    101e:	90 e0       	ldi	r25, 0x00	; 0

00001020 <.Loc.235>:
    1020:	2f 7b       	andi	r18, 0xBF	; 191
    1022:	fc 01       	movw	r30, r24
    1024:	20 83       	st	Z, r18

00001026 <.Loc.236>:
	PORT &= ~(1 << PIN12);
    1026:	82 e2       	ldi	r24, 0x22	; 34
    1028:	90 e0       	ldi	r25, 0x00	; 0
    102a:	fc 01       	movw	r30, r24
    102c:	20 81       	ld	r18, Z

0000102e <.Loc.237>:
    102e:	82 e2       	ldi	r24, 0x22	; 34
    1030:	90 e0       	ldi	r25, 0x00	; 0

00001032 <.Loc.238>:
    1032:	2f 7d       	andi	r18, 0xDF	; 223
    1034:	fc 01       	movw	r30, r24
    1036:	20 83       	st	Z, r18

00001038 <.Loc.239>:
	PORT &= ~(1 << PIN21);
    1038:	82 e2       	ldi	r24, 0x22	; 34
    103a:	90 e0       	ldi	r25, 0x00	; 0
    103c:	fc 01       	movw	r30, r24
    103e:	20 81       	ld	r18, Z

00001040 <.Loc.240>:
    1040:	82 e2       	ldi	r24, 0x22	; 34
    1042:	90 e0       	ldi	r25, 0x00	; 0

00001044 <.Loc.241>:
    1044:	2f 7e       	andi	r18, 0xEF	; 239
    1046:	fc 01       	movw	r30, r24
    1048:	20 83       	st	Z, r18

0000104a <.Loc.242>:
	PORT &= ~(1 << PIN22);
    104a:	82 e2       	ldi	r24, 0x22	; 34
    104c:	90 e0       	ldi	r25, 0x00	; 0
    104e:	fc 01       	movw	r30, r24
    1050:	20 81       	ld	r18, Z

00001052 <.Loc.243>:
    1052:	82 e2       	ldi	r24, 0x22	; 34
    1054:	90 e0       	ldi	r25, 0x00	; 0

00001056 <.Loc.244>:
    1056:	27 7f       	andi	r18, 0xF7	; 247
    1058:	fc 01       	movw	r30, r24
    105a:	20 83       	st	Z, r18

0000105c <.Loc.245>:
	PORT &= ~(1 << PEN2);
    105c:	82 e2       	ldi	r24, 0x22	; 34
    105e:	90 e0       	ldi	r25, 0x00	; 0
    1060:	fc 01       	movw	r30, r24
    1062:	20 81       	ld	r18, Z

00001064 <.Loc.246>:
    1064:	82 e2       	ldi	r24, 0x22	; 34
    1066:	90 e0       	ldi	r25, 0x00	; 0

00001068 <.Loc.247>:
    1068:	2b 7f       	andi	r18, 0xFB	; 251
    106a:	fc 01       	movw	r30, r24
    106c:	20 83       	st	Z, r18

0000106e <.Loc.248>:

	//LEDS
    DDR_LED |= (1<<LED_1) | (1<<LED_2);     // enable pins as output
    106e:	81 e0       	ldi	r24, 0x01	; 1
    1070:	91 e0       	ldi	r25, 0x01	; 1
    1072:	fc 01       	movw	r30, r24
    1074:	20 81       	ld	r18, Z
    1076:	81 e0       	ldi	r24, 0x01	; 1
    1078:	91 e0       	ldi	r25, 0x01	; 1

0000107a <.Loc.249>:
    107a:	20 63       	ori	r18, 0x30	; 48
    107c:	fc 01       	movw	r30, r24
    107e:	20 83       	st	Z, r18

00001080 <.Loc.250>:
    PORT_LED &= ~(1<<LED_1) & ~(1<<LED_2);  // put pins low
    1080:	82 e0       	ldi	r24, 0x02	; 2
    1082:	91 e0       	ldi	r25, 0x01	; 1
    1084:	fc 01       	movw	r30, r24
    1086:	20 81       	ld	r18, Z

00001088 <.Loc.251>:
    1088:	82 e0       	ldi	r24, 0x02	; 2
    108a:	91 e0       	ldi	r25, 0x01	; 1

0000108c <.Loc.252>:
    108c:	2f 7c       	andi	r18, 0xCF	; 207
    108e:	fc 01       	movw	r30, r24
    1090:	20 83       	st	Z, r18

00001092 <.Loc.253>:
    //PORT_LED |= (1<<LED_2);

    //Buzzer
    DDR_buzzer |= (1<<buzzer);              // enable pins as output
    1092:	81 e0       	ldi	r24, 0x01	; 1
    1094:	91 e0       	ldi	r25, 0x01	; 1
    1096:	fc 01       	movw	r30, r24
    1098:	20 81       	ld	r18, Z
    109a:	81 e0       	ldi	r24, 0x01	; 1
    109c:	91 e0       	ldi	r25, 0x01	; 1

0000109e <.Loc.254>:
    109e:	28 60       	ori	r18, 0x08	; 8
    10a0:	fc 01       	movw	r30, r24
    10a2:	20 83       	st	Z, r18

000010a4 <.Loc.255>:
    PORT_buzzer &= ~(1<<buzzer);            // put pins low
    10a4:	82 e0       	ldi	r24, 0x02	; 2
    10a6:	91 e0       	ldi	r25, 0x01	; 1
    10a8:	fc 01       	movw	r30, r24
    10aa:	20 81       	ld	r18, Z

000010ac <.Loc.256>:
    10ac:	82 e0       	ldi	r24, 0x02	; 2
    10ae:	91 e0       	ldi	r25, 0x01	; 1

000010b0 <.Loc.257>:
    10b0:	27 7f       	andi	r18, 0xF7	; 247
    10b2:	fc 01       	movw	r30, r24
    10b4:	20 83       	st	Z, r18

000010b6 <.Loc.258>:

    //knoppen
	DDRF &= ~(1<<Noodknoppin);
    10b6:	80 e3       	ldi	r24, 0x30	; 48
    10b8:	90 e0       	ldi	r25, 0x00	; 0
    10ba:	fc 01       	movw	r30, r24
    10bc:	20 81       	ld	r18, Z

000010be <.Loc.259>:
    10be:	80 e3       	ldi	r24, 0x30	; 48
    10c0:	90 e0       	ldi	r25, 0x00	; 0

000010c2 <.Loc.260>:
    10c2:	2d 7f       	andi	r18, 0xFD	; 253
    10c4:	fc 01       	movw	r30, r24
    10c6:	20 83       	st	Z, r18

000010c8 <.Loc.261>:
	PORTF |= (1<<Noodknoppin);   		// enAble alle knoppen voor input
    10c8:	81 e3       	ldi	r24, 0x31	; 49
    10ca:	90 e0       	ldi	r25, 0x00	; 0
    10cc:	fc 01       	movw	r30, r24
    10ce:	20 81       	ld	r18, Z
    10d0:	81 e3       	ldi	r24, 0x31	; 49
    10d2:	90 e0       	ldi	r25, 0x00	; 0

000010d4 <.Loc.262>:
    10d4:	22 60       	ori	r18, 0x02	; 2
    10d6:	fc 01       	movw	r30, r24
    10d8:	20 83       	st	Z, r18

000010da <.Loc.263>:
}
    10da:	00 00       	nop
    10dc:	df 91       	pop	r29
    10de:	cf 91       	pop	r28
    10e0:	08 95       	ret

000010e2 <initTimer>:


void initTimer(void){
    10e2:	cf 93       	push	r28
    10e4:	df 93       	push	r29
    10e6:	cd b7       	in	r28, 0x3d	; 61
    10e8:	de b7       	in	r29, 0x3e	; 62

000010ea <.Loc.265>:
    Ultraregister |= (1<<Voorultrasoontrig);
    10ea:	83 e2       	ldi	r24, 0x23	; 35
    10ec:	90 e0       	ldi	r25, 0x00	; 0
    10ee:	fc 01       	movw	r30, r24
    10f0:	20 81       	ld	r18, Z
    10f2:	83 e2       	ldi	r24, 0x23	; 35
    10f4:	90 e0       	ldi	r25, 0x00	; 0

000010f6 <.Loc.266>:
    10f6:	20 62       	ori	r18, 0x20	; 32
    10f8:	fc 01       	movw	r30, r24
    10fa:	20 83       	st	Z, r18

000010fc <.Loc.267>:
    UltraPort &= ~(1<<Voorultrasoontrig);
    10fc:	85 e2       	ldi	r24, 0x25	; 37
    10fe:	90 e0       	ldi	r25, 0x00	; 0
    1100:	fc 01       	movw	r30, r24
    1102:	20 81       	ld	r18, Z

00001104 <.Loc.268>:
    1104:	85 e2       	ldi	r24, 0x25	; 37
    1106:	90 e0       	ldi	r25, 0x00	; 0

00001108 <.Loc.269>:
    1108:	2f 7d       	andi	r18, 0xDF	; 223
    110a:	fc 01       	movw	r30, r24
    110c:	20 83       	st	Z, r18

0000110e <.Loc.270>:
    TCCR2A = 0;
    110e:	80 eb       	ldi	r24, 0xB0	; 176
    1110:	90 e0       	ldi	r25, 0x00	; 0

00001112 <.Loc.271>:
    1112:	fc 01       	movw	r30, r24
    1114:	10 82       	st	Z, r1

00001116 <.Loc.272>:
    TCCR2B |= (1<<CS20);
    1116:	81 eb       	ldi	r24, 0xB1	; 177
    1118:	90 e0       	ldi	r25, 0x00	; 0
    111a:	fc 01       	movw	r30, r24
    111c:	20 81       	ld	r18, Z
    111e:	81 eb       	ldi	r24, 0xB1	; 177
    1120:	90 e0       	ldi	r25, 0x00	; 0

00001122 <.Loc.273>:
    1122:	21 60       	ori	r18, 0x01	; 1
    1124:	fc 01       	movw	r30, r24
    1126:	20 83       	st	Z, r18

00001128 <.Loc.274>:
    //16000000 / 256 = 62,500
    //1 / 62500 = 0.000016s
    //62500x/sec
    TIMSK2 = (1<<TOIE2);
    1128:	80 e7       	ldi	r24, 0x70	; 112
    112a:	90 e0       	ldi	r25, 0x00	; 0

0000112c <.Loc.275>:
    112c:	21 e0       	ldi	r18, 0x01	; 1
    112e:	fc 01       	movw	r30, r24
    1130:	20 83       	st	Z, r18

00001132 <.Loc.276>:
    sei();
    1132:	78 94       	sei

00001134 <.Loc.277>:
}
    1134:	00 00       	nop
    1136:	df 91       	pop	r29
    1138:	cf 91       	pop	r28
    113a:	08 95       	ret

0000113c <GetDistance>:

int GetDistance(void){
    113c:	cf 93       	push	r28
    113e:	df 93       	push	r29
    1140:	cd b7       	in	r28, 0x3d	; 61
    1142:	de b7       	in	r29, 0x3e	; 62
    1144:	6e 97       	sbiw	r28, 0x1e	; 30
    1146:	0f b6       	in	r0, 0x3f	; 63
    1148:	f8 94       	cli
    114a:	de bf       	out	0x3e, r29	; 62
    114c:	0f be       	out	0x3f, r0	; 63
    114e:	cd bf       	out	0x3d, r28	; 61

00001150 <.Loc.279>:

    int Distance;

    TriggerPulse();
    1150:	0e 94 2c 09 	call	0x1258	; 0x1258 <TriggerPulse>

00001154 <.Loc.280>:
	...

00001156 <.L64>:

    while ((Ultraregister & (1<<Voorultrasoonecho)) == 0){
    1156:	83 e2       	ldi	r24, 0x23	; 35
    1158:	90 e0       	ldi	r25, 0x00	; 0
    115a:	dc 01       	movw	r26, r24
    115c:	8c 91       	ld	r24, X

0000115e <.Loc.282>:
    115e:	88 2f       	mov	r24, r24
    1160:	90 e0       	ldi	r25, 0x00	; 0
    1162:	80 71       	andi	r24, 0x10	; 16
    1164:	99 27       	eor	r25, r25

00001166 <.Loc.283>:
    1166:	00 97       	sbiw	r24, 0x00	; 0
    1168:	b1 f3       	breq	.-20     	; 0x1156 <.L64>

0000116a <.Loc.284>:

    }
    TCNT2 = 0;
    116a:	82 eb       	ldi	r24, 0xB2	; 178
    116c:	90 e0       	ldi	r25, 0x00	; 0

0000116e <.Loc.285>:
    116e:	fc 01       	movw	r30, r24
    1170:	10 82       	st	Z, r1

00001172 <.Loc.286>:
    TIFR2 = 1<<TOV2;
    1172:	87 e3       	ldi	r24, 0x37	; 55
    1174:	90 e0       	ldi	r25, 0x00	; 0

00001176 <.Loc.287>:
    1176:	21 e0       	ldi	r18, 0x01	; 1
    1178:	dc 01       	movw	r26, r24
    117a:	2c 93       	st	X, r18

0000117c <.Loc.288>:
    count = 0;
    117c:	10 92 0f 02 	sts	0x020F, r1	; 0x80020f <count+0x1>
    1180:	10 92 0e 02 	sts	0x020E, r1	; 0x80020e <count>

00001184 <.Loc.289>:
	...

00001186 <.L65>:

    while ((Ultraregister & (1<<Voorultrasoonecho)) != 0){
    1186:	83 e2       	ldi	r24, 0x23	; 35
    1188:	90 e0       	ldi	r25, 0x00	; 0
    118a:	fc 01       	movw	r30, r24
    118c:	80 81       	ld	r24, Z

0000118e <.Loc.291>:
    118e:	88 2f       	mov	r24, r24
    1190:	90 e0       	ldi	r25, 0x00	; 0
    1192:	80 71       	andi	r24, 0x10	; 16
    1194:	99 27       	eor	r25, r25

00001196 <.Loc.292>:
    1196:	00 97       	sbiw	r24, 0x00	; 0
    1198:	b1 f7       	brne	.-20     	; 0x1186 <.L65>

0000119a <.Loc.293>:

    }
    Distance = count;
    119a:	80 91 0e 02 	lds	r24, 0x020E	; 0x80020e <count>
    119e:	90 91 0f 02 	lds	r25, 0x020F	; 0x80020f <count+0x1>
    11a2:	9a 83       	std	Y+2, r25	; 0x02
    11a4:	89 83       	std	Y+1, r24	; 0x01

000011a6 <.Loc.294>:

    Distance = Distance * 0.008 * 343;
    11a6:	89 81       	ldd	r24, Y+1	; 0x01
    11a8:	9a 81       	ldd	r25, Y+2	; 0x02
    11aa:	9c 01       	movw	r18, r24
    11ac:	99 0f       	add	r25, r25
    11ae:	44 0b       	sbc	r20, r20
    11b0:	55 0b       	sbc	r21, r21
    11b2:	2f 87       	std	Y+15, r18	; 0x0f
    11b4:	38 8b       	std	Y+16, r19	; 0x10
    11b6:	49 8b       	std	Y+17, r20	; 0x11
    11b8:	5a 8b       	std	Y+18, r21	; 0x12
    11ba:	6f 85       	ldd	r22, Y+15	; 0x0f
    11bc:	78 89       	ldd	r23, Y+16	; 0x10
    11be:	89 89       	ldd	r24, Y+17	; 0x11
    11c0:	9a 89       	ldd	r25, Y+18	; 0x12
    11c2:	0e 94 9c 0b 	call	0x1738	; 0x1738 <__floatsisf>
    11c6:	6b 83       	std	Y+3, r22	; 0x03
    11c8:	7c 83       	std	Y+4, r23	; 0x04
    11ca:	8d 83       	std	Y+5, r24	; 0x05
    11cc:	9e 83       	std	Y+6, r25	; 0x06
    11ce:	2f e6       	ldi	r18, 0x6F	; 111
    11d0:	32 e1       	ldi	r19, 0x12	; 18
    11d2:	43 e0       	ldi	r20, 0x03	; 3
    11d4:	5c e3       	ldi	r21, 0x3C	; 60
    11d6:	6b 81       	ldd	r22, Y+3	; 0x03
    11d8:	7c 81       	ldd	r23, Y+4	; 0x04
    11da:	8d 81       	ldd	r24, Y+5	; 0x05
    11dc:	9e 81       	ldd	r25, Y+6	; 0x06
    11de:	0e 94 51 0c 	call	0x18a2	; 0x18a2 <__mulsf3>
    11e2:	6b 8b       	std	Y+19, r22	; 0x13
    11e4:	7c 8b       	std	Y+20, r23	; 0x14
    11e6:	8d 8b       	std	Y+21, r24	; 0x15
    11e8:	9e 8b       	std	Y+22, r25	; 0x16
    11ea:	8b 89       	ldd	r24, Y+19	; 0x13
    11ec:	9c 89       	ldd	r25, Y+20	; 0x14
    11ee:	ad 89       	ldd	r26, Y+21	; 0x15
    11f0:	be 89       	ldd	r27, Y+22	; 0x16
    11f2:	8f 83       	std	Y+7, r24	; 0x07
    11f4:	98 87       	std	Y+8, r25	; 0x08
    11f6:	a9 87       	std	Y+9, r26	; 0x09
    11f8:	ba 87       	std	Y+10, r27	; 0x0a

000011fa <.Loc.295>:
    11fa:	20 e0       	ldi	r18, 0x00	; 0
    11fc:	30 e8       	ldi	r19, 0x80	; 128
    11fe:	4b ea       	ldi	r20, 0xAB	; 171
    1200:	53 e4       	ldi	r21, 0x43	; 67
    1202:	6f 81       	ldd	r22, Y+7	; 0x07
    1204:	78 85       	ldd	r23, Y+8	; 0x08
    1206:	89 85       	ldd	r24, Y+9	; 0x09
    1208:	9a 85       	ldd	r25, Y+10	; 0x0a
    120a:	0e 94 51 0c 	call	0x18a2	; 0x18a2 <__mulsf3>
    120e:	6f 8b       	std	Y+23, r22	; 0x17
    1210:	78 8f       	std	Y+24, r23	; 0x18
    1212:	89 8f       	std	Y+25, r24	; 0x19
    1214:	9a 8f       	std	Y+26, r25	; 0x1a
    1216:	2f 89       	ldd	r18, Y+23	; 0x17
    1218:	38 8d       	ldd	r19, Y+24	; 0x18
    121a:	49 8d       	ldd	r20, Y+25	; 0x19
    121c:	5a 8d       	ldd	r21, Y+26	; 0x1a
    121e:	2b 87       	std	Y+11, r18	; 0x0b
    1220:	3c 87       	std	Y+12, r19	; 0x0c
    1222:	4d 87       	std	Y+13, r20	; 0x0d
    1224:	5e 87       	std	Y+14, r21	; 0x0e

00001226 <.Loc.296>:
    1226:	6b 85       	ldd	r22, Y+11	; 0x0b
    1228:	7c 85       	ldd	r23, Y+12	; 0x0c
    122a:	8d 85       	ldd	r24, Y+13	; 0x0d
    122c:	9e 85       	ldd	r25, Y+14	; 0x0e
    122e:	0e 94 64 0b 	call	0x16c8	; 0x16c8 <__fixsfsi>
    1232:	6b 8f       	std	Y+27, r22	; 0x1b
    1234:	7c 8f       	std	Y+28, r23	; 0x1c
    1236:	8d 8f       	std	Y+29, r24	; 0x1d
    1238:	9e 8f       	std	Y+30, r25	; 0x1e
    123a:	4b 8d       	ldd	r20, Y+27	; 0x1b
    123c:	5c 8d       	ldd	r21, Y+28	; 0x1c
    123e:	5a 83       	std	Y+2, r21	; 0x02
    1240:	49 83       	std	Y+1, r20	; 0x01

00001242 <.Loc.297>:
    //34 cm / ms
    //340   mm / ms
    //0.34  mm / us
    //5.44 * count geeft distance in mm

    return Distance;
    1242:	89 81       	ldd	r24, Y+1	; 0x01
    1244:	9a 81       	ldd	r25, Y+2	; 0x02

00001246 <.Loc.298>:
}
    1246:	6e 96       	adiw	r28, 0x1e	; 30
    1248:	0f b6       	in	r0, 0x3f	; 63
    124a:	f8 94       	cli
    124c:	de bf       	out	0x3e, r29	; 62
    124e:	0f be       	out	0x3f, r0	; 63
    1250:	cd bf       	out	0x3d, r28	; 61
    1252:	df 91       	pop	r29
    1254:	cf 91       	pop	r28
    1256:	08 95       	ret

00001258 <TriggerPulse>:

void TriggerPulse (void){
    1258:	cf 93       	push	r28
    125a:	df 93       	push	r29
    125c:	cd b7       	in	r28, 0x3d	; 61
    125e:	de b7       	in	r29, 0x3e	; 62
    1260:	c8 54       	subi	r28, 0x48	; 72
    1262:	d1 09       	sbc	r29, r1
    1264:	0f b6       	in	r0, 0x3f	; 63
    1266:	f8 94       	cli
    1268:	de bf       	out	0x3e, r29	; 62
    126a:	0f be       	out	0x3f, r0	; 63
    126c:	cd bf       	out	0x3d, r28	; 61

0000126e <.Loc.300>:
    UltraPort |= (1<<Voorultrasoontrig);
    126e:	85 e2       	ldi	r24, 0x25	; 37
    1270:	90 e0       	ldi	r25, 0x00	; 0
    1272:	dc 01       	movw	r26, r24
    1274:	2c 91       	ld	r18, X
    1276:	85 e2       	ldi	r24, 0x25	; 37
    1278:	90 e0       	ldi	r25, 0x00	; 0

0000127a <.Loc.301>:
    127a:	20 62       	ori	r18, 0x20	; 32
    127c:	fc 01       	movw	r30, r24
    127e:	20 83       	st	Z, r18
    1280:	80 e0       	ldi	r24, 0x00	; 0
    1282:	90 e0       	ldi	r25, 0x00	; 0
    1284:	a0 e2       	ldi	r26, 0x20	; 32
    1286:	b1 e4       	ldi	r27, 0x41	; 65
    1288:	89 83       	std	Y+1, r24	; 0x01
    128a:	9a 83       	std	Y+2, r25	; 0x02
    128c:	ab 83       	std	Y+3, r26	; 0x03
    128e:	bc 83       	std	Y+4, r27	; 0x04

00001290 <.LBB42>:
	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint8_t __ticks;
	double __tmp2 ;
	__tmp = ((F_CPU) / 3e6) * __us;
    1290:	2b ea       	ldi	r18, 0xAB	; 171
    1292:	3a ea       	ldi	r19, 0xAA	; 170
    1294:	4a ea       	ldi	r20, 0xAA	; 170
    1296:	50 e4       	ldi	r21, 0x40	; 64
    1298:	69 81       	ldd	r22, Y+1	; 0x01
    129a:	7a 81       	ldd	r23, Y+2	; 0x02
    129c:	8b 81       	ldd	r24, Y+3	; 0x03
    129e:	9c 81       	ldd	r25, Y+4	; 0x04
    12a0:	0e 94 51 0c 	call	0x18a2	; 0x18a2 <__mulsf3>
    12a4:	6d a3       	std	Y+37, r22	; 0x25
    12a6:	7e a3       	std	Y+38, r23	; 0x26
    12a8:	8f a3       	std	Y+39, r24	; 0x27
    12aa:	98 a7       	std	Y+40, r25	; 0x28
    12ac:	8d a1       	ldd	r24, Y+37	; 0x25
    12ae:	9e a1       	ldd	r25, Y+38	; 0x26
    12b0:	af a1       	ldd	r26, Y+39	; 0x27
    12b2:	b8 a5       	ldd	r27, Y+40	; 0x28
    12b4:	8d 83       	std	Y+5, r24	; 0x05
    12b6:	9e 83       	std	Y+6, r25	; 0x06
    12b8:	af 83       	std	Y+7, r26	; 0x07
    12ba:	b8 87       	std	Y+8, r27	; 0x08

000012bc <.Loc.303>:
	__tmp2 = ((F_CPU) / 4e6) * __us;
    12bc:	20 e0       	ldi	r18, 0x00	; 0
    12be:	30 e0       	ldi	r19, 0x00	; 0
    12c0:	40 e8       	ldi	r20, 0x80	; 128
    12c2:	50 e4       	ldi	r21, 0x40	; 64
    12c4:	69 81       	ldd	r22, Y+1	; 0x01
    12c6:	7a 81       	ldd	r23, Y+2	; 0x02
    12c8:	8b 81       	ldd	r24, Y+3	; 0x03
    12ca:	9c 81       	ldd	r25, Y+4	; 0x04
    12cc:	0e 94 51 0c 	call	0x18a2	; 0x18a2 <__mulsf3>
    12d0:	69 a7       	std	Y+41, r22	; 0x29
    12d2:	7a a7       	std	Y+42, r23	; 0x2a
    12d4:	8b a7       	std	Y+43, r24	; 0x2b
    12d6:	9c a7       	std	Y+44, r25	; 0x2c
    12d8:	89 a5       	ldd	r24, Y+41	; 0x29
    12da:	9a a5       	ldd	r25, Y+42	; 0x2a
    12dc:	ab a5       	ldd	r26, Y+43	; 0x2b
    12de:	bc a5       	ldd	r27, Y+44	; 0x2c
    12e0:	89 87       	std	Y+9, r24	; 0x09
    12e2:	9a 87       	std	Y+10, r25	; 0x0a
    12e4:	ab 87       	std	Y+11, r26	; 0x0b
    12e6:	bc 87       	std	Y+12, r27	; 0x0c

000012e8 <.Loc.304>:
	if (__tmp < 1.0)
    12e8:	20 e0       	ldi	r18, 0x00	; 0
    12ea:	30 e0       	ldi	r19, 0x00	; 0
    12ec:	40 e8       	ldi	r20, 0x80	; 128
    12ee:	5f e3       	ldi	r21, 0x3F	; 63
    12f0:	6d 81       	ldd	r22, Y+5	; 0x05
    12f2:	7e 81       	ldd	r23, Y+6	; 0x06
    12f4:	8f 81       	ldd	r24, Y+7	; 0x07
    12f6:	98 85       	ldd	r25, Y+8	; 0x08
    12f8:	0e 94 ed 0a 	call	0x15da	; 0x15da <__cmpsf2>
    12fc:	88 23       	and	r24, r24
    12fe:	1c f4       	brge	.+6      	; 0x1306 <.L89>

00001300 <.Loc.305>:
		__ticks = 1;
    1300:	81 e0       	ldi	r24, 0x01	; 1
    1302:	8d 87       	std	Y+13, r24	; 0x0d
    1304:	e8 c0       	rjmp	.+464    	; 0x14d6 <.L70>

00001306 <.L89>:
	else if (__tmp2 > 65535)
    1306:	20 e0       	ldi	r18, 0x00	; 0
    1308:	3f ef       	ldi	r19, 0xFF	; 255
    130a:	4f e7       	ldi	r20, 0x7F	; 127
    130c:	57 e4       	ldi	r21, 0x47	; 71
    130e:	69 85       	ldd	r22, Y+9	; 0x09
    1310:	7a 85       	ldd	r23, Y+10	; 0x0a
    1312:	8b 85       	ldd	r24, Y+11	; 0x0b
    1314:	9c 85       	ldd	r25, Y+12	; 0x0c
    1316:	0e 94 4c 0c 	call	0x1898	; 0x1898 <__gesf2>
    131a:	88 23       	and	r24, r24
    131c:	09 f0       	breq	.+2      	; 0x1320 <L0^A>

0000131e <L0^A>:
    131e:	0c f4       	brge	.+2      	; 0x1322 <.Loc.307>

00001320 <L0^A>:
    1320:	9f c0       	rjmp	.+318    	; 0x1460 <.L90>

00001322 <.Loc.307>:
	{
		_delay_ms(__us / 1000.0);
    1322:	20 e0       	ldi	r18, 0x00	; 0
    1324:	30 e0       	ldi	r19, 0x00	; 0
    1326:	4a e7       	ldi	r20, 0x7A	; 122
    1328:	54 e4       	ldi	r21, 0x44	; 68
    132a:	69 81       	ldd	r22, Y+1	; 0x01
    132c:	7a 81       	ldd	r23, Y+2	; 0x02
    132e:	8b 81       	ldd	r24, Y+3	; 0x03
    1330:	9c 81       	ldd	r25, Y+4	; 0x04
    1332:	0e 94 f2 0a 	call	0x15e4	; 0x15e4 <__divsf3>
    1336:	6d a7       	std	Y+45, r22	; 0x2d
    1338:	7e a7       	std	Y+46, r23	; 0x2e
    133a:	8f a7       	std	Y+47, r24	; 0x2f
    133c:	98 ab       	std	Y+48, r25	; 0x30
    133e:	8d a5       	ldd	r24, Y+45	; 0x2d
    1340:	9e a5       	ldd	r25, Y+46	; 0x2e
    1342:	af a5       	ldd	r26, Y+47	; 0x2f
    1344:	b8 a9       	ldd	r27, Y+48	; 0x30
    1346:	8e 87       	std	Y+14, r24	; 0x0e
    1348:	9f 87       	std	Y+15, r25	; 0x0f
    134a:	a8 8b       	std	Y+16, r26	; 0x10
    134c:	b9 8b       	std	Y+17, r27	; 0x11

0000134e <.LBB44>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    134e:	20 e0       	ldi	r18, 0x00	; 0
    1350:	30 e0       	ldi	r19, 0x00	; 0
    1352:	4a e7       	ldi	r20, 0x7A	; 122
    1354:	55 e4       	ldi	r21, 0x45	; 69
    1356:	6e 85       	ldd	r22, Y+14	; 0x0e
    1358:	7f 85       	ldd	r23, Y+15	; 0x0f
    135a:	88 89       	ldd	r24, Y+16	; 0x10
    135c:	99 89       	ldd	r25, Y+17	; 0x11
    135e:	0e 94 51 0c 	call	0x18a2	; 0x18a2 <__mulsf3>
    1362:	69 ab       	std	Y+49, r22	; 0x31
    1364:	7a ab       	std	Y+50, r23	; 0x32
    1366:	8b ab       	std	Y+51, r24	; 0x33
    1368:	9c ab       	std	Y+52, r25	; 0x34
    136a:	89 a9       	ldd	r24, Y+49	; 0x31
    136c:	9a a9       	ldd	r25, Y+50	; 0x32
    136e:	ab a9       	ldd	r26, Y+51	; 0x33
    1370:	bc a9       	ldd	r27, Y+52	; 0x34
    1372:	8a 8b       	std	Y+18, r24	; 0x12
    1374:	9b 8b       	std	Y+19, r25	; 0x13
    1376:	ac 8b       	std	Y+20, r26	; 0x14
    1378:	bd 8b       	std	Y+21, r27	; 0x15

0000137a <.Loc.309>:
	if (__tmp < 1.0)
    137a:	20 e0       	ldi	r18, 0x00	; 0
    137c:	30 e0       	ldi	r19, 0x00	; 0
    137e:	40 e8       	ldi	r20, 0x80	; 128
    1380:	5f e3       	ldi	r21, 0x3F	; 63
    1382:	6a 89       	ldd	r22, Y+18	; 0x12
    1384:	7b 89       	ldd	r23, Y+19	; 0x13
    1386:	8c 89       	ldd	r24, Y+20	; 0x14
    1388:	9d 89       	ldd	r25, Y+21	; 0x15
    138a:	0e 94 ed 0a 	call	0x15da	; 0x15da <__cmpsf2>
    138e:	88 23       	and	r24, r24
    1390:	2c f4       	brge	.+10     	; 0x139c <.L91>

00001392 <.Loc.310>:
		__ticks = 1;
    1392:	81 e0       	ldi	r24, 0x01	; 1
    1394:	90 e0       	ldi	r25, 0x00	; 0
    1396:	9f 8b       	std	Y+23, r25	; 0x17
    1398:	8e 8b       	std	Y+22, r24	; 0x16
    139a:	57 c0       	rjmp	.+174    	; 0x144a <.L75>

0000139c <.L91>:
	else if (__tmp > 65535)
    139c:	20 e0       	ldi	r18, 0x00	; 0
    139e:	3f ef       	ldi	r19, 0xFF	; 255
    13a0:	4f e7       	ldi	r20, 0x7F	; 127
    13a2:	57 e4       	ldi	r21, 0x47	; 71
    13a4:	6a 89       	ldd	r22, Y+18	; 0x12
    13a6:	7b 89       	ldd	r23, Y+19	; 0x13
    13a8:	8c 89       	ldd	r24, Y+20	; 0x14
    13aa:	9d 89       	ldd	r25, Y+21	; 0x15
    13ac:	0e 94 4c 0c 	call	0x1898	; 0x1898 <__gesf2>
    13b0:	88 23       	and	r24, r24
    13b2:	d9 f1       	breq	.+118    	; 0x142a <.L92>
    13b4:	d4 f1       	brlt	.+116    	; 0x142a <.L92>

000013b6 <.Loc.312>:
		__ticks = (uint16_t) (__ms * 10.0);
    13b6:	20 e0       	ldi	r18, 0x00	; 0
    13b8:	30 e0       	ldi	r19, 0x00	; 0
    13ba:	40 e2       	ldi	r20, 0x20	; 32
    13bc:	51 e4       	ldi	r21, 0x41	; 65
    13be:	6e 85       	ldd	r22, Y+14	; 0x0e
    13c0:	7f 85       	ldd	r23, Y+15	; 0x0f
    13c2:	88 89       	ldd	r24, Y+16	; 0x10
    13c4:	99 89       	ldd	r25, Y+17	; 0x11
    13c6:	0e 94 51 0c 	call	0x18a2	; 0x18a2 <__mulsf3>
    13ca:	6d ab       	std	Y+53, r22	; 0x35
    13cc:	7e ab       	std	Y+54, r23	; 0x36
    13ce:	8f ab       	std	Y+55, r24	; 0x37
    13d0:	98 af       	std	Y+56, r25	; 0x38
    13d2:	8d a9       	ldd	r24, Y+53	; 0x35
    13d4:	9e a9       	ldd	r25, Y+54	; 0x36
    13d6:	af a9       	ldd	r26, Y+55	; 0x37
    13d8:	b8 ad       	ldd	r27, Y+56	; 0x38
    13da:	89 a3       	std	Y+33, r24	; 0x21
    13dc:	9a a3       	std	Y+34, r25	; 0x22
    13de:	ab a3       	std	Y+35, r26	; 0x23
    13e0:	bc a3       	std	Y+36, r27	; 0x24

000013e2 <.Loc.313>:
    13e2:	69 a1       	ldd	r22, Y+33	; 0x21
    13e4:	7a a1       	ldd	r23, Y+34	; 0x22
    13e6:	8b a1       	ldd	r24, Y+35	; 0x23
    13e8:	9c a1       	ldd	r25, Y+36	; 0x24
    13ea:	0e 94 6b 0b 	call	0x16d6	; 0x16d6 <__fixunssfsi>
    13ee:	69 af       	std	Y+57, r22	; 0x39
    13f0:	7a af       	std	Y+58, r23	; 0x3a
    13f2:	8b af       	std	Y+59, r24	; 0x3b
    13f4:	9c af       	std	Y+60, r25	; 0x3c
    13f6:	a9 ad       	ldd	r26, Y+57	; 0x39
    13f8:	ba ad       	ldd	r27, Y+58	; 0x3a
    13fa:	bf 8b       	std	Y+23, r27	; 0x17
    13fc:	ae 8b       	std	Y+22, r26	; 0x16

000013fe <.Loc.314>:
		while(__ticks)
    13fe:	10 c0       	rjmp	.+32     	; 0x1420 <.L78>

00001400 <.L79>:
    1400:	80 e9       	ldi	r24, 0x90	; 144
    1402:	91 e0       	ldi	r25, 0x01	; 1
    1404:	99 8f       	std	Y+25, r25	; 0x19
    1406:	88 8f       	std	Y+24, r24	; 0x18

00001408 <.LBB46>:
    1408:	88 8d       	ldd	r24, Y+24	; 0x18
    140a:	99 8d       	ldd	r25, Y+25	; 0x19

0000140c <.L1^B3>:
    140c:	01 97       	sbiw	r24, 0x01	; 1
    140e:	f1 f7       	brne	.-4      	; 0x140c <.L1^B3>
    1410:	99 8f       	std	Y+25, r25	; 0x19
    1412:	88 8f       	std	Y+24, r24	; 0x18

00001414 <.Loc.316>:
	...

00001416 <.LBE46>:
			__ticks --;
    1416:	8e 89       	ldd	r24, Y+22	; 0x16
    1418:	9f 89       	ldd	r25, Y+23	; 0x17
    141a:	01 97       	sbiw	r24, 0x01	; 1
    141c:	9f 8b       	std	Y+23, r25	; 0x17
    141e:	8e 8b       	std	Y+22, r24	; 0x16

00001420 <.L78>:
		while(__ticks)
    1420:	8e 89       	ldd	r24, Y+22	; 0x16
    1422:	9f 89       	ldd	r25, Y+23	; 0x17
    1424:	00 97       	sbiw	r24, 0x00	; 0
    1426:	61 f7       	brne	.-40     	; 0x1400 <.L79>

00001428 <.Loc.319>:
		return;
    1428:	56 c0       	rjmp	.+172    	; 0x14d6 <.L70>

0000142a <.L92>:
		__ticks = (uint16_t)__tmp;
    142a:	6a 89       	ldd	r22, Y+18	; 0x12
    142c:	7b 89       	ldd	r23, Y+19	; 0x13
    142e:	8c 89       	ldd	r24, Y+20	; 0x14
    1430:	9d 89       	ldd	r25, Y+21	; 0x15
    1432:	0e 94 6b 0b 	call	0x16d6	; 0x16d6 <__fixunssfsi>
    1436:	21 96       	adiw	r28, 0x01	; 1
    1438:	6c af       	std	Y+60, r22	; 0x3c
    143a:	7d af       	std	Y+61, r23	; 0x3d
    143c:	8e af       	std	Y+62, r24	; 0x3e
    143e:	9f af       	std	Y+63, r25	; 0x3f
    1440:	21 97       	sbiw	r28, 0x01	; 1
    1442:	ed ad       	ldd	r30, Y+61	; 0x3d
    1444:	fe ad       	ldd	r31, Y+62	; 0x3e
    1446:	ff 8b       	std	Y+23, r31	; 0x17
    1448:	ee 8b       	std	Y+22, r30	; 0x16

0000144a <.L75>:
    144a:	8e 89       	ldd	r24, Y+22	; 0x16
    144c:	9f 89       	ldd	r25, Y+23	; 0x17
    144e:	9b 8f       	std	Y+27, r25	; 0x1b
    1450:	8a 8f       	std	Y+26, r24	; 0x1a

00001452 <.LBB48>:
    1452:	8a 8d       	ldd	r24, Y+26	; 0x1a
    1454:	9b 8d       	ldd	r25, Y+27	; 0x1b

00001456 <.L1^B4>:
    1456:	01 97       	sbiw	r24, 0x01	; 1
    1458:	f1 f7       	brne	.-4      	; 0x1456 <.L1^B4>
    145a:	9b 8f       	std	Y+27, r25	; 0x1b
    145c:	8a 8f       	std	Y+26, r24	; 0x1a

0000145e <.Loc.322>:
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
#endif /* __AVR_TINY__ */
}
    145e:	3b c0       	rjmp	.+118    	; 0x14d6 <.L70>

00001460 <.L90>:
	}
	else if (__tmp > 255)
    1460:	20 e0       	ldi	r18, 0x00	; 0
    1462:	30 e0       	ldi	r19, 0x00	; 0
    1464:	4f e7       	ldi	r20, 0x7F	; 127
    1466:	53 e4       	ldi	r21, 0x43	; 67
    1468:	6d 81       	ldd	r22, Y+5	; 0x05
    146a:	7e 81       	ldd	r23, Y+6	; 0x06
    146c:	8f 81       	ldd	r24, Y+7	; 0x07
    146e:	98 85       	ldd	r25, Y+8	; 0x08
    1470:	0e 94 4c 0c 	call	0x1898	; 0x1898 <__gesf2>
    1474:	88 23       	and	r24, r24
    1476:	f9 f0       	breq	.+62     	; 0x14b6 <.L93>
    1478:	f4 f0       	brlt	.+60     	; 0x14b6 <.L93>

0000147a <.LBB50>:
	{
		uint16_t __ticks=(uint16_t)__tmp2;
    147a:	69 85       	ldd	r22, Y+9	; 0x09
    147c:	7a 85       	ldd	r23, Y+10	; 0x0a
    147e:	8b 85       	ldd	r24, Y+11	; 0x0b
    1480:	9c 85       	ldd	r25, Y+12	; 0x0c
    1482:	0e 94 6b 0b 	call	0x16d6	; 0x16d6 <__fixunssfsi>
    1486:	25 96       	adiw	r28, 0x05	; 5
    1488:	6c af       	std	Y+60, r22	; 0x3c
    148a:	7d af       	std	Y+61, r23	; 0x3d
    148c:	8e af       	std	Y+62, r24	; 0x3e
    148e:	9f af       	std	Y+63, r25	; 0x3f
    1490:	25 97       	sbiw	r28, 0x05	; 5
    1492:	23 96       	adiw	r28, 0x03	; 3
    1494:	8e ad       	ldd	r24, Y+62	; 0x3e
    1496:	9f ad       	ldd	r25, Y+63	; 0x3f
    1498:	23 97       	sbiw	r28, 0x03	; 3
    149a:	9d 8f       	std	Y+29, r25	; 0x1d
    149c:	8c 8f       	std	Y+28, r24	; 0x1c
    149e:	8c 8d       	ldd	r24, Y+28	; 0x1c
    14a0:	9d 8d       	ldd	r25, Y+29	; 0x1d
    14a2:	9f 8f       	std	Y+31, r25	; 0x1f
    14a4:	8e 8f       	std	Y+30, r24	; 0x1e

000014a6 <.LBB51>:
	__asm__ volatile (
    14a6:	8e 8d       	ldd	r24, Y+30	; 0x1e
    14a8:	9f 8d       	ldd	r25, Y+31	; 0x1f

000014aa <.L1^B5>:
    14aa:	01 97       	sbiw	r24, 0x01	; 1
    14ac:	f1 f7       	brne	.-4      	; 0x14aa <.L1^B5>
    14ae:	9f 8f       	std	Y+31, r25	; 0x1f
    14b0:	8e 8f       	std	Y+30, r24	; 0x1e

000014b2 <.Loc.326>:
	...

000014b4 <.LBE51>:
		_delay_loop_2(__ticks);
		return;
    14b4:	17 c0       	rjmp	.+46     	; 0x14e4 <.L83>

000014b6 <.L93>:
	}
	else
		__ticks = (uint8_t)__tmp;
    14b6:	6d 81       	ldd	r22, Y+5	; 0x05
    14b8:	7e 81       	ldd	r23, Y+6	; 0x06
    14ba:	8f 81       	ldd	r24, Y+7	; 0x07
    14bc:	98 85       	ldd	r25, Y+8	; 0x08
    14be:	0e 94 6b 0b 	call	0x16d6	; 0x16d6 <__fixunssfsi>
    14c2:	29 96       	adiw	r28, 0x09	; 9
    14c4:	6c af       	std	Y+60, r22	; 0x3c
    14c6:	7d af       	std	Y+61, r23	; 0x3d
    14c8:	8e af       	std	Y+62, r24	; 0x3e
    14ca:	9f af       	std	Y+63, r25	; 0x3f
    14cc:	29 97       	sbiw	r28, 0x09	; 9
    14ce:	26 96       	adiw	r28, 0x06	; 6
    14d0:	9f ad       	ldd	r25, Y+63	; 0x3f
    14d2:	26 97       	sbiw	r28, 0x06	; 6
    14d4:	9d 87       	std	Y+13, r25	; 0x0d

000014d6 <.L70>:
    14d6:	8d 85       	ldd	r24, Y+13	; 0x0d
    14d8:	88 a3       	std	Y+32, r24	; 0x20

000014da <.LBB53>:
	__asm__ volatile (
    14da:	88 a1       	ldd	r24, Y+32	; 0x20

000014dc <.L1^B6>:
    14dc:	8a 95       	dec	r24
    14de:	f1 f7       	brne	.-4      	; 0x14dc <.L1^B6>
    14e0:	88 a3       	std	Y+32, r24	; 0x20

000014e2 <.Loc.330>:
	...

000014e4 <.L83>:
    _delay_us(10);
    UltraPort &= (~(1<<Voorultrasoontrig));
    14e4:	85 e2       	ldi	r24, 0x25	; 37
    14e6:	90 e0       	ldi	r25, 0x00	; 0
    14e8:	dc 01       	movw	r26, r24
    14ea:	2c 91       	ld	r18, X

000014ec <.Loc.332>:
    14ec:	85 e2       	ldi	r24, 0x25	; 37
    14ee:	90 e0       	ldi	r25, 0x00	; 0

000014f0 <.Loc.333>:
    14f0:	2f 7d       	andi	r18, 0xDF	; 223
    14f2:	fc 01       	movw	r30, r24
    14f4:	20 83       	st	Z, r18

000014f6 <.Loc.334>:
}
    14f6:	00 00       	nop
    14f8:	c8 5b       	subi	r28, 0xB8	; 184
    14fa:	df 4f       	sbci	r29, 0xFF	; 255
    14fc:	0f b6       	in	r0, 0x3f	; 63
    14fe:	f8 94       	cli
    1500:	de bf       	out	0x3e, r29	; 62
    1502:	0f be       	out	0x3f, r0	; 63
    1504:	cd bf       	out	0x3d, r28	; 61
    1506:	df 91       	pop	r29
    1508:	cf 91       	pop	r28
    150a:	08 95       	ret

0000150c <__vector_15>:
ISR(TIMER2_OVF_vect){
    150c:	1f 92       	push	r1
    150e:	0f 92       	push	r0
    1510:	0f b6       	in	r0, 0x3f	; 63
    1512:	0f 92       	push	r0
    1514:	11 24       	eor	r1, r1
    1516:	8f 93       	push	r24
    1518:	9f 93       	push	r25
    151a:	cf 93       	push	r28
    151c:	df 93       	push	r29
    151e:	cd b7       	in	r28, 0x3d	; 61
    1520:	de b7       	in	r29, 0x3e	; 62

00001522 <.Loc.336>:
    count++;
    1522:	80 91 0e 02 	lds	r24, 0x020E	; 0x80020e <count>
    1526:	90 91 0f 02 	lds	r25, 0x020F	; 0x80020f <count+0x1>
    152a:	01 96       	adiw	r24, 0x01	; 1
    152c:	90 93 0f 02 	sts	0x020F, r25	; 0x80020f <count+0x1>
    1530:	80 93 0e 02 	sts	0x020E, r24	; 0x80020e <count>

00001534 <.Loc.337>:
}
    1534:	00 00       	nop
    1536:	df 91       	pop	r29
    1538:	cf 91       	pop	r28
    153a:	9f 91       	pop	r25
    153c:	8f 91       	pop	r24
    153e:	0f 90       	pop	r0
    1540:	0f be       	out	0x3f, r0	; 63
    1542:	0f 90       	pop	r0
    1544:	1f 90       	pop	r1
    1546:	18 95       	reti

00001548 <__divmodsi4>:
    1548:	05 2e       	mov	r0, r21

0000154a <.Loc.1>:
    154a:	97 fb       	bst	r25, 7

0000154c <.Loc.2>:
    154c:	1e f4       	brtc	.+6      	; 0x1554 <.L^B1>

0000154e <.Loc.3>:
    154e:	00 94       	com	r0

00001550 <.Loc.4>:
    1550:	0e 94 bb 0a 	call	0x1576	; 0x1576 <__negsi2>

00001554 <.L^B1>:
    1554:	57 fd       	sbrc	r21, 7

00001556 <.Loc.6>:
    1556:	07 d0       	rcall	.+14     	; 0x1566 <__divmodsi4_neg2>

00001558 <.Loc.7>:
    1558:	0e 94 cb 0a 	call	0x1596	; 0x1596 <__udivmodsi4>

0000155c <.Loc.8>:
    155c:	07 fc       	sbrc	r0, 7

0000155e <.Loc.9>:
    155e:	03 d0       	rcall	.+6      	; 0x1566 <__divmodsi4_neg2>

00001560 <.Loc.10>:
    1560:	4e f4       	brtc	.+18     	; 0x1574 <__divmodsi4_exit>

00001562 <.Loc.11>:
    1562:	0c 94 bb 0a 	jmp	0x1576	; 0x1576 <__negsi2>

00001566 <__divmodsi4_neg2>:
    1566:	50 95       	com	r21

00001568 <.Loc.13>:
    1568:	40 95       	com	r20

0000156a <.Loc.14>:
    156a:	30 95       	com	r19

0000156c <.Loc.15>:
    156c:	21 95       	neg	r18

0000156e <.Loc.16>:
    156e:	3f 4f       	sbci	r19, 0xFF	; 255

00001570 <.Loc.17>:
    1570:	4f 4f       	sbci	r20, 0xFF	; 255

00001572 <.Loc.18>:
    1572:	5f 4f       	sbci	r21, 0xFF	; 255

00001574 <__divmodsi4_exit>:
    1574:	08 95       	ret

00001576 <__negsi2>:
    1576:	90 95       	com	r25
    1578:	80 95       	com	r24
    157a:	70 95       	com	r23
    157c:	61 95       	neg	r22
    157e:	7f 4f       	sbci	r23, 0xFF	; 255
    1580:	8f 4f       	sbci	r24, 0xFF	; 255
    1582:	9f 4f       	sbci	r25, 0xFF	; 255

00001584 <.Loc.1>:
    1584:	08 95       	ret

00001586 <__tablejump2__>:
    1586:	ee 0f       	add	r30, r30

00001588 <.Loc.1>:
    1588:	ff 1f       	adc	r31, r31

0000158a <.Loc.2>:
    158a:	88 1f       	adc	r24, r24

0000158c <.Loc.3>:
    158c:	8b bf       	out	0x3b, r24	; 59

0000158e <.Loc.4>:
    158e:	07 90       	elpm	r0, Z+

00001590 <.Loc.5>:
    1590:	f6 91       	elpm	r31, Z

00001592 <.Loc.6>:
    1592:	e0 2d       	mov	r30, r0

00001594 <.Loc.7>:
    1594:	19 94       	eijmp

00001596 <__udivmodsi4>:
    1596:	a1 e2       	ldi	r26, 0x21	; 33

00001598 <.Loc.1>:
    1598:	1a 2e       	mov	r1, r26

0000159a <.Loc.2>:
    159a:	aa 1b       	sub	r26, r26

0000159c <.Loc.3>:
    159c:	bb 1b       	sub	r27, r27

0000159e <.Loc.4>:
    159e:	fd 01       	movw	r30, r26

000015a0 <.Loc.5>:
    15a0:	0d c0       	rjmp	.+26     	; 0x15bc <__udivmodsi4_ep>

000015a2 <__udivmodsi4_loop>:
    15a2:	aa 1f       	adc	r26, r26

000015a4 <.Loc.7>:
    15a4:	bb 1f       	adc	r27, r27

000015a6 <.Loc.8>:
    15a6:	ee 1f       	adc	r30, r30

000015a8 <.Loc.9>:
    15a8:	ff 1f       	adc	r31, r31

000015aa <.Loc.10>:
    15aa:	a2 17       	cp	r26, r18

000015ac <.Loc.11>:
    15ac:	b3 07       	cpc	r27, r19

000015ae <.Loc.12>:
    15ae:	e4 07       	cpc	r30, r20

000015b0 <.Loc.13>:
    15b0:	f5 07       	cpc	r31, r21

000015b2 <.Loc.14>:
    15b2:	20 f0       	brcs	.+8      	; 0x15bc <__udivmodsi4_ep>

000015b4 <.Loc.15>:
    15b4:	a2 1b       	sub	r26, r18

000015b6 <.Loc.16>:
    15b6:	b3 0b       	sbc	r27, r19

000015b8 <.Loc.17>:
    15b8:	e4 0b       	sbc	r30, r20

000015ba <.Loc.18>:
    15ba:	f5 0b       	sbc	r31, r21

000015bc <__udivmodsi4_ep>:
    15bc:	66 1f       	adc	r22, r22

000015be <.Loc.20>:
    15be:	77 1f       	adc	r23, r23

000015c0 <.Loc.21>:
    15c0:	88 1f       	adc	r24, r24

000015c2 <.Loc.22>:
    15c2:	99 1f       	adc	r25, r25

000015c4 <.Loc.23>:
    15c4:	1a 94       	dec	r1

000015c6 <.Loc.24>:
    15c6:	69 f7       	brne	.-38     	; 0x15a2 <__udivmodsi4_loop>

000015c8 <.Loc.25>:
    15c8:	60 95       	com	r22

000015ca <.Loc.26>:
    15ca:	70 95       	com	r23

000015cc <.Loc.27>:
    15cc:	80 95       	com	r24

000015ce <.Loc.28>:
    15ce:	90 95       	com	r25

000015d0 <.Loc.29>:
    15d0:	9b 01       	movw	r18, r22

000015d2 <.Loc.30>:
    15d2:	ac 01       	movw	r20, r24

000015d4 <.Loc.31>:
    15d4:	bd 01       	movw	r22, r26

000015d6 <.Loc.32>:
    15d6:	cf 01       	movw	r24, r30

000015d8 <.Loc.33>:
    15d8:	08 95       	ret

000015da <__cmpsf2>:
    15da:	0e 94 d7 0b 	call	0x17ae	; 0x17ae <__fp_cmp>
    15de:	08 f4       	brcc	.+2      	; 0x15e2 <.L1^B1>
    15e0:	81 e0       	ldi	r24, 0x01	; 1

000015e2 <.L1^B1>:
    15e2:	08 95       	ret

000015e4 <__divsf3>:
    15e4:	0e 94 06 0b 	call	0x160c	; 0x160c <__divsf3x>
    15e8:	0c 94 12 0c 	jmp	0x1824	; 0x1824 <__fp_round>

000015ec <.L^B1>:
    15ec:	0e 94 0b 0c 	call	0x1816	; 0x1816 <__fp_pscB>
    15f0:	58 f0       	brcs	.+22     	; 0x1608 <.L_nan>
    15f2:	0e 94 04 0c 	call	0x1808	; 0x1808 <__fp_pscA>
    15f6:	40 f0       	brcs	.+16     	; 0x1608 <.L_nan>
    15f8:	29 f4       	brne	.+10     	; 0x1604 <.L_zr>
    15fa:	5f 3f       	cpi	r21, 0xFF	; 255
    15fc:	29 f0       	breq	.+10     	; 0x1608 <.L_nan>

000015fe <.L_inf>:
    15fe:	0c 94 fb 0b 	jmp	0x17f6	; 0x17f6 <__fp_inf>

00001602 <.L1^B1>:
    1602:	51 11       	cpse	r21, r1

00001604 <.L_zr>:
    1604:	0c 94 46 0c 	jmp	0x188c	; 0x188c <__fp_szero>

00001608 <.L_nan>:
    1608:	0c 94 01 0c 	jmp	0x1802	; 0x1802 <__fp_nan>

0000160c <__divsf3x>:
    160c:	0e 94 23 0c 	call	0x1846	; 0x1846 <__fp_split3>
    1610:	68 f3       	brcs	.-38     	; 0x15ec <.L^B1>

00001612 <__divsf3_pse>:
    1612:	99 23       	and	r25, r25
    1614:	b1 f3       	breq	.-20     	; 0x1602 <.L1^B1>
    1616:	55 23       	and	r21, r21
    1618:	91 f3       	breq	.-28     	; 0x15fe <.L_inf>
    161a:	95 1b       	sub	r25, r21
    161c:	55 0b       	sbc	r21, r21
    161e:	bb 27       	eor	r27, r27
    1620:	aa 27       	eor	r26, r26

00001622 <.L2^B1>:
    1622:	62 17       	cp	r22, r18
    1624:	73 07       	cpc	r23, r19
    1626:	84 07       	cpc	r24, r20
    1628:	38 f0       	brcs	.+14     	; 0x1638 <.L3^B1>
    162a:	9f 5f       	subi	r25, 0xFF	; 255
    162c:	5f 4f       	sbci	r21, 0xFF	; 255
    162e:	22 0f       	add	r18, r18
    1630:	33 1f       	adc	r19, r19
    1632:	44 1f       	adc	r20, r20
    1634:	aa 1f       	adc	r26, r26
    1636:	a9 f3       	breq	.-22     	; 0x1622 <.L2^B1>

00001638 <.L3^B1>:
    1638:	35 d0       	rcall	.+106    	; 0x16a4 <.L_div>
    163a:	0e 2e       	mov	r0, r30
    163c:	3a f0       	brmi	.+14     	; 0x164c <.L5^B1>

0000163e <.L4^B1>:
    163e:	e0 e8       	ldi	r30, 0x80	; 128
    1640:	32 d0       	rcall	.+100    	; 0x16a6 <.L_div1>
    1642:	91 50       	subi	r25, 0x01	; 1
    1644:	50 40       	sbci	r21, 0x00	; 0
    1646:	e6 95       	lsr	r30
    1648:	00 1c       	adc	r0, r0
    164a:	ca f7       	brpl	.-14     	; 0x163e <.L4^B1>

0000164c <.L5^B1>:
    164c:	2b d0       	rcall	.+86     	; 0x16a4 <.L_div>
    164e:	fe 2f       	mov	r31, r30
    1650:	29 d0       	rcall	.+82     	; 0x16a4 <.L_div>
    1652:	66 0f       	add	r22, r22
    1654:	77 1f       	adc	r23, r23
    1656:	88 1f       	adc	r24, r24
    1658:	bb 1f       	adc	r27, r27
    165a:	26 17       	cp	r18, r22
    165c:	37 07       	cpc	r19, r23
    165e:	48 07       	cpc	r20, r24
    1660:	ab 07       	cpc	r26, r27
    1662:	b0 e8       	ldi	r27, 0x80	; 128
    1664:	09 f0       	breq	.+2      	; 0x1668 <.L4^B2>
    1666:	bb 0b       	sbc	r27, r27

00001668 <.L4^B2>:
    1668:	80 2d       	mov	r24, r0
    166a:	bf 01       	movw	r22, r30
    166c:	ff 27       	eor	r31, r31
    166e:	93 58       	subi	r25, 0x83	; 131
    1670:	5f 4f       	sbci	r21, 0xFF	; 255
    1672:	3a f0       	brmi	.+14     	; 0x1682 <.L13^B1>
    1674:	9e 3f       	cpi	r25, 0xFE	; 254
    1676:	51 05       	cpc	r21, r1
    1678:	78 f0       	brcs	.+30     	; 0x1698 <.L15^B1>
    167a:	0c 94 fb 0b 	jmp	0x17f6	; 0x17f6 <__fp_inf>

0000167e <.L12^B1>:
    167e:	0c 94 46 0c 	jmp	0x188c	; 0x188c <__fp_szero>

00001682 <.L13^B1>:
    1682:	5f 3f       	cpi	r21, 0xFF	; 255
    1684:	e4 f3       	brlt	.-8      	; 0x167e <.L12^B1>
    1686:	98 3e       	cpi	r25, 0xE8	; 232
    1688:	d4 f3       	brlt	.-12     	; 0x167e <.L12^B1>

0000168a <.L14^B1>:
    168a:	86 95       	lsr	r24
    168c:	77 95       	ror	r23
    168e:	67 95       	ror	r22
    1690:	b7 95       	ror	r27
    1692:	f7 95       	ror	r31
    1694:	9f 5f       	subi	r25, 0xFF	; 255
    1696:	c9 f7       	brne	.-14     	; 0x168a <.L14^B1>

00001698 <.L15^B1>:
    1698:	88 0f       	add	r24, r24
    169a:	91 1d       	adc	r25, r1
    169c:	96 95       	lsr	r25
    169e:	87 95       	ror	r24
    16a0:	97 f9       	bld	r25, 7
    16a2:	08 95       	ret

000016a4 <.L_div>:
    16a4:	e1 e0       	ldi	r30, 0x01	; 1

000016a6 <.L_div1>:
    16a6:	66 0f       	add	r22, r22
    16a8:	77 1f       	adc	r23, r23
    16aa:	88 1f       	adc	r24, r24
    16ac:	bb 1f       	adc	r27, r27
    16ae:	62 17       	cp	r22, r18
    16b0:	73 07       	cpc	r23, r19
    16b2:	84 07       	cpc	r24, r20
    16b4:	ba 07       	cpc	r27, r26
    16b6:	20 f0       	brcs	.+8      	; 0x16c0 <.L2^B2>
    16b8:	62 1b       	sub	r22, r18
    16ba:	73 0b       	sbc	r23, r19
    16bc:	84 0b       	sbc	r24, r20
    16be:	ba 0b       	sbc	r27, r26

000016c0 <.L2^B2>:
    16c0:	ee 1f       	adc	r30, r30
    16c2:	88 f7       	brcc	.-30     	; 0x16a6 <.L_div1>
    16c4:	e0 95       	com	r30
    16c6:	08 95       	ret

000016c8 <__fixsfsi>:
    16c8:	0e 94 6b 0b 	call	0x16d6	; 0x16d6 <__fixunssfsi>
    16cc:	68 94       	set
    16ce:	b1 11       	cpse	r27, r1
    16d0:	0c 94 46 0c 	jmp	0x188c	; 0x188c <__fp_szero>
    16d4:	08 95       	ret

000016d6 <__fixunssfsi>:
    16d6:	0e 94 2b 0c 	call	0x1856	; 0x1856 <__fp_splitA>
    16da:	88 f0       	brcs	.+34     	; 0x16fe <.L_err>
    16dc:	9f 57       	subi	r25, 0x7F	; 127
    16de:	98 f0       	brcs	.+38     	; 0x1706 <.L_zr>
    16e0:	b9 2f       	mov	r27, r25
    16e2:	99 27       	eor	r25, r25
    16e4:	b7 51       	subi	r27, 0x17	; 23
    16e6:	b0 f0       	brcs	.+44     	; 0x1714 <.L4^B1>
    16e8:	e1 f0       	breq	.+56     	; 0x1722 <.L_sign>

000016ea <.L1^B1>:
    16ea:	66 0f       	add	r22, r22
    16ec:	77 1f       	adc	r23, r23
    16ee:	88 1f       	adc	r24, r24
    16f0:	99 1f       	adc	r25, r25
    16f2:	1a f0       	brmi	.+6      	; 0x16fa <.L2^B1>
    16f4:	ba 95       	dec	r27
    16f6:	c9 f7       	brne	.-14     	; 0x16ea <.L1^B1>
    16f8:	14 c0       	rjmp	.+40     	; 0x1722 <.L_sign>

000016fa <.L2^B1>:
    16fa:	b1 30       	cpi	r27, 0x01	; 1
    16fc:	91 f0       	breq	.+36     	; 0x1722 <.L_sign>

000016fe <.L_err>:
    16fe:	0e 94 45 0c 	call	0x188a	; 0x188a <__fp_zero>
    1702:	b1 e0       	ldi	r27, 0x01	; 1
    1704:	08 95       	ret

00001706 <.L_zr>:
    1706:	0c 94 45 0c 	jmp	0x188a	; 0x188a <__fp_zero>

0000170a <.L3^B1>:
    170a:	67 2f       	mov	r22, r23
    170c:	78 2f       	mov	r23, r24
    170e:	88 27       	eor	r24, r24
    1710:	b8 5f       	subi	r27, 0xF8	; 248
    1712:	39 f0       	breq	.+14     	; 0x1722 <.L_sign>

00001714 <.L4^B1>:
    1714:	b9 3f       	cpi	r27, 0xF9	; 249
    1716:	cc f3       	brlt	.-14     	; 0x170a <.L3^B1>

00001718 <.L5^B1>:
    1718:	86 95       	lsr	r24
    171a:	77 95       	ror	r23
    171c:	67 95       	ror	r22
    171e:	b3 95       	inc	r27
    1720:	d9 f7       	brne	.-10     	; 0x1718 <.L5^B1>

00001722 <.L_sign>:
    1722:	3e f4       	brtc	.+14     	; 0x1732 <.L6^B1>
    1724:	90 95       	com	r25
    1726:	80 95       	com	r24
    1728:	70 95       	com	r23
    172a:	61 95       	neg	r22
    172c:	7f 4f       	sbci	r23, 0xFF	; 255
    172e:	8f 4f       	sbci	r24, 0xFF	; 255
    1730:	9f 4f       	sbci	r25, 0xFF	; 255

00001732 <.L6^B1>:
    1732:	08 95       	ret

00001734 <__floatunsisf>:
    1734:	e8 94       	clt
    1736:	09 c0       	rjmp	.+18     	; 0x174a <.L1^B1>

00001738 <__floatsisf>:
    1738:	97 fb       	bst	r25, 7
    173a:	3e f4       	brtc	.+14     	; 0x174a <.L1^B1>
    173c:	90 95       	com	r25
    173e:	80 95       	com	r24
    1740:	70 95       	com	r23
    1742:	61 95       	neg	r22
    1744:	7f 4f       	sbci	r23, 0xFF	; 255
    1746:	8f 4f       	sbci	r24, 0xFF	; 255
    1748:	9f 4f       	sbci	r25, 0xFF	; 255

0000174a <.L1^B1>:
    174a:	99 23       	and	r25, r25
    174c:	a9 f0       	breq	.+42     	; 0x1778 <.L4^B1>
    174e:	f9 2f       	mov	r31, r25
    1750:	96 e9       	ldi	r25, 0x96	; 150
    1752:	bb 27       	eor	r27, r27

00001754 <.L2^B1>:
    1754:	93 95       	inc	r25
    1756:	f6 95       	lsr	r31
    1758:	87 95       	ror	r24
    175a:	77 95       	ror	r23
    175c:	67 95       	ror	r22
    175e:	b7 95       	ror	r27
    1760:	f1 11       	cpse	r31, r1
    1762:	f8 cf       	rjmp	.-16     	; 0x1754 <.L2^B1>
    1764:	fa f4       	brpl	.+62     	; 0x17a4 <.L_pack>
    1766:	bb 0f       	add	r27, r27
    1768:	11 f4       	brne	.+4      	; 0x176e <.L3^B1>
    176a:	60 ff       	sbrs	r22, 0
    176c:	1b c0       	rjmp	.+54     	; 0x17a4 <.L_pack>

0000176e <.L3^B1>:
    176e:	6f 5f       	subi	r22, 0xFF	; 255
    1770:	7f 4f       	sbci	r23, 0xFF	; 255
    1772:	8f 4f       	sbci	r24, 0xFF	; 255
    1774:	9f 4f       	sbci	r25, 0xFF	; 255
    1776:	16 c0       	rjmp	.+44     	; 0x17a4 <.L_pack>

00001778 <.L4^B1>:
    1778:	88 23       	and	r24, r24
    177a:	11 f0       	breq	.+4      	; 0x1780 <.L5^B1>
    177c:	96 e9       	ldi	r25, 0x96	; 150
    177e:	11 c0       	rjmp	.+34     	; 0x17a2 <.L8^B1>

00001780 <.L5^B1>:
    1780:	77 23       	and	r23, r23
    1782:	21 f0       	breq	.+8      	; 0x178c <.L6^B1>
    1784:	9e e8       	ldi	r25, 0x8E	; 142
    1786:	87 2f       	mov	r24, r23
    1788:	76 2f       	mov	r23, r22
    178a:	05 c0       	rjmp	.+10     	; 0x1796 <.L7^B1>

0000178c <.L6^B1>:
    178c:	66 23       	and	r22, r22
    178e:	71 f0       	breq	.+28     	; 0x17ac <.L9^B1>
    1790:	96 e8       	ldi	r25, 0x86	; 134
    1792:	86 2f       	mov	r24, r22
    1794:	70 e0       	ldi	r23, 0x00	; 0

00001796 <.L7^B1>:
    1796:	60 e0       	ldi	r22, 0x00	; 0
    1798:	2a f0       	brmi	.+10     	; 0x17a4 <.L_pack>

0000179a <.L10^B1>:
    179a:	9a 95       	dec	r25
    179c:	66 0f       	add	r22, r22
    179e:	77 1f       	adc	r23, r23
    17a0:	88 1f       	adc	r24, r24

000017a2 <.L8^B1>:
    17a2:	da f7       	brpl	.-10     	; 0x179a <.L10^B1>

000017a4 <.L_pack>:
    17a4:	88 0f       	add	r24, r24
    17a6:	96 95       	lsr	r25
    17a8:	87 95       	ror	r24
    17aa:	97 f9       	bld	r25, 7

000017ac <.L9^B1>:
    17ac:	08 95       	ret

000017ae <__fp_cmp>:
    17ae:	99 0f       	add	r25, r25
    17b0:	00 08       	sbc	r0, r0
    17b2:	55 0f       	add	r21, r21
    17b4:	aa 0b       	sbc	r26, r26
    17b6:	e0 e8       	ldi	r30, 0x80	; 128
    17b8:	fe ef       	ldi	r31, 0xFE	; 254
    17ba:	16 16       	cp	r1, r22
    17bc:	17 06       	cpc	r1, r23
    17be:	e8 07       	cpc	r30, r24
    17c0:	f9 07       	cpc	r31, r25
    17c2:	c0 f0       	brcs	.+48     	; 0x17f4 <.L9^B1>
    17c4:	12 16       	cp	r1, r18
    17c6:	13 06       	cpc	r1, r19
    17c8:	e4 07       	cpc	r30, r20
    17ca:	f5 07       	cpc	r31, r21
    17cc:	98 f0       	brcs	.+38     	; 0x17f4 <.L9^B1>
    17ce:	62 1b       	sub	r22, r18
    17d0:	73 0b       	sbc	r23, r19
    17d2:	84 0b       	sbc	r24, r20
    17d4:	95 0b       	sbc	r25, r21
    17d6:	39 f4       	brne	.+14     	; 0x17e6 <.L1^B1>
    17d8:	0a 26       	eor	r0, r26
    17da:	61 f0       	breq	.+24     	; 0x17f4 <.L9^B1>
    17dc:	23 2b       	or	r18, r19
    17de:	24 2b       	or	r18, r20
    17e0:	25 2b       	or	r18, r21
    17e2:	21 f4       	brne	.+8      	; 0x17ec <.L2^B1>
    17e4:	08 95       	ret

000017e6 <.L1^B1>:
    17e6:	0a 26       	eor	r0, r26
    17e8:	09 f4       	brne	.+2      	; 0x17ec <.L2^B1>
    17ea:	a1 40       	sbci	r26, 0x01	; 1

000017ec <.L2^B1>:
    17ec:	a6 95       	lsr	r26
    17ee:	8f ef       	ldi	r24, 0xFF	; 255
    17f0:	81 1d       	adc	r24, r1
    17f2:	81 1d       	adc	r24, r1

000017f4 <.L9^B1>:
    17f4:	08 95       	ret

000017f6 <__fp_inf>:
    17f6:	97 f9       	bld	r25, 7
    17f8:	9f 67       	ori	r25, 0x7F	; 127
    17fa:	80 e8       	ldi	r24, 0x80	; 128
    17fc:	70 e0       	ldi	r23, 0x00	; 0
    17fe:	60 e0       	ldi	r22, 0x00	; 0
    1800:	08 95       	ret

00001802 <__fp_nan>:
    1802:	9f ef       	ldi	r25, 0xFF	; 255
    1804:	80 ec       	ldi	r24, 0xC0	; 192
    1806:	08 95       	ret

00001808 <__fp_pscA>:
    1808:	00 24       	eor	r0, r0
    180a:	0a 94       	dec	r0
    180c:	16 16       	cp	r1, r22
    180e:	17 06       	cpc	r1, r23
    1810:	18 06       	cpc	r1, r24
    1812:	09 06       	cpc	r0, r25
    1814:	08 95       	ret

00001816 <__fp_pscB>:
    1816:	00 24       	eor	r0, r0
    1818:	0a 94       	dec	r0
    181a:	12 16       	cp	r1, r18
    181c:	13 06       	cpc	r1, r19
    181e:	14 06       	cpc	r1, r20
    1820:	05 06       	cpc	r0, r21
    1822:	08 95       	ret

00001824 <__fp_round>:
    1824:	09 2e       	mov	r0, r25
    1826:	03 94       	inc	r0
    1828:	00 0c       	add	r0, r0
    182a:	11 f4       	brne	.+4      	; 0x1830 <.L1^B1>
    182c:	88 23       	and	r24, r24
    182e:	52 f0       	brmi	.+20     	; 0x1844 <.L3^B1>

00001830 <.L1^B1>:
    1830:	bb 0f       	add	r27, r27
    1832:	40 f4       	brcc	.+16     	; 0x1844 <.L3^B1>
    1834:	bf 2b       	or	r27, r31
    1836:	11 f4       	brne	.+4      	; 0x183c <.L2^B1>
    1838:	60 ff       	sbrs	r22, 0
    183a:	04 c0       	rjmp	.+8      	; 0x1844 <.L3^B1>

0000183c <.L2^B1>:
    183c:	6f 5f       	subi	r22, 0xFF	; 255
    183e:	7f 4f       	sbci	r23, 0xFF	; 255
    1840:	8f 4f       	sbci	r24, 0xFF	; 255
    1842:	9f 4f       	sbci	r25, 0xFF	; 255

00001844 <.L3^B1>:
    1844:	08 95       	ret

00001846 <__fp_split3>:
    1846:	57 fd       	sbrc	r21, 7
    1848:	90 58       	subi	r25, 0x80	; 128
    184a:	44 0f       	add	r20, r20
    184c:	55 1f       	adc	r21, r21
    184e:	59 f0       	breq	.+22     	; 0x1866 <.L4^B1>
    1850:	5f 3f       	cpi	r21, 0xFF	; 255
    1852:	71 f0       	breq	.+28     	; 0x1870 <.L5^B1>

00001854 <.L1^B1>:
    1854:	47 95       	ror	r20

00001856 <__fp_splitA>:
    1856:	88 0f       	add	r24, r24
    1858:	97 fb       	bst	r25, 7
    185a:	99 1f       	adc	r25, r25
    185c:	61 f0       	breq	.+24     	; 0x1876 <.L6^B1>
    185e:	9f 3f       	cpi	r25, 0xFF	; 255
    1860:	79 f0       	breq	.+30     	; 0x1880 <.L7^B1>

00001862 <.L3^B1>:
    1862:	87 95       	ror	r24
    1864:	08 95       	ret

00001866 <.L4^B1>:
    1866:	12 16       	cp	r1, r18
    1868:	13 06       	cpc	r1, r19
    186a:	14 06       	cpc	r1, r20
    186c:	55 1f       	adc	r21, r21
    186e:	f2 cf       	rjmp	.-28     	; 0x1854 <.L1^B1>

00001870 <.L5^B1>:
    1870:	46 95       	lsr	r20
    1872:	f1 df       	rcall	.-30     	; 0x1856 <__fp_splitA>
    1874:	08 c0       	rjmp	.+16     	; 0x1886 <.L8^B1>

00001876 <.L6^B1>:
    1876:	16 16       	cp	r1, r22
    1878:	17 06       	cpc	r1, r23
    187a:	18 06       	cpc	r1, r24
    187c:	99 1f       	adc	r25, r25
    187e:	f1 cf       	rjmp	.-30     	; 0x1862 <.L3^B1>

00001880 <.L7^B1>:
    1880:	86 95       	lsr	r24
    1882:	71 05       	cpc	r23, r1
    1884:	61 05       	cpc	r22, r1

00001886 <.L8^B1>:
    1886:	08 94       	sec
    1888:	08 95       	ret

0000188a <__fp_zero>:
    188a:	e8 94       	clt

0000188c <__fp_szero>:
    188c:	bb 27       	eor	r27, r27
    188e:	66 27       	eor	r22, r22
    1890:	77 27       	eor	r23, r23
    1892:	cb 01       	movw	r24, r22
    1894:	97 f9       	bld	r25, 7
    1896:	08 95       	ret

00001898 <__gesf2>:
    1898:	0e 94 d7 0b 	call	0x17ae	; 0x17ae <__fp_cmp>
    189c:	08 f4       	brcc	.+2      	; 0x18a0 <.L1^B1>
    189e:	8f ef       	ldi	r24, 0xFF	; 255

000018a0 <.L1^B1>:
    18a0:	08 95       	ret

000018a2 <__mulsf3>:
    18a2:	0e 94 64 0c 	call	0x18c8	; 0x18c8 <__mulsf3x>
    18a6:	0c 94 12 0c 	jmp	0x1824	; 0x1824 <__fp_round>

000018aa <.L^B1>:
    18aa:	0e 94 04 0c 	call	0x1808	; 0x1808 <__fp_pscA>
    18ae:	38 f0       	brcs	.+14     	; 0x18be <.L1^B1>
    18b0:	0e 94 0b 0c 	call	0x1816	; 0x1816 <__fp_pscB>
    18b4:	20 f0       	brcs	.+8      	; 0x18be <.L1^B1>
    18b6:	95 23       	and	r25, r21
    18b8:	11 f0       	breq	.+4      	; 0x18be <.L1^B1>
    18ba:	0c 94 fb 0b 	jmp	0x17f6	; 0x17f6 <__fp_inf>

000018be <.L1^B1>:
    18be:	0c 94 01 0c 	jmp	0x1802	; 0x1802 <__fp_nan>

000018c2 <.L2^B1>:
    18c2:	11 24       	eor	r1, r1
    18c4:	0c 94 46 0c 	jmp	0x188c	; 0x188c <__fp_szero>

000018c8 <__mulsf3x>:
    18c8:	0e 94 23 0c 	call	0x1846	; 0x1846 <__fp_split3>
    18cc:	70 f3       	brcs	.-36     	; 0x18aa <.L^B1>

000018ce <__mulsf3_pse>:
    18ce:	95 9f       	mul	r25, r21
    18d0:	c1 f3       	breq	.-16     	; 0x18c2 <.L2^B1>
    18d2:	95 0f       	add	r25, r21
    18d4:	50 e0       	ldi	r21, 0x00	; 0
    18d6:	55 1f       	adc	r21, r21
    18d8:	62 9f       	mul	r22, r18
    18da:	f0 01       	movw	r30, r0
    18dc:	72 9f       	mul	r23, r18
    18de:	bb 27       	eor	r27, r27
    18e0:	f0 0d       	add	r31, r0
    18e2:	b1 1d       	adc	r27, r1
    18e4:	63 9f       	mul	r22, r19
    18e6:	aa 27       	eor	r26, r26
    18e8:	f0 0d       	add	r31, r0
    18ea:	b1 1d       	adc	r27, r1
    18ec:	aa 1f       	adc	r26, r26
    18ee:	64 9f       	mul	r22, r20
    18f0:	66 27       	eor	r22, r22
    18f2:	b0 0d       	add	r27, r0
    18f4:	a1 1d       	adc	r26, r1
    18f6:	66 1f       	adc	r22, r22
    18f8:	82 9f       	mul	r24, r18
    18fa:	22 27       	eor	r18, r18
    18fc:	b0 0d       	add	r27, r0
    18fe:	a1 1d       	adc	r26, r1
    1900:	62 1f       	adc	r22, r18
    1902:	73 9f       	mul	r23, r19
    1904:	b0 0d       	add	r27, r0
    1906:	a1 1d       	adc	r26, r1
    1908:	62 1f       	adc	r22, r18
    190a:	83 9f       	mul	r24, r19
    190c:	a0 0d       	add	r26, r0
    190e:	61 1d       	adc	r22, r1
    1910:	22 1f       	adc	r18, r18
    1912:	74 9f       	mul	r23, r20
    1914:	33 27       	eor	r19, r19
    1916:	a0 0d       	add	r26, r0
    1918:	61 1d       	adc	r22, r1
    191a:	23 1f       	adc	r18, r19
    191c:	84 9f       	mul	r24, r20
    191e:	60 0d       	add	r22, r0
    1920:	21 1d       	adc	r18, r1
    1922:	82 2f       	mov	r24, r18
    1924:	76 2f       	mov	r23, r22
    1926:	6a 2f       	mov	r22, r26
    1928:	11 24       	eor	r1, r1
    192a:	9f 57       	subi	r25, 0x7F	; 127
    192c:	50 40       	sbci	r21, 0x00	; 0
    192e:	9a f0       	brmi	.+38     	; 0x1956 <.L13^B1>
    1930:	f1 f0       	breq	.+60     	; 0x196e <.L15^B1>

00001932 <.L10^B1>:
    1932:	88 23       	and	r24, r24
    1934:	4a f0       	brmi	.+18     	; 0x1948 <.L11^B1>
    1936:	ee 0f       	add	r30, r30
    1938:	ff 1f       	adc	r31, r31
    193a:	bb 1f       	adc	r27, r27
    193c:	66 1f       	adc	r22, r22
    193e:	77 1f       	adc	r23, r23
    1940:	88 1f       	adc	r24, r24
    1942:	91 50       	subi	r25, 0x01	; 1
    1944:	50 40       	sbci	r21, 0x00	; 0
    1946:	a9 f7       	brne	.-22     	; 0x1932 <.L10^B1>

00001948 <.L11^B1>:
    1948:	9e 3f       	cpi	r25, 0xFE	; 254
    194a:	51 05       	cpc	r21, r1
    194c:	80 f0       	brcs	.+32     	; 0x196e <.L15^B1>
    194e:	0c 94 fb 0b 	jmp	0x17f6	; 0x17f6 <__fp_inf>

00001952 <.L12^B1>:
    1952:	0c 94 46 0c 	jmp	0x188c	; 0x188c <__fp_szero>

00001956 <.L13^B1>:
    1956:	5f 3f       	cpi	r21, 0xFF	; 255
    1958:	e4 f3       	brlt	.-8      	; 0x1952 <.L12^B1>
    195a:	98 3e       	cpi	r25, 0xE8	; 232
    195c:	d4 f3       	brlt	.-12     	; 0x1952 <.L12^B1>

0000195e <.L14^B1>:
    195e:	86 95       	lsr	r24
    1960:	77 95       	ror	r23
    1962:	67 95       	ror	r22
    1964:	b7 95       	ror	r27
    1966:	f7 95       	ror	r31
    1968:	e7 95       	ror	r30
    196a:	9f 5f       	subi	r25, 0xFF	; 255
    196c:	c1 f7       	brne	.-16     	; 0x195e <.L14^B1>

0000196e <.L15^B1>:
    196e:	fe 2b       	or	r31, r30
    1970:	88 0f       	add	r24, r24
    1972:	91 1d       	adc	r25, r1
    1974:	96 95       	lsr	r25
    1976:	87 95       	ror	r24
    1978:	97 f9       	bld	r25, 7
    197a:	08 95       	ret

0000197c <_exit>:
    197c:	f8 94       	cli

0000197e <__stop_program>:
    197e:	ff cf       	rjmp	.-2      	; 0x197e <__stop_program>

00001980 <L0^A>:
    1980:	95 05       	cpc	r25, r5
    1982:	b1 05       	cpc	r27, r1
    1984:	cd 05       	cpc	r28, r13
    1986:	e3 05       	cpc	r30, r3
    1988:	0f 06       	cpc	r0, r31
    198a:	45 06       	cpc	r4, r21
    198c:	74 06       	cpc	r7, r20
    198e:	ae 06       	cpc	r10, r30
    1990:	5d 07       	cpc	r21, r29
    1992:	6a 07       	cpc	r22, r26
