
bin\Debug\Allescode.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000020  00800200  0000228a  0000233e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000228a  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000010  00800220  00800220  0000235e  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  0000235e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      00000012  00000000  00000000  00002361  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002374  2**2
                  CONTENTS, READONLY, OCTETS
  6 .debug_aranges 00000178  00000000  00000000  000023b8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_info   00001786  00000000  00000000  00002530  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_abbrev 000010b2  00000000  00000000  00003cb6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line   00001be5  00000000  00000000  00004d68  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_frame  000004a8  00000000  00000000  00006950  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_str    00000765  00000000  00000000  00006df8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_line_str 00000191  00000000  00000000  0000755d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 88 00 	jmp	0x110	; 0x110 <__ctors_end>
       4:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
       8:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
       c:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      10:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      14:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      18:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      1c:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      20:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      24:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      28:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      2c:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      30:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      34:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      38:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      3c:	0c 94 3b 0d 	jmp	0x1a76	; 0x1a76 <__vector_15>
      40:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      44:	0c 94 60 03 	jmp	0x6c0	; 0x6c0 <__vector_17>
      48:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      4c:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      50:	0c 94 35 03 	jmp	0x66a	; 0x66a <__vector_20>
      54:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      58:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      5c:	0c 94 db 03 	jmp	0x7b6	; 0x7b6 <__vector_23>
      60:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      64:	0c 94 ab 00 	jmp	0x156	; 0x156 <__vector_25>
      68:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      6c:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      70:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      74:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      78:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      7c:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      80:	0c 94 b3 03 	jmp	0x766	; 0x766 <__vector_32>
      84:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      88:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      8c:	0c 94 88 03 	jmp	0x710	; 0x710 <__vector_35>
      90:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      94:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      98:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      9c:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      a0:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      a4:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      a8:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      ac:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      b0:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      b4:	0c 94 f9 03 	jmp	0x7f2	; 0x7f2 <__vector_45>
      b8:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      bc:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      c0:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      c4:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      c8:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      cc:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      d0:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      d4:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      d8:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      dc:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>
      e0:	0c 94 a9 00 	jmp	0x152	; 0x152 <__bad_interrupt>

000000e4 <__trampolines_start>:
      e4:	0c 94 b7 05 	jmp	0xb6e	; 0xb6e <.L20>
      e8:	0c 94 80 05 	jmp	0xb00	; 0xb00 <.L21>
      ec:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <.L15>
      f0:	0c 94 26 06 	jmp	0xc4c	; 0xc4c <.L18>
      f4:	0c 94 49 05 	jmp	0xa92	; 0xa92 <.L22>
      f8:	0c 94 bf 07 	jmp	0xf7e	; 0xf7e <.L11>
      fc:	0c 94 8b 06 	jmp	0xd16	; 0xd16 <.L16>
     100:	0c 94 e8 05 	jmp	0xbd0	; 0xbd0 <.L19>
     104:	0c 94 5c 06 	jmp	0xcb8	; 0xcb8 <.L17>
     108:	0c 94 77 07 	jmp	0xeee	; 0xeee <.L13>
     10c:	0c 94 6a 07 	jmp	0xed4	; 0xed4 <.L14>

00000110 <__ctors_end>:
     110:	11 24       	eor	r1, r1
     112:	1f be       	out	0x3f, r1	; 63
     114:	cf ef       	ldi	r28, 0xFF	; 255
     116:	d1 e2       	ldi	r29, 0x21	; 33
     118:	de bf       	out	0x3e, r29	; 62
     11a:	cd bf       	out	0x3d, r28	; 61
     11c:	00 e0       	ldi	r16, 0x00	; 0
     11e:	0c bf       	out	0x3c, r16	; 60

00000120 <__do_copy_data>:
     120:	12 e0       	ldi	r17, 0x02	; 2

00000122 <.Loc.1>:
     122:	a0 e0       	ldi	r26, 0x00	; 0

00000124 <.Loc.2>:
     124:	b2 e0       	ldi	r27, 0x02	; 2

00000126 <.Loc.3>:
     126:	ea e8       	ldi	r30, 0x8A	; 138

00000128 <.Loc.4>:
     128:	f2 e2       	ldi	r31, 0x22	; 34

0000012a <.Loc.5>:
     12a:	00 e0       	ldi	r16, 0x00	; 0

0000012c <.Loc.6>:
     12c:	0b bf       	out	0x3b, r16	; 59

0000012e <.Loc.7>:
     12e:	02 c0       	rjmp	.+4      	; 0x134 <.L__do_copy_data_start>

00000130 <.L__do_copy_data_loop>:
     130:	07 90       	elpm	r0, Z+

00000132 <.Loc.9>:
     132:	0d 92       	st	X+, r0

00000134 <.L__do_copy_data_start>:
     134:	a0 32       	cpi	r26, 0x20	; 32

00000136 <.Loc.11>:
     136:	b1 07       	cpc	r27, r17

00000138 <.Loc.12>:
     138:	d9 f7       	brne	.-10     	; 0x130 <.L__do_copy_data_loop>

0000013a <__do_clear_bss>:
     13a:	22 e0       	ldi	r18, 0x02	; 2

0000013c <.Loc.1>:
     13c:	a0 e2       	ldi	r26, 0x20	; 32

0000013e <.Loc.2>:
     13e:	b2 e0       	ldi	r27, 0x02	; 2

00000140 <.Loc.3>:
     140:	01 c0       	rjmp	.+2      	; 0x144 <.Loc.5>

00000142 <.Loc.4>:
     142:	1d 92       	st	X+, r1

00000144 <.Loc.5>:
     144:	a0 33       	cpi	r26, 0x30	; 48

00000146 <.Loc.6>:
     146:	b2 07       	cpc	r27, r18

00000148 <.Loc.7>:
     148:	e1 f7       	brne	.-8      	; 0x142 <.Loc.4>

0000014a <L0^A>:
     14a:	0e 94 33 04 	call	0x866	; 0x866 <main>
     14e:	0c 94 38 11 	jmp	0x2270	; 0x2270 <_exit>

00000152 <__bad_interrupt>:
     152:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000156 <__vector_25>:
int Bluetooth_Getal = 0;//BLUETOOTH GETAL
int verandergetal = 0;//ONNODIG
int veranderandergetal = 0;//ONNODIG

ISR(USART0_RX_vect)
{
     156:	1f 92       	push	r1
     158:	0f 92       	push	r0
     15a:	0f b6       	in	r0, 0x3f	; 63
     15c:	0f 92       	push	r0
     15e:	11 24       	eor	r1, r1
     160:	0b b6       	in	r0, 0x3b	; 59
     162:	0f 92       	push	r0
     164:	8f 93       	push	r24
     166:	9f 93       	push	r25
     168:	ef 93       	push	r30
     16a:	ff 93       	push	r31
     16c:	cf 93       	push	r28
     16e:	df 93       	push	r29
     170:	cd b7       	in	r28, 0x3d	; 61
     172:	de b7       	in	r29, 0x3e	; 62

00000174 <.Loc.1>:
    Bluetooth_Getal = UDR0;
     174:	86 ec       	ldi	r24, 0xC6	; 198
     176:	90 e0       	ldi	r25, 0x00	; 0
     178:	fc 01       	movw	r30, r24
     17a:	80 81       	ld	r24, Z
     17c:	88 2f       	mov	r24, r24
     17e:	90 e0       	ldi	r25, 0x00	; 0

00000180 <.Loc.2>:
     180:	90 93 21 02 	sts	0x0221, r25	; 0x800221 <Bluetooth_Getal+0x1>
     184:	80 93 20 02 	sts	0x0220, r24	; 0x800220 <Bluetooth_Getal>

00000188 <.Loc.3>:
    if (verandergetal == 0)//ONNODIG
     188:	80 91 22 02 	lds	r24, 0x0222	; 0x800222 <verandergetal>
     18c:	90 91 23 02 	lds	r25, 0x0223	; 0x800223 <verandergetal+0x1>

00000190 <.Loc.4>:
     190:	00 97       	sbiw	r24, 0x00	; 0
     192:	51 f4       	brne	.+20     	; 0x1a8 <.L2>

00000194 <.Loc.5>:
    {//ONNODIG
        verandergetal++;//ONNODIG
     194:	80 91 22 02 	lds	r24, 0x0222	; 0x800222 <verandergetal>
     198:	90 91 23 02 	lds	r25, 0x0223	; 0x800223 <verandergetal+0x1>
     19c:	01 96       	adiw	r24, 0x01	; 1
     19e:	90 93 23 02 	sts	0x0223, r25	; 0x800223 <verandergetal+0x1>
     1a2:	80 93 22 02 	sts	0x0222, r24	; 0x800222 <verandergetal>

000001a6 <.Loc.6>:
    }//ONNODIG
    else//ONNODIG
    {//ONNODIG
        verandergetal = 0;//ONNODIG
    }//ONNODIG
}
     1a6:	04 c0       	rjmp	.+8      	; 0x1b0 <.L4>

000001a8 <.L2>:
        verandergetal = 0;//ONNODIG
     1a8:	10 92 23 02 	sts	0x0223, r1	; 0x800223 <verandergetal+0x1>
     1ac:	10 92 22 02 	sts	0x0222, r1	; 0x800222 <verandergetal>

000001b0 <.L4>:
}
     1b0:	00 00       	nop
     1b2:	df 91       	pop	r29
     1b4:	cf 91       	pop	r28
     1b6:	ff 91       	pop	r31
     1b8:	ef 91       	pop	r30
     1ba:	9f 91       	pop	r25
     1bc:	8f 91       	pop	r24
     1be:	0f 90       	pop	r0
     1c0:	0b be       	out	0x3b, r0	; 59
     1c2:	0f 90       	pop	r0
     1c4:	0f be       	out	0x3f, r0	; 63
     1c6:	0f 90       	pop	r0
     1c8:	1f 90       	pop	r1
     1ca:	18 95       	reti

000001cc <initBluetooth>:

void initBluetooth(void)
{
     1cc:	cf 93       	push	r28
     1ce:	df 93       	push	r29
     1d0:	cd b7       	in	r28, 0x3d	; 61
     1d2:	de b7       	in	r29, 0x3e	; 62

000001d4 <.Loc.10>:
    //Bluetooth
    UBRR0H = (BRC >> 8);
     1d4:	85 ec       	ldi	r24, 0xC5	; 197
     1d6:	90 e0       	ldi	r25, 0x00	; 0

000001d8 <.Loc.11>:
     1d8:	fc 01       	movw	r30, r24
     1da:	10 82       	st	Z, r1

000001dc <.Loc.12>:
    UBRR0L = BRC;
     1dc:	84 ec       	ldi	r24, 0xC4	; 196
     1de:	90 e0       	ldi	r25, 0x00	; 0

000001e0 <.Loc.13>:
     1e0:	27 e6       	ldi	r18, 0x67	; 103
     1e2:	fc 01       	movw	r30, r24
     1e4:	20 83       	st	Z, r18

000001e6 <.Loc.14>:

    UCSR0B = (1 << RXEN0) |(1 << RXCIE0) |(1 << TXEN0) | (1 << TXCIE0);
     1e6:	81 ec       	ldi	r24, 0xC1	; 193
     1e8:	90 e0       	ldi	r25, 0x00	; 0

000001ea <.Loc.15>:
     1ea:	28 ed       	ldi	r18, 0xD8	; 216
     1ec:	fc 01       	movw	r30, r24
     1ee:	20 83       	st	Z, r18

000001f0 <.Loc.16>:
    UCSR0C = (1 << UCSZ01) | (1 << UCSZ00);
     1f0:	82 ec       	ldi	r24, 0xC2	; 194
     1f2:	90 e0       	ldi	r25, 0x00	; 0

000001f4 <.Loc.17>:
     1f4:	26 e0       	ldi	r18, 0x06	; 6
     1f6:	fc 01       	movw	r30, r24
     1f8:	20 83       	st	Z, r18

000001fa <.Loc.18>:

    sei();
     1fa:	78 94       	sei

000001fc <.Loc.19>:
}
     1fc:	00 00       	nop
     1fe:	df 91       	pop	r29
     200:	cf 91       	pop	r28
     202:	08 95       	ret

00000204 <bochtrechts>:
volatile int timerteller = 0;
volatile int timertellerbak = 0;
volatile int bakvar = 0;

void bochtrechts()
{
     204:	cf 93       	push	r28
     206:	df 93       	push	r29
     208:	cd b7       	in	r28, 0x3d	; 61
     20a:	de b7       	in	r29, 0x3e	; 62

0000020c <.Loc.1>:
    PORT &= ~(1 << PIN11);
     20c:	82 e2       	ldi	r24, 0x22	; 34
     20e:	90 e0       	ldi	r25, 0x00	; 0
     210:	fc 01       	movw	r30, r24
     212:	20 81       	ld	r18, Z

00000214 <.Loc.2>:
     214:	82 e2       	ldi	r24, 0x22	; 34
     216:	90 e0       	ldi	r25, 0x00	; 0

00000218 <.Loc.3>:
     218:	2f 7b       	andi	r18, 0xBF	; 191
     21a:	fc 01       	movw	r30, r24
     21c:	20 83       	st	Z, r18

0000021e <.Loc.4>:
    PORT |= (1 << PIN12);
     21e:	82 e2       	ldi	r24, 0x22	; 34
     220:	90 e0       	ldi	r25, 0x00	; 0
     222:	fc 01       	movw	r30, r24
     224:	20 81       	ld	r18, Z
     226:	82 e2       	ldi	r24, 0x22	; 34
     228:	90 e0       	ldi	r25, 0x00	; 0

0000022a <.Loc.5>:
     22a:	20 62       	ori	r18, 0x20	; 32
     22c:	fc 01       	movw	r30, r24
     22e:	20 83       	st	Z, r18

00000230 <.Loc.6>:
    PORT &= ~(1 << PIN21);
     230:	82 e2       	ldi	r24, 0x22	; 34
     232:	90 e0       	ldi	r25, 0x00	; 0
     234:	fc 01       	movw	r30, r24
     236:	20 81       	ld	r18, Z

00000238 <.Loc.7>:
     238:	82 e2       	ldi	r24, 0x22	; 34
     23a:	90 e0       	ldi	r25, 0x00	; 0

0000023c <.Loc.8>:
     23c:	2f 7e       	andi	r18, 0xEF	; 239
     23e:	fc 01       	movw	r30, r24
     240:	20 83       	st	Z, r18

00000242 <.Loc.9>:
    PORT |= (1 << PIN22);
     242:	82 e2       	ldi	r24, 0x22	; 34
     244:	90 e0       	ldi	r25, 0x00	; 0
     246:	fc 01       	movw	r30, r24
     248:	20 81       	ld	r18, Z
     24a:	82 e2       	ldi	r24, 0x22	; 34
     24c:	90 e0       	ldi	r25, 0x00	; 0

0000024e <.Loc.10>:
     24e:	28 60       	ori	r18, 0x08	; 8
     250:	fc 01       	movw	r30, r24
     252:	20 83       	st	Z, r18

00000254 <.Loc.11>:
}
     254:	00 00       	nop
     256:	df 91       	pop	r29
     258:	cf 91       	pop	r28
     25a:	08 95       	ret

0000025c <rechtdoorrijden>:

void rechtdoorrijden()
{
     25c:	cf 93       	push	r28
     25e:	df 93       	push	r29
     260:	cd b7       	in	r28, 0x3d	; 61
     262:	de b7       	in	r29, 0x3e	; 62

00000264 <.Loc.13>:
    PORT &= ~(1 << PIN11);
     264:	82 e2       	ldi	r24, 0x22	; 34
     266:	90 e0       	ldi	r25, 0x00	; 0
     268:	fc 01       	movw	r30, r24
     26a:	20 81       	ld	r18, Z

0000026c <.Loc.14>:
     26c:	82 e2       	ldi	r24, 0x22	; 34
     26e:	90 e0       	ldi	r25, 0x00	; 0

00000270 <.Loc.15>:
     270:	2f 7b       	andi	r18, 0xBF	; 191
     272:	fc 01       	movw	r30, r24
     274:	20 83       	st	Z, r18

00000276 <.Loc.16>:
    PORT |= (1 << PIN12);
     276:	82 e2       	ldi	r24, 0x22	; 34
     278:	90 e0       	ldi	r25, 0x00	; 0
     27a:	fc 01       	movw	r30, r24
     27c:	20 81       	ld	r18, Z
     27e:	82 e2       	ldi	r24, 0x22	; 34
     280:	90 e0       	ldi	r25, 0x00	; 0

00000282 <.Loc.17>:
     282:	20 62       	ori	r18, 0x20	; 32
     284:	fc 01       	movw	r30, r24
     286:	20 83       	st	Z, r18

00000288 <.Loc.18>:
    PORT |= (1 << PIN21);
     288:	82 e2       	ldi	r24, 0x22	; 34
     28a:	90 e0       	ldi	r25, 0x00	; 0
     28c:	fc 01       	movw	r30, r24
     28e:	20 81       	ld	r18, Z
     290:	82 e2       	ldi	r24, 0x22	; 34
     292:	90 e0       	ldi	r25, 0x00	; 0

00000294 <.Loc.19>:
     294:	20 61       	ori	r18, 0x10	; 16
     296:	fc 01       	movw	r30, r24
     298:	20 83       	st	Z, r18

0000029a <.Loc.20>:
    PORT &= ~(1 << PIN22);
     29a:	82 e2       	ldi	r24, 0x22	; 34
     29c:	90 e0       	ldi	r25, 0x00	; 0
     29e:	fc 01       	movw	r30, r24
     2a0:	20 81       	ld	r18, Z

000002a2 <.Loc.21>:
     2a2:	82 e2       	ldi	r24, 0x22	; 34
     2a4:	90 e0       	ldi	r25, 0x00	; 0

000002a6 <.Loc.22>:
     2a6:	27 7f       	andi	r18, 0xF7	; 247
     2a8:	fc 01       	movw	r30, r24
     2aa:	20 83       	st	Z, r18

000002ac <.Loc.23>:
}
     2ac:	00 00       	nop
     2ae:	df 91       	pop	r29
     2b0:	cf 91       	pop	r28
     2b2:	08 95       	ret

000002b4 <achteruitrijden>:

void achteruitrijden()
{
     2b4:	cf 93       	push	r28
     2b6:	df 93       	push	r29
     2b8:	cd b7       	in	r28, 0x3d	; 61
     2ba:	de b7       	in	r29, 0x3e	; 62

000002bc <.Loc.25>:
    PORT |= (1 << PIN11);
     2bc:	82 e2       	ldi	r24, 0x22	; 34
     2be:	90 e0       	ldi	r25, 0x00	; 0
     2c0:	fc 01       	movw	r30, r24
     2c2:	20 81       	ld	r18, Z
     2c4:	82 e2       	ldi	r24, 0x22	; 34
     2c6:	90 e0       	ldi	r25, 0x00	; 0

000002c8 <.Loc.26>:
     2c8:	20 64       	ori	r18, 0x40	; 64
     2ca:	fc 01       	movw	r30, r24
     2cc:	20 83       	st	Z, r18

000002ce <.Loc.27>:
    PORT &= ~(1 << PIN12);
     2ce:	82 e2       	ldi	r24, 0x22	; 34
     2d0:	90 e0       	ldi	r25, 0x00	; 0
     2d2:	fc 01       	movw	r30, r24
     2d4:	20 81       	ld	r18, Z

000002d6 <.Loc.28>:
     2d6:	82 e2       	ldi	r24, 0x22	; 34
     2d8:	90 e0       	ldi	r25, 0x00	; 0

000002da <.Loc.29>:
     2da:	2f 7d       	andi	r18, 0xDF	; 223
     2dc:	fc 01       	movw	r30, r24
     2de:	20 83       	st	Z, r18

000002e0 <.Loc.30>:
    PORT &= ~(1 << PIN21);
     2e0:	82 e2       	ldi	r24, 0x22	; 34
     2e2:	90 e0       	ldi	r25, 0x00	; 0
     2e4:	fc 01       	movw	r30, r24
     2e6:	20 81       	ld	r18, Z

000002e8 <.Loc.31>:
     2e8:	82 e2       	ldi	r24, 0x22	; 34
     2ea:	90 e0       	ldi	r25, 0x00	; 0

000002ec <.Loc.32>:
     2ec:	2f 7e       	andi	r18, 0xEF	; 239
     2ee:	fc 01       	movw	r30, r24
     2f0:	20 83       	st	Z, r18

000002f2 <.Loc.33>:
    PORT |= (1 << PIN22);
     2f2:	82 e2       	ldi	r24, 0x22	; 34
     2f4:	90 e0       	ldi	r25, 0x00	; 0
     2f6:	fc 01       	movw	r30, r24
     2f8:	20 81       	ld	r18, Z
     2fa:	82 e2       	ldi	r24, 0x22	; 34
     2fc:	90 e0       	ldi	r25, 0x00	; 0

000002fe <.Loc.34>:
     2fe:	28 60       	ori	r18, 0x08	; 8
     300:	fc 01       	movw	r30, r24
     302:	20 83       	st	Z, r18

00000304 <.Loc.35>:
}
     304:	00 00       	nop
     306:	df 91       	pop	r29
     308:	cf 91       	pop	r28
     30a:	08 95       	ret

0000030c <naarrechtsrijden>:

void naarrechtsrijden()
{
     30c:	cf 93       	push	r28
     30e:	df 93       	push	r29
     310:	cd b7       	in	r28, 0x3d	; 61
     312:	de b7       	in	r29, 0x3e	; 62

00000314 <.Loc.37>:
    PORT &= ~(1 << PIN12);
     314:	82 e2       	ldi	r24, 0x22	; 34
     316:	90 e0       	ldi	r25, 0x00	; 0
     318:	fc 01       	movw	r30, r24
     31a:	20 81       	ld	r18, Z

0000031c <.Loc.38>:
     31c:	82 e2       	ldi	r24, 0x22	; 34
     31e:	90 e0       	ldi	r25, 0x00	; 0

00000320 <.Loc.39>:
     320:	2f 7d       	andi	r18, 0xDF	; 223
     322:	fc 01       	movw	r30, r24
     324:	20 83       	st	Z, r18

00000326 <.Loc.40>:
    PORT |= (1 << PIN11);
     326:	82 e2       	ldi	r24, 0x22	; 34
     328:	90 e0       	ldi	r25, 0x00	; 0
     32a:	fc 01       	movw	r30, r24
     32c:	20 81       	ld	r18, Z
     32e:	82 e2       	ldi	r24, 0x22	; 34
     330:	90 e0       	ldi	r25, 0x00	; 0

00000332 <.Loc.41>:
     332:	20 64       	ori	r18, 0x40	; 64
     334:	fc 01       	movw	r30, r24
     336:	20 83       	st	Z, r18

00000338 <.Loc.42>:
    PORT &= ~(1 << PIN22);
     338:	82 e2       	ldi	r24, 0x22	; 34
     33a:	90 e0       	ldi	r25, 0x00	; 0
     33c:	fc 01       	movw	r30, r24
     33e:	20 81       	ld	r18, Z

00000340 <.Loc.43>:
     340:	82 e2       	ldi	r24, 0x22	; 34
     342:	90 e0       	ldi	r25, 0x00	; 0

00000344 <.Loc.44>:
     344:	27 7f       	andi	r18, 0xF7	; 247
     346:	fc 01       	movw	r30, r24
     348:	20 83       	st	Z, r18

0000034a <.Loc.45>:
    PORT |= (1 << PIN21);
     34a:	82 e2       	ldi	r24, 0x22	; 34
     34c:	90 e0       	ldi	r25, 0x00	; 0
     34e:	fc 01       	movw	r30, r24
     350:	20 81       	ld	r18, Z
     352:	82 e2       	ldi	r24, 0x22	; 34
     354:	90 e0       	ldi	r25, 0x00	; 0

00000356 <.Loc.46>:
     356:	20 61       	ori	r18, 0x10	; 16
     358:	fc 01       	movw	r30, r24
     35a:	20 83       	st	Z, r18

0000035c <.Loc.47>:
}
     35c:	00 00       	nop
     35e:	df 91       	pop	r29
     360:	cf 91       	pop	r28
     362:	08 95       	ret

00000364 <naarlinkssrijden>:

void naarlinkssrijden()
{
     364:	cf 93       	push	r28
     366:	df 93       	push	r29
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62

0000036c <.Loc.49>:
    PORT |= (1 << PIN12);
     36c:	82 e2       	ldi	r24, 0x22	; 34
     36e:	90 e0       	ldi	r25, 0x00	; 0
     370:	fc 01       	movw	r30, r24
     372:	20 81       	ld	r18, Z
     374:	82 e2       	ldi	r24, 0x22	; 34
     376:	90 e0       	ldi	r25, 0x00	; 0

00000378 <.Loc.50>:
     378:	20 62       	ori	r18, 0x20	; 32
     37a:	fc 01       	movw	r30, r24
     37c:	20 83       	st	Z, r18

0000037e <.Loc.51>:
    PORT &= ~(1 << PIN11);
     37e:	82 e2       	ldi	r24, 0x22	; 34
     380:	90 e0       	ldi	r25, 0x00	; 0
     382:	fc 01       	movw	r30, r24
     384:	20 81       	ld	r18, Z

00000386 <.Loc.52>:
     386:	82 e2       	ldi	r24, 0x22	; 34
     388:	90 e0       	ldi	r25, 0x00	; 0

0000038a <.Loc.53>:
     38a:	2f 7b       	andi	r18, 0xBF	; 191
     38c:	fc 01       	movw	r30, r24
     38e:	20 83       	st	Z, r18

00000390 <.Loc.54>:
    PORT |= (1 << PIN22);
     390:	82 e2       	ldi	r24, 0x22	; 34
     392:	90 e0       	ldi	r25, 0x00	; 0
     394:	fc 01       	movw	r30, r24
     396:	20 81       	ld	r18, Z
     398:	82 e2       	ldi	r24, 0x22	; 34
     39a:	90 e0       	ldi	r25, 0x00	; 0

0000039c <.Loc.55>:
     39c:	28 60       	ori	r18, 0x08	; 8
     39e:	fc 01       	movw	r30, r24
     3a0:	20 83       	st	Z, r18

000003a2 <.Loc.56>:
    PORT &= ~(1 << PIN21);
     3a2:	82 e2       	ldi	r24, 0x22	; 34
     3a4:	90 e0       	ldi	r25, 0x00	; 0
     3a6:	fc 01       	movw	r30, r24
     3a8:	20 81       	ld	r18, Z

000003aa <.Loc.57>:
     3aa:	82 e2       	ldi	r24, 0x22	; 34
     3ac:	90 e0       	ldi	r25, 0x00	; 0

000003ae <.Loc.58>:
     3ae:	2f 7e       	andi	r18, 0xEF	; 239
     3b0:	fc 01       	movw	r30, r24
     3b2:	20 83       	st	Z, r18

000003b4 <.Loc.59>:
}
     3b4:	00 00       	nop
     3b6:	df 91       	pop	r29
     3b8:	cf 91       	pop	r28
     3ba:	08 95       	ret

000003bc <signaal_geven>:

void signaal_geven()
{
     3bc:	cf 93       	push	r28
     3be:	df 93       	push	r29
     3c0:	cd b7       	in	r28, 0x3d	; 61
     3c2:	de b7       	in	r29, 0x3e	; 62
     3c4:	a2 97       	sbiw	r28, 0x22	; 34
     3c6:	0f b6       	in	r0, 0x3f	; 63
     3c8:	f8 94       	cli
     3ca:	de bf       	out	0x3e, r29	; 62
     3cc:	0f be       	out	0x3f, r0	; 63
     3ce:	cd bf       	out	0x3d, r28	; 61

000003d0 <.Loc.61>:
    PORT_LED |= (1<<LED_1);         // LED 1 aan
     3d0:	82 e0       	ldi	r24, 0x02	; 2
     3d2:	91 e0       	ldi	r25, 0x01	; 1
     3d4:	dc 01       	movw	r26, r24
     3d6:	2c 91       	ld	r18, X
     3d8:	82 e0       	ldi	r24, 0x02	; 2
     3da:	91 e0       	ldi	r25, 0x01	; 1

000003dc <.Loc.62>:
     3dc:	20 61       	ori	r18, 0x10	; 16
     3de:	fc 01       	movw	r30, r24
     3e0:	20 83       	st	Z, r18

000003e2 <.Loc.63>:
    PORT_LED &= ~(1<<LED_2);        // LED 2 uit
     3e2:	82 e0       	ldi	r24, 0x02	; 2
     3e4:	91 e0       	ldi	r25, 0x01	; 1
     3e6:	dc 01       	movw	r26, r24
     3e8:	2c 91       	ld	r18, X

000003ea <.Loc.64>:
     3ea:	82 e0       	ldi	r24, 0x02	; 2
     3ec:	91 e0       	ldi	r25, 0x01	; 1

000003ee <.Loc.65>:
     3ee:	2f 7d       	andi	r18, 0xDF	; 223
     3f0:	fc 01       	movw	r30, r24
     3f2:	20 83       	st	Z, r18

000003f4 <.Loc.66>:
    PORT_buzzer |= (1<<buzzer);     // buzzer aan
     3f4:	82 e0       	ldi	r24, 0x02	; 2
     3f6:	91 e0       	ldi	r25, 0x01	; 1
     3f8:	dc 01       	movw	r26, r24
     3fa:	2c 91       	ld	r18, X
     3fc:	82 e0       	ldi	r24, 0x02	; 2
     3fe:	91 e0       	ldi	r25, 0x01	; 1

00000400 <.Loc.67>:
     400:	28 60       	ori	r18, 0x08	; 8
     402:	fc 01       	movw	r30, r24
     404:	20 83       	st	Z, r18
     406:	80 e0       	ldi	r24, 0x00	; 0
     408:	90 e0       	ldi	r25, 0x00	; 0
     40a:	aa e7       	ldi	r26, 0x7A	; 122
     40c:	b4 e4       	ldi	r27, 0x44	; 68
     40e:	89 83       	std	Y+1, r24	; 0x01
     410:	9a 83       	std	Y+2, r25	; 0x02
     412:	ab 83       	std	Y+3, r26	; 0x03
     414:	bc 83       	std	Y+4, r27	; 0x04

00000416 <.LBB12>:

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     416:	20 e0       	ldi	r18, 0x00	; 0
     418:	30 e0       	ldi	r19, 0x00	; 0
     41a:	4a e7       	ldi	r20, 0x7A	; 122
     41c:	55 e4       	ldi	r21, 0x45	; 69
     41e:	69 81       	ldd	r22, Y+1	; 0x01
     420:	7a 81       	ldd	r23, Y+2	; 0x02
     422:	8b 81       	ldd	r24, Y+3	; 0x03
     424:	9c 81       	ldd	r25, Y+4	; 0x04
     426:	0e 94 cb 10 	call	0x2196	; 0x2196 <__mulsf3>
     42a:	6b 8b       	std	Y+19, r22	; 0x13
     42c:	7c 8b       	std	Y+20, r23	; 0x14
     42e:	8d 8b       	std	Y+21, r24	; 0x15
     430:	9e 8b       	std	Y+22, r25	; 0x16
     432:	8b 89       	ldd	r24, Y+19	; 0x13
     434:	9c 89       	ldd	r25, Y+20	; 0x14
     436:	ad 89       	ldd	r26, Y+21	; 0x15
     438:	be 89       	ldd	r27, Y+22	; 0x16
     43a:	8d 83       	std	Y+5, r24	; 0x05
     43c:	9e 83       	std	Y+6, r25	; 0x06
     43e:	af 83       	std	Y+7, r26	; 0x07
     440:	b8 87       	std	Y+8, r27	; 0x08

00000442 <.Loc.69>:
	if (__tmp < 1.0)
     442:	20 e0       	ldi	r18, 0x00	; 0
     444:	30 e0       	ldi	r19, 0x00	; 0
     446:	40 e8       	ldi	r20, 0x80	; 128
     448:	5f e3       	ldi	r21, 0x3F	; 63
     44a:	6d 81       	ldd	r22, Y+5	; 0x05
     44c:	7e 81       	ldd	r23, Y+6	; 0x06
     44e:	8f 81       	ldd	r24, Y+7	; 0x07
     450:	98 85       	ldd	r25, Y+8	; 0x08
     452:	0e 94 67 0f 	call	0x1ece	; 0x1ece <__cmpsf2>
     456:	88 23       	and	r24, r24
     458:	2c f4       	brge	.+10     	; 0x464 <.L17>

0000045a <.Loc.70>:
		__ticks = 1;
     45a:	81 e0       	ldi	r24, 0x01	; 1
     45c:	90 e0       	ldi	r25, 0x00	; 0
     45e:	9a 87       	std	Y+10, r25	; 0x0a
     460:	89 87       	std	Y+9, r24	; 0x09
     462:	55 c0       	rjmp	.+170    	; 0x50e <.L9>

00000464 <.L17>:
	else if (__tmp > 65535)
     464:	20 e0       	ldi	r18, 0x00	; 0
     466:	3f ef       	ldi	r19, 0xFF	; 255
     468:	4f e7       	ldi	r20, 0x7F	; 127
     46a:	57 e4       	ldi	r21, 0x47	; 71
     46c:	6d 81       	ldd	r22, Y+5	; 0x05
     46e:	7e 81       	ldd	r23, Y+6	; 0x06
     470:	8f 81       	ldd	r24, Y+7	; 0x07
     472:	98 85       	ldd	r25, Y+8	; 0x08
     474:	0e 94 c6 10 	call	0x218c	; 0x218c <__gesf2>
     478:	88 23       	and	r24, r24
     47a:	d9 f1       	breq	.+118    	; 0x4f2 <.L18>
     47c:	d4 f1       	brlt	.+116    	; 0x4f2 <.L18>

0000047e <.Loc.72>:
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     47e:	20 e0       	ldi	r18, 0x00	; 0
     480:	30 e0       	ldi	r19, 0x00	; 0
     482:	40 e2       	ldi	r20, 0x20	; 32
     484:	51 e4       	ldi	r21, 0x41	; 65
     486:	69 81       	ldd	r22, Y+1	; 0x01
     488:	7a 81       	ldd	r23, Y+2	; 0x02
     48a:	8b 81       	ldd	r24, Y+3	; 0x03
     48c:	9c 81       	ldd	r25, Y+4	; 0x04
     48e:	0e 94 cb 10 	call	0x2196	; 0x2196 <__mulsf3>
     492:	6f 8b       	std	Y+23, r22	; 0x17
     494:	78 8f       	std	Y+24, r23	; 0x18
     496:	89 8f       	std	Y+25, r24	; 0x19
     498:	9a 8f       	std	Y+26, r25	; 0x1a
     49a:	8f 89       	ldd	r24, Y+23	; 0x17
     49c:	98 8d       	ldd	r25, Y+24	; 0x18
     49e:	a9 8d       	ldd	r26, Y+25	; 0x19
     4a0:	ba 8d       	ldd	r27, Y+26	; 0x1a
     4a2:	8f 87       	std	Y+15, r24	; 0x0f
     4a4:	98 8b       	std	Y+16, r25	; 0x10
     4a6:	a9 8b       	std	Y+17, r26	; 0x11
     4a8:	ba 8b       	std	Y+18, r27	; 0x12

000004aa <.Loc.73>:
     4aa:	6f 85       	ldd	r22, Y+15	; 0x0f
     4ac:	78 89       	ldd	r23, Y+16	; 0x10
     4ae:	89 89       	ldd	r24, Y+17	; 0x11
     4b0:	9a 89       	ldd	r25, Y+18	; 0x12
     4b2:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <__fixunssfsi>
     4b6:	6b 8f       	std	Y+27, r22	; 0x1b
     4b8:	7c 8f       	std	Y+28, r23	; 0x1c
     4ba:	8d 8f       	std	Y+29, r24	; 0x1d
     4bc:	9e 8f       	std	Y+30, r25	; 0x1e
     4be:	ab 8d       	ldd	r26, Y+27	; 0x1b
     4c0:	bc 8d       	ldd	r27, Y+28	; 0x1c
     4c2:	ba 87       	std	Y+10, r27	; 0x0a
     4c4:	a9 87       	std	Y+9, r26	; 0x09

000004c6 <.Loc.74>:
		while(__ticks)
     4c6:	10 c0       	rjmp	.+32     	; 0x4e8 <.L12>

000004c8 <.L13>:
     4c8:	80 e9       	ldi	r24, 0x90	; 144
     4ca:	91 e0       	ldi	r25, 0x01	; 1
     4cc:	9c 87       	std	Y+12, r25	; 0x0c
     4ce:	8b 87       	std	Y+11, r24	; 0x0b

000004d0 <.LBB14>:
		"sbc %B0,__zero_reg__"    "\n\t"
		"brne 1b"
		: "+d" (__count)
	);
#else
	__asm__ volatile (
     4d0:	8b 85       	ldd	r24, Y+11	; 0x0b
     4d2:	9c 85       	ldd	r25, Y+12	; 0x0c

000004d4 <.L1^B1>:
     4d4:	01 97       	sbiw	r24, 0x01	; 1
     4d6:	f1 f7       	brne	.-4      	; 0x4d4 <.L1^B1>
     4d8:	9c 87       	std	Y+12, r25	; 0x0c
     4da:	8b 87       	std	Y+11, r24	; 0x0b

000004dc <.Loc.76>:
	...

000004de <.LBE14>:
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     4de:	89 85       	ldd	r24, Y+9	; 0x09
     4e0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4e2:	01 97       	sbiw	r24, 0x01	; 1
     4e4:	9a 87       	std	Y+10, r25	; 0x0a
     4e6:	89 87       	std	Y+9, r24	; 0x09

000004e8 <.L12>:
		while(__ticks)
     4e8:	89 85       	ldd	r24, Y+9	; 0x09
     4ea:	9a 85       	ldd	r25, Y+10	; 0x0a
     4ec:	00 97       	sbiw	r24, 0x00	; 0
     4ee:	61 f7       	brne	.-40     	; 0x4c8 <.L13>

000004f0 <.Loc.79>:
		}
		return;
     4f0:	19 c0       	rjmp	.+50     	; 0x524 <.L14>

000004f2 <.L18>:
	}
	else
		__ticks = (uint16_t)__tmp;
     4f2:	6d 81       	ldd	r22, Y+5	; 0x05
     4f4:	7e 81       	ldd	r23, Y+6	; 0x06
     4f6:	8f 81       	ldd	r24, Y+7	; 0x07
     4f8:	98 85       	ldd	r25, Y+8	; 0x08
     4fa:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <__fixunssfsi>
     4fe:	6f 8f       	std	Y+31, r22	; 0x1f
     500:	78 a3       	std	Y+32, r23	; 0x20
     502:	89 a3       	std	Y+33, r24	; 0x21
     504:	9a a3       	std	Y+34, r25	; 0x22
     506:	ef 8d       	ldd	r30, Y+31	; 0x1f
     508:	f8 a1       	ldd	r31, Y+32	; 0x20
     50a:	fa 87       	std	Y+10, r31	; 0x0a
     50c:	e9 87       	std	Y+9, r30	; 0x09

0000050e <.L9>:
     50e:	89 85       	ldd	r24, Y+9	; 0x09
     510:	9a 85       	ldd	r25, Y+10	; 0x0a
     512:	9e 87       	std	Y+14, r25	; 0x0e
     514:	8d 87       	std	Y+13, r24	; 0x0d

00000516 <.LBB16>:
     516:	8d 85       	ldd	r24, Y+13	; 0x0d
     518:	9e 85       	ldd	r25, Y+14	; 0x0e

0000051a <.L1^B2>:
     51a:	01 97       	sbiw	r24, 0x01	; 1
     51c:	f1 f7       	brne	.-4      	; 0x51a <.L1^B2>
     51e:	9e 87       	std	Y+14, r25	; 0x0e
     520:	8d 87       	std	Y+13, r24	; 0x0d

00000522 <.Loc.82>:
	...

00000524 <.L14>:
    _delay_ms(1000);
    PORT_LED |= (1<<LED_2);         // LED 2 aan
     524:	82 e0       	ldi	r24, 0x02	; 2
     526:	91 e0       	ldi	r25, 0x01	; 1
     528:	dc 01       	movw	r26, r24
     52a:	2c 91       	ld	r18, X
     52c:	82 e0       	ldi	r24, 0x02	; 2
     52e:	91 e0       	ldi	r25, 0x01	; 1

00000530 <.Loc.84>:
     530:	20 62       	ori	r18, 0x20	; 32
     532:	fc 01       	movw	r30, r24
     534:	20 83       	st	Z, r18

00000536 <.Loc.85>:
    PORT_LED &= ~(1<<LED_1);        // LED 1 uit
     536:	82 e0       	ldi	r24, 0x02	; 2
     538:	91 e0       	ldi	r25, 0x01	; 1
     53a:	dc 01       	movw	r26, r24
     53c:	2c 91       	ld	r18, X

0000053e <.Loc.86>:
     53e:	82 e0       	ldi	r24, 0x02	; 2
     540:	91 e0       	ldi	r25, 0x01	; 1

00000542 <.Loc.87>:
     542:	2f 7e       	andi	r18, 0xEF	; 239
     544:	fc 01       	movw	r30, r24
     546:	20 83       	st	Z, r18

00000548 <.Loc.88>:
    PORT_buzzer &= ~(1<<buzzer);    // buzzer uit
     548:	82 e0       	ldi	r24, 0x02	; 2
     54a:	91 e0       	ldi	r25, 0x01	; 1
     54c:	dc 01       	movw	r26, r24
     54e:	2c 91       	ld	r18, X

00000550 <.Loc.89>:
     550:	82 e0       	ldi	r24, 0x02	; 2
     552:	91 e0       	ldi	r25, 0x01	; 1

00000554 <.Loc.90>:
     554:	27 7f       	andi	r18, 0xF7	; 247
     556:	fc 01       	movw	r30, r24
     558:	20 83       	st	Z, r18

0000055a <.Loc.91>:
}
     55a:	00 00       	nop
     55c:	a2 96       	adiw	r28, 0x22	; 34
     55e:	0f b6       	in	r0, 0x3f	; 63
     560:	f8 94       	cli
     562:	de bf       	out	0x3e, r29	; 62
     564:	0f be       	out	0x3f, r0	; 63
     566:	cd bf       	out	0x3d, r28	; 61
     568:	df 91       	pop	r29
     56a:	cf 91       	pop	r28
     56c:	08 95       	ret

0000056e <h_bridgeR_set_percentage>:

void h_bridgeR_set_percentage(signed char percentage)
{
     56e:	0f 93       	push	r16
     570:	1f 93       	push	r17
     572:	cf 93       	push	r28
     574:	df 93       	push	r29
     576:	00 d0       	rcall	.+0      	; 0x578 <L0^A>

00000578 <L0^A>:
     578:	0f 92       	push	r0
     57a:	0f 92       	push	r0
     57c:	cd b7       	in	r28, 0x3d	; 61
     57e:	de b7       	in	r29, 0x3e	; 62
     580:	89 83       	std	Y+1, r24	; 0x01

00000582 <.Loc.93>:
	if (percentage >= 0 && percentage <= 100)
     582:	89 81       	ldd	r24, Y+1	; 0x01
     584:	88 23       	and	r24, r24
     586:	3c f1       	brlt	.+78     	; 0x5d6 <.L21>

00000588 <.Loc.94>:
     588:	89 81       	ldd	r24, Y+1	; 0x01
     58a:	84 36       	cpi	r24, 0x64	; 100
     58c:	09 f0       	breq	.+2      	; 0x590 <.Loc.95>

0000058e <L0^A>:
     58e:	1c f5       	brge	.+70     	; 0x5d6 <.L21>

00000590 <.Loc.95>:
	{
			OCR1A = (65536*percentage)/100;
     590:	89 81       	ldd	r24, Y+1	; 0x01
     592:	08 2e       	mov	r0, r24
     594:	00 0c       	add	r0, r0
     596:	99 0b       	sbc	r25, r25
     598:	aa 0b       	sbc	r26, r26
     59a:	bb 0b       	sbc	r27, r27
     59c:	ac 01       	movw	r20, r24
     59e:	33 27       	eor	r19, r19
     5a0:	22 27       	eor	r18, r18
     5a2:	2a 83       	std	Y+2, r18	; 0x02
     5a4:	3b 83       	std	Y+3, r19	; 0x03
     5a6:	4c 83       	std	Y+4, r20	; 0x04
     5a8:	5d 83       	std	Y+5, r21	; 0x05

000005aa <.Loc.96>:
     5aa:	04 e6       	ldi	r16, 0x64	; 100
     5ac:	10 e0       	ldi	r17, 0x00	; 0
     5ae:	20 e0       	ldi	r18, 0x00	; 0
     5b0:	30 e0       	ldi	r19, 0x00	; 0
     5b2:	6a 81       	ldd	r22, Y+2	; 0x02
     5b4:	7b 81       	ldd	r23, Y+3	; 0x03
     5b6:	8c 81       	ldd	r24, Y+4	; 0x04
     5b8:	9d 81       	ldd	r25, Y+5	; 0x05
     5ba:	a9 01       	movw	r20, r18
     5bc:	98 01       	movw	r18, r16
     5be:	0e 94 0f 0f 	call	0x1e1e	; 0x1e1e <__divmodsi4>
     5c2:	da 01       	movw	r26, r20
     5c4:	c9 01       	movw	r24, r18
     5c6:	ac 01       	movw	r20, r24
     5c8:	bd 01       	movw	r22, r26

000005ca <.Loc.97>:
     5ca:	88 e8       	ldi	r24, 0x88	; 136
     5cc:	90 e0       	ldi	r25, 0x00	; 0

000005ce <.Loc.98>:
     5ce:	9a 01       	movw	r18, r20
     5d0:	fc 01       	movw	r30, r24
     5d2:	31 83       	std	Z+1, r19	; 0x01
     5d4:	20 83       	st	Z, r18

000005d6 <.L21>:
	}
}
     5d6:	00 00       	nop
     5d8:	0f 90       	pop	r0
     5da:	0f 90       	pop	r0
     5dc:	0f 90       	pop	r0
     5de:	0f 90       	pop	r0
     5e0:	0f 90       	pop	r0
     5e2:	df 91       	pop	r29
     5e4:	cf 91       	pop	r28
     5e6:	1f 91       	pop	r17
     5e8:	0f 91       	pop	r16
     5ea:	08 95       	ret

000005ec <h_bridgeL_set_percentage>:

void h_bridgeL_set_percentage(signed char percentage)
{
     5ec:	0f 93       	push	r16
     5ee:	1f 93       	push	r17
     5f0:	cf 93       	push	r28
     5f2:	df 93       	push	r29
     5f4:	00 d0       	rcall	.+0      	; 0x5f6 <L0^A>

000005f6 <L0^A>:
     5f6:	0f 92       	push	r0
     5f8:	0f 92       	push	r0
     5fa:	cd b7       	in	r28, 0x3d	; 61
     5fc:	de b7       	in	r29, 0x3e	; 62
     5fe:	89 83       	std	Y+1, r24	; 0x01

00000600 <.Loc.101>:
	if (percentage >= 0 && percentage <= 100)
     600:	89 81       	ldd	r24, Y+1	; 0x01
     602:	88 23       	and	r24, r24
     604:	3c f1       	brlt	.+78     	; 0x654 <.L24>

00000606 <.Loc.102>:
     606:	89 81       	ldd	r24, Y+1	; 0x01
     608:	84 36       	cpi	r24, 0x64	; 100
     60a:	09 f0       	breq	.+2      	; 0x60e <.Loc.103>

0000060c <L0^A>:
     60c:	1c f5       	brge	.+70     	; 0x654 <.L24>

0000060e <.Loc.103>:
	{
			OCR3A = (65536*percentage)/100;
     60e:	89 81       	ldd	r24, Y+1	; 0x01
     610:	08 2e       	mov	r0, r24
     612:	00 0c       	add	r0, r0
     614:	99 0b       	sbc	r25, r25
     616:	aa 0b       	sbc	r26, r26
     618:	bb 0b       	sbc	r27, r27
     61a:	ac 01       	movw	r20, r24
     61c:	33 27       	eor	r19, r19
     61e:	22 27       	eor	r18, r18
     620:	2a 83       	std	Y+2, r18	; 0x02
     622:	3b 83       	std	Y+3, r19	; 0x03
     624:	4c 83       	std	Y+4, r20	; 0x04
     626:	5d 83       	std	Y+5, r21	; 0x05

00000628 <.Loc.104>:
     628:	04 e6       	ldi	r16, 0x64	; 100
     62a:	10 e0       	ldi	r17, 0x00	; 0
     62c:	20 e0       	ldi	r18, 0x00	; 0
     62e:	30 e0       	ldi	r19, 0x00	; 0
     630:	6a 81       	ldd	r22, Y+2	; 0x02
     632:	7b 81       	ldd	r23, Y+3	; 0x03
     634:	8c 81       	ldd	r24, Y+4	; 0x04
     636:	9d 81       	ldd	r25, Y+5	; 0x05
     638:	a9 01       	movw	r20, r18
     63a:	98 01       	movw	r18, r16
     63c:	0e 94 0f 0f 	call	0x1e1e	; 0x1e1e <__divmodsi4>
     640:	da 01       	movw	r26, r20
     642:	c9 01       	movw	r24, r18
     644:	ac 01       	movw	r20, r24
     646:	bd 01       	movw	r22, r26

00000648 <.Loc.105>:
     648:	88 e9       	ldi	r24, 0x98	; 152
     64a:	90 e0       	ldi	r25, 0x00	; 0

0000064c <.Loc.106>:
     64c:	9a 01       	movw	r18, r20
     64e:	fc 01       	movw	r30, r24
     650:	31 83       	std	Z+1, r19	; 0x01
     652:	20 83       	st	Z, r18

00000654 <.L24>:
	}
}
     654:	00 00       	nop
     656:	0f 90       	pop	r0
     658:	0f 90       	pop	r0
     65a:	0f 90       	pop	r0
     65c:	0f 90       	pop	r0
     65e:	0f 90       	pop	r0
     660:	df 91       	pop	r29
     662:	cf 91       	pop	r28
     664:	1f 91       	pop	r17
     666:	0f 91       	pop	r16
     668:	08 95       	ret

0000066a <__vector_20>:

//H-brug PWMR
ISR(TIMER1_OVF_vect)
{
     66a:	1f 92       	push	r1
     66c:	0f 92       	push	r0
     66e:	0f b6       	in	r0, 0x3f	; 63
     670:	0f 92       	push	r0
     672:	11 24       	eor	r1, r1
     674:	0b b6       	in	r0, 0x3b	; 59
     676:	0f 92       	push	r0
     678:	2f 93       	push	r18
     67a:	3f 93       	push	r19
     67c:	8f 93       	push	r24
     67e:	9f 93       	push	r25
     680:	ef 93       	push	r30
     682:	ff 93       	push	r31
     684:	cf 93       	push	r28
     686:	df 93       	push	r29
     688:	cd b7       	in	r28, 0x3d	; 61
     68a:	de b7       	in	r29, 0x3e	; 62

0000068c <.Loc.109>:
    PORT ^= (1 << PEN1);
     68c:	82 e2       	ldi	r24, 0x22	; 34
     68e:	90 e0       	ldi	r25, 0x00	; 0
     690:	fc 01       	movw	r30, r24
     692:	30 81       	ld	r19, Z
     694:	82 e2       	ldi	r24, 0x22	; 34
     696:	90 e0       	ldi	r25, 0x00	; 0

00000698 <.Loc.110>:
     698:	20 e8       	ldi	r18, 0x80	; 128
     69a:	23 27       	eor	r18, r19
     69c:	fc 01       	movw	r30, r24
     69e:	20 83       	st	Z, r18

000006a0 <.Loc.111>:
}
     6a0:	00 00       	nop
     6a2:	df 91       	pop	r29
     6a4:	cf 91       	pop	r28
     6a6:	ff 91       	pop	r31
     6a8:	ef 91       	pop	r30
     6aa:	9f 91       	pop	r25
     6ac:	8f 91       	pop	r24
     6ae:	3f 91       	pop	r19
     6b0:	2f 91       	pop	r18
     6b2:	0f 90       	pop	r0
     6b4:	0b be       	out	0x3b, r0	; 59
     6b6:	0f 90       	pop	r0
     6b8:	0f be       	out	0x3f, r0	; 63
     6ba:	0f 90       	pop	r0
     6bc:	1f 90       	pop	r1
     6be:	18 95       	reti

000006c0 <__vector_17>:
//H-brug PWMR
ISR(TIMER1_COMPA_vect)
{
     6c0:	1f 92       	push	r1
     6c2:	0f 92       	push	r0
     6c4:	0f b6       	in	r0, 0x3f	; 63
     6c6:	0f 92       	push	r0
     6c8:	11 24       	eor	r1, r1
     6ca:	0b b6       	in	r0, 0x3b	; 59
     6cc:	0f 92       	push	r0
     6ce:	2f 93       	push	r18
     6d0:	8f 93       	push	r24
     6d2:	9f 93       	push	r25
     6d4:	ef 93       	push	r30
     6d6:	ff 93       	push	r31
     6d8:	cf 93       	push	r28
     6da:	df 93       	push	r29
     6dc:	cd b7       	in	r28, 0x3d	; 61
     6de:	de b7       	in	r29, 0x3e	; 62

000006e0 <.Loc.113>:
    PORT |= (1 << PEN1);
     6e0:	82 e2       	ldi	r24, 0x22	; 34
     6e2:	90 e0       	ldi	r25, 0x00	; 0
     6e4:	fc 01       	movw	r30, r24
     6e6:	20 81       	ld	r18, Z
     6e8:	82 e2       	ldi	r24, 0x22	; 34
     6ea:	90 e0       	ldi	r25, 0x00	; 0

000006ec <.Loc.114>:
     6ec:	20 68       	ori	r18, 0x80	; 128
     6ee:	fc 01       	movw	r30, r24
     6f0:	20 83       	st	Z, r18

000006f2 <.Loc.115>:
}
     6f2:	00 00       	nop
     6f4:	df 91       	pop	r29
     6f6:	cf 91       	pop	r28
     6f8:	ff 91       	pop	r31
     6fa:	ef 91       	pop	r30
     6fc:	9f 91       	pop	r25
     6fe:	8f 91       	pop	r24
     700:	2f 91       	pop	r18
     702:	0f 90       	pop	r0
     704:	0b be       	out	0x3b, r0	; 59
     706:	0f 90       	pop	r0
     708:	0f be       	out	0x3f, r0	; 63
     70a:	0f 90       	pop	r0
     70c:	1f 90       	pop	r1
     70e:	18 95       	reti

00000710 <__vector_35>:

//H-brug PWML
ISR(TIMER3_OVF_vect)
{
     710:	1f 92       	push	r1
     712:	0f 92       	push	r0
     714:	0f b6       	in	r0, 0x3f	; 63
     716:	0f 92       	push	r0
     718:	11 24       	eor	r1, r1
     71a:	0b b6       	in	r0, 0x3b	; 59
     71c:	0f 92       	push	r0
     71e:	2f 93       	push	r18
     720:	3f 93       	push	r19
     722:	8f 93       	push	r24
     724:	9f 93       	push	r25
     726:	ef 93       	push	r30
     728:	ff 93       	push	r31
     72a:	cf 93       	push	r28
     72c:	df 93       	push	r29
     72e:	cd b7       	in	r28, 0x3d	; 61
     730:	de b7       	in	r29, 0x3e	; 62

00000732 <.Loc.117>:
    PORT ^= (1 << PEN2);
     732:	82 e2       	ldi	r24, 0x22	; 34
     734:	90 e0       	ldi	r25, 0x00	; 0
     736:	fc 01       	movw	r30, r24
     738:	30 81       	ld	r19, Z
     73a:	82 e2       	ldi	r24, 0x22	; 34
     73c:	90 e0       	ldi	r25, 0x00	; 0

0000073e <.Loc.118>:
     73e:	24 e0       	ldi	r18, 0x04	; 4
     740:	23 27       	eor	r18, r19
     742:	fc 01       	movw	r30, r24
     744:	20 83       	st	Z, r18

00000746 <.Loc.119>:
}
     746:	00 00       	nop
     748:	df 91       	pop	r29
     74a:	cf 91       	pop	r28
     74c:	ff 91       	pop	r31
     74e:	ef 91       	pop	r30
     750:	9f 91       	pop	r25
     752:	8f 91       	pop	r24
     754:	3f 91       	pop	r19
     756:	2f 91       	pop	r18
     758:	0f 90       	pop	r0
     75a:	0b be       	out	0x3b, r0	; 59
     75c:	0f 90       	pop	r0
     75e:	0f be       	out	0x3f, r0	; 63
     760:	0f 90       	pop	r0
     762:	1f 90       	pop	r1
     764:	18 95       	reti

00000766 <__vector_32>:
//H-brug PWML
ISR(TIMER3_COMPA_vect)
{
     766:	1f 92       	push	r1
     768:	0f 92       	push	r0
     76a:	0f b6       	in	r0, 0x3f	; 63
     76c:	0f 92       	push	r0
     76e:	11 24       	eor	r1, r1
     770:	0b b6       	in	r0, 0x3b	; 59
     772:	0f 92       	push	r0
     774:	2f 93       	push	r18
     776:	8f 93       	push	r24
     778:	9f 93       	push	r25
     77a:	ef 93       	push	r30
     77c:	ff 93       	push	r31
     77e:	cf 93       	push	r28
     780:	df 93       	push	r29
     782:	cd b7       	in	r28, 0x3d	; 61
     784:	de b7       	in	r29, 0x3e	; 62

00000786 <.Loc.121>:
    PORT |= (1 << PEN2);
     786:	82 e2       	ldi	r24, 0x22	; 34
     788:	90 e0       	ldi	r25, 0x00	; 0
     78a:	fc 01       	movw	r30, r24
     78c:	20 81       	ld	r18, Z
     78e:	82 e2       	ldi	r24, 0x22	; 34
     790:	90 e0       	ldi	r25, 0x00	; 0

00000792 <.Loc.122>:
     792:	24 60       	ori	r18, 0x04	; 4
     794:	fc 01       	movw	r30, r24
     796:	20 83       	st	Z, r18

00000798 <.Loc.123>:
}
     798:	00 00       	nop
     79a:	df 91       	pop	r29
     79c:	cf 91       	pop	r28
     79e:	ff 91       	pop	r31
     7a0:	ef 91       	pop	r30
     7a2:	9f 91       	pop	r25
     7a4:	8f 91       	pop	r24
     7a6:	2f 91       	pop	r18
     7a8:	0f 90       	pop	r0
     7aa:	0b be       	out	0x3b, r0	; 59
     7ac:	0f 90       	pop	r0
     7ae:	0f be       	out	0x3f, r0	; 63
     7b0:	0f 90       	pop	r0
     7b2:	1f 90       	pop	r1
     7b4:	18 95       	reti

000007b6 <__vector_23>:

//Timer Noodtoestand
ISR(TIMER0_OVF_vect)
{
     7b6:	1f 92       	push	r1
     7b8:	0f 92       	push	r0
     7ba:	0f b6       	in	r0, 0x3f	; 63
     7bc:	0f 92       	push	r0
     7be:	11 24       	eor	r1, r1
     7c0:	8f 93       	push	r24
     7c2:	9f 93       	push	r25
     7c4:	cf 93       	push	r28
     7c6:	df 93       	push	r29
     7c8:	cd b7       	in	r28, 0x3d	; 61
     7ca:	de b7       	in	r29, 0x3e	; 62

000007cc <.Loc.125>:
    timerteller ++;
     7cc:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <timerteller>
     7d0:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <timerteller+0x1>
     7d4:	01 96       	adiw	r24, 0x01	; 1
     7d6:	90 93 27 02 	sts	0x0227, r25	; 0x800227 <timerteller+0x1>
     7da:	80 93 26 02 	sts	0x0226, r24	; 0x800226 <timerteller>

000007de <.Loc.126>:
}
     7de:	00 00       	nop
     7e0:	df 91       	pop	r29
     7e2:	cf 91       	pop	r28
     7e4:	9f 91       	pop	r25
     7e6:	8f 91       	pop	r24
     7e8:	0f 90       	pop	r0
     7ea:	0f be       	out	0x3f, r0	; 63
     7ec:	0f 90       	pop	r0
     7ee:	1f 90       	pop	r1
     7f0:	18 95       	reti

000007f2 <__vector_45>:

//Timer Bak detectie
ISR(TIMER4_OVF_vect)
{
     7f2:	1f 92       	push	r1
     7f4:	0f 92       	push	r0
     7f6:	0f b6       	in	r0, 0x3f	; 63
     7f8:	0f 92       	push	r0
     7fa:	11 24       	eor	r1, r1
     7fc:	0b b6       	in	r0, 0x3b	; 59
     7fe:	0f 92       	push	r0
     800:	8f 93       	push	r24
     802:	9f 93       	push	r25
     804:	ef 93       	push	r30
     806:	ff 93       	push	r31
     808:	cf 93       	push	r28
     80a:	df 93       	push	r29
     80c:	cd b7       	in	r28, 0x3d	; 61
     80e:	de b7       	in	r29, 0x3e	; 62

00000810 <.Loc.128>:
    if(timertellerbak >= 2)
     810:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <timertellerbak>
     814:	90 91 29 02 	lds	r25, 0x0229	; 0x800229 <timertellerbak+0x1>

00000818 <.Loc.129>:
     818:	81 30       	cpi	r24, 0x01	; 1
     81a:	91 05       	cpc	r25, r1
     81c:	69 f0       	breq	.+26     	; 0x838 <.L31>
     81e:	64 f0       	brlt	.+24     	; 0x838 <.L31>

00000820 <.Loc.130>:
    {
        timertellerbak = 0;
     820:	10 92 29 02 	sts	0x0229, r1	; 0x800229 <timertellerbak+0x1>
     824:	10 92 28 02 	sts	0x0228, r1	; 0x800228 <timertellerbak>

00000828 <.Loc.131>:
        bakvar = 0;
     828:	10 92 2b 02 	sts	0x022B, r1	; 0x80022b <bakvar+0x1>
     82c:	10 92 2a 02 	sts	0x022A, r1	; 0x80022a <bakvar>

00000830 <.Loc.132>:
        TCCR4B = 0;
     830:	81 ea       	ldi	r24, 0xA1	; 161
     832:	90 e0       	ldi	r25, 0x00	; 0

00000834 <.Loc.133>:
     834:	fc 01       	movw	r30, r24
     836:	10 82       	st	Z, r1

00000838 <.L31>:
    }
    timertellerbak ++;
     838:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <timertellerbak>
     83c:	90 91 29 02 	lds	r25, 0x0229	; 0x800229 <timertellerbak+0x1>
     840:	01 96       	adiw	r24, 0x01	; 1
     842:	90 93 29 02 	sts	0x0229, r25	; 0x800229 <timertellerbak+0x1>
     846:	80 93 28 02 	sts	0x0228, r24	; 0x800228 <timertellerbak>

0000084a <.Loc.135>:
}
     84a:	00 00       	nop
     84c:	df 91       	pop	r29
     84e:	cf 91       	pop	r28
     850:	ff 91       	pop	r31
     852:	ef 91       	pop	r30
     854:	9f 91       	pop	r25
     856:	8f 91       	pop	r24
     858:	0f 90       	pop	r0
     85a:	0b be       	out	0x3b, r0	; 59
     85c:	0f 90       	pop	r0
     85e:	0f be       	out	0x3f, r0	; 63
     860:	0f 90       	pop	r0
     862:	1f 90       	pop	r1
     864:	18 95       	reti

00000866 <main>:
7: Noodknop ingedrukt
8: Noodknop uitgedrukt
*/

int main(void)
{
     866:	cf 93       	push	r28
     868:	df 93       	push	r29
     86a:	cd b7       	in	r28, 0x3d	; 61
     86c:	de b7       	in	r29, 0x3e	; 62
     86e:	ca 54       	subi	r28, 0x4A	; 74
     870:	d1 09       	sbc	r29, r1
     872:	0f b6       	in	r0, 0x3f	; 63
     874:	f8 94       	cli
     876:	de bf       	out	0x3e, r29	; 62
     878:	0f be       	out	0x3f, r0	; 63
     87a:	cd bf       	out	0x3d, r28	; 61

0000087c <.Loc.1>:
    init();
     87c:	0e 94 97 08 	call	0x112e	; 0x112e <init>

00000880 <.Loc.2>:
    init_display_meneer();
     880:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <init_display_meneer>

00000884 <.Loc.3>:
    initultrasoon();
     884:	0e 94 8c 09 	call	0x1318	; 0x1318 <initultrasoon>

00000888 <.Loc.4>:
    int waarde;

    int toestand = 0;
     888:	1a 82       	std	Y+2, r1	; 0x02
     88a:	19 82       	std	Y+1, r1	; 0x01

0000088c <.Loc.5>:
    int toestandvolgen = 0;
     88c:	1c 82       	std	Y+4, r1	; 0x04
     88e:	1b 82       	std	Y+3, r1	; 0x03

00000890 <.L57>:
    while(1)
    {
//        waarde = GetDistance();
//        display_getal(waarde);

        if(Bluetooth_Getal == 2)//Bluetooth verbroken
     890:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <Bluetooth_Getal>
     894:	90 91 21 02 	lds	r25, 0x0221	; 0x800221 <Bluetooth_Getal+0x1>

00000898 <.Loc.7>:
     898:	82 30       	cpi	r24, 0x02	; 2
     89a:	91 05       	cpc	r25, r1
     89c:	11 f4       	brne	.+4      	; 0x8a2 <.L2>

0000089e <.Loc.8>:
        {
            toestand = 0;
     89e:	1a 82       	std	Y+2, r1	; 0x02
     8a0:	19 82       	std	Y+1, r1	; 0x01

000008a2 <.L2>:
        }
        if(Bluetooth_Getal == 6)//Uitknop ingedrukt
     8a2:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <Bluetooth_Getal>
     8a6:	90 91 21 02 	lds	r25, 0x0221	; 0x800221 <Bluetooth_Getal+0x1>

000008aa <.Loc.10>:
     8aa:	86 30       	cpi	r24, 0x06	; 6
     8ac:	91 05       	cpc	r25, r1
     8ae:	21 f4       	brne	.+8      	; 0x8b8 <.L3>

000008b0 <.Loc.11>:
        {
            toestand = 1;
     8b0:	81 e0       	ldi	r24, 0x01	; 1
     8b2:	90 e0       	ldi	r25, 0x00	; 0
     8b4:	9a 83       	std	Y+2, r25	; 0x02
     8b6:	89 83       	std	Y+1, r24	; 0x01

000008b8 <.L3>:
        }
        if(Bluetooth_Getal == 7)//noodknop
     8b8:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <Bluetooth_Getal>
     8bc:	90 91 21 02 	lds	r25, 0x0221	; 0x800221 <Bluetooth_Getal+0x1>

000008c0 <.Loc.13>:
     8c0:	87 30       	cpi	r24, 0x07	; 7
     8c2:	91 05       	cpc	r25, r1
     8c4:	21 f4       	brne	.+8      	; 0x8ce <.L4>

000008c6 <.Loc.14>:
        {
            toestand = 99;
     8c6:	83 e6       	ldi	r24, 0x63	; 99
     8c8:	90 e0       	ldi	r25, 0x00	; 0
     8ca:	9a 83       	std	Y+2, r25	; 0x02
     8cc:	89 83       	std	Y+1, r24	; 0x01

000008ce <.L4>:
        }
        if((toestand >= 3) && (toestand != 99) && (((IRregister & (1 << IRbaklinks)) == 0) || ((IRregister & (1 << IRbakrechts)) == 0)))//Plantenbak gedetecteerd
     8ce:	89 81       	ldd	r24, Y+1	; 0x01
     8d0:	9a 81       	ldd	r25, Y+2	; 0x02
     8d2:	82 30       	cpi	r24, 0x02	; 2
     8d4:	91 05       	cpc	r25, r1
     8d6:	a9 f1       	breq	.+106    	; 0x942 <.L5>
     8d8:	a4 f1       	brlt	.+104    	; 0x942 <.L5>

000008da <.Loc.16>:
     8da:	89 81       	ldd	r24, Y+1	; 0x01
     8dc:	9a 81       	ldd	r25, Y+2	; 0x02
     8de:	83 36       	cpi	r24, 0x63	; 99
     8e0:	91 05       	cpc	r25, r1
     8e2:	79 f1       	breq	.+94     	; 0x942 <.L5>

000008e4 <.Loc.17>:
     8e4:	86 e2       	ldi	r24, 0x26	; 38
     8e6:	90 e0       	ldi	r25, 0x00	; 0
     8e8:	dc 01       	movw	r26, r24
     8ea:	8c 91       	ld	r24, X

000008ec <.Loc.18>:
     8ec:	88 2f       	mov	r24, r24
     8ee:	90 e0       	ldi	r25, 0x00	; 0
     8f0:	80 72       	andi	r24, 0x20	; 32
     8f2:	99 27       	eor	r25, r25

000008f4 <.Loc.19>:
     8f4:	00 97       	sbiw	r24, 0x00	; 0
     8f6:	51 f0       	breq	.+20     	; 0x90c <.L6>

000008f8 <.Loc.20>:
     8f8:	86 e2       	ldi	r24, 0x26	; 38
     8fa:	90 e0       	ldi	r25, 0x00	; 0
     8fc:	fc 01       	movw	r30, r24
     8fe:	80 81       	ld	r24, Z

00000900 <.Loc.21>:
     900:	88 2f       	mov	r24, r24
     902:	90 e0       	ldi	r25, 0x00	; 0
     904:	80 71       	andi	r24, 0x10	; 16
     906:	99 27       	eor	r25, r25

00000908 <.Loc.22>:
     908:	00 97       	sbiw	r24, 0x00	; 0
     90a:	d9 f4       	brne	.+54     	; 0x942 <.L5>

0000090c <.L6>:
        {
            if(bakvar != 1)
     90c:	80 91 2a 02 	lds	r24, 0x022A	; 0x80022a <bakvar>
     910:	90 91 2b 02 	lds	r25, 0x022B	; 0x80022b <bakvar+0x1>

00000914 <.Loc.24>:
     914:	81 30       	cpi	r24, 0x01	; 1
     916:	91 05       	cpc	r25, r1
     918:	81 f0       	breq	.+32     	; 0x93a <.L7>

0000091a <.Loc.25>:
            {
                bakvar = 1;
     91a:	81 e0       	ldi	r24, 0x01	; 1
     91c:	90 e0       	ldi	r25, 0x00	; 0
     91e:	90 93 2b 02 	sts	0x022B, r25	; 0x80022b <bakvar+0x1>
     922:	80 93 2a 02 	sts	0x022A, r24	; 0x80022a <bakvar>

00000926 <.Loc.26>:
                TCCR4B = (1 << CS42) | (0 << CS41) | (0 << CS40);
     926:	81 ea       	ldi	r24, 0xA1	; 161
     928:	90 e0       	ldi	r25, 0x00	; 0

0000092a <.Loc.27>:
     92a:	24 e0       	ldi	r18, 0x04	; 4
     92c:	dc 01       	movw	r26, r24
     92e:	2c 93       	st	X, r18

00000930 <.Loc.28>:
                toestand = 8;
     930:	88 e0       	ldi	r24, 0x08	; 8
     932:	90 e0       	ldi	r25, 0x00	; 0
     934:	9a 83       	std	Y+2, r25	; 0x02
     936:	89 83       	std	Y+1, r24	; 0x01
     938:	04 c0       	rjmp	.+8      	; 0x942 <.L5>

0000093a <.L7>:
            }
            else
            {
                toestand = 4;
     93a:	84 e0       	ldi	r24, 0x04	; 4
     93c:	90 e0       	ldi	r25, 0x00	; 0
     93e:	9a 83       	std	Y+2, r25	; 0x02
     940:	89 83       	std	Y+1, r24	; 0x01

00000942 <.L5>:
//        if((waarde <= 50))//Voorultrasoon ziet object(toestand >= 3) && (toestand != 99) &&
//        {
//            toestand = 9;
//        }

        if((toestand >= 3) && ((IRregister & (1 << IRonderlinks)) && (IRregister & (1 << IRonderrechts))))
     942:	89 81       	ldd	r24, Y+1	; 0x01
     944:	9a 81       	ldd	r25, Y+2	; 0x02
     946:	82 30       	cpi	r24, 0x02	; 2
     948:	91 05       	cpc	r25, r1
     94a:	c9 f0       	breq	.+50     	; 0x97e <.L8>
     94c:	c4 f0       	brlt	.+48     	; 0x97e <.L8>

0000094e <.Loc.31>:
     94e:	86 e2       	ldi	r24, 0x26	; 38
     950:	90 e0       	ldi	r25, 0x00	; 0
     952:	fc 01       	movw	r30, r24
     954:	80 81       	ld	r24, Z

00000956 <.Loc.32>:
     956:	88 2f       	mov	r24, r24
     958:	90 e0       	ldi	r25, 0x00	; 0
     95a:	88 70       	andi	r24, 0x08	; 8
     95c:	99 27       	eor	r25, r25

0000095e <.Loc.33>:
     95e:	00 97       	sbiw	r24, 0x00	; 0
     960:	71 f0       	breq	.+28     	; 0x97e <.L8>

00000962 <.Loc.34>:
     962:	86 e2       	ldi	r24, 0x26	; 38
     964:	90 e0       	ldi	r25, 0x00	; 0
     966:	dc 01       	movw	r26, r24
     968:	8c 91       	ld	r24, X

0000096a <.Loc.35>:
     96a:	88 2f       	mov	r24, r24
     96c:	90 e0       	ldi	r25, 0x00	; 0
     96e:	84 70       	andi	r24, 0x04	; 4
     970:	99 27       	eor	r25, r25

00000972 <.Loc.36>:
     972:	00 97       	sbiw	r24, 0x00	; 0
     974:	21 f0       	breq	.+8      	; 0x97e <.L8>

00000976 <.Loc.37>:
        {
            toestand = 10;
     976:	8a e0       	ldi	r24, 0x0A	; 10
     978:	90 e0       	ldi	r25, 0x00	; 0
     97a:	9a 83       	std	Y+2, r25	; 0x02
     97c:	89 83       	std	Y+1, r24	; 0x01

0000097e <.L8>:
        }
        switch(toestand)
     97e:	89 81       	ldd	r24, Y+1	; 0x01
     980:	9a 81       	ldd	r25, Y+2	; 0x02
     982:	8a 30       	cpi	r24, 0x0A	; 10
     984:	91 05       	cpc	r25, r1
     986:	09 f0       	breq	.+2      	; 0x98a <L0^A+0x2>

00000988 <L0^A>:
     988:	cc f4       	brge	.+50     	; 0x9bc <.L9>
     98a:	89 81       	ldd	r24, Y+1	; 0x01
     98c:	9a 81       	ldd	r25, Y+2	; 0x02
     98e:	99 23       	and	r25, r25
     990:	0c f4       	brge	.+2      	; 0x994 <L0^A+0x2>

00000992 <L0^A>:
     992:	7e cf       	rjmp	.-260    	; 0x890 <.L57>
     994:	89 81       	ldd	r24, Y+1	; 0x01
     996:	9a 81       	ldd	r25, Y+2	; 0x02
     998:	09 2e       	mov	r0, r25
     99a:	00 0c       	add	r0, r0
     99c:	aa 0b       	sbc	r26, r26
     99e:	bb 0b       	sbc	r27, r27
     9a0:	8a 30       	cpi	r24, 0x0A	; 10
     9a2:	91 05       	cpc	r25, r1
     9a4:	a1 05       	cpc	r26, r1
     9a6:	b1 05       	cpc	r27, r1
     9a8:	11 f0       	breq	.+4      	; 0x9ae <L0^A+0x2>

000009aa <L0^A>:
     9aa:	08 f0       	brcs	.+2      	; 0x9ae <L0^A+0x2>

000009ac <L0^A>:
     9ac:	71 cf       	rjmp	.-286    	; 0x890 <.L57>
     9ae:	fc 01       	movw	r30, r24
     9b0:	88 27       	eor	r24, r24
     9b2:	e6 5c       	subi	r30, 0xC6	; 198
     9b4:	fe 4e       	sbci	r31, 0xEE	; 238
     9b6:	8f 4f       	sbci	r24, 0xFF	; 255
     9b8:	0c 94 2e 0f 	jmp	0x1e5c	; 0x1e5c <__tablejump2__>

000009bc <.L9>:
     9bc:	89 81       	ldd	r24, Y+1	; 0x01
     9be:	9a 81       	ldd	r25, Y+2	; 0x02
     9c0:	83 36       	cpi	r24, 0x63	; 99
     9c2:	91 05       	cpc	r25, r1
     9c4:	09 f0       	breq	.+2      	; 0x9c8 <.Loc.39>

000009c6 <L0^A>:
     9c6:	64 cf       	rjmp	.-312    	; 0x890 <.L57>

000009c8 <.Loc.39>:
        {
        case 99://Noodtoestand
            h_bridgeR_set_percentage(snelheiduit);//motoren uit
     9c8:	83 e6       	ldi	r24, 0x63	; 99
     9ca:	0e 94 b7 02 	call	0x56e	; 0x56e <h_bridgeR_set_percentage>

000009ce <.Loc.40>:
            h_bridgeL_set_percentage(snelheiduit);
     9ce:	83 e6       	ldi	r24, 0x63	; 99
     9d0:	0e 94 f6 02 	call	0x5ec	; 0x5ec <h_bridgeL_set_percentage>

000009d4 <.Loc.41>:
            if(timerteller <= 30)
     9d4:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <timerteller>
     9d8:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <timerteller+0x1>

000009dc <.Loc.42>:
     9dc:	8e 31       	cpi	r24, 0x1E	; 30
     9de:	91 05       	cpc	r25, r1
     9e0:	09 f0       	breq	.+2      	; 0x9e4 <.Loc.43>

000009e2 <L0^A>:
     9e2:	dc f4       	brge	.+54     	; 0xa1a <.L23>

000009e4 <.Loc.43>:
            {
                PORT_buzzer &= ~(1<<buzzer);//buzzer
     9e4:	82 e0       	ldi	r24, 0x02	; 2
     9e6:	91 e0       	ldi	r25, 0x01	; 1
     9e8:	fc 01       	movw	r30, r24
     9ea:	20 81       	ld	r18, Z

000009ec <.Loc.44>:
     9ec:	82 e0       	ldi	r24, 0x02	; 2
     9ee:	91 e0       	ldi	r25, 0x01	; 1

000009f0 <.Loc.45>:
     9f0:	27 7f       	andi	r18, 0xF7	; 247
     9f2:	dc 01       	movw	r26, r24
     9f4:	2c 93       	st	X, r18

000009f6 <.Loc.46>:
                PORT_LED &= ~(1<<LED_1);//LED
     9f6:	82 e0       	ldi	r24, 0x02	; 2
     9f8:	91 e0       	ldi	r25, 0x01	; 1
     9fa:	fc 01       	movw	r30, r24
     9fc:	20 81       	ld	r18, Z

000009fe <.Loc.47>:
     9fe:	82 e0       	ldi	r24, 0x02	; 2
     a00:	91 e0       	ldi	r25, 0x01	; 1

00000a02 <.Loc.48>:
     a02:	2f 7e       	andi	r18, 0xEF	; 239
     a04:	dc 01       	movw	r26, r24
     a06:	2c 93       	st	X, r18

00000a08 <.Loc.49>:
                PORT_LED &= ~(1<<LED_2);//LED
     a08:	82 e0       	ldi	r24, 0x02	; 2
     a0a:	91 e0       	ldi	r25, 0x01	; 1
     a0c:	fc 01       	movw	r30, r24
     a0e:	20 81       	ld	r18, Z

00000a10 <.Loc.50>:
     a10:	82 e0       	ldi	r24, 0x02	; 2
     a12:	91 e0       	ldi	r25, 0x01	; 1

00000a14 <.Loc.51>:
     a14:	2f 7d       	andi	r18, 0xDF	; 223
     a16:	dc 01       	movw	r26, r24
     a18:	2c 93       	st	X, r18

00000a1a <.L23>:
            }
            if(timerteller >= 30)
     a1a:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <timerteller>
     a1e:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <timerteller+0x1>

00000a22 <.Loc.53>:
     a22:	8d 31       	cpi	r24, 0x1D	; 29
     a24:	91 05       	cpc	r25, r1
     a26:	41 f1       	breq	.+80     	; 0xa78 <.L24>
     a28:	3c f1       	brlt	.+78     	; 0xa78 <.L24>

00000a2a <.Loc.54>:
            {
                PORT_buzzer |= (1<<buzzer);//buzzer
     a2a:	82 e0       	ldi	r24, 0x02	; 2
     a2c:	91 e0       	ldi	r25, 0x01	; 1
     a2e:	fc 01       	movw	r30, r24
     a30:	20 81       	ld	r18, Z
     a32:	82 e0       	ldi	r24, 0x02	; 2
     a34:	91 e0       	ldi	r25, 0x01	; 1

00000a36 <.Loc.55>:
     a36:	28 60       	ori	r18, 0x08	; 8
     a38:	dc 01       	movw	r26, r24
     a3a:	2c 93       	st	X, r18

00000a3c <.Loc.56>:
                PORT_LED |= (1<<LED_1);//LED
     a3c:	82 e0       	ldi	r24, 0x02	; 2
     a3e:	91 e0       	ldi	r25, 0x01	; 1
     a40:	fc 01       	movw	r30, r24
     a42:	20 81       	ld	r18, Z
     a44:	82 e0       	ldi	r24, 0x02	; 2
     a46:	91 e0       	ldi	r25, 0x01	; 1

00000a48 <.Loc.57>:
     a48:	20 61       	ori	r18, 0x10	; 16
     a4a:	dc 01       	movw	r26, r24
     a4c:	2c 93       	st	X, r18

00000a4e <.Loc.58>:
                PORT_LED |= (1<<LED_2);//LED
     a4e:	82 e0       	ldi	r24, 0x02	; 2
     a50:	91 e0       	ldi	r25, 0x01	; 1
     a52:	fc 01       	movw	r30, r24
     a54:	20 81       	ld	r18, Z
     a56:	82 e0       	ldi	r24, 0x02	; 2
     a58:	91 e0       	ldi	r25, 0x01	; 1

00000a5a <.Loc.59>:
     a5a:	20 62       	ori	r18, 0x20	; 32
     a5c:	dc 01       	movw	r26, r24
     a5e:	2c 93       	st	X, r18

00000a60 <.Loc.60>:
                if(timerteller >= 60)
     a60:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <timerteller>
     a64:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <timerteller+0x1>

00000a68 <.Loc.61>:
     a68:	8b 33       	cpi	r24, 0x3B	; 59
     a6a:	91 05       	cpc	r25, r1
     a6c:	29 f0       	breq	.+10     	; 0xa78 <.L24>
     a6e:	24 f0       	brlt	.+8      	; 0xa78 <.L24>

00000a70 <.Loc.62>:
                {
                    timerteller = 0;
     a70:	10 92 27 02 	sts	0x0227, r1	; 0x800227 <timerteller+0x1>
     a74:	10 92 26 02 	sts	0x0226, r1	; 0x800226 <timerteller>

00000a78 <.L24>:
                }
            }
            if((Bluetooth_Getal == 8))// && ((Noodknopport & (1<<Noodknoppin)) != 0))
     a78:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <Bluetooth_Getal>
     a7c:	90 91 21 02 	lds	r25, 0x0221	; 0x800221 <Bluetooth_Getal+0x1>

00000a80 <.Loc.64>:
     a80:	88 30       	cpi	r24, 0x08	; 8
     a82:	91 05       	cpc	r25, r1
     a84:	09 f0       	breq	.+2      	; 0xa88 <.Loc.65>

00000a86 <L0^A>:
     a86:	3f c3       	rjmp	.+1662   	; 0x1106 <.L66>

00000a88 <.Loc.65>:
            {
                toestand = 2;
     a88:	82 e0       	ldi	r24, 0x02	; 2
     a8a:	90 e0       	ldi	r25, 0x00	; 0
     a8c:	9a 83       	std	Y+2, r25	; 0x02
     a8e:	89 83       	std	Y+1, r24	; 0x01

00000a90 <.Loc.66>:
            }
            break;
     a90:	3a c3       	rjmp	.+1652   	; 0x1106 <.L66>

00000a92 <.L22>:
        case 0:
            PORT_buzzer &= ~(1<<buzzer);
     a92:	82 e0       	ldi	r24, 0x02	; 2
     a94:	91 e0       	ldi	r25, 0x01	; 1
     a96:	fc 01       	movw	r30, r24
     a98:	20 81       	ld	r18, Z

00000a9a <.Loc.68>:
     a9a:	82 e0       	ldi	r24, 0x02	; 2
     a9c:	91 e0       	ldi	r25, 0x01	; 1

00000a9e <.Loc.69>:
     a9e:	27 7f       	andi	r18, 0xF7	; 247
     aa0:	dc 01       	movw	r26, r24
     aa2:	2c 93       	st	X, r18

00000aa4 <.Loc.70>:
            PORT_LED |= (1<<LED_2);
     aa4:	82 e0       	ldi	r24, 0x02	; 2
     aa6:	91 e0       	ldi	r25, 0x01	; 1
     aa8:	fc 01       	movw	r30, r24
     aaa:	20 81       	ld	r18, Z
     aac:	82 e0       	ldi	r24, 0x02	; 2
     aae:	91 e0       	ldi	r25, 0x01	; 1

00000ab0 <.Loc.71>:
     ab0:	20 62       	ori	r18, 0x20	; 32
     ab2:	dc 01       	movw	r26, r24
     ab4:	2c 93       	st	X, r18

00000ab6 <.Loc.72>:
            PORT_LED &= ~(1<<LED_1);
     ab6:	82 e0       	ldi	r24, 0x02	; 2
     ab8:	91 e0       	ldi	r25, 0x01	; 1
     aba:	fc 01       	movw	r30, r24
     abc:	20 81       	ld	r18, Z

00000abe <.Loc.73>:
     abe:	82 e0       	ldi	r24, 0x02	; 2
     ac0:	91 e0       	ldi	r25, 0x01	; 1

00000ac2 <.Loc.74>:
     ac2:	2f 7e       	andi	r18, 0xEF	; 239
     ac4:	dc 01       	movw	r26, r24
     ac6:	2c 93       	st	X, r18

00000ac8 <.Loc.75>:
            PORT_buzzer &= ~(1<<buzzer);
     ac8:	82 e0       	ldi	r24, 0x02	; 2
     aca:	91 e0       	ldi	r25, 0x01	; 1
     acc:	fc 01       	movw	r30, r24
     ace:	20 81       	ld	r18, Z

00000ad0 <.Loc.76>:
     ad0:	82 e0       	ldi	r24, 0x02	; 2
     ad2:	91 e0       	ldi	r25, 0x01	; 1

00000ad4 <.Loc.77>:
     ad4:	27 7f       	andi	r18, 0xF7	; 247
     ad6:	dc 01       	movw	r26, r24
     ad8:	2c 93       	st	X, r18

00000ada <.Loc.78>:
            h_bridgeL_set_percentage(snelheiduit);//motoren uit
     ada:	83 e6       	ldi	r24, 0x63	; 99
     adc:	0e 94 f6 02 	call	0x5ec	; 0x5ec <h_bridgeL_set_percentage>

00000ae0 <.Loc.79>:
            h_bridgeR_set_percentage(snelheiduit);
     ae0:	83 e6       	ldi	r24, 0x63	; 99
     ae2:	0e 94 b7 02 	call	0x56e	; 0x56e <h_bridgeR_set_percentage>

00000ae6 <.Loc.80>:
            if(Bluetooth_Getal == 1)//Bluetooth verbonden
     ae6:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <Bluetooth_Getal>
     aea:	90 91 21 02 	lds	r25, 0x0221	; 0x800221 <Bluetooth_Getal+0x1>

00000aee <.Loc.81>:
     aee:	81 30       	cpi	r24, 0x01	; 1
     af0:	91 05       	cpc	r25, r1
     af2:	09 f0       	breq	.+2      	; 0xaf6 <.Loc.82>

00000af4 <L0^A>:
     af4:	0a c3       	rjmp	.+1556   	; 0x110a <.L67>

00000af6 <.Loc.82>:
            {
                toestand = 1;
     af6:	81 e0       	ldi	r24, 0x01	; 1
     af8:	90 e0       	ldi	r25, 0x00	; 0
     afa:	9a 83       	std	Y+2, r25	; 0x02
     afc:	89 83       	std	Y+1, r24	; 0x01

00000afe <.Loc.83>:
            }
            break;
     afe:	05 c3       	rjmp	.+1546   	; 0x110a <.L67>

00000b00 <.L21>:
        case 1://wachten op aan knop
            PORT_buzzer &= ~(1<<buzzer);
     b00:	82 e0       	ldi	r24, 0x02	; 2
     b02:	91 e0       	ldi	r25, 0x01	; 1
     b04:	fc 01       	movw	r30, r24
     b06:	20 81       	ld	r18, Z

00000b08 <.Loc.85>:
     b08:	82 e0       	ldi	r24, 0x02	; 2
     b0a:	91 e0       	ldi	r25, 0x01	; 1

00000b0c <.Loc.86>:
     b0c:	27 7f       	andi	r18, 0xF7	; 247
     b0e:	dc 01       	movw	r26, r24
     b10:	2c 93       	st	X, r18

00000b12 <.Loc.87>:
            PORT_LED |= (1<<LED_2);
     b12:	82 e0       	ldi	r24, 0x02	; 2
     b14:	91 e0       	ldi	r25, 0x01	; 1
     b16:	fc 01       	movw	r30, r24
     b18:	20 81       	ld	r18, Z
     b1a:	82 e0       	ldi	r24, 0x02	; 2
     b1c:	91 e0       	ldi	r25, 0x01	; 1

00000b1e <.Loc.88>:
     b1e:	20 62       	ori	r18, 0x20	; 32
     b20:	dc 01       	movw	r26, r24
     b22:	2c 93       	st	X, r18

00000b24 <.Loc.89>:
            PORT_LED |= (1<<LED_1);
     b24:	82 e0       	ldi	r24, 0x02	; 2
     b26:	91 e0       	ldi	r25, 0x01	; 1
     b28:	fc 01       	movw	r30, r24
     b2a:	20 81       	ld	r18, Z
     b2c:	82 e0       	ldi	r24, 0x02	; 2
     b2e:	91 e0       	ldi	r25, 0x01	; 1

00000b30 <.Loc.90>:
     b30:	20 61       	ori	r18, 0x10	; 16
     b32:	dc 01       	movw	r26, r24
     b34:	2c 93       	st	X, r18

00000b36 <.Loc.91>:
            PORT_buzzer &= ~(1<<buzzer);
     b36:	82 e0       	ldi	r24, 0x02	; 2
     b38:	91 e0       	ldi	r25, 0x01	; 1
     b3a:	fc 01       	movw	r30, r24
     b3c:	20 81       	ld	r18, Z

00000b3e <.Loc.92>:
     b3e:	82 e0       	ldi	r24, 0x02	; 2
     b40:	91 e0       	ldi	r25, 0x01	; 1

00000b42 <.Loc.93>:
     b42:	27 7f       	andi	r18, 0xF7	; 247
     b44:	dc 01       	movw	r26, r24
     b46:	2c 93       	st	X, r18

00000b48 <.Loc.94>:
            h_bridgeL_set_percentage(snelheiduit);//motoren uit
     b48:	83 e6       	ldi	r24, 0x63	; 99
     b4a:	0e 94 f6 02 	call	0x5ec	; 0x5ec <h_bridgeL_set_percentage>

00000b4e <.Loc.95>:
            h_bridgeR_set_percentage(snelheiduit);
     b4e:	83 e6       	ldi	r24, 0x63	; 99
     b50:	0e 94 b7 02 	call	0x56e	; 0x56e <h_bridgeR_set_percentage>

00000b54 <.Loc.96>:
            if(Bluetooth_Getal == 3)//Aanknop
     b54:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <Bluetooth_Getal>
     b58:	90 91 21 02 	lds	r25, 0x0221	; 0x800221 <Bluetooth_Getal+0x1>

00000b5c <.Loc.97>:
     b5c:	83 30       	cpi	r24, 0x03	; 3
     b5e:	91 05       	cpc	r25, r1
     b60:	09 f0       	breq	.+2      	; 0xb64 <.Loc.98>

00000b62 <L0^A>:
     b62:	d5 c2       	rjmp	.+1450   	; 0x110e <.L68>

00000b64 <.Loc.98>:
            {
                toestand = 2;
     b64:	82 e0       	ldi	r24, 0x02	; 2
     b66:	90 e0       	ldi	r25, 0x00	; 0
     b68:	9a 83       	std	Y+2, r25	; 0x02
     b6a:	89 83       	std	Y+1, r24	; 0x01

00000b6c <.Loc.99>:
            }
            break;
     b6c:	d0 c2       	rjmp	.+1440   	; 0x110e <.L68>

00000b6e <.L20>:
        case 2://toestand keuze case
            PORT_buzzer &= ~(1<<buzzer);
     b6e:	82 e0       	ldi	r24, 0x02	; 2
     b70:	91 e0       	ldi	r25, 0x01	; 1
     b72:	fc 01       	movw	r30, r24
     b74:	20 81       	ld	r18, Z

00000b76 <.Loc.101>:
     b76:	82 e0       	ldi	r24, 0x02	; 2
     b78:	91 e0       	ldi	r25, 0x01	; 1

00000b7a <.Loc.102>:
     b7a:	27 7f       	andi	r18, 0xF7	; 247
     b7c:	dc 01       	movw	r26, r24
     b7e:	2c 93       	st	X, r18

00000b80 <.Loc.103>:
            PORT_LED &= ~(1<<LED_2);
     b80:	82 e0       	ldi	r24, 0x02	; 2
     b82:	91 e0       	ldi	r25, 0x01	; 1
     b84:	fc 01       	movw	r30, r24
     b86:	20 81       	ld	r18, Z

00000b88 <.Loc.104>:
     b88:	82 e0       	ldi	r24, 0x02	; 2
     b8a:	91 e0       	ldi	r25, 0x01	; 1

00000b8c <.Loc.105>:
     b8c:	2f 7d       	andi	r18, 0xDF	; 223
     b8e:	dc 01       	movw	r26, r24
     b90:	2c 93       	st	X, r18

00000b92 <.Loc.106>:
            PORT_LED |= (1<<LED_1);
     b92:	82 e0       	ldi	r24, 0x02	; 2
     b94:	91 e0       	ldi	r25, 0x01	; 1
     b96:	fc 01       	movw	r30, r24
     b98:	20 81       	ld	r18, Z
     b9a:	82 e0       	ldi	r24, 0x02	; 2
     b9c:	91 e0       	ldi	r25, 0x01	; 1

00000b9e <.Loc.107>:
     b9e:	20 61       	ori	r18, 0x10	; 16
     ba0:	dc 01       	movw	r26, r24
     ba2:	2c 93       	st	X, r18

00000ba4 <.Loc.108>:
            PORT_buzzer &= ~(1<<buzzer);
     ba4:	82 e0       	ldi	r24, 0x02	; 2
     ba6:	91 e0       	ldi	r25, 0x01	; 1
     ba8:	fc 01       	movw	r30, r24
     baa:	20 81       	ld	r18, Z

00000bac <.Loc.109>:
     bac:	82 e0       	ldi	r24, 0x02	; 2
     bae:	91 e0       	ldi	r25, 0x01	; 1

00000bb0 <.Loc.110>:
     bb0:	27 7f       	andi	r18, 0xF7	; 247
     bb2:	dc 01       	movw	r26, r24
     bb4:	2c 93       	st	X, r18

00000bb6 <.Loc.111>:
            if(Bluetooth_Getal == 4)//Autonoomknop
     bb6:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <Bluetooth_Getal>
     bba:	90 91 21 02 	lds	r25, 0x0221	; 0x800221 <Bluetooth_Getal+0x1>

00000bbe <.Loc.112>:
     bbe:	84 30       	cpi	r24, 0x04	; 4
     bc0:	91 05       	cpc	r25, r1
     bc2:	09 f0       	breq	.+2      	; 0xbc6 <.Loc.113>

00000bc4 <L0^A>:
     bc4:	a6 c2       	rjmp	.+1356   	; 0x1112 <.L69>

00000bc6 <.Loc.113>:
            {
                toestand = 3;
     bc6:	83 e0       	ldi	r24, 0x03	; 3
     bc8:	90 e0       	ldi	r25, 0x00	; 0
     bca:	9a 83       	std	Y+2, r25	; 0x02
     bcc:	89 83       	std	Y+1, r24	; 0x01

00000bce <.Loc.114>:
            }
//            if(Bluetooth_Getal == 5)//Volgknop
//            {
//                toestand = 11;
//            }
            break;
     bce:	a1 c2       	rjmp	.+1346   	; 0x1112 <.L69>

00000bd0 <.L19>:
        case 3://rijstrook inrijden
            PORT_LED &= ~(1<<LED_2);
     bd0:	82 e0       	ldi	r24, 0x02	; 2
     bd2:	91 e0       	ldi	r25, 0x01	; 1
     bd4:	fc 01       	movw	r30, r24
     bd6:	20 81       	ld	r18, Z

00000bd8 <.Loc.116>:
     bd8:	82 e0       	ldi	r24, 0x02	; 2
     bda:	91 e0       	ldi	r25, 0x01	; 1

00000bdc <.Loc.117>:
     bdc:	2f 7d       	andi	r18, 0xDF	; 223
     bde:	dc 01       	movw	r26, r24
     be0:	2c 93       	st	X, r18

00000be2 <.Loc.118>:
            PORT_LED &= ~(1<<LED_1);
     be2:	82 e0       	ldi	r24, 0x02	; 2
     be4:	91 e0       	ldi	r25, 0x01	; 1
     be6:	fc 01       	movw	r30, r24
     be8:	20 81       	ld	r18, Z

00000bea <.Loc.119>:
     bea:	82 e0       	ldi	r24, 0x02	; 2
     bec:	91 e0       	ldi	r25, 0x01	; 1

00000bee <.Loc.120>:
     bee:	2f 7e       	andi	r18, 0xEF	; 239
     bf0:	dc 01       	movw	r26, r24
     bf2:	2c 93       	st	X, r18

00000bf4 <.Loc.121>:
            PORT_buzzer &= ~(1<<buzzer);
     bf4:	82 e0       	ldi	r24, 0x02	; 2
     bf6:	91 e0       	ldi	r25, 0x01	; 1
     bf8:	fc 01       	movw	r30, r24
     bfa:	20 81       	ld	r18, Z

00000bfc <.Loc.122>:
     bfc:	82 e0       	ldi	r24, 0x02	; 2
     bfe:	91 e0       	ldi	r25, 0x01	; 1

00000c00 <.Loc.123>:
     c00:	27 7f       	andi	r18, 0xF7	; 247
     c02:	dc 01       	movw	r26, r24
     c04:	2c 93       	st	X, r18

00000c06 <.Loc.124>:
            h_bridgeR_set_percentage(snelheidrechtdoor);
     c06:	8c e3       	ldi	r24, 0x3C	; 60
     c08:	0e 94 b7 02 	call	0x56e	; 0x56e <h_bridgeR_set_percentage>

00000c0c <.Loc.125>:
            h_bridgeL_set_percentage(snelheidrechtdoor);
     c0c:	8c e3       	ldi	r24, 0x3C	; 60
     c0e:	0e 94 f6 02 	call	0x5ec	; 0x5ec <h_bridgeL_set_percentage>

00000c12 <.Loc.126>:
            rechtdoorrijden();
     c12:	0e 94 2e 01 	call	0x25c	; 0x25c <rechtdoorrijden>

00000c16 <.Loc.127>:
            if(((IRregister & (1 << IRonderrechts)) == 0) && ((IRregister & (1 << IRonderlinks)) == 0))
     c16:	86 e2       	ldi	r24, 0x26	; 38
     c18:	90 e0       	ldi	r25, 0x00	; 0
     c1a:	fc 01       	movw	r30, r24
     c1c:	80 81       	ld	r24, Z

00000c1e <.Loc.128>:
     c1e:	88 2f       	mov	r24, r24
     c20:	90 e0       	ldi	r25, 0x00	; 0
     c22:	84 70       	andi	r24, 0x04	; 4
     c24:	99 27       	eor	r25, r25

00000c26 <.Loc.129>:
     c26:	00 97       	sbiw	r24, 0x00	; 0
     c28:	09 f0       	breq	.+2      	; 0xc2c <.Loc.130>

00000c2a <L0^A>:
     c2a:	75 c2       	rjmp	.+1258   	; 0x1116 <.L70>

00000c2c <.Loc.130>:
     c2c:	86 e2       	ldi	r24, 0x26	; 38
     c2e:	90 e0       	ldi	r25, 0x00	; 0
     c30:	dc 01       	movw	r26, r24
     c32:	8c 91       	ld	r24, X

00000c34 <.Loc.131>:
     c34:	88 2f       	mov	r24, r24
     c36:	90 e0       	ldi	r25, 0x00	; 0
     c38:	88 70       	andi	r24, 0x08	; 8
     c3a:	99 27       	eor	r25, r25

00000c3c <.Loc.132>:
     c3c:	00 97       	sbiw	r24, 0x00	; 0
     c3e:	09 f0       	breq	.+2      	; 0xc42 <.Loc.133>

00000c40 <L0^A>:
     c40:	6a c2       	rjmp	.+1236   	; 0x1116 <.L70>

00000c42 <.Loc.133>:
            {
                toestand = 4;
     c42:	84 e0       	ldi	r24, 0x04	; 4
     c44:	90 e0       	ldi	r25, 0x00	; 0
     c46:	9a 83       	std	Y+2, r25	; 0x02
     c48:	89 83       	std	Y+1, r24	; 0x01

00000c4a <.Loc.134>:
            }
            break;
     c4a:	65 c2       	rjmp	.+1226   	; 0x1116 <.L70>

00000c4c <.L18>:
        case 4://Tussen de balken rechtdoor
            //Motoren naar rechtdoor
            rechtdoorrijden();
     c4c:	0e 94 2e 01 	call	0x25c	; 0x25c <rechtdoorrijden>

00000c50 <.Loc.136>:
            h_bridgeR_set_percentage(snelheidrechtdoor);
     c50:	8c e3       	ldi	r24, 0x3C	; 60
     c52:	0e 94 b7 02 	call	0x56e	; 0x56e <h_bridgeR_set_percentage>

00000c56 <.Loc.137>:
            h_bridgeL_set_percentage(snelheidrechtdoor);
     c56:	8c e3       	ldi	r24, 0x3C	; 60
     c58:	0e 94 f6 02 	call	0x5ec	; 0x5ec <h_bridgeL_set_percentage>

00000c5c <.Loc.138>:
            if(IRregister & (1 << IRonderrechts))
     c5c:	86 e2       	ldi	r24, 0x26	; 38
     c5e:	90 e0       	ldi	r25, 0x00	; 0
     c60:	fc 01       	movw	r30, r24
     c62:	80 81       	ld	r24, Z

00000c64 <.Loc.139>:
     c64:	88 2f       	mov	r24, r24
     c66:	90 e0       	ldi	r25, 0x00	; 0
     c68:	84 70       	andi	r24, 0x04	; 4
     c6a:	99 27       	eor	r25, r25

00000c6c <.Loc.140>:
     c6c:	00 97       	sbiw	r24, 0x00	; 0
     c6e:	29 f0       	breq	.+10     	; 0xc7a <.L30>

00000c70 <.Loc.141>:
            {
                toestand = 5;
     c70:	85 e0       	ldi	r24, 0x05	; 5
     c72:	90 e0       	ldi	r25, 0x00	; 0
     c74:	9a 83       	std	Y+2, r25	; 0x02
     c76:	89 83       	std	Y+1, r24	; 0x01

00000c78 <.Loc.142>:
            }
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
            {
                //toestand = 7;
            }
            break;
     c78:	50 c2       	rjmp	.+1184   	; 0x111a <.L71>

00000c7a <.L30>:
            else if(IRregister & (1 << IRonderlinks))
     c7a:	86 e2       	ldi	r24, 0x26	; 38
     c7c:	90 e0       	ldi	r25, 0x00	; 0
     c7e:	dc 01       	movw	r26, r24
     c80:	8c 91       	ld	r24, X

00000c82 <.Loc.144>:
     c82:	88 2f       	mov	r24, r24
     c84:	90 e0       	ldi	r25, 0x00	; 0
     c86:	88 70       	andi	r24, 0x08	; 8
     c88:	99 27       	eor	r25, r25

00000c8a <.Loc.145>:
     c8a:	00 97       	sbiw	r24, 0x00	; 0
     c8c:	29 f0       	breq	.+10     	; 0xc98 <.L32>

00000c8e <.Loc.146>:
                toestand = 6;
     c8e:	86 e0       	ldi	r24, 0x06	; 6
     c90:	90 e0       	ldi	r25, 0x00	; 0
     c92:	9a 83       	std	Y+2, r25	; 0x02
     c94:	89 83       	std	Y+1, r24	; 0x01

00000c96 <.Loc.147>:
            break;
     c96:	41 c2       	rjmp	.+1154   	; 0x111a <.L71>

00000c98 <.L32>:
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
     c98:	86 e2       	ldi	r24, 0x26	; 38
     c9a:	90 e0       	ldi	r25, 0x00	; 0
     c9c:	fc 01       	movw	r30, r24
     c9e:	80 81       	ld	r24, Z

00000ca0 <.Loc.149>:
     ca0:	88 2f       	mov	r24, r24
     ca2:	90 e0       	ldi	r25, 0x00	; 0
     ca4:	84 70       	andi	r24, 0x04	; 4
     ca6:	99 27       	eor	r25, r25

00000ca8 <.Loc.150>:
     ca8:	00 97       	sbiw	r24, 0x00	; 0
     caa:	09 f4       	brne	.+2      	; 0xcae <.Loc.151>

00000cac <L0^A>:
     cac:	36 c2       	rjmp	.+1132   	; 0x111a <.L71>

00000cae <.Loc.151>:
     cae:	86 e2       	ldi	r24, 0x26	; 38
     cb0:	90 e0       	ldi	r25, 0x00	; 0
     cb2:	dc 01       	movw	r26, r24
     cb4:	8c 91       	ld	r24, X

00000cb6 <.Loc.152>:
            break;
     cb6:	31 c2       	rjmp	.+1122   	; 0x111a <.L71>

00000cb8 <.L17>:
        case 5:
            //Motoren naar rechts
            h_bridgeR_set_percentage(snelheidhard);
     cb8:	87 e3       	ldi	r24, 0x37	; 55
     cba:	0e 94 b7 02 	call	0x56e	; 0x56e <h_bridgeR_set_percentage>

00000cbe <.Loc.154>:
            h_bridgeL_set_percentage(snelheidzacht);
     cbe:	81 e4       	ldi	r24, 0x41	; 65
     cc0:	0e 94 f6 02 	call	0x5ec	; 0x5ec <h_bridgeL_set_percentage>

00000cc4 <.Loc.155>:
            if(((IRregister & (1 << IRonderrechts)) == 0) && ((IRregister & (1 << IRonderlinks)) == 0))
     cc4:	86 e2       	ldi	r24, 0x26	; 38
     cc6:	90 e0       	ldi	r25, 0x00	; 0
     cc8:	fc 01       	movw	r30, r24
     cca:	80 81       	ld	r24, Z

00000ccc <.Loc.156>:
     ccc:	88 2f       	mov	r24, r24
     cce:	90 e0       	ldi	r25, 0x00	; 0
     cd0:	84 70       	andi	r24, 0x04	; 4
     cd2:	99 27       	eor	r25, r25

00000cd4 <.Loc.157>:
     cd4:	00 97       	sbiw	r24, 0x00	; 0
     cd6:	79 f4       	brne	.+30     	; 0xcf6 <.L33>

00000cd8 <.Loc.158>:
     cd8:	86 e2       	ldi	r24, 0x26	; 38
     cda:	90 e0       	ldi	r25, 0x00	; 0
     cdc:	dc 01       	movw	r26, r24
     cde:	8c 91       	ld	r24, X

00000ce0 <.Loc.159>:
     ce0:	88 2f       	mov	r24, r24
     ce2:	90 e0       	ldi	r25, 0x00	; 0
     ce4:	88 70       	andi	r24, 0x08	; 8
     ce6:	99 27       	eor	r25, r25

00000ce8 <.Loc.160>:
     ce8:	00 97       	sbiw	r24, 0x00	; 0
     cea:	29 f4       	brne	.+10     	; 0xcf6 <.L33>

00000cec <.Loc.161>:
            {
                toestand = 4;
     cec:	84 e0       	ldi	r24, 0x04	; 4
     cee:	90 e0       	ldi	r25, 0x00	; 0
     cf0:	9a 83       	std	Y+2, r25	; 0x02
     cf2:	89 83       	std	Y+1, r24	; 0x01

00000cf4 <.Loc.162>:
            }
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
            {
                //toestand = 7;
            }
            break;
     cf4:	14 c2       	rjmp	.+1064   	; 0x111e <.L72>

00000cf6 <.L33>:
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
     cf6:	86 e2       	ldi	r24, 0x26	; 38
     cf8:	90 e0       	ldi	r25, 0x00	; 0
     cfa:	fc 01       	movw	r30, r24
     cfc:	80 81       	ld	r24, Z

00000cfe <.Loc.164>:
     cfe:	88 2f       	mov	r24, r24
     d00:	90 e0       	ldi	r25, 0x00	; 0
     d02:	84 70       	andi	r24, 0x04	; 4
     d04:	99 27       	eor	r25, r25

00000d06 <.Loc.165>:
     d06:	00 97       	sbiw	r24, 0x00	; 0
     d08:	09 f4       	brne	.+2      	; 0xd0c <.Loc.166>

00000d0a <L0^A>:
     d0a:	09 c2       	rjmp	.+1042   	; 0x111e <.L72>

00000d0c <.Loc.166>:
     d0c:	86 e2       	ldi	r24, 0x26	; 38
     d0e:	90 e0       	ldi	r25, 0x00	; 0
     d10:	dc 01       	movw	r26, r24
     d12:	8c 91       	ld	r24, X

00000d14 <.Loc.167>:
            break;
     d14:	04 c2       	rjmp	.+1032   	; 0x111e <.L72>

00000d16 <.L16>:
        case 6:
            //Motoren naar links
            h_bridgeR_set_percentage(snelheidzacht);
     d16:	81 e4       	ldi	r24, 0x41	; 65
     d18:	0e 94 b7 02 	call	0x56e	; 0x56e <h_bridgeR_set_percentage>

00000d1c <.Loc.169>:
            h_bridgeL_set_percentage(snelheidhard);
     d1c:	87 e3       	ldi	r24, 0x37	; 55
     d1e:	0e 94 f6 02 	call	0x5ec	; 0x5ec <h_bridgeL_set_percentage>

00000d22 <.Loc.170>:
            if(((IRregister & (1 << IRonderrechts)) == 0) && ((IRregister & (1 << IRonderlinks)) == 0))
     d22:	86 e2       	ldi	r24, 0x26	; 38
     d24:	90 e0       	ldi	r25, 0x00	; 0
     d26:	fc 01       	movw	r30, r24
     d28:	80 81       	ld	r24, Z

00000d2a <.Loc.171>:
     d2a:	88 2f       	mov	r24, r24
     d2c:	90 e0       	ldi	r25, 0x00	; 0
     d2e:	84 70       	andi	r24, 0x04	; 4
     d30:	99 27       	eor	r25, r25

00000d32 <.Loc.172>:
     d32:	00 97       	sbiw	r24, 0x00	; 0
     d34:	79 f4       	brne	.+30     	; 0xd54 <.L35>

00000d36 <.Loc.173>:
     d36:	86 e2       	ldi	r24, 0x26	; 38
     d38:	90 e0       	ldi	r25, 0x00	; 0
     d3a:	dc 01       	movw	r26, r24
     d3c:	8c 91       	ld	r24, X

00000d3e <.Loc.174>:
     d3e:	88 2f       	mov	r24, r24
     d40:	90 e0       	ldi	r25, 0x00	; 0
     d42:	88 70       	andi	r24, 0x08	; 8
     d44:	99 27       	eor	r25, r25

00000d46 <.Loc.175>:
     d46:	00 97       	sbiw	r24, 0x00	; 0
     d48:	29 f4       	brne	.+10     	; 0xd54 <.L35>

00000d4a <.Loc.176>:
            {
                toestand = 4;
     d4a:	84 e0       	ldi	r24, 0x04	; 4
     d4c:	90 e0       	ldi	r25, 0x00	; 0
     d4e:	9a 83       	std	Y+2, r25	; 0x02
     d50:	89 83       	std	Y+1, r24	; 0x01

00000d52 <.Loc.177>:
            }
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
            {
                //toestand = 7;
            }
            break;
     d52:	e7 c1       	rjmp	.+974    	; 0x1122 <.L73>

00000d54 <.L35>:
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
     d54:	86 e2       	ldi	r24, 0x26	; 38
     d56:	90 e0       	ldi	r25, 0x00	; 0
     d58:	fc 01       	movw	r30, r24
     d5a:	80 81       	ld	r24, Z

00000d5c <.Loc.179>:
     d5c:	88 2f       	mov	r24, r24
     d5e:	90 e0       	ldi	r25, 0x00	; 0
     d60:	84 70       	andi	r24, 0x04	; 4
     d62:	99 27       	eor	r25, r25

00000d64 <.Loc.180>:
     d64:	00 97       	sbiw	r24, 0x00	; 0
     d66:	09 f4       	brne	.+2      	; 0xd6a <.Loc.181>

00000d68 <L0^A>:
     d68:	dc c1       	rjmp	.+952    	; 0x1122 <.L73>

00000d6a <.Loc.181>:
     d6a:	86 e2       	ldi	r24, 0x26	; 38
     d6c:	90 e0       	ldi	r25, 0x00	; 0
     d6e:	dc 01       	movw	r26, r24
     d70:	8c 91       	ld	r24, X

00000d72 <.Loc.182>:
            break;
     d72:	d7 c1       	rjmp	.+942    	; 0x1122 <.L73>

00000d74 <.L15>:
     d74:	80 e0       	ldi	r24, 0x00	; 0
     d76:	90 e0       	ldi	r25, 0x00	; 0
     d78:	aa ef       	ldi	r26, 0xFA	; 250
     d7a:	b4 e4       	ldi	r27, 0x44	; 68
     d7c:	8f 83       	std	Y+7, r24	; 0x07
     d7e:	98 87       	std	Y+8, r25	; 0x08
     d80:	a9 87       	std	Y+9, r26	; 0x09
     d82:	ba 87       	std	Y+10, r27	; 0x0a

00000d84 <.LBB62>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     d84:	20 e0       	ldi	r18, 0x00	; 0
     d86:	30 e0       	ldi	r19, 0x00	; 0
     d88:	4a e7       	ldi	r20, 0x7A	; 122
     d8a:	55 e4       	ldi	r21, 0x45	; 69
     d8c:	6f 81       	ldd	r22, Y+7	; 0x07
     d8e:	78 85       	ldd	r23, Y+8	; 0x08
     d90:	89 85       	ldd	r24, Y+9	; 0x09
     d92:	9a 85       	ldd	r25, Y+10	; 0x0a
     d94:	0e 94 cb 10 	call	0x2196	; 0x2196 <__mulsf3>
     d98:	6b a7       	std	Y+43, r22	; 0x2b
     d9a:	7c a7       	std	Y+44, r23	; 0x2c
     d9c:	8d a7       	std	Y+45, r24	; 0x2d
     d9e:	9e a7       	std	Y+46, r25	; 0x2e
     da0:	8b a5       	ldd	r24, Y+43	; 0x2b
     da2:	9c a5       	ldd	r25, Y+44	; 0x2c
     da4:	ad a5       	ldd	r26, Y+45	; 0x2d
     da6:	be a5       	ldd	r27, Y+46	; 0x2e
     da8:	8b 87       	std	Y+11, r24	; 0x0b
     daa:	9c 87       	std	Y+12, r25	; 0x0c
     dac:	ad 87       	std	Y+13, r26	; 0x0d
     dae:	be 87       	std	Y+14, r27	; 0x0e

00000db0 <.Loc.184>:
	if (__tmp < 1.0)
     db0:	20 e0       	ldi	r18, 0x00	; 0
     db2:	30 e0       	ldi	r19, 0x00	; 0
     db4:	40 e8       	ldi	r20, 0x80	; 128
     db6:	5f e3       	ldi	r21, 0x3F	; 63
     db8:	6b 85       	ldd	r22, Y+11	; 0x0b
     dba:	7c 85       	ldd	r23, Y+12	; 0x0c
     dbc:	8d 85       	ldd	r24, Y+13	; 0x0d
     dbe:	9e 85       	ldd	r25, Y+14	; 0x0e
     dc0:	0e 94 67 0f 	call	0x1ece	; 0x1ece <__cmpsf2>
     dc4:	88 23       	and	r24, r24
     dc6:	2c f4       	brge	.+10     	; 0xdd2 <.L62>

00000dc8 <.Loc.185>:
		__ticks = 1;
     dc8:	81 e0       	ldi	r24, 0x01	; 1
     dca:	90 e0       	ldi	r25, 0x00	; 0
     dcc:	98 8b       	std	Y+16, r25	; 0x10
     dce:	8f 87       	std	Y+15, r24	; 0x0f
     dd0:	55 c0       	rjmp	.+170    	; 0xe7c <.L39>

00000dd2 <.L62>:
	else if (__tmp > 65535)
     dd2:	20 e0       	ldi	r18, 0x00	; 0
     dd4:	3f ef       	ldi	r19, 0xFF	; 255
     dd6:	4f e7       	ldi	r20, 0x7F	; 127
     dd8:	57 e4       	ldi	r21, 0x47	; 71
     dda:	6b 85       	ldd	r22, Y+11	; 0x0b
     ddc:	7c 85       	ldd	r23, Y+12	; 0x0c
     dde:	8d 85       	ldd	r24, Y+13	; 0x0d
     de0:	9e 85       	ldd	r25, Y+14	; 0x0e
     de2:	0e 94 c6 10 	call	0x218c	; 0x218c <__gesf2>
     de6:	88 23       	and	r24, r24
     de8:	d9 f1       	breq	.+118    	; 0xe60 <.L63>
     dea:	d4 f1       	brlt	.+116    	; 0xe60 <.L63>

00000dec <.Loc.187>:
		__ticks = (uint16_t) (__ms * 10.0);
     dec:	20 e0       	ldi	r18, 0x00	; 0
     dee:	30 e0       	ldi	r19, 0x00	; 0
     df0:	40 e2       	ldi	r20, 0x20	; 32
     df2:	51 e4       	ldi	r21, 0x41	; 65
     df4:	6f 81       	ldd	r22, Y+7	; 0x07
     df6:	78 85       	ldd	r23, Y+8	; 0x08
     df8:	89 85       	ldd	r24, Y+9	; 0x09
     dfa:	9a 85       	ldd	r25, Y+10	; 0x0a
     dfc:	0e 94 cb 10 	call	0x2196	; 0x2196 <__mulsf3>
     e00:	6f a7       	std	Y+47, r22	; 0x2f
     e02:	78 ab       	std	Y+48, r23	; 0x30
     e04:	89 ab       	std	Y+49, r24	; 0x31
     e06:	9a ab       	std	Y+50, r25	; 0x32
     e08:	8f a5       	ldd	r24, Y+47	; 0x2f
     e0a:	98 a9       	ldd	r25, Y+48	; 0x30
     e0c:	a9 a9       	ldd	r26, Y+49	; 0x31
     e0e:	ba a9       	ldd	r27, Y+50	; 0x32
     e10:	8b a3       	std	Y+35, r24	; 0x23
     e12:	9c a3       	std	Y+36, r25	; 0x24
     e14:	ad a3       	std	Y+37, r26	; 0x25
     e16:	be a3       	std	Y+38, r27	; 0x26

00000e18 <.Loc.188>:
     e18:	6b a1       	ldd	r22, Y+35	; 0x23
     e1a:	7c a1       	ldd	r23, Y+36	; 0x24
     e1c:	8d a1       	ldd	r24, Y+37	; 0x25
     e1e:	9e a1       	ldd	r25, Y+38	; 0x26
     e20:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <__fixunssfsi>
     e24:	6b ab       	std	Y+51, r22	; 0x33
     e26:	7c ab       	std	Y+52, r23	; 0x34
     e28:	8d ab       	std	Y+53, r24	; 0x35
     e2a:	9e ab       	std	Y+54, r25	; 0x36
     e2c:	ab a9       	ldd	r26, Y+51	; 0x33
     e2e:	bc a9       	ldd	r27, Y+52	; 0x34
     e30:	b8 8b       	std	Y+16, r27	; 0x10
     e32:	af 87       	std	Y+15, r26	; 0x0f

00000e34 <.Loc.189>:
		while(__ticks)
     e34:	10 c0       	rjmp	.+32     	; 0xe56 <.L42>

00000e36 <.L43>:
     e36:	80 e9       	ldi	r24, 0x90	; 144
     e38:	91 e0       	ldi	r25, 0x01	; 1
     e3a:	9a 8b       	std	Y+18, r25	; 0x12
     e3c:	89 8b       	std	Y+17, r24	; 0x11

00000e3e <.LBB64>:
     e3e:	89 89       	ldd	r24, Y+17	; 0x11
     e40:	9a 89       	ldd	r25, Y+18	; 0x12

00000e42 <.L1^B1>:
     e42:	01 97       	sbiw	r24, 0x01	; 1
     e44:	f1 f7       	brne	.-4      	; 0xe42 <.L1^B1>
     e46:	9a 8b       	std	Y+18, r25	; 0x12
     e48:	89 8b       	std	Y+17, r24	; 0x11

00000e4a <.Loc.191>:
	...

00000e4c <.LBE64>:
			__ticks --;
     e4c:	8f 85       	ldd	r24, Y+15	; 0x0f
     e4e:	98 89       	ldd	r25, Y+16	; 0x10
     e50:	01 97       	sbiw	r24, 0x01	; 1
     e52:	98 8b       	std	Y+16, r25	; 0x10
     e54:	8f 87       	std	Y+15, r24	; 0x0f

00000e56 <.L42>:
		while(__ticks)
     e56:	8f 85       	ldd	r24, Y+15	; 0x0f
     e58:	98 89       	ldd	r25, Y+16	; 0x10
     e5a:	00 97       	sbiw	r24, 0x00	; 0
     e5c:	61 f7       	brne	.-40     	; 0xe36 <.L43>

00000e5e <.Loc.194>:
		return;
     e5e:	19 c0       	rjmp	.+50     	; 0xe92 <.L44>

00000e60 <.L63>:
		__ticks = (uint16_t)__tmp;
     e60:	6b 85       	ldd	r22, Y+11	; 0x0b
     e62:	7c 85       	ldd	r23, Y+12	; 0x0c
     e64:	8d 85       	ldd	r24, Y+13	; 0x0d
     e66:	9e 85       	ldd	r25, Y+14	; 0x0e
     e68:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <__fixunssfsi>
     e6c:	6f ab       	std	Y+55, r22	; 0x37
     e6e:	78 af       	std	Y+56, r23	; 0x38
     e70:	89 af       	std	Y+57, r24	; 0x39
     e72:	9a af       	std	Y+58, r25	; 0x3a
     e74:	ef a9       	ldd	r30, Y+55	; 0x37
     e76:	f8 ad       	ldd	r31, Y+56	; 0x38
     e78:	f8 8b       	std	Y+16, r31	; 0x10
     e7a:	ef 87       	std	Y+15, r30	; 0x0f

00000e7c <.L39>:
     e7c:	8f 85       	ldd	r24, Y+15	; 0x0f
     e7e:	98 89       	ldd	r25, Y+16	; 0x10
     e80:	9c 8b       	std	Y+20, r25	; 0x14
     e82:	8b 8b       	std	Y+19, r24	; 0x13

00000e84 <.LBB66>:
     e84:	8b 89       	ldd	r24, Y+19	; 0x13
     e86:	9c 89       	ldd	r25, Y+20	; 0x14

00000e88 <.L1^B2>:
     e88:	01 97       	sbiw	r24, 0x01	; 1
     e8a:	f1 f7       	brne	.-4      	; 0xe88 <.L1^B2>
     e8c:	9c 8b       	std	Y+20, r25	; 0x14
     e8e:	8b 8b       	std	Y+19, r24	; 0x13

00000e90 <.Loc.197>:
	...

00000e92 <.L44>:
        case 7://Balken niet meer in zicht en bocht maken
            _delay_ms(2000);
            h_bridgeR_set_percentage(snelheidhard);
     e92:	87 e3       	ldi	r24, 0x37	; 55
     e94:	0e 94 b7 02 	call	0x56e	; 0x56e <h_bridgeR_set_percentage>

00000e98 <.Loc.199>:
            h_bridgeL_set_percentage(snelheidzacht);
     e98:	81 e4       	ldi	r24, 0x41	; 65
     e9a:	0e 94 f6 02 	call	0x5ec	; 0x5ec <h_bridgeL_set_percentage>

00000e9e <.Loc.200>:
            if(((IRregister & (1 << IRonderlinks)) == 0) && ((IRregister & (1 << IRonderrechts)) == 0))
     e9e:	86 e2       	ldi	r24, 0x26	; 38
     ea0:	90 e0       	ldi	r25, 0x00	; 0
     ea2:	dc 01       	movw	r26, r24
     ea4:	8c 91       	ld	r24, X

00000ea6 <.Loc.201>:
     ea6:	88 2f       	mov	r24, r24
     ea8:	90 e0       	ldi	r25, 0x00	; 0
     eaa:	88 70       	andi	r24, 0x08	; 8
     eac:	99 27       	eor	r25, r25

00000eae <.Loc.202>:
     eae:	00 97       	sbiw	r24, 0x00	; 0
     eb0:	09 f0       	breq	.+2      	; 0xeb4 <.Loc.203>

00000eb2 <L0^A>:
     eb2:	39 c1       	rjmp	.+626    	; 0x1126 <.L74>

00000eb4 <.Loc.203>:
     eb4:	86 e2       	ldi	r24, 0x26	; 38
     eb6:	90 e0       	ldi	r25, 0x00	; 0
     eb8:	fc 01       	movw	r30, r24
     eba:	80 81       	ld	r24, Z

00000ebc <.Loc.204>:
     ebc:	88 2f       	mov	r24, r24
     ebe:	90 e0       	ldi	r25, 0x00	; 0
     ec0:	84 70       	andi	r24, 0x04	; 4
     ec2:	99 27       	eor	r25, r25

00000ec4 <.Loc.205>:
     ec4:	00 97       	sbiw	r24, 0x00	; 0
     ec6:	09 f0       	breq	.+2      	; 0xeca <.Loc.206>

00000ec8 <L0^A>:
     ec8:	2e c1       	rjmp	.+604    	; 0x1126 <.L74>

00000eca <.Loc.206>:
            {
                toestand = 4;
     eca:	84 e0       	ldi	r24, 0x04	; 4
     ecc:	90 e0       	ldi	r25, 0x00	; 0
     ece:	9a 83       	std	Y+2, r25	; 0x02
     ed0:	89 83       	std	Y+1, r24	; 0x01

00000ed2 <.Loc.207>:
            }
            break;
     ed2:	29 c1       	rjmp	.+594    	; 0x1126 <.L74>

00000ed4 <.L14>:
        case 8://signaleren
            h_bridgeR_set_percentage(snelheiduit);
     ed4:	83 e6       	ldi	r24, 0x63	; 99
     ed6:	0e 94 b7 02 	call	0x56e	; 0x56e <h_bridgeR_set_percentage>

00000eda <.Loc.209>:
            h_bridgeL_set_percentage(snelheiduit);
     eda:	83 e6       	ldi	r24, 0x63	; 99
     edc:	0e 94 f6 02 	call	0x5ec	; 0x5ec <h_bridgeL_set_percentage>

00000ee0 <.Loc.210>:
            signaal_geven();
     ee0:	0e 94 de 01 	call	0x3bc	; 0x3bc <signaal_geven>

00000ee4 <.Loc.211>:
            toestand = 4;
     ee4:	84 e0       	ldi	r24, 0x04	; 4
     ee6:	90 e0       	ldi	r25, 0x00	; 0
     ee8:	9a 83       	std	Y+2, r25	; 0x02
     eea:	89 83       	std	Y+1, r24	; 0x01

00000eec <.Loc.212>:
            break;
     eec:	1f c1       	rjmp	.+574    	; 0x112c <.L10>

00000eee <.L13>:
        case 9://Voorultrasoon ziet iets
            h_bridgeR_set_percentage(snelheiduit);
     eee:	83 e6       	ldi	r24, 0x63	; 99
     ef0:	0e 94 b7 02 	call	0x56e	; 0x56e <h_bridgeR_set_percentage>

00000ef4 <.Loc.214>:
            h_bridgeL_set_percentage(snelheiduit);
     ef4:	83 e6       	ldi	r24, 0x63	; 99
     ef6:	0e 94 f6 02 	call	0x5ec	; 0x5ec <h_bridgeL_set_percentage>

00000efa <.Loc.215>:
            PORT_LED |= (1<<LED_1);
     efa:	82 e0       	ldi	r24, 0x02	; 2
     efc:	91 e0       	ldi	r25, 0x01	; 1
     efe:	dc 01       	movw	r26, r24
     f00:	2c 91       	ld	r18, X
     f02:	82 e0       	ldi	r24, 0x02	; 2
     f04:	91 e0       	ldi	r25, 0x01	; 1

00000f06 <.Loc.216>:
     f06:	20 61       	ori	r18, 0x10	; 16
     f08:	fc 01       	movw	r30, r24
     f0a:	20 83       	st	Z, r18

00000f0c <.Loc.217>:
            PORT_LED |= (1<<LED_2);
     f0c:	82 e0       	ldi	r24, 0x02	; 2
     f0e:	91 e0       	ldi	r25, 0x01	; 1
     f10:	dc 01       	movw	r26, r24
     f12:	2c 91       	ld	r18, X
     f14:	82 e0       	ldi	r24, 0x02	; 2
     f16:	91 e0       	ldi	r25, 0x01	; 1

00000f18 <.Loc.218>:
     f18:	20 62       	ori	r18, 0x20	; 32
     f1a:	fc 01       	movw	r30, r24
     f1c:	20 83       	st	Z, r18

00000f1e <.Loc.219>:
            PORT_buzzer |= (1<<buzzer);
     f1e:	82 e0       	ldi	r24, 0x02	; 2
     f20:	91 e0       	ldi	r25, 0x01	; 1
     f22:	dc 01       	movw	r26, r24
     f24:	2c 91       	ld	r18, X
     f26:	82 e0       	ldi	r24, 0x02	; 2
     f28:	91 e0       	ldi	r25, 0x01	; 1

00000f2a <.Loc.220>:
     f2a:	28 60       	ori	r18, 0x08	; 8
     f2c:	fc 01       	movw	r30, r24
     f2e:	20 83       	st	Z, r18

00000f30 <.Loc.221>:
            if(waarde > 60)
     f30:	8d 81       	ldd	r24, Y+5	; 0x05
     f32:	9e 81       	ldd	r25, Y+6	; 0x06
     f34:	8c 33       	cpi	r24, 0x3C	; 60
     f36:	91 05       	cpc	r25, r1
     f38:	09 f0       	breq	.+2      	; 0xf3c <L0^A>

00000f3a <L0^A>:
     f3a:	0c f4       	brge	.+2      	; 0xf3e <.Loc.222>

00000f3c <L0^A>:
     f3c:	f6 c0       	rjmp	.+492    	; 0x112a <.L75>

00000f3e <.Loc.222>:
            {
                PORT_LED &= ~(1<<LED_2);         // LED 2 aan
     f3e:	82 e0       	ldi	r24, 0x02	; 2
     f40:	91 e0       	ldi	r25, 0x01	; 1
     f42:	dc 01       	movw	r26, r24
     f44:	2c 91       	ld	r18, X

00000f46 <.Loc.223>:
     f46:	82 e0       	ldi	r24, 0x02	; 2
     f48:	91 e0       	ldi	r25, 0x01	; 1

00000f4a <.Loc.224>:
     f4a:	2f 7d       	andi	r18, 0xDF	; 223
     f4c:	fc 01       	movw	r30, r24
     f4e:	20 83       	st	Z, r18

00000f50 <.Loc.225>:
                PORT_LED &= ~(1<<LED_1);        // LED 1 uit
     f50:	82 e0       	ldi	r24, 0x02	; 2
     f52:	91 e0       	ldi	r25, 0x01	; 1
     f54:	dc 01       	movw	r26, r24
     f56:	2c 91       	ld	r18, X

00000f58 <.Loc.226>:
     f58:	82 e0       	ldi	r24, 0x02	; 2
     f5a:	91 e0       	ldi	r25, 0x01	; 1

00000f5c <.Loc.227>:
     f5c:	2f 7e       	andi	r18, 0xEF	; 239
     f5e:	fc 01       	movw	r30, r24
     f60:	20 83       	st	Z, r18

00000f62 <.Loc.228>:
                PORT_buzzer &= ~(1<<buzzer);    // buzzer uit
     f62:	82 e0       	ldi	r24, 0x02	; 2
     f64:	91 e0       	ldi	r25, 0x01	; 1
     f66:	dc 01       	movw	r26, r24
     f68:	2c 91       	ld	r18, X

00000f6a <.Loc.229>:
     f6a:	82 e0       	ldi	r24, 0x02	; 2
     f6c:	91 e0       	ldi	r25, 0x01	; 1

00000f6e <.Loc.230>:
     f6e:	27 7f       	andi	r18, 0xF7	; 247
     f70:	fc 01       	movw	r30, r24
     f72:	20 83       	st	Z, r18

00000f74 <.Loc.231>:
                toestand = 4;
     f74:	84 e0       	ldi	r24, 0x04	; 4
     f76:	90 e0       	ldi	r25, 0x00	; 0
     f78:	9a 83       	std	Y+2, r25	; 0x02
     f7a:	89 83       	std	Y+1, r24	; 0x01

00000f7c <.Loc.232>:
            }
            break;
     f7c:	d6 c0       	rjmp	.+428    	; 0x112a <.L75>

00000f7e <.L11>:
//                PORT_buzzer &= ~(1<<buzzer);    // buzzer uit
//                toestand = 4;
//            }
//            break;
        case 10:
            rechtdoorrijden();
     f7e:	0e 94 2e 01 	call	0x25c	; 0x25c <rechtdoorrijden>

00000f82 <.Loc.234>:
            h_bridgeR_set_percentage(50);
     f82:	82 e3       	ldi	r24, 0x32	; 50
     f84:	0e 94 b7 02 	call	0x56e	; 0x56e <h_bridgeR_set_percentage>

00000f88 <.Loc.235>:
            h_bridgeL_set_percentage(80);
     f88:	80 e5       	ldi	r24, 0x50	; 80
     f8a:	0e 94 f6 02 	call	0x5ec	; 0x5ec <h_bridgeL_set_percentage>
     f8e:	80 e0       	ldi	r24, 0x00	; 0
     f90:	90 e0       	ldi	r25, 0x00	; 0
     f92:	aa e7       	ldi	r26, 0x7A	; 122
     f94:	b4 e4       	ldi	r27, 0x44	; 68
     f96:	8d 8b       	std	Y+21, r24	; 0x15
     f98:	9e 8b       	std	Y+22, r25	; 0x16
     f9a:	af 8b       	std	Y+23, r26	; 0x17
     f9c:	b8 8f       	std	Y+24, r27	; 0x18

00000f9e <.LBB68>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     f9e:	20 e0       	ldi	r18, 0x00	; 0
     fa0:	30 e0       	ldi	r19, 0x00	; 0
     fa2:	4a e7       	ldi	r20, 0x7A	; 122
     fa4:	55 e4       	ldi	r21, 0x45	; 69
     fa6:	6d 89       	ldd	r22, Y+21	; 0x15
     fa8:	7e 89       	ldd	r23, Y+22	; 0x16
     faa:	8f 89       	ldd	r24, Y+23	; 0x17
     fac:	98 8d       	ldd	r25, Y+24	; 0x18
     fae:	0e 94 cb 10 	call	0x2196	; 0x2196 <__mulsf3>
     fb2:	6b af       	std	Y+59, r22	; 0x3b
     fb4:	7c af       	std	Y+60, r23	; 0x3c
     fb6:	8d af       	std	Y+61, r24	; 0x3d
     fb8:	9e af       	std	Y+62, r25	; 0x3e
     fba:	8b ad       	ldd	r24, Y+59	; 0x3b
     fbc:	9c ad       	ldd	r25, Y+60	; 0x3c
     fbe:	ad ad       	ldd	r26, Y+61	; 0x3d
     fc0:	be ad       	ldd	r27, Y+62	; 0x3e
     fc2:	89 8f       	std	Y+25, r24	; 0x19
     fc4:	9a 8f       	std	Y+26, r25	; 0x1a
     fc6:	ab 8f       	std	Y+27, r26	; 0x1b
     fc8:	bc 8f       	std	Y+28, r27	; 0x1c

00000fca <.Loc.237>:
	if (__tmp < 1.0)
     fca:	20 e0       	ldi	r18, 0x00	; 0
     fcc:	30 e0       	ldi	r19, 0x00	; 0
     fce:	40 e8       	ldi	r20, 0x80	; 128
     fd0:	5f e3       	ldi	r21, 0x3F	; 63
     fd2:	69 8d       	ldd	r22, Y+25	; 0x19
     fd4:	7a 8d       	ldd	r23, Y+26	; 0x1a
     fd6:	8b 8d       	ldd	r24, Y+27	; 0x1b
     fd8:	9c 8d       	ldd	r25, Y+28	; 0x1c
     fda:	0e 94 67 0f 	call	0x1ece	; 0x1ece <__cmpsf2>
     fde:	88 23       	and	r24, r24
     fe0:	2c f4       	brge	.+10     	; 0xfec <.L64>

00000fe2 <.Loc.238>:
		__ticks = 1;
     fe2:	81 e0       	ldi	r24, 0x01	; 1
     fe4:	90 e0       	ldi	r25, 0x00	; 0
     fe6:	9e 8f       	std	Y+30, r25	; 0x1e
     fe8:	8d 8f       	std	Y+29, r24	; 0x1d
     fea:	62 c0       	rjmp	.+196    	; 0x10b0 <.L49>

00000fec <.L64>:
	else if (__tmp > 65535)
     fec:	20 e0       	ldi	r18, 0x00	; 0
     fee:	3f ef       	ldi	r19, 0xFF	; 255
     ff0:	4f e7       	ldi	r20, 0x7F	; 127
     ff2:	57 e4       	ldi	r21, 0x47	; 71
     ff4:	69 8d       	ldd	r22, Y+25	; 0x19
     ff6:	7a 8d       	ldd	r23, Y+26	; 0x1a
     ff8:	8b 8d       	ldd	r24, Y+27	; 0x1b
     ffa:	9c 8d       	ldd	r25, Y+28	; 0x1c
     ffc:	0e 94 c6 10 	call	0x218c	; 0x218c <__gesf2>
    1000:	88 23       	and	r24, r24
    1002:	09 f0       	breq	.+2      	; 0x1006 <L0^A>

00001004 <L0^A>:
    1004:	0c f4       	brge	.+2      	; 0x1008 <.Loc.240>

00001006 <L0^A>:
    1006:	42 c0       	rjmp	.+132    	; 0x108c <.L65>

00001008 <.Loc.240>:
		__ticks = (uint16_t) (__ms * 10.0);
    1008:	20 e0       	ldi	r18, 0x00	; 0
    100a:	30 e0       	ldi	r19, 0x00	; 0
    100c:	40 e2       	ldi	r20, 0x20	; 32
    100e:	51 e4       	ldi	r21, 0x41	; 65
    1010:	6d 89       	ldd	r22, Y+21	; 0x15
    1012:	7e 89       	ldd	r23, Y+22	; 0x16
    1014:	8f 89       	ldd	r24, Y+23	; 0x17
    1016:	98 8d       	ldd	r25, Y+24	; 0x18
    1018:	0e 94 cb 10 	call	0x2196	; 0x2196 <__mulsf3>
    101c:	23 96       	adiw	r28, 0x03	; 3
    101e:	6c af       	std	Y+60, r22	; 0x3c
    1020:	7d af       	std	Y+61, r23	; 0x3d
    1022:	8e af       	std	Y+62, r24	; 0x3e
    1024:	9f af       	std	Y+63, r25	; 0x3f
    1026:	23 97       	sbiw	r28, 0x03	; 3
    1028:	23 96       	adiw	r28, 0x03	; 3
    102a:	8c ad       	ldd	r24, Y+60	; 0x3c
    102c:	9d ad       	ldd	r25, Y+61	; 0x3d
    102e:	ae ad       	ldd	r26, Y+62	; 0x3e
    1030:	bf ad       	ldd	r27, Y+63	; 0x3f
    1032:	23 97       	sbiw	r28, 0x03	; 3
    1034:	8f a3       	std	Y+39, r24	; 0x27
    1036:	98 a7       	std	Y+40, r25	; 0x28
    1038:	a9 a7       	std	Y+41, r26	; 0x29
    103a:	ba a7       	std	Y+42, r27	; 0x2a

0000103c <.Loc.241>:
    103c:	6f a1       	ldd	r22, Y+39	; 0x27
    103e:	78 a5       	ldd	r23, Y+40	; 0x28
    1040:	89 a5       	ldd	r24, Y+41	; 0x29
    1042:	9a a5       	ldd	r25, Y+42	; 0x2a
    1044:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <__fixunssfsi>
    1048:	27 96       	adiw	r28, 0x07	; 7
    104a:	6c af       	std	Y+60, r22	; 0x3c
    104c:	7d af       	std	Y+61, r23	; 0x3d
    104e:	8e af       	std	Y+62, r24	; 0x3e
    1050:	9f af       	std	Y+63, r25	; 0x3f
    1052:	27 97       	sbiw	r28, 0x07	; 7
    1054:	25 96       	adiw	r28, 0x05	; 5
    1056:	ae ad       	ldd	r26, Y+62	; 0x3e
    1058:	bf ad       	ldd	r27, Y+63	; 0x3f
    105a:	25 97       	sbiw	r28, 0x05	; 5
    105c:	be 8f       	std	Y+30, r27	; 0x1e
    105e:	ad 8f       	std	Y+29, r26	; 0x1d

00001060 <.Loc.242>:
		while(__ticks)
    1060:	10 c0       	rjmp	.+32     	; 0x1082 <.L52>

00001062 <.L53>:
    1062:	80 e9       	ldi	r24, 0x90	; 144
    1064:	91 e0       	ldi	r25, 0x01	; 1
    1066:	98 a3       	std	Y+32, r25	; 0x20
    1068:	8f 8f       	std	Y+31, r24	; 0x1f

0000106a <.LBB70>:
    106a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    106c:	98 a1       	ldd	r25, Y+32	; 0x20

0000106e <.L1^B3>:
    106e:	01 97       	sbiw	r24, 0x01	; 1
    1070:	f1 f7       	brne	.-4      	; 0x106e <.L1^B3>
    1072:	98 a3       	std	Y+32, r25	; 0x20
    1074:	8f 8f       	std	Y+31, r24	; 0x1f

00001076 <.Loc.244>:
	...

00001078 <.LBE70>:
			__ticks --;
    1078:	8d 8d       	ldd	r24, Y+29	; 0x1d
    107a:	9e 8d       	ldd	r25, Y+30	; 0x1e
    107c:	01 97       	sbiw	r24, 0x01	; 1
    107e:	9e 8f       	std	Y+30, r25	; 0x1e
    1080:	8d 8f       	std	Y+29, r24	; 0x1d

00001082 <.L52>:
		while(__ticks)
    1082:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1084:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1086:	00 97       	sbiw	r24, 0x00	; 0
    1088:	61 f7       	brne	.-40     	; 0x1062 <.L53>

0000108a <.Loc.247>:
		return;
    108a:	1d c0       	rjmp	.+58     	; 0x10c6 <.L54>

0000108c <.L65>:
		__ticks = (uint16_t)__tmp;
    108c:	69 8d       	ldd	r22, Y+25	; 0x19
    108e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1090:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1092:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1094:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <__fixunssfsi>
    1098:	2b 96       	adiw	r28, 0x0b	; 11
    109a:	6c af       	std	Y+60, r22	; 0x3c
    109c:	7d af       	std	Y+61, r23	; 0x3d
    109e:	8e af       	std	Y+62, r24	; 0x3e
    10a0:	9f af       	std	Y+63, r25	; 0x3f
    10a2:	2b 97       	sbiw	r28, 0x0b	; 11
    10a4:	29 96       	adiw	r28, 0x09	; 9
    10a6:	ee ad       	ldd	r30, Y+62	; 0x3e
    10a8:	ff ad       	ldd	r31, Y+63	; 0x3f
    10aa:	29 97       	sbiw	r28, 0x09	; 9
    10ac:	fe 8f       	std	Y+30, r31	; 0x1e
    10ae:	ed 8f       	std	Y+29, r30	; 0x1d

000010b0 <.L49>:
    10b0:	8d 8d       	ldd	r24, Y+29	; 0x1d
    10b2:	9e 8d       	ldd	r25, Y+30	; 0x1e
    10b4:	9a a3       	std	Y+34, r25	; 0x22
    10b6:	89 a3       	std	Y+33, r24	; 0x21

000010b8 <.LBB72>:
    10b8:	89 a1       	ldd	r24, Y+33	; 0x21
    10ba:	9a a1       	ldd	r25, Y+34	; 0x22

000010bc <.L1^B4>:
    10bc:	01 97       	sbiw	r24, 0x01	; 1
    10be:	f1 f7       	brne	.-4      	; 0x10bc <.L1^B4>
    10c0:	9a a3       	std	Y+34, r25	; 0x22
    10c2:	89 a3       	std	Y+33, r24	; 0x21

000010c4 <.Loc.250>:
	...

000010c6 <.L54>:
	...

000010c8 <.L56>:
            _delay_ms(1000);
            while((toestand >= 3) && ((IRregister & (1 << IRonderlinks)) && (IRregister & (1 << IRonderrechts))))
    10c8:	89 81       	ldd	r24, Y+1	; 0x01
    10ca:	9a 81       	ldd	r25, Y+2	; 0x02
    10cc:	82 30       	cpi	r24, 0x02	; 2
    10ce:	91 05       	cpc	r25, r1
    10d0:	a9 f0       	breq	.+42     	; 0x10fc <.L55>
    10d2:	a4 f0       	brlt	.+40     	; 0x10fc <.L55>

000010d4 <.Loc.253>:
    10d4:	86 e2       	ldi	r24, 0x26	; 38
    10d6:	90 e0       	ldi	r25, 0x00	; 0
    10d8:	dc 01       	movw	r26, r24
    10da:	8c 91       	ld	r24, X

000010dc <.Loc.254>:
    10dc:	88 2f       	mov	r24, r24
    10de:	90 e0       	ldi	r25, 0x00	; 0
    10e0:	88 70       	andi	r24, 0x08	; 8
    10e2:	99 27       	eor	r25, r25

000010e4 <.Loc.255>:
    10e4:	00 97       	sbiw	r24, 0x00	; 0
    10e6:	51 f0       	breq	.+20     	; 0x10fc <.L55>

000010e8 <.Loc.256>:
    10e8:	86 e2       	ldi	r24, 0x26	; 38
    10ea:	90 e0       	ldi	r25, 0x00	; 0
    10ec:	fc 01       	movw	r30, r24
    10ee:	80 81       	ld	r24, Z

000010f0 <.Loc.257>:
    10f0:	88 2f       	mov	r24, r24
    10f2:	90 e0       	ldi	r25, 0x00	; 0
    10f4:	84 70       	andi	r24, 0x04	; 4
    10f6:	99 27       	eor	r25, r25

000010f8 <.Loc.258>:
    10f8:	00 97       	sbiw	r24, 0x00	; 0
    10fa:	31 f7       	brne	.-52     	; 0x10c8 <.L56>

000010fc <.L55>:
            {

            }
            toestand = 3;
    10fc:	83 e0       	ldi	r24, 0x03	; 3
    10fe:	90 e0       	ldi	r25, 0x00	; 0
    1100:	9a 83       	std	Y+2, r25	; 0x02
    1102:	89 83       	std	Y+1, r24	; 0x01

00001104 <.Loc.260>:
            break;
    1104:	13 c0       	rjmp	.+38     	; 0x112c <.L10>

00001106 <.L66>:
            break;
    1106:	00 00       	nop
    1108:	c3 cb       	rjmp	.-2170   	; 0x890 <.L57>

0000110a <.L67>:
            break;
    110a:	00 00       	nop
    110c:	c1 cb       	rjmp	.-2174   	; 0x890 <.L57>

0000110e <.L68>:
            break;
    110e:	00 00       	nop
    1110:	bf cb       	rjmp	.-2178   	; 0x890 <.L57>

00001112 <.L69>:
            break;
    1112:	00 00       	nop
    1114:	bd cb       	rjmp	.-2182   	; 0x890 <.L57>

00001116 <.L70>:
            break;
    1116:	00 00       	nop
    1118:	bb cb       	rjmp	.-2186   	; 0x890 <.L57>

0000111a <.L71>:
            break;
    111a:	00 00       	nop
    111c:	b9 cb       	rjmp	.-2190   	; 0x890 <.L57>

0000111e <.L72>:
            break;
    111e:	00 00       	nop
    1120:	b7 cb       	rjmp	.-2194   	; 0x890 <.L57>

00001122 <.L73>:
            break;
    1122:	00 00       	nop
    1124:	b5 cb       	rjmp	.-2198   	; 0x890 <.L57>

00001126 <.L74>:
            break;
    1126:	00 00       	nop
    1128:	b3 cb       	rjmp	.-2202   	; 0x890 <.L57>

0000112a <.L75>:
	...

0000112c <.L10>:
        if(Bluetooth_Getal == 2)//Bluetooth verbroken
    112c:	b1 cb       	rjmp	.-2206   	; 0x890 <.L57>

0000112e <init>:

    return 0;
}

void init()
{
    112e:	cf 93       	push	r28
    1130:	df 93       	push	r29
    1132:	cd b7       	in	r28, 0x3d	; 61
    1134:	de b7       	in	r29, 0x3e	; 62

00001136 <.Loc.273>:
    initBluetooth();
    1136:	0e 94 e6 00 	call	0x1cc	; 0x1cc <initBluetooth>

0000113a <.Loc.274>:
    sei();
    113a:	78 94       	sei

0000113c <.Loc.275>:

    //timer PWM motorenR
    TCCR1B = (0 << CS12) | (0 << CS11) | (1 << CS10);
    113c:	81 e8       	ldi	r24, 0x81	; 129
    113e:	90 e0       	ldi	r25, 0x00	; 0

00001140 <.Loc.276>:
    1140:	21 e0       	ldi	r18, 0x01	; 1
    1142:	fc 01       	movw	r30, r24
    1144:	20 83       	st	Z, r18

00001146 <.Loc.277>:
    TIMSK1 = (1 << OCIE1A) | (1 << TOIE1);
    1146:	8f e6       	ldi	r24, 0x6F	; 111
    1148:	90 e0       	ldi	r25, 0x00	; 0

0000114a <.Loc.278>:
    114a:	23 e0       	ldi	r18, 0x03	; 3
    114c:	fc 01       	movw	r30, r24
    114e:	20 83       	st	Z, r18

00001150 <.Loc.279>:

    OCR1A = 0;
    1150:	88 e8       	ldi	r24, 0x88	; 136
    1152:	90 e0       	ldi	r25, 0x00	; 0

00001154 <.Loc.280>:
    1154:	fc 01       	movw	r30, r24
    1156:	11 82       	std	Z+1, r1	; 0x01
    1158:	10 82       	st	Z, r1

0000115a <.Loc.281>:
    //timer PWM motorenL
    TCCR3B = (0 << CS32) | (0 << CS31) | (1 << CS30);
    115a:	81 e9       	ldi	r24, 0x91	; 145
    115c:	90 e0       	ldi	r25, 0x00	; 0

0000115e <.Loc.282>:
    115e:	21 e0       	ldi	r18, 0x01	; 1
    1160:	fc 01       	movw	r30, r24
    1162:	20 83       	st	Z, r18

00001164 <.Loc.283>:
    TIMSK3 = (1 << OCIE3A) | (1 << TOIE3);
    1164:	81 e7       	ldi	r24, 0x71	; 113
    1166:	90 e0       	ldi	r25, 0x00	; 0

00001168 <.Loc.284>:
    1168:	23 e0       	ldi	r18, 0x03	; 3
    116a:	fc 01       	movw	r30, r24
    116c:	20 83       	st	Z, r18

0000116e <.Loc.285>:

    OCR3A = 0;
    116e:	88 e9       	ldi	r24, 0x98	; 152
    1170:	90 e0       	ldi	r25, 0x00	; 0

00001172 <.Loc.286>:
    1172:	fc 01       	movw	r30, r24
    1174:	11 82       	std	Z+1, r1	; 0x01
    1176:	10 82       	st	Z, r1

00001178 <.Loc.287>:

    //timer noodtoestand
    TCCR0B = (1 << CS02) | (1 << CS00);
    1178:	85 e4       	ldi	r24, 0x45	; 69
    117a:	90 e0       	ldi	r25, 0x00	; 0

0000117c <.Loc.288>:
    117c:	25 e0       	ldi	r18, 0x05	; 5
    117e:	fc 01       	movw	r30, r24
    1180:	20 83       	st	Z, r18

00001182 <.Loc.289>:
    TIMSK0 |= (1 << TOIE0);
    1182:	8e e6       	ldi	r24, 0x6E	; 110
    1184:	90 e0       	ldi	r25, 0x00	; 0
    1186:	fc 01       	movw	r30, r24
    1188:	20 81       	ld	r18, Z
    118a:	8e e6       	ldi	r24, 0x6E	; 110
    118c:	90 e0       	ldi	r25, 0x00	; 0

0000118e <.Loc.290>:
    118e:	21 60       	ori	r18, 0x01	; 1
    1190:	fc 01       	movw	r30, r24
    1192:	20 83       	st	Z, r18

00001194 <.Loc.291>:

    //timer noodtoestand
    //TCCR4B = (1 << CS42) | (1 << CS40);
    TIMSK4 |= (1 << TOIE4);
    1194:	82 e7       	ldi	r24, 0x72	; 114
    1196:	90 e0       	ldi	r25, 0x00	; 0
    1198:	fc 01       	movw	r30, r24
    119a:	20 81       	ld	r18, Z
    119c:	82 e7       	ldi	r24, 0x72	; 114
    119e:	90 e0       	ldi	r25, 0x00	; 0

000011a0 <.Loc.292>:
    11a0:	21 60       	ori	r18, 0x01	; 1
    11a2:	fc 01       	movw	r30, r24
    11a4:	20 83       	st	Z, r18

000011a6 <.Loc.293>:

    //pinout h-brug
    DDR |= (1 << PEN1);
    11a6:	81 e2       	ldi	r24, 0x21	; 33
    11a8:	90 e0       	ldi	r25, 0x00	; 0
    11aa:	fc 01       	movw	r30, r24
    11ac:	20 81       	ld	r18, Z
    11ae:	81 e2       	ldi	r24, 0x21	; 33
    11b0:	90 e0       	ldi	r25, 0x00	; 0

000011b2 <.Loc.294>:
    11b2:	20 68       	ori	r18, 0x80	; 128
    11b4:	fc 01       	movw	r30, r24
    11b6:	20 83       	st	Z, r18

000011b8 <.Loc.295>:
    DDR |= (1 << PIN11);
    11b8:	81 e2       	ldi	r24, 0x21	; 33
    11ba:	90 e0       	ldi	r25, 0x00	; 0
    11bc:	fc 01       	movw	r30, r24
    11be:	20 81       	ld	r18, Z
    11c0:	81 e2       	ldi	r24, 0x21	; 33
    11c2:	90 e0       	ldi	r25, 0x00	; 0

000011c4 <.Loc.296>:
    11c4:	20 64       	ori	r18, 0x40	; 64
    11c6:	fc 01       	movw	r30, r24
    11c8:	20 83       	st	Z, r18

000011ca <.Loc.297>:
    DDR |= (1 << PIN12);
    11ca:	81 e2       	ldi	r24, 0x21	; 33
    11cc:	90 e0       	ldi	r25, 0x00	; 0
    11ce:	fc 01       	movw	r30, r24
    11d0:	20 81       	ld	r18, Z
    11d2:	81 e2       	ldi	r24, 0x21	; 33
    11d4:	90 e0       	ldi	r25, 0x00	; 0

000011d6 <.Loc.298>:
    11d6:	20 62       	ori	r18, 0x20	; 32
    11d8:	fc 01       	movw	r30, r24
    11da:	20 83       	st	Z, r18

000011dc <.Loc.299>:
    DDR |= (1 << PIN21);
    11dc:	81 e2       	ldi	r24, 0x21	; 33
    11de:	90 e0       	ldi	r25, 0x00	; 0
    11e0:	fc 01       	movw	r30, r24
    11e2:	20 81       	ld	r18, Z
    11e4:	81 e2       	ldi	r24, 0x21	; 33
    11e6:	90 e0       	ldi	r25, 0x00	; 0

000011e8 <.Loc.300>:
    11e8:	20 61       	ori	r18, 0x10	; 16
    11ea:	fc 01       	movw	r30, r24
    11ec:	20 83       	st	Z, r18

000011ee <.Loc.301>:
    DDR |= (1 << PIN22);
    11ee:	81 e2       	ldi	r24, 0x21	; 33
    11f0:	90 e0       	ldi	r25, 0x00	; 0
    11f2:	fc 01       	movw	r30, r24
    11f4:	20 81       	ld	r18, Z
    11f6:	81 e2       	ldi	r24, 0x21	; 33
    11f8:	90 e0       	ldi	r25, 0x00	; 0

000011fa <.Loc.302>:
    11fa:	28 60       	ori	r18, 0x08	; 8
    11fc:	fc 01       	movw	r30, r24
    11fe:	20 83       	st	Z, r18

00001200 <.Loc.303>:
    DDR |= (1 << PEN2);
    1200:	81 e2       	ldi	r24, 0x21	; 33
    1202:	90 e0       	ldi	r25, 0x00	; 0
    1204:	fc 01       	movw	r30, r24
    1206:	20 81       	ld	r18, Z
    1208:	81 e2       	ldi	r24, 0x21	; 33
    120a:	90 e0       	ldi	r25, 0x00	; 0

0000120c <.Loc.304>:
    120c:	24 60       	ori	r18, 0x04	; 4
    120e:	fc 01       	movw	r30, r24
    1210:	20 83       	st	Z, r18

00001212 <.Loc.305>:

    //H-brug pinnen LOW
    PORT &= ~(1 << PEN1);
    1212:	82 e2       	ldi	r24, 0x22	; 34
    1214:	90 e0       	ldi	r25, 0x00	; 0
    1216:	fc 01       	movw	r30, r24
    1218:	20 81       	ld	r18, Z

0000121a <.Loc.306>:
    121a:	82 e2       	ldi	r24, 0x22	; 34
    121c:	90 e0       	ldi	r25, 0x00	; 0

0000121e <.Loc.307>:
    121e:	2f 77       	andi	r18, 0x7F	; 127
    1220:	fc 01       	movw	r30, r24
    1222:	20 83       	st	Z, r18

00001224 <.Loc.308>:
	PORT &= ~(1 << PIN11);
    1224:	82 e2       	ldi	r24, 0x22	; 34
    1226:	90 e0       	ldi	r25, 0x00	; 0
    1228:	fc 01       	movw	r30, r24
    122a:	20 81       	ld	r18, Z

0000122c <.Loc.309>:
    122c:	82 e2       	ldi	r24, 0x22	; 34
    122e:	90 e0       	ldi	r25, 0x00	; 0

00001230 <.Loc.310>:
    1230:	2f 7b       	andi	r18, 0xBF	; 191
    1232:	fc 01       	movw	r30, r24
    1234:	20 83       	st	Z, r18

00001236 <.Loc.311>:
	PORT &= ~(1 << PIN12);
    1236:	82 e2       	ldi	r24, 0x22	; 34
    1238:	90 e0       	ldi	r25, 0x00	; 0
    123a:	fc 01       	movw	r30, r24
    123c:	20 81       	ld	r18, Z

0000123e <.Loc.312>:
    123e:	82 e2       	ldi	r24, 0x22	; 34
    1240:	90 e0       	ldi	r25, 0x00	; 0

00001242 <.Loc.313>:
    1242:	2f 7d       	andi	r18, 0xDF	; 223
    1244:	fc 01       	movw	r30, r24
    1246:	20 83       	st	Z, r18

00001248 <.Loc.314>:
	PORT &= ~(1 << PIN21);
    1248:	82 e2       	ldi	r24, 0x22	; 34
    124a:	90 e0       	ldi	r25, 0x00	; 0
    124c:	fc 01       	movw	r30, r24
    124e:	20 81       	ld	r18, Z

00001250 <.Loc.315>:
    1250:	82 e2       	ldi	r24, 0x22	; 34
    1252:	90 e0       	ldi	r25, 0x00	; 0

00001254 <.Loc.316>:
    1254:	2f 7e       	andi	r18, 0xEF	; 239
    1256:	fc 01       	movw	r30, r24
    1258:	20 83       	st	Z, r18

0000125a <.Loc.317>:
	PORT &= ~(1 << PIN22);
    125a:	82 e2       	ldi	r24, 0x22	; 34
    125c:	90 e0       	ldi	r25, 0x00	; 0
    125e:	fc 01       	movw	r30, r24
    1260:	20 81       	ld	r18, Z

00001262 <.Loc.318>:
    1262:	82 e2       	ldi	r24, 0x22	; 34
    1264:	90 e0       	ldi	r25, 0x00	; 0

00001266 <.Loc.319>:
    1266:	27 7f       	andi	r18, 0xF7	; 247
    1268:	fc 01       	movw	r30, r24
    126a:	20 83       	st	Z, r18

0000126c <.Loc.320>:
	PORT &= ~(1 << PEN2);
    126c:	82 e2       	ldi	r24, 0x22	; 34
    126e:	90 e0       	ldi	r25, 0x00	; 0
    1270:	fc 01       	movw	r30, r24
    1272:	20 81       	ld	r18, Z

00001274 <.Loc.321>:
    1274:	82 e2       	ldi	r24, 0x22	; 34
    1276:	90 e0       	ldi	r25, 0x00	; 0

00001278 <.Loc.322>:
    1278:	2b 7f       	andi	r18, 0xFB	; 251
    127a:	fc 01       	movw	r30, r24
    127c:	20 83       	st	Z, r18

0000127e <.Loc.323>:

	//LEDS
    DDR_LED |= (1<<LED_1) | (1<<LED_2);     // enable pins as output
    127e:	81 e0       	ldi	r24, 0x01	; 1
    1280:	91 e0       	ldi	r25, 0x01	; 1
    1282:	fc 01       	movw	r30, r24
    1284:	20 81       	ld	r18, Z
    1286:	81 e0       	ldi	r24, 0x01	; 1
    1288:	91 e0       	ldi	r25, 0x01	; 1

0000128a <.Loc.324>:
    128a:	20 63       	ori	r18, 0x30	; 48
    128c:	fc 01       	movw	r30, r24
    128e:	20 83       	st	Z, r18

00001290 <.Loc.325>:
    PORT_LED &= ~(1<<LED_1) & ~(1<<LED_2);  // put pins low
    1290:	82 e0       	ldi	r24, 0x02	; 2
    1292:	91 e0       	ldi	r25, 0x01	; 1
    1294:	fc 01       	movw	r30, r24
    1296:	20 81       	ld	r18, Z

00001298 <.Loc.326>:
    1298:	82 e0       	ldi	r24, 0x02	; 2
    129a:	91 e0       	ldi	r25, 0x01	; 1

0000129c <.Loc.327>:
    129c:	2f 7c       	andi	r18, 0xCF	; 207
    129e:	fc 01       	movw	r30, r24
    12a0:	20 83       	st	Z, r18

000012a2 <.Loc.328>:
    DDRB |= (1 << PB7);
    12a2:	84 e2       	ldi	r24, 0x24	; 36
    12a4:	90 e0       	ldi	r25, 0x00	; 0
    12a6:	fc 01       	movw	r30, r24
    12a8:	20 81       	ld	r18, Z
    12aa:	84 e2       	ldi	r24, 0x24	; 36
    12ac:	90 e0       	ldi	r25, 0x00	; 0

000012ae <.Loc.329>:
    12ae:	20 68       	ori	r18, 0x80	; 128
    12b0:	fc 01       	movw	r30, r24
    12b2:	20 83       	st	Z, r18

000012b4 <.Loc.330>:
    PORTB |= ~(1 << PB7);
    12b4:	85 e2       	ldi	r24, 0x25	; 37
    12b6:	90 e0       	ldi	r25, 0x00	; 0
    12b8:	fc 01       	movw	r30, r24
    12ba:	80 81       	ld	r24, Z

000012bc <.Loc.331>:
    12bc:	28 2f       	mov	r18, r24
    12be:	2f 67       	ori	r18, 0x7F	; 127

000012c0 <.Loc.332>:
    12c0:	85 e2       	ldi	r24, 0x25	; 37
    12c2:	90 e0       	ldi	r25, 0x00	; 0

000012c4 <.Loc.333>:
    12c4:	fc 01       	movw	r30, r24
    12c6:	20 83       	st	Z, r18

000012c8 <.Loc.334>:

    //Buzzer
    DDR_buzzer |= (1<<buzzer);              // enable pins as output
    12c8:	81 e0       	ldi	r24, 0x01	; 1
    12ca:	91 e0       	ldi	r25, 0x01	; 1
    12cc:	fc 01       	movw	r30, r24
    12ce:	20 81       	ld	r18, Z
    12d0:	81 e0       	ldi	r24, 0x01	; 1
    12d2:	91 e0       	ldi	r25, 0x01	; 1

000012d4 <.Loc.335>:
    12d4:	28 60       	ori	r18, 0x08	; 8
    12d6:	fc 01       	movw	r30, r24
    12d8:	20 83       	st	Z, r18

000012da <.Loc.336>:
    PORT_buzzer &= ~(1<<buzzer);            // put pins low
    12da:	82 e0       	ldi	r24, 0x02	; 2
    12dc:	91 e0       	ldi	r25, 0x01	; 1
    12de:	fc 01       	movw	r30, r24
    12e0:	20 81       	ld	r18, Z

000012e2 <.Loc.337>:
    12e2:	82 e0       	ldi	r24, 0x02	; 2
    12e4:	91 e0       	ldi	r25, 0x01	; 1

000012e6 <.Loc.338>:
    12e6:	27 7f       	andi	r18, 0xF7	; 247
    12e8:	fc 01       	movw	r30, r24
    12ea:	20 83       	st	Z, r18

000012ec <.Loc.339>:

    //knoppen
	DDRF &= ~(1<<Noodknoppin);
    12ec:	80 e3       	ldi	r24, 0x30	; 48
    12ee:	90 e0       	ldi	r25, 0x00	; 0
    12f0:	fc 01       	movw	r30, r24
    12f2:	20 81       	ld	r18, Z

000012f4 <.Loc.340>:
    12f4:	80 e3       	ldi	r24, 0x30	; 48
    12f6:	90 e0       	ldi	r25, 0x00	; 0

000012f8 <.Loc.341>:
    12f8:	2d 7f       	andi	r18, 0xFD	; 253
    12fa:	fc 01       	movw	r30, r24
    12fc:	20 83       	st	Z, r18

000012fe <.Loc.342>:
	PORTF |= (1<<Noodknoppin);   		// enAble alle knoppen voor input
    12fe:	81 e3       	ldi	r24, 0x31	; 49
    1300:	90 e0       	ldi	r25, 0x00	; 0
    1302:	fc 01       	movw	r30, r24
    1304:	20 81       	ld	r18, Z
    1306:	81 e3       	ldi	r24, 0x31	; 49
    1308:	90 e0       	ldi	r25, 0x00	; 0

0000130a <.Loc.343>:
    130a:	22 60       	ori	r18, 0x02	; 2
    130c:	fc 01       	movw	r30, r24
    130e:	20 83       	st	Z, r18

00001310 <.Loc.344>:
}
    1310:	00 00       	nop
    1312:	df 91       	pop	r29
    1314:	cf 91       	pop	r28
    1316:	08 95       	ret

00001318 <initultrasoon>:

void initultrasoon(void){
    1318:	cf 93       	push	r28
    131a:	df 93       	push	r29
    131c:	cd b7       	in	r28, 0x3d	; 61
    131e:	de b7       	in	r29, 0x3e	; 62

00001320 <.Loc.346>:
    TCCR2A = 0;
    1320:	80 eb       	ldi	r24, 0xB0	; 176
    1322:	90 e0       	ldi	r25, 0x00	; 0

00001324 <.Loc.347>:
    1324:	fc 01       	movw	r30, r24
    1326:	10 82       	st	Z, r1

00001328 <.Loc.348>:
    TCCR2B |= (1<<CS20);
    1328:	81 eb       	ldi	r24, 0xB1	; 177
    132a:	90 e0       	ldi	r25, 0x00	; 0
    132c:	fc 01       	movw	r30, r24
    132e:	20 81       	ld	r18, Z
    1330:	81 eb       	ldi	r24, 0xB1	; 177
    1332:	90 e0       	ldi	r25, 0x00	; 0

00001334 <.Loc.349>:
    1334:	21 60       	ori	r18, 0x01	; 1
    1336:	fc 01       	movw	r30, r24
    1338:	20 83       	st	Z, r18

0000133a <.Loc.350>:
    //16000000 / 256 = 62,500
    //1 / 62500 = 0.000016s
    //62500x/sec
    TIMSK2 = (1<<TOIE2);
    133a:	80 e7       	ldi	r24, 0x70	; 112
    133c:	90 e0       	ldi	r25, 0x00	; 0

0000133e <.Loc.351>:
    133e:	21 e0       	ldi	r18, 0x01	; 1
    1340:	fc 01       	movw	r30, r24
    1342:	20 83       	st	Z, r18

00001344 <.Loc.352>:
//    DDRK &= ~(1<<PK0);
//    DDRL |= (1<<PL7);
//    PORTL &= ~(1<<PL7);

    //voor ultrasoon
    DDRF &= ~(1<<PF7);
    1344:	80 e3       	ldi	r24, 0x30	; 48
    1346:	90 e0       	ldi	r25, 0x00	; 0
    1348:	fc 01       	movw	r30, r24
    134a:	20 81       	ld	r18, Z

0000134c <.Loc.353>:
    134c:	80 e3       	ldi	r24, 0x30	; 48
    134e:	90 e0       	ldi	r25, 0x00	; 0

00001350 <.Loc.354>:
    1350:	2f 77       	andi	r18, 0x7F	; 127
    1352:	fc 01       	movw	r30, r24
    1354:	20 83       	st	Z, r18

00001356 <.Loc.355>:
    DDRL |= (1<<PL6);
    1356:	8a e0       	ldi	r24, 0x0A	; 10
    1358:	91 e0       	ldi	r25, 0x01	; 1
    135a:	fc 01       	movw	r30, r24
    135c:	20 81       	ld	r18, Z
    135e:	8a e0       	ldi	r24, 0x0A	; 10
    1360:	91 e0       	ldi	r25, 0x01	; 1

00001362 <.Loc.356>:
    1362:	20 64       	ori	r18, 0x40	; 64
    1364:	fc 01       	movw	r30, r24
    1366:	20 83       	st	Z, r18

00001368 <.Loc.357>:
    PORTL &= ~(1<<PL6);
    1368:	8b e0       	ldi	r24, 0x0B	; 11
    136a:	91 e0       	ldi	r25, 0x01	; 1
    136c:	fc 01       	movw	r30, r24
    136e:	20 81       	ld	r18, Z

00001370 <.Loc.358>:
    1370:	8b e0       	ldi	r24, 0x0B	; 11
    1372:	91 e0       	ldi	r25, 0x01	; 1

00001374 <.Loc.359>:
    1374:	2f 7b       	andi	r18, 0xBF	; 191
    1376:	fc 01       	movw	r30, r24
    1378:	20 83       	st	Z, r18

0000137a <.Loc.360>:
}
    137a:	00 00       	nop
    137c:	df 91       	pop	r29
    137e:	cf 91       	pop	r28
    1380:	08 95       	ret

00001382 <GetDistance>:

int GetDistance(void){
    1382:	cf 93       	push	r28
    1384:	df 93       	push	r29
    1386:	cd b7       	in	r28, 0x3d	; 61
    1388:	de b7       	in	r29, 0x3e	; 62
    138a:	6e 97       	sbiw	r28, 0x1e	; 30
    138c:	0f b6       	in	r0, 0x3f	; 63
    138e:	f8 94       	cli
    1390:	de bf       	out	0x3e, r29	; 62
    1392:	0f be       	out	0x3f, r0	; 63
    1394:	cd bf       	out	0x3d, r28	; 61

00001396 <.Loc.362>:

    int Distance;

    TriggerPulse();
    1396:	0e 94 47 0a 	call	0x148e	; 0x148e <TriggerPulse>

0000139a <.Loc.363>:
	...

0000139c <.L79>:

    while ((PINF & (1<<PF7)) == 0){
    139c:	8f e2       	ldi	r24, 0x2F	; 47
    139e:	90 e0       	ldi	r25, 0x00	; 0
    13a0:	dc 01       	movw	r26, r24
    13a2:	8c 91       	ld	r24, X

000013a4 <.Loc.365>:
    13a4:	88 23       	and	r24, r24
    13a6:	d4 f7       	brge	.-12     	; 0x139c <.L79>

000013a8 <.Loc.366>:

    }
    TCNT2 = 0;
    13a8:	82 eb       	ldi	r24, 0xB2	; 178
    13aa:	90 e0       	ldi	r25, 0x00	; 0

000013ac <.Loc.367>:
    13ac:	fc 01       	movw	r30, r24
    13ae:	10 82       	st	Z, r1

000013b0 <.Loc.368>:
    TIFR2 = 1<<TOV2;
    13b0:	87 e3       	ldi	r24, 0x37	; 55
    13b2:	90 e0       	ldi	r25, 0x00	; 0

000013b4 <.Loc.369>:
    13b4:	21 e0       	ldi	r18, 0x01	; 1
    13b6:	dc 01       	movw	r26, r24
    13b8:	2c 93       	st	X, r18

000013ba <.Loc.370>:
    count = 0;
    13ba:	10 92 2f 02 	sts	0x022F, r1	; 0x80022f <count+0x1>
    13be:	10 92 2e 02 	sts	0x022E, r1	; 0x80022e <count>

000013c2 <.Loc.371>:
	...

000013c4 <.L80>:

    while ((PINF & (1<<PF7)) != 0){
    13c4:	8f e2       	ldi	r24, 0x2F	; 47
    13c6:	90 e0       	ldi	r25, 0x00	; 0
    13c8:	fc 01       	movw	r30, r24
    13ca:	80 81       	ld	r24, Z

000013cc <.Loc.373>:
    13cc:	88 23       	and	r24, r24
    13ce:	d4 f3       	brlt	.-12     	; 0x13c4 <.L80>

000013d0 <.Loc.374>:

    }
    Distance = count;
    13d0:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <count>
    13d4:	90 91 2f 02 	lds	r25, 0x022F	; 0x80022f <count+0x1>
    13d8:	9a 83       	std	Y+2, r25	; 0x02
    13da:	89 83       	std	Y+1, r24	; 0x01

000013dc <.Loc.375>:

    Distance = Distance * 0.008 * 343;
    13dc:	89 81       	ldd	r24, Y+1	; 0x01
    13de:	9a 81       	ldd	r25, Y+2	; 0x02
    13e0:	9c 01       	movw	r18, r24
    13e2:	99 0f       	add	r25, r25
    13e4:	44 0b       	sbc	r20, r20
    13e6:	55 0b       	sbc	r21, r21
    13e8:	2f 87       	std	Y+15, r18	; 0x0f
    13ea:	38 8b       	std	Y+16, r19	; 0x10
    13ec:	49 8b       	std	Y+17, r20	; 0x11
    13ee:	5a 8b       	std	Y+18, r21	; 0x12
    13f0:	6f 85       	ldd	r22, Y+15	; 0x0f
    13f2:	78 89       	ldd	r23, Y+16	; 0x10
    13f4:	89 89       	ldd	r24, Y+17	; 0x11
    13f6:	9a 89       	ldd	r25, Y+18	; 0x12
    13f8:	0e 94 16 10 	call	0x202c	; 0x202c <__floatsisf>
    13fc:	6b 83       	std	Y+3, r22	; 0x03
    13fe:	7c 83       	std	Y+4, r23	; 0x04
    1400:	8d 83       	std	Y+5, r24	; 0x05
    1402:	9e 83       	std	Y+6, r25	; 0x06
    1404:	2f e6       	ldi	r18, 0x6F	; 111
    1406:	32 e1       	ldi	r19, 0x12	; 18
    1408:	43 e0       	ldi	r20, 0x03	; 3
    140a:	5c e3       	ldi	r21, 0x3C	; 60
    140c:	6b 81       	ldd	r22, Y+3	; 0x03
    140e:	7c 81       	ldd	r23, Y+4	; 0x04
    1410:	8d 81       	ldd	r24, Y+5	; 0x05
    1412:	9e 81       	ldd	r25, Y+6	; 0x06
    1414:	0e 94 cb 10 	call	0x2196	; 0x2196 <__mulsf3>
    1418:	6b 8b       	std	Y+19, r22	; 0x13
    141a:	7c 8b       	std	Y+20, r23	; 0x14
    141c:	8d 8b       	std	Y+21, r24	; 0x15
    141e:	9e 8b       	std	Y+22, r25	; 0x16
    1420:	8b 89       	ldd	r24, Y+19	; 0x13
    1422:	9c 89       	ldd	r25, Y+20	; 0x14
    1424:	ad 89       	ldd	r26, Y+21	; 0x15
    1426:	be 89       	ldd	r27, Y+22	; 0x16
    1428:	8f 83       	std	Y+7, r24	; 0x07
    142a:	98 87       	std	Y+8, r25	; 0x08
    142c:	a9 87       	std	Y+9, r26	; 0x09
    142e:	ba 87       	std	Y+10, r27	; 0x0a

00001430 <.Loc.376>:
    1430:	20 e0       	ldi	r18, 0x00	; 0
    1432:	30 e8       	ldi	r19, 0x80	; 128
    1434:	4b ea       	ldi	r20, 0xAB	; 171
    1436:	53 e4       	ldi	r21, 0x43	; 67
    1438:	6f 81       	ldd	r22, Y+7	; 0x07
    143a:	78 85       	ldd	r23, Y+8	; 0x08
    143c:	89 85       	ldd	r24, Y+9	; 0x09
    143e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1440:	0e 94 cb 10 	call	0x2196	; 0x2196 <__mulsf3>
    1444:	6f 8b       	std	Y+23, r22	; 0x17
    1446:	78 8f       	std	Y+24, r23	; 0x18
    1448:	89 8f       	std	Y+25, r24	; 0x19
    144a:	9a 8f       	std	Y+26, r25	; 0x1a
    144c:	2f 89       	ldd	r18, Y+23	; 0x17
    144e:	38 8d       	ldd	r19, Y+24	; 0x18
    1450:	49 8d       	ldd	r20, Y+25	; 0x19
    1452:	5a 8d       	ldd	r21, Y+26	; 0x1a
    1454:	2b 87       	std	Y+11, r18	; 0x0b
    1456:	3c 87       	std	Y+12, r19	; 0x0c
    1458:	4d 87       	std	Y+13, r20	; 0x0d
    145a:	5e 87       	std	Y+14, r21	; 0x0e

0000145c <.Loc.377>:
    145c:	6b 85       	ldd	r22, Y+11	; 0x0b
    145e:	7c 85       	ldd	r23, Y+12	; 0x0c
    1460:	8d 85       	ldd	r24, Y+13	; 0x0d
    1462:	9e 85       	ldd	r25, Y+14	; 0x0e
    1464:	0e 94 de 0f 	call	0x1fbc	; 0x1fbc <__fixsfsi>
    1468:	6b 8f       	std	Y+27, r22	; 0x1b
    146a:	7c 8f       	std	Y+28, r23	; 0x1c
    146c:	8d 8f       	std	Y+29, r24	; 0x1d
    146e:	9e 8f       	std	Y+30, r25	; 0x1e
    1470:	4b 8d       	ldd	r20, Y+27	; 0x1b
    1472:	5c 8d       	ldd	r21, Y+28	; 0x1c
    1474:	5a 83       	std	Y+2, r21	; 0x02
    1476:	49 83       	std	Y+1, r20	; 0x01

00001478 <.Loc.378>:
    //34 cm / ms
    //340   mm / ms
    //0.34  mm / us
    //5.44 * count geeft distance in mm

    return Distance;
    1478:	89 81       	ldd	r24, Y+1	; 0x01
    147a:	9a 81       	ldd	r25, Y+2	; 0x02

0000147c <.Loc.379>:
}
    147c:	6e 96       	adiw	r28, 0x1e	; 30
    147e:	0f b6       	in	r0, 0x3f	; 63
    1480:	f8 94       	cli
    1482:	de bf       	out	0x3e, r29	; 62
    1484:	0f be       	out	0x3f, r0	; 63
    1486:	cd bf       	out	0x3d, r28	; 61
    1488:	df 91       	pop	r29
    148a:	cf 91       	pop	r28
    148c:	08 95       	ret

0000148e <TriggerPulse>:

void TriggerPulse (void){
    148e:	cf 93       	push	r28
    1490:	df 93       	push	r29
    1492:	cd b7       	in	r28, 0x3d	; 61
    1494:	de b7       	in	r29, 0x3e	; 62
    1496:	c0 59       	subi	r28, 0x90	; 144
    1498:	d1 09       	sbc	r29, r1
    149a:	0f b6       	in	r0, 0x3f	; 63
    149c:	f8 94       	cli
    149e:	de bf       	out	0x3e, r29	; 62
    14a0:	0f be       	out	0x3f, r0	; 63
    14a2:	cd bf       	out	0x3d, r28	; 61

000014a4 <.Loc.381>:
    PORTL &= (~(1<<PL6));
    14a4:	8b e0       	ldi	r24, 0x0B	; 11
    14a6:	91 e0       	ldi	r25, 0x01	; 1
    14a8:	dc 01       	movw	r26, r24
    14aa:	2c 91       	ld	r18, X

000014ac <.Loc.382>:
    14ac:	8b e0       	ldi	r24, 0x0B	; 11
    14ae:	91 e0       	ldi	r25, 0x01	; 1

000014b0 <.Loc.383>:
    14b0:	2f 7b       	andi	r18, 0xBF	; 191
    14b2:	fc 01       	movw	r30, r24
    14b4:	20 83       	st	Z, r18
    14b6:	80 e0       	ldi	r24, 0x00	; 0
    14b8:	90 e0       	ldi	r25, 0x00	; 0
    14ba:	a0 e0       	ldi	r26, 0x00	; 0
    14bc:	b0 e4       	ldi	r27, 0x40	; 64
    14be:	89 a3       	std	Y+33, r24	; 0x21
    14c0:	9a a3       	std	Y+34, r25	; 0x22
    14c2:	ab a3       	std	Y+35, r26	; 0x23
    14c4:	bc a3       	std	Y+36, r27	; 0x24

000014c6 <.LBB74>:
	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint8_t __ticks;
	double __tmp2 ;
	__tmp = ((F_CPU) / 3e6) * __us;
    14c6:	2b ea       	ldi	r18, 0xAB	; 171
    14c8:	3a ea       	ldi	r19, 0xAA	; 170
    14ca:	4a ea       	ldi	r20, 0xAA	; 170
    14cc:	50 e4       	ldi	r21, 0x40	; 64
    14ce:	69 a1       	ldd	r22, Y+33	; 0x21
    14d0:	7a a1       	ldd	r23, Y+34	; 0x22
    14d2:	8b a1       	ldd	r24, Y+35	; 0x23
    14d4:	9c a1       	ldd	r25, Y+36	; 0x24
    14d6:	0e 94 cb 10 	call	0x2196	; 0x2196 <__mulsf3>
    14da:	2d 96       	adiw	r28, 0x0d	; 13
    14dc:	6c af       	std	Y+60, r22	; 0x3c
    14de:	7d af       	std	Y+61, r23	; 0x3d
    14e0:	8e af       	std	Y+62, r24	; 0x3e
    14e2:	9f af       	std	Y+63, r25	; 0x3f
    14e4:	2d 97       	sbiw	r28, 0x0d	; 13
    14e6:	2d 96       	adiw	r28, 0x0d	; 13
    14e8:	8c ad       	ldd	r24, Y+60	; 0x3c
    14ea:	9d ad       	ldd	r25, Y+61	; 0x3d
    14ec:	ae ad       	ldd	r26, Y+62	; 0x3e
    14ee:	bf ad       	ldd	r27, Y+63	; 0x3f
    14f0:	2d 97       	sbiw	r28, 0x0d	; 13
    14f2:	8d a3       	std	Y+37, r24	; 0x25
    14f4:	9e a3       	std	Y+38, r25	; 0x26
    14f6:	af a3       	std	Y+39, r26	; 0x27
    14f8:	b8 a7       	std	Y+40, r27	; 0x28

000014fa <.Loc.385>:
	__tmp2 = ((F_CPU) / 4e6) * __us;
    14fa:	20 e0       	ldi	r18, 0x00	; 0
    14fc:	30 e0       	ldi	r19, 0x00	; 0
    14fe:	40 e8       	ldi	r20, 0x80	; 128
    1500:	50 e4       	ldi	r21, 0x40	; 64
    1502:	69 a1       	ldd	r22, Y+33	; 0x21
    1504:	7a a1       	ldd	r23, Y+34	; 0x22
    1506:	8b a1       	ldd	r24, Y+35	; 0x23
    1508:	9c a1       	ldd	r25, Y+36	; 0x24
    150a:	0e 94 cb 10 	call	0x2196	; 0x2196 <__mulsf3>
    150e:	61 96       	adiw	r28, 0x11	; 17
    1510:	6c af       	std	Y+60, r22	; 0x3c
    1512:	7d af       	std	Y+61, r23	; 0x3d
    1514:	8e af       	std	Y+62, r24	; 0x3e
    1516:	9f af       	std	Y+63, r25	; 0x3f
    1518:	61 97       	sbiw	r28, 0x11	; 17
    151a:	61 96       	adiw	r28, 0x11	; 17
    151c:	8c ad       	ldd	r24, Y+60	; 0x3c
    151e:	9d ad       	ldd	r25, Y+61	; 0x3d
    1520:	ae ad       	ldd	r26, Y+62	; 0x3e
    1522:	bf ad       	ldd	r27, Y+63	; 0x3f
    1524:	61 97       	sbiw	r28, 0x11	; 17
    1526:	89 a7       	std	Y+41, r24	; 0x29
    1528:	9a a7       	std	Y+42, r25	; 0x2a
    152a:	ab a7       	std	Y+43, r26	; 0x2b
    152c:	bc a7       	std	Y+44, r27	; 0x2c

0000152e <.Loc.386>:
	if (__tmp < 1.0)
    152e:	20 e0       	ldi	r18, 0x00	; 0
    1530:	30 e0       	ldi	r19, 0x00	; 0
    1532:	40 e8       	ldi	r20, 0x80	; 128
    1534:	5f e3       	ldi	r21, 0x3F	; 63
    1536:	6d a1       	ldd	r22, Y+37	; 0x25
    1538:	7e a1       	ldd	r23, Y+38	; 0x26
    153a:	8f a1       	ldd	r24, Y+39	; 0x27
    153c:	98 a5       	ldd	r25, Y+40	; 0x28
    153e:	0e 94 67 0f 	call	0x1ece	; 0x1ece <__cmpsf2>
    1542:	88 23       	and	r24, r24
    1544:	1c f4       	brge	.+6      	; 0x154c <.L125>

00001546 <.Loc.387>:
		__ticks = 1;
    1546:	81 e0       	ldi	r24, 0x01	; 1
    1548:	8d a7       	std	Y+45, r24	; 0x2d
    154a:	ff c0       	rjmp	.+510    	; 0x174a <.L85>

0000154c <.L125>:
	else if (__tmp2 > 65535)
    154c:	20 e0       	ldi	r18, 0x00	; 0
    154e:	3f ef       	ldi	r19, 0xFF	; 255
    1550:	4f e7       	ldi	r20, 0x7F	; 127
    1552:	57 e4       	ldi	r21, 0x47	; 71
    1554:	69 a5       	ldd	r22, Y+41	; 0x29
    1556:	7a a5       	ldd	r23, Y+42	; 0x2a
    1558:	8b a5       	ldd	r24, Y+43	; 0x2b
    155a:	9c a5       	ldd	r25, Y+44	; 0x2c
    155c:	0e 94 c6 10 	call	0x218c	; 0x218c <__gesf2>
    1560:	88 23       	and	r24, r24
    1562:	09 f0       	breq	.+2      	; 0x1566 <L0^A>

00001564 <L0^A>:
    1564:	0c f4       	brge	.+2      	; 0x1568 <.Loc.389>

00001566 <L0^A>:
    1566:	b6 c0       	rjmp	.+364    	; 0x16d4 <.L126>

00001568 <.Loc.389>:
	{
		_delay_ms(__us / 1000.0);
    1568:	20 e0       	ldi	r18, 0x00	; 0
    156a:	30 e0       	ldi	r19, 0x00	; 0
    156c:	4a e7       	ldi	r20, 0x7A	; 122
    156e:	54 e4       	ldi	r21, 0x44	; 68
    1570:	69 a1       	ldd	r22, Y+33	; 0x21
    1572:	7a a1       	ldd	r23, Y+34	; 0x22
    1574:	8b a1       	ldd	r24, Y+35	; 0x23
    1576:	9c a1       	ldd	r25, Y+36	; 0x24
    1578:	0e 94 6c 0f 	call	0x1ed8	; 0x1ed8 <__divsf3>
    157c:	65 96       	adiw	r28, 0x15	; 21
    157e:	6c af       	std	Y+60, r22	; 0x3c
    1580:	7d af       	std	Y+61, r23	; 0x3d
    1582:	8e af       	std	Y+62, r24	; 0x3e
    1584:	9f af       	std	Y+63, r25	; 0x3f
    1586:	65 97       	sbiw	r28, 0x15	; 21
    1588:	65 96       	adiw	r28, 0x15	; 21
    158a:	8c ad       	ldd	r24, Y+60	; 0x3c
    158c:	9d ad       	ldd	r25, Y+61	; 0x3d
    158e:	ae ad       	ldd	r26, Y+62	; 0x3e
    1590:	bf ad       	ldd	r27, Y+63	; 0x3f
    1592:	65 97       	sbiw	r28, 0x15	; 21
    1594:	8e a7       	std	Y+46, r24	; 0x2e
    1596:	9f a7       	std	Y+47, r25	; 0x2f
    1598:	a8 ab       	std	Y+48, r26	; 0x30
    159a:	b9 ab       	std	Y+49, r27	; 0x31

0000159c <.LBB76>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    159c:	20 e0       	ldi	r18, 0x00	; 0
    159e:	30 e0       	ldi	r19, 0x00	; 0
    15a0:	4a e7       	ldi	r20, 0x7A	; 122
    15a2:	55 e4       	ldi	r21, 0x45	; 69
    15a4:	6e a5       	ldd	r22, Y+46	; 0x2e
    15a6:	7f a5       	ldd	r23, Y+47	; 0x2f
    15a8:	88 a9       	ldd	r24, Y+48	; 0x30
    15aa:	99 a9       	ldd	r25, Y+49	; 0x31
    15ac:	0e 94 cb 10 	call	0x2196	; 0x2196 <__mulsf3>
    15b0:	69 96       	adiw	r28, 0x19	; 25
    15b2:	6c af       	std	Y+60, r22	; 0x3c
    15b4:	7d af       	std	Y+61, r23	; 0x3d
    15b6:	8e af       	std	Y+62, r24	; 0x3e
    15b8:	9f af       	std	Y+63, r25	; 0x3f
    15ba:	69 97       	sbiw	r28, 0x19	; 25
    15bc:	69 96       	adiw	r28, 0x19	; 25
    15be:	8c ad       	ldd	r24, Y+60	; 0x3c
    15c0:	9d ad       	ldd	r25, Y+61	; 0x3d
    15c2:	ae ad       	ldd	r26, Y+62	; 0x3e
    15c4:	bf ad       	ldd	r27, Y+63	; 0x3f
    15c6:	69 97       	sbiw	r28, 0x19	; 25
    15c8:	8a ab       	std	Y+50, r24	; 0x32
    15ca:	9b ab       	std	Y+51, r25	; 0x33
    15cc:	ac ab       	std	Y+52, r26	; 0x34
    15ce:	bd ab       	std	Y+53, r27	; 0x35

000015d0 <.Loc.391>:
	if (__tmp < 1.0)
    15d0:	20 e0       	ldi	r18, 0x00	; 0
    15d2:	30 e0       	ldi	r19, 0x00	; 0
    15d4:	40 e8       	ldi	r20, 0x80	; 128
    15d6:	5f e3       	ldi	r21, 0x3F	; 63
    15d8:	6a a9       	ldd	r22, Y+50	; 0x32
    15da:	7b a9       	ldd	r23, Y+51	; 0x33
    15dc:	8c a9       	ldd	r24, Y+52	; 0x34
    15de:	9d a9       	ldd	r25, Y+53	; 0x35
    15e0:	0e 94 67 0f 	call	0x1ece	; 0x1ece <__cmpsf2>
    15e4:	88 23       	and	r24, r24
    15e6:	2c f4       	brge	.+10     	; 0x15f2 <.L127>

000015e8 <.Loc.392>:
		__ticks = 1;
    15e8:	81 e0       	ldi	r24, 0x01	; 1
    15ea:	90 e0       	ldi	r25, 0x00	; 0
    15ec:	9f ab       	std	Y+55, r25	; 0x37
    15ee:	8e ab       	std	Y+54, r24	; 0x36
    15f0:	66 c0       	rjmp	.+204    	; 0x16be <.L90>

000015f2 <.L127>:
	else if (__tmp > 65535)
    15f2:	20 e0       	ldi	r18, 0x00	; 0
    15f4:	3f ef       	ldi	r19, 0xFF	; 255
    15f6:	4f e7       	ldi	r20, 0x7F	; 127
    15f8:	57 e4       	ldi	r21, 0x47	; 71
    15fa:	6a a9       	ldd	r22, Y+50	; 0x32
    15fc:	7b a9       	ldd	r23, Y+51	; 0x33
    15fe:	8c a9       	ldd	r24, Y+52	; 0x34
    1600:	9d a9       	ldd	r25, Y+53	; 0x35
    1602:	0e 94 c6 10 	call	0x218c	; 0x218c <__gesf2>
    1606:	88 23       	and	r24, r24
    1608:	09 f0       	breq	.+2      	; 0x160c <L0^A>

0000160a <L0^A>:
    160a:	0c f4       	brge	.+2      	; 0x160e <.Loc.394>

0000160c <L0^A>:
    160c:	46 c0       	rjmp	.+140    	; 0x169a <.L128>

0000160e <.Loc.394>:
		__ticks = (uint16_t) (__ms * 10.0);
    160e:	20 e0       	ldi	r18, 0x00	; 0
    1610:	30 e0       	ldi	r19, 0x00	; 0
    1612:	40 e2       	ldi	r20, 0x20	; 32
    1614:	51 e4       	ldi	r21, 0x41	; 65
    1616:	6e a5       	ldd	r22, Y+46	; 0x2e
    1618:	7f a5       	ldd	r23, Y+47	; 0x2f
    161a:	88 a9       	ldd	r24, Y+48	; 0x30
    161c:	99 a9       	ldd	r25, Y+49	; 0x31
    161e:	0e 94 cb 10 	call	0x2196	; 0x2196 <__mulsf3>
    1622:	6d 96       	adiw	r28, 0x1d	; 29
    1624:	6c af       	std	Y+60, r22	; 0x3c
    1626:	7d af       	std	Y+61, r23	; 0x3d
    1628:	8e af       	std	Y+62, r24	; 0x3e
    162a:	9f af       	std	Y+63, r25	; 0x3f
    162c:	6d 97       	sbiw	r28, 0x1d	; 29
    162e:	6d 96       	adiw	r28, 0x1d	; 29
    1630:	8c ad       	ldd	r24, Y+60	; 0x3c
    1632:	9d ad       	ldd	r25, Y+61	; 0x3d
    1634:	ae ad       	ldd	r26, Y+62	; 0x3e
    1636:	bf ad       	ldd	r27, Y+63	; 0x3f
    1638:	6d 97       	sbiw	r28, 0x1d	; 29
    163a:	29 96       	adiw	r28, 0x09	; 9
    163c:	8c af       	std	Y+60, r24	; 0x3c
    163e:	9d af       	std	Y+61, r25	; 0x3d
    1640:	ae af       	std	Y+62, r26	; 0x3e
    1642:	bf af       	std	Y+63, r27	; 0x3f
    1644:	29 97       	sbiw	r28, 0x09	; 9

00001646 <.Loc.395>:
    1646:	29 96       	adiw	r28, 0x09	; 9
    1648:	6c ad       	ldd	r22, Y+60	; 0x3c
    164a:	7d ad       	ldd	r23, Y+61	; 0x3d
    164c:	8e ad       	ldd	r24, Y+62	; 0x3e
    164e:	9f ad       	ldd	r25, Y+63	; 0x3f
    1650:	29 97       	sbiw	r28, 0x09	; 9
    1652:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <__fixunssfsi>
    1656:	a1 96       	adiw	r28, 0x21	; 33
    1658:	6c af       	std	Y+60, r22	; 0x3c
    165a:	7d af       	std	Y+61, r23	; 0x3d
    165c:	8e af       	std	Y+62, r24	; 0x3e
    165e:	9f af       	std	Y+63, r25	; 0x3f
    1660:	a1 97       	sbiw	r28, 0x21	; 33
    1662:	6f 96       	adiw	r28, 0x1f	; 31
    1664:	ae ad       	ldd	r26, Y+62	; 0x3e
    1666:	bf ad       	ldd	r27, Y+63	; 0x3f
    1668:	6f 97       	sbiw	r28, 0x1f	; 31
    166a:	bf ab       	std	Y+55, r27	; 0x37
    166c:	ae ab       	std	Y+54, r26	; 0x36

0000166e <.Loc.396>:
		while(__ticks)
    166e:	10 c0       	rjmp	.+32     	; 0x1690 <.L93>

00001670 <.L94>:
    1670:	80 e9       	ldi	r24, 0x90	; 144
    1672:	91 e0       	ldi	r25, 0x01	; 1
    1674:	99 af       	std	Y+57, r25	; 0x39
    1676:	88 af       	std	Y+56, r24	; 0x38

00001678 <.LBB78>:
    1678:	88 ad       	ldd	r24, Y+56	; 0x38
    167a:	99 ad       	ldd	r25, Y+57	; 0x39

0000167c <.L1^B5>:
    167c:	01 97       	sbiw	r24, 0x01	; 1
    167e:	f1 f7       	brne	.-4      	; 0x167c <.L1^B5>
    1680:	99 af       	std	Y+57, r25	; 0x39
    1682:	88 af       	std	Y+56, r24	; 0x38

00001684 <.Loc.398>:
	...

00001686 <.LBE78>:
			__ticks --;
    1686:	8e a9       	ldd	r24, Y+54	; 0x36
    1688:	9f a9       	ldd	r25, Y+55	; 0x37
    168a:	01 97       	sbiw	r24, 0x01	; 1
    168c:	9f ab       	std	Y+55, r25	; 0x37
    168e:	8e ab       	std	Y+54, r24	; 0x36

00001690 <.L93>:
		while(__ticks)
    1690:	8e a9       	ldd	r24, Y+54	; 0x36
    1692:	9f a9       	ldd	r25, Y+55	; 0x37
    1694:	00 97       	sbiw	r24, 0x00	; 0
    1696:	61 f7       	brne	.-40     	; 0x1670 <.L94>

00001698 <.Loc.401>:
		return;
    1698:	58 c0       	rjmp	.+176    	; 0x174a <.L85>

0000169a <.L128>:
		__ticks = (uint16_t)__tmp;
    169a:	6a a9       	ldd	r22, Y+50	; 0x32
    169c:	7b a9       	ldd	r23, Y+51	; 0x33
    169e:	8c a9       	ldd	r24, Y+52	; 0x34
    16a0:	9d a9       	ldd	r25, Y+53	; 0x35
    16a2:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <__fixunssfsi>
    16a6:	a5 96       	adiw	r28, 0x25	; 37
    16a8:	6c af       	std	Y+60, r22	; 0x3c
    16aa:	7d af       	std	Y+61, r23	; 0x3d
    16ac:	8e af       	std	Y+62, r24	; 0x3e
    16ae:	9f af       	std	Y+63, r25	; 0x3f
    16b0:	a5 97       	sbiw	r28, 0x25	; 37
    16b2:	a3 96       	adiw	r28, 0x23	; 35
    16b4:	ee ad       	ldd	r30, Y+62	; 0x3e
    16b6:	ff ad       	ldd	r31, Y+63	; 0x3f
    16b8:	a3 97       	sbiw	r28, 0x23	; 35
    16ba:	ff ab       	std	Y+55, r31	; 0x37
    16bc:	ee ab       	std	Y+54, r30	; 0x36

000016be <.L90>:
    16be:	8e a9       	ldd	r24, Y+54	; 0x36
    16c0:	9f a9       	ldd	r25, Y+55	; 0x37
    16c2:	9b af       	std	Y+59, r25	; 0x3b
    16c4:	8a af       	std	Y+58, r24	; 0x3a

000016c6 <.LBB80>:
    16c6:	8a ad       	ldd	r24, Y+58	; 0x3a
    16c8:	9b ad       	ldd	r25, Y+59	; 0x3b

000016ca <.L1^B6>:
    16ca:	01 97       	sbiw	r24, 0x01	; 1
    16cc:	f1 f7       	brne	.-4      	; 0x16ca <.L1^B6>
    16ce:	9b af       	std	Y+59, r25	; 0x3b
    16d0:	8a af       	std	Y+58, r24	; 0x3a

000016d2 <.Loc.404>:
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
#endif /* __AVR_TINY__ */
}
    16d2:	3b c0       	rjmp	.+118    	; 0x174a <.L85>

000016d4 <.L126>:
	}
	else if (__tmp > 255)
    16d4:	20 e0       	ldi	r18, 0x00	; 0
    16d6:	30 e0       	ldi	r19, 0x00	; 0
    16d8:	4f e7       	ldi	r20, 0x7F	; 127
    16da:	53 e4       	ldi	r21, 0x43	; 67
    16dc:	6d a1       	ldd	r22, Y+37	; 0x25
    16de:	7e a1       	ldd	r23, Y+38	; 0x26
    16e0:	8f a1       	ldd	r24, Y+39	; 0x27
    16e2:	98 a5       	ldd	r25, Y+40	; 0x28
    16e4:	0e 94 c6 10 	call	0x218c	; 0x218c <__gesf2>
    16e8:	88 23       	and	r24, r24
    16ea:	f9 f0       	breq	.+62     	; 0x172a <.L129>
    16ec:	f4 f0       	brlt	.+60     	; 0x172a <.L129>

000016ee <.LBB82>:
	{
		uint16_t __ticks=(uint16_t)__tmp2;
    16ee:	69 a5       	ldd	r22, Y+41	; 0x29
    16f0:	7a a5       	ldd	r23, Y+42	; 0x2a
    16f2:	8b a5       	ldd	r24, Y+43	; 0x2b
    16f4:	9c a5       	ldd	r25, Y+44	; 0x2c
    16f6:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <__fixunssfsi>
    16fa:	a9 96       	adiw	r28, 0x29	; 41
    16fc:	6c af       	std	Y+60, r22	; 0x3c
    16fe:	7d af       	std	Y+61, r23	; 0x3d
    1700:	8e af       	std	Y+62, r24	; 0x3e
    1702:	9f af       	std	Y+63, r25	; 0x3f
    1704:	a9 97       	sbiw	r28, 0x29	; 41
    1706:	a7 96       	adiw	r28, 0x27	; 39
    1708:	8e ad       	ldd	r24, Y+62	; 0x3e
    170a:	9f ad       	ldd	r25, Y+63	; 0x3f
    170c:	a7 97       	sbiw	r28, 0x27	; 39
    170e:	9d af       	std	Y+61, r25	; 0x3d
    1710:	8c af       	std	Y+60, r24	; 0x3c
    1712:	8c ad       	ldd	r24, Y+60	; 0x3c
    1714:	9d ad       	ldd	r25, Y+61	; 0x3d
    1716:	9f af       	std	Y+63, r25	; 0x3f
    1718:	8e af       	std	Y+62, r24	; 0x3e

0000171a <.LBB83>:
	__asm__ volatile (
    171a:	8e ad       	ldd	r24, Y+62	; 0x3e
    171c:	9f ad       	ldd	r25, Y+63	; 0x3f

0000171e <.L1^B7>:
    171e:	01 97       	sbiw	r24, 0x01	; 1
    1720:	f1 f7       	brne	.-4      	; 0x171e <.L1^B7>
    1722:	9f af       	std	Y+63, r25	; 0x3f
    1724:	8e af       	std	Y+62, r24	; 0x3e

00001726 <.Loc.408>:
	...

00001728 <.LBE83>:
		_delay_loop_2(__ticks);
		return;
    1728:	24 c0       	rjmp	.+72     	; 0x1772 <.L98>

0000172a <.L129>:
	}
	else
		__ticks = (uint8_t)__tmp;
    172a:	6d a1       	ldd	r22, Y+37	; 0x25
    172c:	7e a1       	ldd	r23, Y+38	; 0x26
    172e:	8f a1       	ldd	r24, Y+39	; 0x27
    1730:	98 a5       	ldd	r25, Y+40	; 0x28
    1732:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <__fixunssfsi>
    1736:	ad 96       	adiw	r28, 0x2d	; 45
    1738:	6c af       	std	Y+60, r22	; 0x3c
    173a:	7d af       	std	Y+61, r23	; 0x3d
    173c:	8e af       	std	Y+62, r24	; 0x3e
    173e:	9f af       	std	Y+63, r25	; 0x3f
    1740:	ad 97       	sbiw	r28, 0x2d	; 45
    1742:	aa 96       	adiw	r28, 0x2a	; 42
    1744:	9f ad       	ldd	r25, Y+63	; 0x3f
    1746:	aa 97       	sbiw	r28, 0x2a	; 42
    1748:	9d a7       	std	Y+45, r25	; 0x2d

0000174a <.L85>:
    174a:	2d a5       	ldd	r18, Y+45	; 0x2d
    174c:	ce 01       	movw	r24, r28
    174e:	80 5c       	subi	r24, 0xC0	; 192
    1750:	9f 4f       	sbci	r25, 0xFF	; 255
    1752:	dc 01       	movw	r26, r24
    1754:	2c 93       	st	X, r18

00001756 <.LBB85>:
	__asm__ volatile (
    1756:	ce 01       	movw	r24, r28
    1758:	80 5c       	subi	r24, 0xC0	; 192
    175a:	9f 4f       	sbci	r25, 0xFF	; 255
    175c:	fc 01       	movw	r30, r24
    175e:	80 81       	ld	r24, Z
    1760:	28 2f       	mov	r18, r24

00001762 <.L1^B8>:
    1762:	2a 95       	dec	r18
    1764:	f1 f7       	brne	.-4      	; 0x1762 <.L1^B8>
    1766:	ce 01       	movw	r24, r28
    1768:	80 5c       	subi	r24, 0xC0	; 192
    176a:	9f 4f       	sbci	r25, 0xFF	; 255
    176c:	dc 01       	movw	r26, r24
    176e:	2c 93       	st	X, r18

00001770 <.Loc.412>:
	...

00001772 <.L98>:
    _delay_us(2);
    PORTL |= (1<<PL6);
    1772:	8b e0       	ldi	r24, 0x0B	; 11
    1774:	91 e0       	ldi	r25, 0x01	; 1
    1776:	fc 01       	movw	r30, r24
    1778:	20 81       	ld	r18, Z
    177a:	8b e0       	ldi	r24, 0x0B	; 11
    177c:	91 e0       	ldi	r25, 0x01	; 1

0000177e <.Loc.414>:
    177e:	20 64       	ori	r18, 0x40	; 64
    1780:	dc 01       	movw	r26, r24
    1782:	2c 93       	st	X, r18
    1784:	80 e0       	ldi	r24, 0x00	; 0
    1786:	90 e0       	ldi	r25, 0x00	; 0
    1788:	a0 e2       	ldi	r26, 0x20	; 32
    178a:	b1 e4       	ldi	r27, 0x41	; 65
    178c:	89 83       	std	Y+1, r24	; 0x01
    178e:	9a 83       	std	Y+2, r25	; 0x02
    1790:	ab 83       	std	Y+3, r26	; 0x03
    1792:	bc 83       	std	Y+4, r27	; 0x04

00001794 <.LBB87>:
	__tmp = ((F_CPU) / 3e6) * __us;
    1794:	2b ea       	ldi	r18, 0xAB	; 171
    1796:	3a ea       	ldi	r19, 0xAA	; 170
    1798:	4a ea       	ldi	r20, 0xAA	; 170
    179a:	50 e4       	ldi	r21, 0x40	; 64
    179c:	69 81       	ldd	r22, Y+1	; 0x01
    179e:	7a 81       	ldd	r23, Y+2	; 0x02
    17a0:	8b 81       	ldd	r24, Y+3	; 0x03
    17a2:	9c 81       	ldd	r25, Y+4	; 0x04
    17a4:	0e 94 cb 10 	call	0x2196	; 0x2196 <__mulsf3>
    17a8:	e1 96       	adiw	r28, 0x31	; 49
    17aa:	6c af       	std	Y+60, r22	; 0x3c
    17ac:	7d af       	std	Y+61, r23	; 0x3d
    17ae:	8e af       	std	Y+62, r24	; 0x3e
    17b0:	9f af       	std	Y+63, r25	; 0x3f
    17b2:	e1 97       	sbiw	r28, 0x31	; 49
    17b4:	e1 96       	adiw	r28, 0x31	; 49
    17b6:	8c ad       	ldd	r24, Y+60	; 0x3c
    17b8:	9d ad       	ldd	r25, Y+61	; 0x3d
    17ba:	ae ad       	ldd	r26, Y+62	; 0x3e
    17bc:	bf ad       	ldd	r27, Y+63	; 0x3f
    17be:	e1 97       	sbiw	r28, 0x31	; 49
    17c0:	8d 83       	std	Y+5, r24	; 0x05
    17c2:	9e 83       	std	Y+6, r25	; 0x06
    17c4:	af 83       	std	Y+7, r26	; 0x07
    17c6:	b8 87       	std	Y+8, r27	; 0x08

000017c8 <.Loc.416>:
	__tmp2 = ((F_CPU) / 4e6) * __us;
    17c8:	20 e0       	ldi	r18, 0x00	; 0
    17ca:	30 e0       	ldi	r19, 0x00	; 0
    17cc:	40 e8       	ldi	r20, 0x80	; 128
    17ce:	50 e4       	ldi	r21, 0x40	; 64
    17d0:	69 81       	ldd	r22, Y+1	; 0x01
    17d2:	7a 81       	ldd	r23, Y+2	; 0x02
    17d4:	8b 81       	ldd	r24, Y+3	; 0x03
    17d6:	9c 81       	ldd	r25, Y+4	; 0x04
    17d8:	0e 94 cb 10 	call	0x2196	; 0x2196 <__mulsf3>
    17dc:	e5 96       	adiw	r28, 0x35	; 53
    17de:	6c af       	std	Y+60, r22	; 0x3c
    17e0:	7d af       	std	Y+61, r23	; 0x3d
    17e2:	8e af       	std	Y+62, r24	; 0x3e
    17e4:	9f af       	std	Y+63, r25	; 0x3f
    17e6:	e5 97       	sbiw	r28, 0x35	; 53
    17e8:	e5 96       	adiw	r28, 0x35	; 53
    17ea:	8c ad       	ldd	r24, Y+60	; 0x3c
    17ec:	9d ad       	ldd	r25, Y+61	; 0x3d
    17ee:	ae ad       	ldd	r26, Y+62	; 0x3e
    17f0:	bf ad       	ldd	r27, Y+63	; 0x3f
    17f2:	e5 97       	sbiw	r28, 0x35	; 53
    17f4:	89 87       	std	Y+9, r24	; 0x09
    17f6:	9a 87       	std	Y+10, r25	; 0x0a
    17f8:	ab 87       	std	Y+11, r26	; 0x0b
    17fa:	bc 87       	std	Y+12, r27	; 0x0c

000017fc <.Loc.417>:
	if (__tmp < 1.0)
    17fc:	20 e0       	ldi	r18, 0x00	; 0
    17fe:	30 e0       	ldi	r19, 0x00	; 0
    1800:	40 e8       	ldi	r20, 0x80	; 128
    1802:	5f e3       	ldi	r21, 0x3F	; 63
    1804:	6d 81       	ldd	r22, Y+5	; 0x05
    1806:	7e 81       	ldd	r23, Y+6	; 0x06
    1808:	8f 81       	ldd	r24, Y+7	; 0x07
    180a:	98 85       	ldd	r25, Y+8	; 0x08
    180c:	0e 94 67 0f 	call	0x1ece	; 0x1ece <__cmpsf2>
    1810:	88 23       	and	r24, r24
    1812:	1c f4       	brge	.+6      	; 0x181a <.L130>

00001814 <.Loc.418>:
		__ticks = 1;
    1814:	81 e0       	ldi	r24, 0x01	; 1
    1816:	8d 87       	std	Y+13, r24	; 0x0d
    1818:	13 c1       	rjmp	.+550    	; 0x1a40 <.L101>

0000181a <.L130>:
	else if (__tmp2 > 65535)
    181a:	20 e0       	ldi	r18, 0x00	; 0
    181c:	3f ef       	ldi	r19, 0xFF	; 255
    181e:	4f e7       	ldi	r20, 0x7F	; 127
    1820:	57 e4       	ldi	r21, 0x47	; 71
    1822:	69 85       	ldd	r22, Y+9	; 0x09
    1824:	7a 85       	ldd	r23, Y+10	; 0x0a
    1826:	8b 85       	ldd	r24, Y+11	; 0x0b
    1828:	9c 85       	ldd	r25, Y+12	; 0x0c
    182a:	0e 94 c6 10 	call	0x218c	; 0x218c <__gesf2>
    182e:	88 23       	and	r24, r24
    1830:	09 f0       	breq	.+2      	; 0x1834 <L0^A>

00001832 <L0^A>:
    1832:	0c f4       	brge	.+2      	; 0x1836 <.Loc.420>

00001834 <L0^A>:
    1834:	c2 c0       	rjmp	.+388    	; 0x19ba <.L131>

00001836 <.Loc.420>:
		_delay_ms(__us / 1000.0);
    1836:	20 e0       	ldi	r18, 0x00	; 0
    1838:	30 e0       	ldi	r19, 0x00	; 0
    183a:	4a e7       	ldi	r20, 0x7A	; 122
    183c:	54 e4       	ldi	r21, 0x44	; 68
    183e:	69 81       	ldd	r22, Y+1	; 0x01
    1840:	7a 81       	ldd	r23, Y+2	; 0x02
    1842:	8b 81       	ldd	r24, Y+3	; 0x03
    1844:	9c 81       	ldd	r25, Y+4	; 0x04
    1846:	0e 94 6c 0f 	call	0x1ed8	; 0x1ed8 <__divsf3>
    184a:	e9 96       	adiw	r28, 0x39	; 57
    184c:	6c af       	std	Y+60, r22	; 0x3c
    184e:	7d af       	std	Y+61, r23	; 0x3d
    1850:	8e af       	std	Y+62, r24	; 0x3e
    1852:	9f af       	std	Y+63, r25	; 0x3f
    1854:	e9 97       	sbiw	r28, 0x39	; 57
    1856:	e9 96       	adiw	r28, 0x39	; 57
    1858:	8c ad       	ldd	r24, Y+60	; 0x3c
    185a:	9d ad       	ldd	r25, Y+61	; 0x3d
    185c:	ae ad       	ldd	r26, Y+62	; 0x3e
    185e:	bf ad       	ldd	r27, Y+63	; 0x3f
    1860:	e9 97       	sbiw	r28, 0x39	; 57
    1862:	8e 87       	std	Y+14, r24	; 0x0e
    1864:	9f 87       	std	Y+15, r25	; 0x0f
    1866:	a8 8b       	std	Y+16, r26	; 0x10
    1868:	b9 8b       	std	Y+17, r27	; 0x11

0000186a <.LBB89>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    186a:	20 e0       	ldi	r18, 0x00	; 0
    186c:	30 e0       	ldi	r19, 0x00	; 0
    186e:	4a e7       	ldi	r20, 0x7A	; 122
    1870:	55 e4       	ldi	r21, 0x45	; 69
    1872:	6e 85       	ldd	r22, Y+14	; 0x0e
    1874:	7f 85       	ldd	r23, Y+15	; 0x0f
    1876:	88 89       	ldd	r24, Y+16	; 0x10
    1878:	99 89       	ldd	r25, Y+17	; 0x11
    187a:	0e 94 cb 10 	call	0x2196	; 0x2196 <__mulsf3>
    187e:	ed 96       	adiw	r28, 0x3d	; 61
    1880:	6c af       	std	Y+60, r22	; 0x3c
    1882:	7d af       	std	Y+61, r23	; 0x3d
    1884:	8e af       	std	Y+62, r24	; 0x3e
    1886:	9f af       	std	Y+63, r25	; 0x3f
    1888:	ed 97       	sbiw	r28, 0x3d	; 61
    188a:	ed 96       	adiw	r28, 0x3d	; 61
    188c:	8c ad       	ldd	r24, Y+60	; 0x3c
    188e:	9d ad       	ldd	r25, Y+61	; 0x3d
    1890:	ae ad       	ldd	r26, Y+62	; 0x3e
    1892:	bf ad       	ldd	r27, Y+63	; 0x3f
    1894:	ed 97       	sbiw	r28, 0x3d	; 61
    1896:	8a 8b       	std	Y+18, r24	; 0x12
    1898:	9b 8b       	std	Y+19, r25	; 0x13
    189a:	ac 8b       	std	Y+20, r26	; 0x14
    189c:	bd 8b       	std	Y+21, r27	; 0x15

0000189e <.Loc.422>:
	if (__tmp < 1.0)
    189e:	20 e0       	ldi	r18, 0x00	; 0
    18a0:	30 e0       	ldi	r19, 0x00	; 0
    18a2:	40 e8       	ldi	r20, 0x80	; 128
    18a4:	5f e3       	ldi	r21, 0x3F	; 63
    18a6:	6a 89       	ldd	r22, Y+18	; 0x12
    18a8:	7b 89       	ldd	r23, Y+19	; 0x13
    18aa:	8c 89       	ldd	r24, Y+20	; 0x14
    18ac:	9d 89       	ldd	r25, Y+21	; 0x15
    18ae:	0e 94 67 0f 	call	0x1ece	; 0x1ece <__cmpsf2>
    18b2:	88 23       	and	r24, r24
    18b4:	2c f4       	brge	.+10     	; 0x18c0 <.L132>

000018b6 <.Loc.423>:
		__ticks = 1;
    18b6:	81 e0       	ldi	r24, 0x01	; 1
    18b8:	90 e0       	ldi	r25, 0x00	; 0
    18ba:	9f 8b       	std	Y+23, r25	; 0x17
    18bc:	8e 8b       	std	Y+22, r24	; 0x16
    18be:	72 c0       	rjmp	.+228    	; 0x19a4 <.L106>

000018c0 <.L132>:
	else if (__tmp > 65535)
    18c0:	20 e0       	ldi	r18, 0x00	; 0
    18c2:	3f ef       	ldi	r19, 0xFF	; 255
    18c4:	4f e7       	ldi	r20, 0x7F	; 127
    18c6:	57 e4       	ldi	r21, 0x47	; 71
    18c8:	6a 89       	ldd	r22, Y+18	; 0x12
    18ca:	7b 89       	ldd	r23, Y+19	; 0x13
    18cc:	8c 89       	ldd	r24, Y+20	; 0x14
    18ce:	9d 89       	ldd	r25, Y+21	; 0x15
    18d0:	0e 94 c6 10 	call	0x218c	; 0x218c <__gesf2>
    18d4:	88 23       	and	r24, r24
    18d6:	09 f0       	breq	.+2      	; 0x18da <L0^A>

000018d8 <L0^A>:
    18d8:	0c f4       	brge	.+2      	; 0x18dc <.Loc.425>

000018da <L0^A>:
    18da:	4e c0       	rjmp	.+156    	; 0x1978 <.L133>

000018dc <.Loc.425>:
		__ticks = (uint16_t) (__ms * 10.0);
    18dc:	20 e0       	ldi	r18, 0x00	; 0
    18de:	30 e0       	ldi	r19, 0x00	; 0
    18e0:	40 e2       	ldi	r20, 0x20	; 32
    18e2:	51 e4       	ldi	r21, 0x41	; 65
    18e4:	6e 85       	ldd	r22, Y+14	; 0x0e
    18e6:	7f 85       	ldd	r23, Y+15	; 0x0f
    18e8:	88 89       	ldd	r24, Y+16	; 0x10
    18ea:	99 89       	ldd	r25, Y+17	; 0x11
    18ec:	0e 94 cb 10 	call	0x2196	; 0x2196 <__mulsf3>
    18f0:	c3 58       	subi	r28, 0x83	; 131
    18f2:	df 4f       	sbci	r29, 0xFF	; 255
    18f4:	68 83       	st	Y, r22
    18f6:	79 83       	std	Y+1, r23	; 0x01
    18f8:	8a 83       	std	Y+2, r24	; 0x02
    18fa:	9b 83       	std	Y+3, r25	; 0x03
    18fc:	cd 57       	subi	r28, 0x7D	; 125
    18fe:	d0 40       	sbci	r29, 0x00	; 0
    1900:	c3 58       	subi	r28, 0x83	; 131
    1902:	df 4f       	sbci	r29, 0xFF	; 255
    1904:	88 81       	ld	r24, Y
    1906:	99 81       	ldd	r25, Y+1	; 0x01
    1908:	aa 81       	ldd	r26, Y+2	; 0x02
    190a:	bb 81       	ldd	r27, Y+3	; 0x03
    190c:	cd 57       	subi	r28, 0x7D	; 125
    190e:	d0 40       	sbci	r29, 0x00	; 0
    1910:	25 96       	adiw	r28, 0x05	; 5
    1912:	8c af       	std	Y+60, r24	; 0x3c
    1914:	9d af       	std	Y+61, r25	; 0x3d
    1916:	ae af       	std	Y+62, r26	; 0x3e
    1918:	bf af       	std	Y+63, r27	; 0x3f
    191a:	25 97       	sbiw	r28, 0x05	; 5

0000191c <.Loc.426>:
    191c:	25 96       	adiw	r28, 0x05	; 5
    191e:	6c ad       	ldd	r22, Y+60	; 0x3c
    1920:	7d ad       	ldd	r23, Y+61	; 0x3d
    1922:	8e ad       	ldd	r24, Y+62	; 0x3e
    1924:	9f ad       	ldd	r25, Y+63	; 0x3f
    1926:	25 97       	sbiw	r28, 0x05	; 5
    1928:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <__fixunssfsi>
    192c:	cf 57       	subi	r28, 0x7F	; 127
    192e:	df 4f       	sbci	r29, 0xFF	; 255
    1930:	68 83       	st	Y, r22
    1932:	79 83       	std	Y+1, r23	; 0x01
    1934:	8a 83       	std	Y+2, r24	; 0x02
    1936:	9b 83       	std	Y+3, r25	; 0x03
    1938:	c1 58       	subi	r28, 0x81	; 129
    193a:	d0 40       	sbci	r29, 0x00	; 0
    193c:	cf 57       	subi	r28, 0x7F	; 127
    193e:	df 4f       	sbci	r29, 0xFF	; 255
    1940:	a8 81       	ld	r26, Y
    1942:	b9 81       	ldd	r27, Y+1	; 0x01
    1944:	c1 58       	subi	r28, 0x81	; 129
    1946:	d0 40       	sbci	r29, 0x00	; 0
    1948:	bf 8b       	std	Y+23, r27	; 0x17
    194a:	ae 8b       	std	Y+22, r26	; 0x16

0000194c <.Loc.427>:
		while(__ticks)
    194c:	10 c0       	rjmp	.+32     	; 0x196e <.L109>

0000194e <.L110>:
    194e:	80 e9       	ldi	r24, 0x90	; 144
    1950:	91 e0       	ldi	r25, 0x01	; 1
    1952:	99 8f       	std	Y+25, r25	; 0x19
    1954:	88 8f       	std	Y+24, r24	; 0x18

00001956 <.LBB91>:
	__asm__ volatile (
    1956:	88 8d       	ldd	r24, Y+24	; 0x18
    1958:	99 8d       	ldd	r25, Y+25	; 0x19

0000195a <.L1^B9>:
    195a:	01 97       	sbiw	r24, 0x01	; 1
    195c:	f1 f7       	brne	.-4      	; 0x195a <.L1^B9>
    195e:	99 8f       	std	Y+25, r25	; 0x19
    1960:	88 8f       	std	Y+24, r24	; 0x18

00001962 <.Loc.429>:
	...

00001964 <.LBE91>:
			__ticks --;
    1964:	8e 89       	ldd	r24, Y+22	; 0x16
    1966:	9f 89       	ldd	r25, Y+23	; 0x17
    1968:	01 97       	sbiw	r24, 0x01	; 1
    196a:	9f 8b       	std	Y+23, r25	; 0x17
    196c:	8e 8b       	std	Y+22, r24	; 0x16

0000196e <.L109>:
		while(__ticks)
    196e:	8e 89       	ldd	r24, Y+22	; 0x16
    1970:	9f 89       	ldd	r25, Y+23	; 0x17
    1972:	00 97       	sbiw	r24, 0x00	; 0
    1974:	61 f7       	brne	.-40     	; 0x194e <.L110>

00001976 <.Loc.432>:
		return;
    1976:	64 c0       	rjmp	.+200    	; 0x1a40 <.L101>

00001978 <.L133>:
		__ticks = (uint16_t)__tmp;
    1978:	6a 89       	ldd	r22, Y+18	; 0x12
    197a:	7b 89       	ldd	r23, Y+19	; 0x13
    197c:	8c 89       	ldd	r24, Y+20	; 0x14
    197e:	9d 89       	ldd	r25, Y+21	; 0x15
    1980:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <__fixunssfsi>
    1984:	cb 57       	subi	r28, 0x7B	; 123
    1986:	df 4f       	sbci	r29, 0xFF	; 255
    1988:	68 83       	st	Y, r22
    198a:	79 83       	std	Y+1, r23	; 0x01
    198c:	8a 83       	std	Y+2, r24	; 0x02
    198e:	9b 83       	std	Y+3, r25	; 0x03
    1990:	c5 58       	subi	r28, 0x85	; 133
    1992:	d0 40       	sbci	r29, 0x00	; 0
    1994:	cb 57       	subi	r28, 0x7B	; 123
    1996:	df 4f       	sbci	r29, 0xFF	; 255
    1998:	e8 81       	ld	r30, Y
    199a:	f9 81       	ldd	r31, Y+1	; 0x01
    199c:	c5 58       	subi	r28, 0x85	; 133
    199e:	d0 40       	sbci	r29, 0x00	; 0
    19a0:	ff 8b       	std	Y+23, r31	; 0x17
    19a2:	ee 8b       	std	Y+22, r30	; 0x16

000019a4 <.L106>:
    19a4:	8e 89       	ldd	r24, Y+22	; 0x16
    19a6:	9f 89       	ldd	r25, Y+23	; 0x17
    19a8:	9b 8f       	std	Y+27, r25	; 0x1b
    19aa:	8a 8f       	std	Y+26, r24	; 0x1a

000019ac <.LBB93>:
    19ac:	8a 8d       	ldd	r24, Y+26	; 0x1a
    19ae:	9b 8d       	ldd	r25, Y+27	; 0x1b

000019b0 <.L1^B10>:
    19b0:	01 97       	sbiw	r24, 0x01	; 1
    19b2:	f1 f7       	brne	.-4      	; 0x19b0 <.L1^B10>
    19b4:	9b 8f       	std	Y+27, r25	; 0x1b
    19b6:	8a 8f       	std	Y+26, r24	; 0x1a

000019b8 <.Loc.435>:
}
    19b8:	43 c0       	rjmp	.+134    	; 0x1a40 <.L101>

000019ba <.L131>:
	else if (__tmp > 255)
    19ba:	20 e0       	ldi	r18, 0x00	; 0
    19bc:	30 e0       	ldi	r19, 0x00	; 0
    19be:	4f e7       	ldi	r20, 0x7F	; 127
    19c0:	53 e4       	ldi	r21, 0x43	; 67
    19c2:	6d 81       	ldd	r22, Y+5	; 0x05
    19c4:	7e 81       	ldd	r23, Y+6	; 0x06
    19c6:	8f 81       	ldd	r24, Y+7	; 0x07
    19c8:	98 85       	ldd	r25, Y+8	; 0x08
    19ca:	0e 94 c6 10 	call	0x218c	; 0x218c <__gesf2>
    19ce:	88 23       	and	r24, r24
    19d0:	19 f1       	breq	.+70     	; 0x1a18 <.L134>
    19d2:	14 f1       	brlt	.+68     	; 0x1a18 <.L134>

000019d4 <.LBB95>:
		uint16_t __ticks=(uint16_t)__tmp2;
    19d4:	69 85       	ldd	r22, Y+9	; 0x09
    19d6:	7a 85       	ldd	r23, Y+10	; 0x0a
    19d8:	8b 85       	ldd	r24, Y+11	; 0x0b
    19da:	9c 85       	ldd	r25, Y+12	; 0x0c
    19dc:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <__fixunssfsi>
    19e0:	c7 57       	subi	r28, 0x77	; 119
    19e2:	df 4f       	sbci	r29, 0xFF	; 255
    19e4:	68 83       	st	Y, r22
    19e6:	79 83       	std	Y+1, r23	; 0x01
    19e8:	8a 83       	std	Y+2, r24	; 0x02
    19ea:	9b 83       	std	Y+3, r25	; 0x03
    19ec:	c9 58       	subi	r28, 0x89	; 137
    19ee:	d0 40       	sbci	r29, 0x00	; 0
    19f0:	c7 57       	subi	r28, 0x77	; 119
    19f2:	df 4f       	sbci	r29, 0xFF	; 255
    19f4:	88 81       	ld	r24, Y
    19f6:	99 81       	ldd	r25, Y+1	; 0x01
    19f8:	c9 58       	subi	r28, 0x89	; 137
    19fa:	d0 40       	sbci	r29, 0x00	; 0
    19fc:	9d 8f       	std	Y+29, r25	; 0x1d
    19fe:	8c 8f       	std	Y+28, r24	; 0x1c
    1a00:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1a02:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1a04:	9f 8f       	std	Y+31, r25	; 0x1f
    1a06:	8e 8f       	std	Y+30, r24	; 0x1e

00001a08 <.LBB96>:
	__asm__ volatile (
    1a08:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1a0a:	9f 8d       	ldd	r25, Y+31	; 0x1f

00001a0c <.L1^B11>:
    1a0c:	01 97       	sbiw	r24, 0x01	; 1
    1a0e:	f1 f7       	brne	.-4      	; 0x1a0c <.L1^B11>
    1a10:	9f 8f       	std	Y+31, r25	; 0x1f
    1a12:	8e 8f       	std	Y+30, r24	; 0x1e

00001a14 <.Loc.439>:
	...

00001a16 <.LBE96>:
		return;
    1a16:	1b c0       	rjmp	.+54     	; 0x1a4e <.L114>

00001a18 <.L134>:
		__ticks = (uint8_t)__tmp;
    1a18:	6d 81       	ldd	r22, Y+5	; 0x05
    1a1a:	7e 81       	ldd	r23, Y+6	; 0x06
    1a1c:	8f 81       	ldd	r24, Y+7	; 0x07
    1a1e:	98 85       	ldd	r25, Y+8	; 0x08
    1a20:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <__fixunssfsi>
    1a24:	c3 57       	subi	r28, 0x73	; 115
    1a26:	df 4f       	sbci	r29, 0xFF	; 255
    1a28:	68 83       	st	Y, r22
    1a2a:	79 83       	std	Y+1, r23	; 0x01
    1a2c:	8a 83       	std	Y+2, r24	; 0x02
    1a2e:	9b 83       	std	Y+3, r25	; 0x03
    1a30:	cd 58       	subi	r28, 0x8D	; 141
    1a32:	d0 40       	sbci	r29, 0x00	; 0
    1a34:	c3 57       	subi	r28, 0x73	; 115
    1a36:	df 4f       	sbci	r29, 0xFF	; 255
    1a38:	98 81       	ld	r25, Y
    1a3a:	cd 58       	subi	r28, 0x8D	; 141
    1a3c:	d0 40       	sbci	r29, 0x00	; 0
    1a3e:	9d 87       	std	Y+13, r25	; 0x0d

00001a40 <.L101>:
    1a40:	8d 85       	ldd	r24, Y+13	; 0x0d
    1a42:	88 a3       	std	Y+32, r24	; 0x20

00001a44 <.LBB98>:
	__asm__ volatile (
    1a44:	88 a1       	ldd	r24, Y+32	; 0x20

00001a46 <.L1^B12>:
    1a46:	8a 95       	dec	r24
    1a48:	f1 f7       	brne	.-4      	; 0x1a46 <.L1^B12>
    1a4a:	88 a3       	std	Y+32, r24	; 0x20

00001a4c <.Loc.443>:
	...

00001a4e <.L114>:
    _delay_us(10);
    PORTL &= (~(1<<PL6));
    1a4e:	8b e0       	ldi	r24, 0x0B	; 11
    1a50:	91 e0       	ldi	r25, 0x01	; 1
    1a52:	dc 01       	movw	r26, r24
    1a54:	2c 91       	ld	r18, X

00001a56 <.Loc.445>:
    1a56:	8b e0       	ldi	r24, 0x0B	; 11
    1a58:	91 e0       	ldi	r25, 0x01	; 1

00001a5a <.Loc.446>:
    1a5a:	2f 7b       	andi	r18, 0xBF	; 191
    1a5c:	fc 01       	movw	r30, r24
    1a5e:	20 83       	st	Z, r18

00001a60 <.Loc.447>:
}
    1a60:	00 00       	nop
    1a62:	c0 57       	subi	r28, 0x70	; 112
    1a64:	df 4f       	sbci	r29, 0xFF	; 255
    1a66:	0f b6       	in	r0, 0x3f	; 63
    1a68:	f8 94       	cli
    1a6a:	de bf       	out	0x3e, r29	; 62
    1a6c:	0f be       	out	0x3f, r0	; 63
    1a6e:	cd bf       	out	0x3d, r28	; 61
    1a70:	df 91       	pop	r29
    1a72:	cf 91       	pop	r28
    1a74:	08 95       	ret

00001a76 <__vector_15>:

ISR(TIMER2_OVF_vect){
    1a76:	1f 92       	push	r1
    1a78:	0f 92       	push	r0
    1a7a:	0f b6       	in	r0, 0x3f	; 63
    1a7c:	0f 92       	push	r0
    1a7e:	11 24       	eor	r1, r1
    1a80:	8f 93       	push	r24
    1a82:	9f 93       	push	r25
    1a84:	cf 93       	push	r28
    1a86:	df 93       	push	r29
    1a88:	cd b7       	in	r28, 0x3d	; 61
    1a8a:	de b7       	in	r29, 0x3e	; 62

00001a8c <.Loc.449>:
    count++;
    1a8c:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <count>
    1a90:	90 91 2f 02 	lds	r25, 0x022F	; 0x80022f <count+0x1>
    1a94:	01 96       	adiw	r24, 0x01	; 1
    1a96:	90 93 2f 02 	sts	0x022F, r25	; 0x80022f <count+0x1>
    1a9a:	80 93 2e 02 	sts	0x022E, r24	; 0x80022e <count>

00001a9e <.Loc.450>:
}
    1a9e:	00 00       	nop
    1aa0:	df 91       	pop	r29
    1aa2:	cf 91       	pop	r28
    1aa4:	9f 91       	pop	r25
    1aa6:	8f 91       	pop	r24
    1aa8:	0f 90       	pop	r0
    1aaa:	0f be       	out	0x3f, r0	; 63
    1aac:	0f 90       	pop	r0
    1aae:	1f 90       	pop	r1
    1ab0:	18 95       	reti

00001ab2 <init_display_meneer>:
	~0x66, ~0xB6, ~0xBE, ~0xE0,
	~0xFE, ~0xF6, ~0xEE, ~0x3E,
	~0x9C, ~0x7A, ~0x9E, ~0x8E };

void init_display_meneer (void)
{
    1ab2:	cf 93       	push	r28
    1ab4:	df 93       	push	r29
    1ab6:	cd b7       	in	r28, 0x3d	; 61
    1ab8:	de b7       	in	r29, 0x3e	; 62

00001aba <.Loc.452>:
	// Initialiseer de pinnen voor datain, shiftclk en latchclk als output
	DDR_SDI    |= (1 << SDI_BIT);
    1aba:	81 e0       	ldi	r24, 0x01	; 1
    1abc:	91 e0       	ldi	r25, 0x01	; 1
    1abe:	fc 01       	movw	r30, r24
    1ac0:	20 81       	ld	r18, Z
    1ac2:	81 e0       	ldi	r24, 0x01	; 1
    1ac4:	91 e0       	ldi	r25, 0x01	; 1

00001ac6 <.Loc.453>:
    1ac6:	20 62       	ori	r18, 0x20	; 32
    1ac8:	fc 01       	movw	r30, r24
    1aca:	20 83       	st	Z, r18

00001acc <.Loc.454>:
	DDR_SFTCLK |= (1 << SFTCLK_BIT);
    1acc:	81 e0       	ldi	r24, 0x01	; 1
    1ace:	91 e0       	ldi	r25, 0x01	; 1
    1ad0:	fc 01       	movw	r30, r24
    1ad2:	20 81       	ld	r18, Z
    1ad4:	81 e0       	ldi	r24, 0x01	; 1
    1ad6:	91 e0       	ldi	r25, 0x01	; 1

00001ad8 <.Loc.455>:
    1ad8:	20 61       	ori	r18, 0x10	; 16
    1ada:	fc 01       	movw	r30, r24
    1adc:	20 83       	st	Z, r18

00001ade <.Loc.456>:
	DDR_LCHCLK |= (1 << LCHCLK_BIT);
    1ade:	83 e3       	ldi	r24, 0x33	; 51
    1ae0:	90 e0       	ldi	r25, 0x00	; 0
    1ae2:	fc 01       	movw	r30, r24
    1ae4:	20 81       	ld	r18, Z
    1ae6:	83 e3       	ldi	r24, 0x33	; 51
    1ae8:	90 e0       	ldi	r25, 0x00	; 0

00001aea <.Loc.457>:
    1aea:	20 62       	ori	r18, 0x20	; 32
    1aec:	fc 01       	movw	r30, r24
    1aee:	20 83       	st	Z, r18

00001af0 <.Loc.458>:

	// Maak shiftclk en latchclk laag
	PORT_SFTCLK &= ~(1 << SFTCLK_BIT);
    1af0:	82 e0       	ldi	r24, 0x02	; 2
    1af2:	91 e0       	ldi	r25, 0x01	; 1
    1af4:	fc 01       	movw	r30, r24
    1af6:	20 81       	ld	r18, Z

00001af8 <.Loc.459>:
    1af8:	82 e0       	ldi	r24, 0x02	; 2
    1afa:	91 e0       	ldi	r25, 0x01	; 1

00001afc <.Loc.460>:
    1afc:	2f 7e       	andi	r18, 0xEF	; 239
    1afe:	fc 01       	movw	r30, r24
    1b00:	20 83       	st	Z, r18

00001b02 <.Loc.461>:
	PORT_LCHCLK &= ~(1 << LCHCLK_BIT);
    1b02:	84 e3       	ldi	r24, 0x34	; 52
    1b04:	90 e0       	ldi	r25, 0x00	; 0
    1b06:	fc 01       	movw	r30, r24
    1b08:	20 81       	ld	r18, Z

00001b0a <.Loc.462>:
    1b0a:	84 e3       	ldi	r24, 0x34	; 52
    1b0c:	90 e0       	ldi	r25, 0x00	; 0

00001b0e <.Loc.463>:
    1b0e:	2f 7d       	andi	r18, 0xDF	; 223
    1b10:	fc 01       	movw	r30, r24
    1b12:	20 83       	st	Z, r18

00001b14 <.Loc.464>:
}
    1b14:	00 00       	nop
    1b16:	df 91       	pop	r29
    1b18:	cf 91       	pop	r28
    1b1a:	08 95       	ret

00001b1c <send_data>:

void send_data(char data)
{
    1b1c:	cf 93       	push	r28
    1b1e:	df 93       	push	r29
    1b20:	00 d0       	rcall	.+0      	; 0x1b22 <L0^A>

00001b22 <L0^A>:
    1b22:	0f 92       	push	r0
    1b24:	0f 92       	push	r0
    1b26:	cd b7       	in	r28, 0x3d	; 61
    1b28:	de b7       	in	r29, 0x3e	; 62
    1b2a:	8d 83       	std	Y+5, r24	; 0x05

00001b2c <.LBB100>:
	for (unsigned i = 0; i < 8; i++)
    1b2c:	1a 82       	std	Y+2, r1	; 0x02
    1b2e:	19 82       	std	Y+1, r1	; 0x01

00001b30 <.Loc.467>:
    1b30:	39 c0       	rjmp	.+114    	; 0x1ba4 <.L138>

00001b32 <.L141>:
	// Herhaal voor alle bits in een char
	{
		// Bepaal de waarde van de bit die je naar het schuifregister
		// wil sturen
		int bit = data & 1;
    1b32:	8d 81       	ldd	r24, Y+5	; 0x05
    1b34:	08 2e       	mov	r0, r24
    1b36:	00 0c       	add	r0, r0
    1b38:	99 0b       	sbc	r25, r25

00001b3a <.Loc.469>:
    1b3a:	81 70       	andi	r24, 0x01	; 1
    1b3c:	99 27       	eor	r25, r25
    1b3e:	9c 83       	std	Y+4, r25	; 0x04
    1b40:	8b 83       	std	Y+3, r24	; 0x03

00001b42 <.Loc.470>:
		data >>= 1;
    1b42:	8d 81       	ldd	r24, Y+5	; 0x05
    1b44:	85 95       	asr	r24
    1b46:	8d 83       	std	Y+5, r24	; 0x05

00001b48 <.Loc.471>:

		// Maak de juiste pin hoog of laag op basis van de bepaalde waarde
		// van het bit
		if (bit)
    1b48:	8b 81       	ldd	r24, Y+3	; 0x03
    1b4a:	9c 81       	ldd	r25, Y+4	; 0x04
    1b4c:	00 97       	sbiw	r24, 0x00	; 0
    1b4e:	51 f0       	breq	.+20     	; 0x1b64 <.L139>

00001b50 <.Loc.472>:
		{
			PORT_SDI |= (1 << SDI_BIT);
    1b50:	82 e0       	ldi	r24, 0x02	; 2
    1b52:	91 e0       	ldi	r25, 0x01	; 1
    1b54:	fc 01       	movw	r30, r24
    1b56:	20 81       	ld	r18, Z
    1b58:	82 e0       	ldi	r24, 0x02	; 2
    1b5a:	91 e0       	ldi	r25, 0x01	; 1

00001b5c <.Loc.473>:
    1b5c:	20 62       	ori	r18, 0x20	; 32
    1b5e:	fc 01       	movw	r30, r24
    1b60:	20 83       	st	Z, r18
    1b62:	09 c0       	rjmp	.+18     	; 0x1b76 <.L140>

00001b64 <.L139>:
		}
		else
		{
			PORT_SDI &= ~(1 << SDI_BIT);
    1b64:	82 e0       	ldi	r24, 0x02	; 2
    1b66:	91 e0       	ldi	r25, 0x01	; 1
    1b68:	fc 01       	movw	r30, r24
    1b6a:	20 81       	ld	r18, Z

00001b6c <.Loc.475>:
    1b6c:	82 e0       	ldi	r24, 0x02	; 2
    1b6e:	91 e0       	ldi	r25, 0x01	; 1

00001b70 <.Loc.476>:
    1b70:	2f 7d       	andi	r18, 0xDF	; 223
    1b72:	fc 01       	movw	r30, r24
    1b74:	20 83       	st	Z, r18

00001b76 <.L140>:
		}

		// Toggle shiftclk (hoeveel tijd moest het signaal minimaal hoog zijn?)
		// Puls moet minimaal 13 ns hoog zijn. Een clk cycle op de Arduino duurt
		// 62 ns, dus signaal kan hoog en de volgende cycle weer omlaag
		PORT_SFTCLK |= (1 << SFTCLK_BIT);
    1b76:	82 e0       	ldi	r24, 0x02	; 2
    1b78:	91 e0       	ldi	r25, 0x01	; 1
    1b7a:	fc 01       	movw	r30, r24
    1b7c:	20 81       	ld	r18, Z
    1b7e:	82 e0       	ldi	r24, 0x02	; 2
    1b80:	91 e0       	ldi	r25, 0x01	; 1

00001b82 <.Loc.478>:
    1b82:	20 61       	ori	r18, 0x10	; 16
    1b84:	fc 01       	movw	r30, r24
    1b86:	20 83       	st	Z, r18

00001b88 <.Loc.479>:
		PORT_SFTCLK &= ~(1 << SFTCLK_BIT);
    1b88:	82 e0       	ldi	r24, 0x02	; 2
    1b8a:	91 e0       	ldi	r25, 0x01	; 1
    1b8c:	fc 01       	movw	r30, r24
    1b8e:	20 81       	ld	r18, Z

00001b90 <.Loc.480>:
    1b90:	82 e0       	ldi	r24, 0x02	; 2
    1b92:	91 e0       	ldi	r25, 0x01	; 1

00001b94 <.Loc.481>:
    1b94:	2f 7e       	andi	r18, 0xEF	; 239
    1b96:	fc 01       	movw	r30, r24
    1b98:	20 83       	st	Z, r18

00001b9a <.LBE101>:
	for (unsigned i = 0; i < 8; i++)
    1b9a:	89 81       	ldd	r24, Y+1	; 0x01
    1b9c:	9a 81       	ldd	r25, Y+2	; 0x02
    1b9e:	01 96       	adiw	r24, 0x01	; 1
    1ba0:	9a 83       	std	Y+2, r25	; 0x02
    1ba2:	89 83       	std	Y+1, r24	; 0x01

00001ba4 <.L138>:
    1ba4:	89 81       	ldd	r24, Y+1	; 0x01
    1ba6:	9a 81       	ldd	r25, Y+2	; 0x02
    1ba8:	87 30       	cpi	r24, 0x07	; 7
    1baa:	91 05       	cpc	r25, r1
    1bac:	11 f2       	breq	.-124    	; 0x1b32 <.L141>
    1bae:	08 f2       	brcs	.-126    	; 0x1b32 <.L141>

00001bb0 <.LBE100>:
	}
}
    1bb0:	00 00       	nop
    1bb2:	00 00       	nop
    1bb4:	0f 90       	pop	r0
    1bb6:	0f 90       	pop	r0
    1bb8:	0f 90       	pop	r0
    1bba:	0f 90       	pop	r0
    1bbc:	0f 90       	pop	r0
    1bbe:	df 91       	pop	r29
    1bc0:	cf 91       	pop	r28
    1bc2:	08 95       	ret

00001bc4 <send_enable>:

void send_enable(int display_nummer)
{
    1bc4:	cf 93       	push	r28
    1bc6:	df 93       	push	r29
    1bc8:	0f 92       	push	r0
    1bca:	0f 92       	push	r0
    1bcc:	cd b7       	in	r28, 0x3d	; 61
    1bce:	de b7       	in	r29, 0x3e	; 62
    1bd0:	9a 83       	std	Y+2, r25	; 0x02
    1bd2:	89 83       	std	Y+1, r24	; 0x01

00001bd4 <.Loc.486>:
	send_data(0x10 << display_nummer);
    1bd4:	80 e1       	ldi	r24, 0x10	; 16
    1bd6:	90 e0       	ldi	r25, 0x00	; 0
    1bd8:	09 80       	ldd	r0, Y+1	; 0x01
    1bda:	02 c0       	rjmp	.+4      	; 0x1be0 <.L2^B1>

00001bdc <.L1^B13>:
    1bdc:	88 0f       	add	r24, r24
    1bde:	99 1f       	adc	r25, r25

00001be0 <.L2^B1>:
    1be0:	0a 94       	dec	r0
    1be2:	e2 f7       	brpl	.-8      	; 0x1bdc <.L1^B13>

00001be4 <.Loc.487>:
    1be4:	0e 94 8e 0d 	call	0x1b1c	; 0x1b1c <send_data>

00001be8 <.Loc.488>:
}
    1be8:	00 00       	nop
    1bea:	0f 90       	pop	r0
    1bec:	0f 90       	pop	r0
    1bee:	df 91       	pop	r29
    1bf0:	cf 91       	pop	r28
    1bf2:	08 95       	ret

00001bf4 <display>:

void display(char data, int display_nummer)
{
    1bf4:	cf 93       	push	r28
    1bf6:	df 93       	push	r29
    1bf8:	00 d0       	rcall	.+0      	; 0x1bfa <L0^A>

00001bfa <L0^A>:
    1bfa:	cd b7       	in	r28, 0x3d	; 61
    1bfc:	de b7       	in	r29, 0x3e	; 62
    1bfe:	89 83       	std	Y+1, r24	; 0x01
    1c00:	7b 83       	std	Y+3, r23	; 0x03
    1c02:	6a 83       	std	Y+2, r22	; 0x02

00001c04 <.Loc.490>:
	send_data(data);
    1c04:	89 81       	ldd	r24, Y+1	; 0x01
    1c06:	0e 94 8e 0d 	call	0x1b1c	; 0x1b1c <send_data>

00001c0a <.Loc.491>:
	send_enable(display_nummer);
    1c0a:	8a 81       	ldd	r24, Y+2	; 0x02
    1c0c:	9b 81       	ldd	r25, Y+3	; 0x03
    1c0e:	0e 94 e2 0d 	call	0x1bc4	; 0x1bc4 <send_enable>

00001c12 <.Loc.492>:

	// Toggle latchclk (hoeveel tijd moest het signaal minimaal hoog zijn?)
	// Puls moet minimaal 13 ns hoog zijn. Een clk cycle op de Arduino duurt
	// 62 ns, dus signaal kan hoog en de volgende cycle weer omlaag
	PORT_LCHCLK |= (1 << LCHCLK_BIT);
    1c12:	84 e3       	ldi	r24, 0x34	; 52
    1c14:	90 e0       	ldi	r25, 0x00	; 0
    1c16:	fc 01       	movw	r30, r24
    1c18:	20 81       	ld	r18, Z
    1c1a:	84 e3       	ldi	r24, 0x34	; 52
    1c1c:	90 e0       	ldi	r25, 0x00	; 0

00001c1e <.Loc.493>:
    1c1e:	20 62       	ori	r18, 0x20	; 32
    1c20:	fc 01       	movw	r30, r24
    1c22:	20 83       	st	Z, r18

00001c24 <.Loc.494>:
	PORT_LCHCLK &= ~(1 << LCHCLK_BIT);
    1c24:	84 e3       	ldi	r24, 0x34	; 52
    1c26:	90 e0       	ldi	r25, 0x00	; 0
    1c28:	fc 01       	movw	r30, r24
    1c2a:	20 81       	ld	r18, Z

00001c2c <.Loc.495>:
    1c2c:	84 e3       	ldi	r24, 0x34	; 52
    1c2e:	90 e0       	ldi	r25, 0x00	; 0

00001c30 <.Loc.496>:
    1c30:	2f 7d       	andi	r18, 0xDF	; 223
    1c32:	fc 01       	movw	r30, r24
    1c34:	20 83       	st	Z, r18

00001c36 <.Loc.497>:
}
    1c36:	00 00       	nop
    1c38:	0f 90       	pop	r0
    1c3a:	0f 90       	pop	r0
    1c3c:	0f 90       	pop	r0
    1c3e:	df 91       	pop	r29
    1c40:	cf 91       	pop	r28
    1c42:	08 95       	ret

00001c44 <display_getal>:

void display_getal(unsigned int getal)
{
    1c44:	cf 93       	push	r28
    1c46:	df 93       	push	r29
    1c48:	cd b7       	in	r28, 0x3d	; 61
    1c4a:	de b7       	in	r29, 0x3e	; 62
    1c4c:	a6 97       	sbiw	r28, 0x26	; 38
    1c4e:	0f b6       	in	r0, 0x3f	; 63
    1c50:	f8 94       	cli
    1c52:	de bf       	out	0x3e, r29	; 62
    1c54:	0f be       	out	0x3f, r0	; 63
    1c56:	cd bf       	out	0x3d, r28	; 61
    1c58:	9a 8b       	std	Y+18, r25	; 0x12
    1c5a:	89 8b       	std	Y+17, r24	; 0x11

00001c5c <.LBB102>:
	for (int i = 0; i < 4; i++)
    1c5c:	1a 82       	std	Y+2, r1	; 0x02
    1c5e:	19 82       	std	Y+1, r1	; 0x01

00001c60 <.Loc.500>:
    1c60:	cc c0       	rjmp	.+408    	; 0x1dfa <.L145>

00001c62 <.L154>:
	{
		display(segmentcodes[getal%10], i);
    1c62:	49 89       	ldd	r20, Y+17	; 0x11
    1c64:	5a 89       	ldd	r21, Y+18	; 0x12
    1c66:	9a 01       	movw	r18, r20
    1c68:	ad ec       	ldi	r26, 0xCD	; 205
    1c6a:	bc ec       	ldi	r27, 0xCC	; 204
    1c6c:	0e 94 36 0f 	call	0x1e6c	; 0x1e6c <__umulhisi3>
    1c70:	9c 01       	movw	r18, r24
    1c72:	36 95       	lsr	r19
    1c74:	27 95       	ror	r18
    1c76:	36 95       	lsr	r19
    1c78:	27 95       	ror	r18
    1c7a:	36 95       	lsr	r19
    1c7c:	27 95       	ror	r18
    1c7e:	c9 01       	movw	r24, r18
    1c80:	88 0f       	add	r24, r24
    1c82:	99 1f       	adc	r25, r25
    1c84:	88 0f       	add	r24, r24
    1c86:	99 1f       	adc	r25, r25
    1c88:	82 0f       	add	r24, r18
    1c8a:	93 1f       	adc	r25, r19
    1c8c:	88 0f       	add	r24, r24
    1c8e:	99 1f       	adc	r25, r25
    1c90:	9a 01       	movw	r18, r20
    1c92:	28 1b       	sub	r18, r24
    1c94:	39 0b       	sbc	r19, r25

00001c96 <.Loc.502>:
    1c96:	c9 01       	movw	r24, r18
    1c98:	88 0f       	add	r24, r24
    1c9a:	99 1f       	adc	r25, r25
    1c9c:	80 50       	subi	r24, 0x00	; 0
    1c9e:	9e 4f       	sbci	r25, 0xFE	; 254
    1ca0:	dc 01       	movw	r26, r24
    1ca2:	8d 91       	ld	r24, X+
    1ca4:	9c 91       	ld	r25, X

00001ca6 <.Loc.503>:
    1ca6:	28 2f       	mov	r18, r24
    1ca8:	89 81       	ldd	r24, Y+1	; 0x01
    1caa:	9a 81       	ldd	r25, Y+2	; 0x02
    1cac:	bc 01       	movw	r22, r24
    1cae:	82 2f       	mov	r24, r18
    1cb0:	0e 94 fa 0d 	call	0x1bf4	; 0x1bf4 <display>

00001cb4 <.Loc.504>:
		getal /= 10;
    1cb4:	89 89       	ldd	r24, Y+17	; 0x11
    1cb6:	9a 89       	ldd	r25, Y+18	; 0x12
    1cb8:	9c 01       	movw	r18, r24
    1cba:	ad ec       	ldi	r26, 0xCD	; 205
    1cbc:	bc ec       	ldi	r27, 0xCC	; 204
    1cbe:	0e 94 36 0f 	call	0x1e6c	; 0x1e6c <__umulhisi3>
    1cc2:	96 95       	lsr	r25
    1cc4:	87 95       	ror	r24
    1cc6:	96 95       	lsr	r25
    1cc8:	87 95       	ror	r24
    1cca:	96 95       	lsr	r25
    1ccc:	87 95       	ror	r24
    1cce:	9a 8b       	std	Y+18, r25	; 0x12
    1cd0:	89 8b       	std	Y+17, r24	; 0x11
    1cd2:	80 e0       	ldi	r24, 0x00	; 0
    1cd4:	90 e0       	ldi	r25, 0x00	; 0
    1cd6:	a0 e8       	ldi	r26, 0x80	; 128
    1cd8:	bf e3       	ldi	r27, 0x3F	; 63
    1cda:	8b 83       	std	Y+3, r24	; 0x03
    1cdc:	9c 83       	std	Y+4, r25	; 0x04
    1cde:	ad 83       	std	Y+5, r26	; 0x05
    1ce0:	be 83       	std	Y+6, r27	; 0x06

00001ce2 <.LBB103>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    1ce2:	20 e0       	ldi	r18, 0x00	; 0
    1ce4:	30 e0       	ldi	r19, 0x00	; 0
    1ce6:	4a e7       	ldi	r20, 0x7A	; 122
    1ce8:	55 e4       	ldi	r21, 0x45	; 69
    1cea:	6b 81       	ldd	r22, Y+3	; 0x03
    1cec:	7c 81       	ldd	r23, Y+4	; 0x04
    1cee:	8d 81       	ldd	r24, Y+5	; 0x05
    1cf0:	9e 81       	ldd	r25, Y+6	; 0x06
    1cf2:	0e 94 cb 10 	call	0x2196	; 0x2196 <__mulsf3>
    1cf6:	6f 8b       	std	Y+23, r22	; 0x17
    1cf8:	78 8f       	std	Y+24, r23	; 0x18
    1cfa:	89 8f       	std	Y+25, r24	; 0x19
    1cfc:	9a 8f       	std	Y+26, r25	; 0x1a
    1cfe:	8f 89       	ldd	r24, Y+23	; 0x17
    1d00:	98 8d       	ldd	r25, Y+24	; 0x18
    1d02:	a9 8d       	ldd	r26, Y+25	; 0x19
    1d04:	ba 8d       	ldd	r27, Y+26	; 0x1a
    1d06:	8f 83       	std	Y+7, r24	; 0x07
    1d08:	98 87       	std	Y+8, r25	; 0x08
    1d0a:	a9 87       	std	Y+9, r26	; 0x09
    1d0c:	ba 87       	std	Y+10, r27	; 0x0a

00001d0e <.Loc.506>:
	if (__tmp < 1.0)
    1d0e:	20 e0       	ldi	r18, 0x00	; 0
    1d10:	30 e0       	ldi	r19, 0x00	; 0
    1d12:	40 e8       	ldi	r20, 0x80	; 128
    1d14:	5f e3       	ldi	r21, 0x3F	; 63
    1d16:	6f 81       	ldd	r22, Y+7	; 0x07
    1d18:	78 85       	ldd	r23, Y+8	; 0x08
    1d1a:	89 85       	ldd	r24, Y+9	; 0x09
    1d1c:	9a 85       	ldd	r25, Y+10	; 0x0a
    1d1e:	0e 94 67 0f 	call	0x1ece	; 0x1ece <__cmpsf2>
    1d22:	88 23       	and	r24, r24
    1d24:	2c f4       	brge	.+10     	; 0x1d30 <.L157>

00001d26 <.Loc.507>:
		__ticks = 1;
    1d26:	81 e0       	ldi	r24, 0x01	; 1
    1d28:	90 e0       	ldi	r25, 0x00	; 0
    1d2a:	9c 87       	std	Y+12, r25	; 0x0c
    1d2c:	8b 87       	std	Y+11, r24	; 0x0b
    1d2e:	55 c0       	rjmp	.+170    	; 0x1dda <.L148>

00001d30 <.L157>:
	else if (__tmp > 65535)
    1d30:	20 e0       	ldi	r18, 0x00	; 0
    1d32:	3f ef       	ldi	r19, 0xFF	; 255
    1d34:	4f e7       	ldi	r20, 0x7F	; 127
    1d36:	57 e4       	ldi	r21, 0x47	; 71
    1d38:	6f 81       	ldd	r22, Y+7	; 0x07
    1d3a:	78 85       	ldd	r23, Y+8	; 0x08
    1d3c:	89 85       	ldd	r24, Y+9	; 0x09
    1d3e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1d40:	0e 94 c6 10 	call	0x218c	; 0x218c <__gesf2>
    1d44:	88 23       	and	r24, r24
    1d46:	d9 f1       	breq	.+118    	; 0x1dbe <.L158>
    1d48:	d4 f1       	brlt	.+116    	; 0x1dbe <.L158>

00001d4a <.Loc.509>:
		__ticks = (uint16_t) (__ms * 10.0);
    1d4a:	20 e0       	ldi	r18, 0x00	; 0
    1d4c:	30 e0       	ldi	r19, 0x00	; 0
    1d4e:	40 e2       	ldi	r20, 0x20	; 32
    1d50:	51 e4       	ldi	r21, 0x41	; 65
    1d52:	6b 81       	ldd	r22, Y+3	; 0x03
    1d54:	7c 81       	ldd	r23, Y+4	; 0x04
    1d56:	8d 81       	ldd	r24, Y+5	; 0x05
    1d58:	9e 81       	ldd	r25, Y+6	; 0x06
    1d5a:	0e 94 cb 10 	call	0x2196	; 0x2196 <__mulsf3>
    1d5e:	6b 8f       	std	Y+27, r22	; 0x1b
    1d60:	7c 8f       	std	Y+28, r23	; 0x1c
    1d62:	8d 8f       	std	Y+29, r24	; 0x1d
    1d64:	9e 8f       	std	Y+30, r25	; 0x1e
    1d66:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1d68:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1d6a:	ad 8d       	ldd	r26, Y+29	; 0x1d
    1d6c:	be 8d       	ldd	r27, Y+30	; 0x1e
    1d6e:	8b 8b       	std	Y+19, r24	; 0x13
    1d70:	9c 8b       	std	Y+20, r25	; 0x14
    1d72:	ad 8b       	std	Y+21, r26	; 0x15
    1d74:	be 8b       	std	Y+22, r27	; 0x16

00001d76 <.Loc.510>:
    1d76:	6b 89       	ldd	r22, Y+19	; 0x13
    1d78:	7c 89       	ldd	r23, Y+20	; 0x14
    1d7a:	8d 89       	ldd	r24, Y+21	; 0x15
    1d7c:	9e 89       	ldd	r25, Y+22	; 0x16
    1d7e:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <__fixunssfsi>
    1d82:	6f 8f       	std	Y+31, r22	; 0x1f
    1d84:	78 a3       	std	Y+32, r23	; 0x20
    1d86:	89 a3       	std	Y+33, r24	; 0x21
    1d88:	9a a3       	std	Y+34, r25	; 0x22
    1d8a:	af 8d       	ldd	r26, Y+31	; 0x1f
    1d8c:	b8 a1       	ldd	r27, Y+32	; 0x20
    1d8e:	bc 87       	std	Y+12, r27	; 0x0c
    1d90:	ab 87       	std	Y+11, r26	; 0x0b

00001d92 <.Loc.511>:
		while(__ticks)
    1d92:	10 c0       	rjmp	.+32     	; 0x1db4 <.L151>

00001d94 <.L152>:
    1d94:	80 e9       	ldi	r24, 0x90	; 144
    1d96:	91 e0       	ldi	r25, 0x01	; 1
    1d98:	9e 87       	std	Y+14, r25	; 0x0e
    1d9a:	8d 87       	std	Y+13, r24	; 0x0d

00001d9c <.LBB105>:
	__asm__ volatile (
    1d9c:	8d 85       	ldd	r24, Y+13	; 0x0d
    1d9e:	9e 85       	ldd	r25, Y+14	; 0x0e

00001da0 <.L1^B14>:
    1da0:	01 97       	sbiw	r24, 0x01	; 1
    1da2:	f1 f7       	brne	.-4      	; 0x1da0 <.L1^B14>
    1da4:	9e 87       	std	Y+14, r25	; 0x0e
    1da6:	8d 87       	std	Y+13, r24	; 0x0d

00001da8 <.Loc.513>:
	...

00001daa <.LBE105>:
			__ticks --;
    1daa:	8b 85       	ldd	r24, Y+11	; 0x0b
    1dac:	9c 85       	ldd	r25, Y+12	; 0x0c
    1dae:	01 97       	sbiw	r24, 0x01	; 1
    1db0:	9c 87       	std	Y+12, r25	; 0x0c
    1db2:	8b 87       	std	Y+11, r24	; 0x0b

00001db4 <.L151>:
		while(__ticks)
    1db4:	8b 85       	ldd	r24, Y+11	; 0x0b
    1db6:	9c 85       	ldd	r25, Y+12	; 0x0c
    1db8:	00 97       	sbiw	r24, 0x00	; 0
    1dba:	61 f7       	brne	.-40     	; 0x1d94 <.L152>

00001dbc <.Loc.516>:
		return;
    1dbc:	19 c0       	rjmp	.+50     	; 0x1df0 <.L153>

00001dbe <.L158>:
		__ticks = (uint16_t)__tmp;
    1dbe:	6f 81       	ldd	r22, Y+7	; 0x07
    1dc0:	78 85       	ldd	r23, Y+8	; 0x08
    1dc2:	89 85       	ldd	r24, Y+9	; 0x09
    1dc4:	9a 85       	ldd	r25, Y+10	; 0x0a
    1dc6:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <__fixunssfsi>
    1dca:	6b a3       	std	Y+35, r22	; 0x23
    1dcc:	7c a3       	std	Y+36, r23	; 0x24
    1dce:	8d a3       	std	Y+37, r24	; 0x25
    1dd0:	9e a3       	std	Y+38, r25	; 0x26
    1dd2:	eb a1       	ldd	r30, Y+35	; 0x23
    1dd4:	fc a1       	ldd	r31, Y+36	; 0x24
    1dd6:	fc 87       	std	Y+12, r31	; 0x0c
    1dd8:	eb 87       	std	Y+11, r30	; 0x0b

00001dda <.L148>:
    1dda:	8b 85       	ldd	r24, Y+11	; 0x0b
    1ddc:	9c 85       	ldd	r25, Y+12	; 0x0c
    1dde:	98 8b       	std	Y+16, r25	; 0x10
    1de0:	8f 87       	std	Y+15, r24	; 0x0f

00001de2 <.LBB107>:
    1de2:	8f 85       	ldd	r24, Y+15	; 0x0f
    1de4:	98 89       	ldd	r25, Y+16	; 0x10

00001de6 <.L1^B15>:
    1de6:	01 97       	sbiw	r24, 0x01	; 1
    1de8:	f1 f7       	brne	.-4      	; 0x1de6 <.L1^B15>
    1dea:	98 8b       	std	Y+16, r25	; 0x10
    1dec:	8f 87       	std	Y+15, r24	; 0x0f

00001dee <.Loc.519>:
	...

00001df0 <.L153>:
	for (int i = 0; i < 4; i++)
    1df0:	89 81       	ldd	r24, Y+1	; 0x01
    1df2:	9a 81       	ldd	r25, Y+2	; 0x02
    1df4:	01 96       	adiw	r24, 0x01	; 1
    1df6:	9a 83       	std	Y+2, r25	; 0x02
    1df8:	89 83       	std	Y+1, r24	; 0x01

00001dfa <.L145>:
    1dfa:	89 81       	ldd	r24, Y+1	; 0x01
    1dfc:	9a 81       	ldd	r25, Y+2	; 0x02
    1dfe:	83 30       	cpi	r24, 0x03	; 3
    1e00:	91 05       	cpc	r25, r1
    1e02:	09 f0       	breq	.+2      	; 0x1e06 <L0^A>

00001e04 <L0^A>:
    1e04:	0c f4       	brge	.+2      	; 0x1e08 <.LBE102>

00001e06 <L0^A>:
    1e06:	2d cf       	rjmp	.-422    	; 0x1c62 <.L154>

00001e08 <.LBE102>:
		_delay_ms(1);   // 1 kHz
	}
}
    1e08:	00 00       	nop
    1e0a:	00 00       	nop
    1e0c:	a6 96       	adiw	r28, 0x26	; 38
    1e0e:	0f b6       	in	r0, 0x3f	; 63
    1e10:	f8 94       	cli
    1e12:	de bf       	out	0x3e, r29	; 62
    1e14:	0f be       	out	0x3f, r0	; 63
    1e16:	cd bf       	out	0x3d, r28	; 61
    1e18:	df 91       	pop	r29
    1e1a:	cf 91       	pop	r28
    1e1c:	08 95       	ret

00001e1e <__divmodsi4>:
    1e1e:	05 2e       	mov	r0, r21

00001e20 <.Loc.1>:
    1e20:	97 fb       	bst	r25, 7

00001e22 <.Loc.2>:
    1e22:	1e f4       	brtc	.+6      	; 0x1e2a <.L^B1>

00001e24 <.Loc.3>:
    1e24:	00 94       	com	r0

00001e26 <.Loc.4>:
    1e26:	0e 94 26 0f 	call	0x1e4c	; 0x1e4c <__negsi2>

00001e2a <.L^B1>:
    1e2a:	57 fd       	sbrc	r21, 7

00001e2c <.Loc.6>:
    1e2c:	07 d0       	rcall	.+14     	; 0x1e3c <__divmodsi4_neg2>

00001e2e <.Loc.7>:
    1e2e:	0e 94 45 0f 	call	0x1e8a	; 0x1e8a <__udivmodsi4>

00001e32 <.Loc.8>:
    1e32:	07 fc       	sbrc	r0, 7

00001e34 <.Loc.9>:
    1e34:	03 d0       	rcall	.+6      	; 0x1e3c <__divmodsi4_neg2>

00001e36 <.Loc.10>:
    1e36:	4e f4       	brtc	.+18     	; 0x1e4a <__divmodsi4_exit>

00001e38 <.Loc.11>:
    1e38:	0c 94 26 0f 	jmp	0x1e4c	; 0x1e4c <__negsi2>

00001e3c <__divmodsi4_neg2>:
    1e3c:	50 95       	com	r21

00001e3e <.Loc.13>:
    1e3e:	40 95       	com	r20

00001e40 <.Loc.14>:
    1e40:	30 95       	com	r19

00001e42 <.Loc.15>:
    1e42:	21 95       	neg	r18

00001e44 <.Loc.16>:
    1e44:	3f 4f       	sbci	r19, 0xFF	; 255

00001e46 <.Loc.17>:
    1e46:	4f 4f       	sbci	r20, 0xFF	; 255

00001e48 <.Loc.18>:
    1e48:	5f 4f       	sbci	r21, 0xFF	; 255

00001e4a <__divmodsi4_exit>:
    1e4a:	08 95       	ret

00001e4c <__negsi2>:
    1e4c:	90 95       	com	r25
    1e4e:	80 95       	com	r24
    1e50:	70 95       	com	r23
    1e52:	61 95       	neg	r22
    1e54:	7f 4f       	sbci	r23, 0xFF	; 255
    1e56:	8f 4f       	sbci	r24, 0xFF	; 255
    1e58:	9f 4f       	sbci	r25, 0xFF	; 255

00001e5a <.Loc.1>:
    1e5a:	08 95       	ret

00001e5c <__tablejump2__>:
    1e5c:	ee 0f       	add	r30, r30

00001e5e <.Loc.1>:
    1e5e:	ff 1f       	adc	r31, r31

00001e60 <.Loc.2>:
    1e60:	88 1f       	adc	r24, r24

00001e62 <.Loc.3>:
    1e62:	8b bf       	out	0x3b, r24	; 59

00001e64 <.Loc.4>:
    1e64:	07 90       	elpm	r0, Z+

00001e66 <.Loc.5>:
    1e66:	f6 91       	elpm	r31, Z

00001e68 <.Loc.6>:
    1e68:	e0 2d       	mov	r30, r0

00001e6a <.Loc.7>:
    1e6a:	19 94       	eijmp

00001e6c <__umulhisi3>:
    1e6c:	a2 9f       	mul	r26, r18

00001e6e <.Loc.1>:
    1e6e:	b0 01       	movw	r22, r0

00001e70 <.Loc.2>:
    1e70:	b3 9f       	mul	r27, r19

00001e72 <.Loc.3>:
    1e72:	c0 01       	movw	r24, r0

00001e74 <.Loc.4>:
    1e74:	a3 9f       	mul	r26, r19

00001e76 <.Loc.5>:
    1e76:	70 0d       	add	r23, r0

00001e78 <.Loc.6>:
    1e78:	81 1d       	adc	r24, r1

00001e7a <.Loc.7>:
    1e7a:	11 24       	eor	r1, r1

00001e7c <.Loc.8>:
    1e7c:	91 1d       	adc	r25, r1

00001e7e <.Loc.9>:
    1e7e:	b2 9f       	mul	r27, r18

00001e80 <.Loc.10>:
    1e80:	70 0d       	add	r23, r0

00001e82 <.Loc.11>:
    1e82:	81 1d       	adc	r24, r1

00001e84 <.Loc.12>:
    1e84:	11 24       	eor	r1, r1

00001e86 <.Loc.13>:
    1e86:	91 1d       	adc	r25, r1

00001e88 <.Loc.14>:
    1e88:	08 95       	ret

00001e8a <__udivmodsi4>:
    1e8a:	a1 e2       	ldi	r26, 0x21	; 33

00001e8c <.Loc.1>:
    1e8c:	1a 2e       	mov	r1, r26

00001e8e <.Loc.2>:
    1e8e:	aa 1b       	sub	r26, r26

00001e90 <.Loc.3>:
    1e90:	bb 1b       	sub	r27, r27

00001e92 <.Loc.4>:
    1e92:	fd 01       	movw	r30, r26

00001e94 <.Loc.5>:
    1e94:	0d c0       	rjmp	.+26     	; 0x1eb0 <__udivmodsi4_ep>

00001e96 <__udivmodsi4_loop>:
    1e96:	aa 1f       	adc	r26, r26

00001e98 <.Loc.7>:
    1e98:	bb 1f       	adc	r27, r27

00001e9a <.Loc.8>:
    1e9a:	ee 1f       	adc	r30, r30

00001e9c <.Loc.9>:
    1e9c:	ff 1f       	adc	r31, r31

00001e9e <.Loc.10>:
    1e9e:	a2 17       	cp	r26, r18

00001ea0 <.Loc.11>:
    1ea0:	b3 07       	cpc	r27, r19

00001ea2 <.Loc.12>:
    1ea2:	e4 07       	cpc	r30, r20

00001ea4 <.Loc.13>:
    1ea4:	f5 07       	cpc	r31, r21

00001ea6 <.Loc.14>:
    1ea6:	20 f0       	brcs	.+8      	; 0x1eb0 <__udivmodsi4_ep>

00001ea8 <.Loc.15>:
    1ea8:	a2 1b       	sub	r26, r18

00001eaa <.Loc.16>:
    1eaa:	b3 0b       	sbc	r27, r19

00001eac <.Loc.17>:
    1eac:	e4 0b       	sbc	r30, r20

00001eae <.Loc.18>:
    1eae:	f5 0b       	sbc	r31, r21

00001eb0 <__udivmodsi4_ep>:
    1eb0:	66 1f       	adc	r22, r22

00001eb2 <.Loc.20>:
    1eb2:	77 1f       	adc	r23, r23

00001eb4 <.Loc.21>:
    1eb4:	88 1f       	adc	r24, r24

00001eb6 <.Loc.22>:
    1eb6:	99 1f       	adc	r25, r25

00001eb8 <.Loc.23>:
    1eb8:	1a 94       	dec	r1

00001eba <.Loc.24>:
    1eba:	69 f7       	brne	.-38     	; 0x1e96 <__udivmodsi4_loop>

00001ebc <.Loc.25>:
    1ebc:	60 95       	com	r22

00001ebe <.Loc.26>:
    1ebe:	70 95       	com	r23

00001ec0 <.Loc.27>:
    1ec0:	80 95       	com	r24

00001ec2 <.Loc.28>:
    1ec2:	90 95       	com	r25

00001ec4 <.Loc.29>:
    1ec4:	9b 01       	movw	r18, r22

00001ec6 <.Loc.30>:
    1ec6:	ac 01       	movw	r20, r24

00001ec8 <.Loc.31>:
    1ec8:	bd 01       	movw	r22, r26

00001eca <.Loc.32>:
    1eca:	cf 01       	movw	r24, r30

00001ecc <.Loc.33>:
    1ecc:	08 95       	ret

00001ece <__cmpsf2>:
    1ece:	0e 94 51 10 	call	0x20a2	; 0x20a2 <__fp_cmp>
    1ed2:	08 f4       	brcc	.+2      	; 0x1ed6 <.L1^B1>
    1ed4:	81 e0       	ldi	r24, 0x01	; 1

00001ed6 <.L1^B1>:
    1ed6:	08 95       	ret

00001ed8 <__divsf3>:
    1ed8:	0e 94 80 0f 	call	0x1f00	; 0x1f00 <__divsf3x>
    1edc:	0c 94 8c 10 	jmp	0x2118	; 0x2118 <__fp_round>

00001ee0 <.L^B1>:
    1ee0:	0e 94 85 10 	call	0x210a	; 0x210a <__fp_pscB>
    1ee4:	58 f0       	brcs	.+22     	; 0x1efc <.L_nan>
    1ee6:	0e 94 7e 10 	call	0x20fc	; 0x20fc <__fp_pscA>
    1eea:	40 f0       	brcs	.+16     	; 0x1efc <.L_nan>
    1eec:	29 f4       	brne	.+10     	; 0x1ef8 <.L_zr>
    1eee:	5f 3f       	cpi	r21, 0xFF	; 255
    1ef0:	29 f0       	breq	.+10     	; 0x1efc <.L_nan>

00001ef2 <.L_inf>:
    1ef2:	0c 94 75 10 	jmp	0x20ea	; 0x20ea <__fp_inf>

00001ef6 <.L1^B1>:
    1ef6:	51 11       	cpse	r21, r1

00001ef8 <.L_zr>:
    1ef8:	0c 94 c0 10 	jmp	0x2180	; 0x2180 <__fp_szero>

00001efc <.L_nan>:
    1efc:	0c 94 7b 10 	jmp	0x20f6	; 0x20f6 <__fp_nan>

00001f00 <__divsf3x>:
    1f00:	0e 94 9d 10 	call	0x213a	; 0x213a <__fp_split3>
    1f04:	68 f3       	brcs	.-38     	; 0x1ee0 <.L^B1>

00001f06 <__divsf3_pse>:
    1f06:	99 23       	and	r25, r25
    1f08:	b1 f3       	breq	.-20     	; 0x1ef6 <.L1^B1>
    1f0a:	55 23       	and	r21, r21
    1f0c:	91 f3       	breq	.-28     	; 0x1ef2 <.L_inf>
    1f0e:	95 1b       	sub	r25, r21
    1f10:	55 0b       	sbc	r21, r21
    1f12:	bb 27       	eor	r27, r27
    1f14:	aa 27       	eor	r26, r26

00001f16 <.L2^B1>:
    1f16:	62 17       	cp	r22, r18
    1f18:	73 07       	cpc	r23, r19
    1f1a:	84 07       	cpc	r24, r20
    1f1c:	38 f0       	brcs	.+14     	; 0x1f2c <.L3^B1>
    1f1e:	9f 5f       	subi	r25, 0xFF	; 255
    1f20:	5f 4f       	sbci	r21, 0xFF	; 255
    1f22:	22 0f       	add	r18, r18
    1f24:	33 1f       	adc	r19, r19
    1f26:	44 1f       	adc	r20, r20
    1f28:	aa 1f       	adc	r26, r26
    1f2a:	a9 f3       	breq	.-22     	; 0x1f16 <.L2^B1>

00001f2c <.L3^B1>:
    1f2c:	35 d0       	rcall	.+106    	; 0x1f98 <.L_div>
    1f2e:	0e 2e       	mov	r0, r30
    1f30:	3a f0       	brmi	.+14     	; 0x1f40 <.L5^B1>

00001f32 <.L4^B1>:
    1f32:	e0 e8       	ldi	r30, 0x80	; 128
    1f34:	32 d0       	rcall	.+100    	; 0x1f9a <.L_div1>
    1f36:	91 50       	subi	r25, 0x01	; 1
    1f38:	50 40       	sbci	r21, 0x00	; 0
    1f3a:	e6 95       	lsr	r30
    1f3c:	00 1c       	adc	r0, r0
    1f3e:	ca f7       	brpl	.-14     	; 0x1f32 <.L4^B1>

00001f40 <.L5^B1>:
    1f40:	2b d0       	rcall	.+86     	; 0x1f98 <.L_div>
    1f42:	fe 2f       	mov	r31, r30
    1f44:	29 d0       	rcall	.+82     	; 0x1f98 <.L_div>
    1f46:	66 0f       	add	r22, r22
    1f48:	77 1f       	adc	r23, r23
    1f4a:	88 1f       	adc	r24, r24
    1f4c:	bb 1f       	adc	r27, r27
    1f4e:	26 17       	cp	r18, r22
    1f50:	37 07       	cpc	r19, r23
    1f52:	48 07       	cpc	r20, r24
    1f54:	ab 07       	cpc	r26, r27
    1f56:	b0 e8       	ldi	r27, 0x80	; 128
    1f58:	09 f0       	breq	.+2      	; 0x1f5c <.L4^B2>
    1f5a:	bb 0b       	sbc	r27, r27

00001f5c <.L4^B2>:
    1f5c:	80 2d       	mov	r24, r0
    1f5e:	bf 01       	movw	r22, r30
    1f60:	ff 27       	eor	r31, r31
    1f62:	93 58       	subi	r25, 0x83	; 131
    1f64:	5f 4f       	sbci	r21, 0xFF	; 255
    1f66:	3a f0       	brmi	.+14     	; 0x1f76 <.L13^B1>
    1f68:	9e 3f       	cpi	r25, 0xFE	; 254
    1f6a:	51 05       	cpc	r21, r1
    1f6c:	78 f0       	brcs	.+30     	; 0x1f8c <.L15^B1>
    1f6e:	0c 94 75 10 	jmp	0x20ea	; 0x20ea <__fp_inf>

00001f72 <.L12^B1>:
    1f72:	0c 94 c0 10 	jmp	0x2180	; 0x2180 <__fp_szero>

00001f76 <.L13^B1>:
    1f76:	5f 3f       	cpi	r21, 0xFF	; 255
    1f78:	e4 f3       	brlt	.-8      	; 0x1f72 <.L12^B1>
    1f7a:	98 3e       	cpi	r25, 0xE8	; 232
    1f7c:	d4 f3       	brlt	.-12     	; 0x1f72 <.L12^B1>

00001f7e <.L14^B1>:
    1f7e:	86 95       	lsr	r24
    1f80:	77 95       	ror	r23
    1f82:	67 95       	ror	r22
    1f84:	b7 95       	ror	r27
    1f86:	f7 95       	ror	r31
    1f88:	9f 5f       	subi	r25, 0xFF	; 255
    1f8a:	c9 f7       	brne	.-14     	; 0x1f7e <.L14^B1>

00001f8c <.L15^B1>:
    1f8c:	88 0f       	add	r24, r24
    1f8e:	91 1d       	adc	r25, r1
    1f90:	96 95       	lsr	r25
    1f92:	87 95       	ror	r24
    1f94:	97 f9       	bld	r25, 7
    1f96:	08 95       	ret

00001f98 <.L_div>:
    1f98:	e1 e0       	ldi	r30, 0x01	; 1

00001f9a <.L_div1>:
    1f9a:	66 0f       	add	r22, r22
    1f9c:	77 1f       	adc	r23, r23
    1f9e:	88 1f       	adc	r24, r24
    1fa0:	bb 1f       	adc	r27, r27
    1fa2:	62 17       	cp	r22, r18
    1fa4:	73 07       	cpc	r23, r19
    1fa6:	84 07       	cpc	r24, r20
    1fa8:	ba 07       	cpc	r27, r26
    1faa:	20 f0       	brcs	.+8      	; 0x1fb4 <.L2^B2>
    1fac:	62 1b       	sub	r22, r18
    1fae:	73 0b       	sbc	r23, r19
    1fb0:	84 0b       	sbc	r24, r20
    1fb2:	ba 0b       	sbc	r27, r26

00001fb4 <.L2^B2>:
    1fb4:	ee 1f       	adc	r30, r30
    1fb6:	88 f7       	brcc	.-30     	; 0x1f9a <.L_div1>
    1fb8:	e0 95       	com	r30
    1fba:	08 95       	ret

00001fbc <__fixsfsi>:
    1fbc:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <__fixunssfsi>
    1fc0:	68 94       	set
    1fc2:	b1 11       	cpse	r27, r1
    1fc4:	0c 94 c0 10 	jmp	0x2180	; 0x2180 <__fp_szero>
    1fc8:	08 95       	ret

00001fca <__fixunssfsi>:
    1fca:	0e 94 a5 10 	call	0x214a	; 0x214a <__fp_splitA>
    1fce:	88 f0       	brcs	.+34     	; 0x1ff2 <.L_err>
    1fd0:	9f 57       	subi	r25, 0x7F	; 127
    1fd2:	98 f0       	brcs	.+38     	; 0x1ffa <.L_zr>
    1fd4:	b9 2f       	mov	r27, r25
    1fd6:	99 27       	eor	r25, r25
    1fd8:	b7 51       	subi	r27, 0x17	; 23
    1fda:	b0 f0       	brcs	.+44     	; 0x2008 <.L4^B1>
    1fdc:	e1 f0       	breq	.+56     	; 0x2016 <.L_sign>

00001fde <.L1^B1>:
    1fde:	66 0f       	add	r22, r22
    1fe0:	77 1f       	adc	r23, r23
    1fe2:	88 1f       	adc	r24, r24
    1fe4:	99 1f       	adc	r25, r25
    1fe6:	1a f0       	brmi	.+6      	; 0x1fee <.L2^B1>
    1fe8:	ba 95       	dec	r27
    1fea:	c9 f7       	brne	.-14     	; 0x1fde <.L1^B1>
    1fec:	14 c0       	rjmp	.+40     	; 0x2016 <.L_sign>

00001fee <.L2^B1>:
    1fee:	b1 30       	cpi	r27, 0x01	; 1
    1ff0:	91 f0       	breq	.+36     	; 0x2016 <.L_sign>

00001ff2 <.L_err>:
    1ff2:	0e 94 bf 10 	call	0x217e	; 0x217e <__fp_zero>
    1ff6:	b1 e0       	ldi	r27, 0x01	; 1
    1ff8:	08 95       	ret

00001ffa <.L_zr>:
    1ffa:	0c 94 bf 10 	jmp	0x217e	; 0x217e <__fp_zero>

00001ffe <.L3^B1>:
    1ffe:	67 2f       	mov	r22, r23
    2000:	78 2f       	mov	r23, r24
    2002:	88 27       	eor	r24, r24
    2004:	b8 5f       	subi	r27, 0xF8	; 248
    2006:	39 f0       	breq	.+14     	; 0x2016 <.L_sign>

00002008 <.L4^B1>:
    2008:	b9 3f       	cpi	r27, 0xF9	; 249
    200a:	cc f3       	brlt	.-14     	; 0x1ffe <.L3^B1>

0000200c <.L5^B1>:
    200c:	86 95       	lsr	r24
    200e:	77 95       	ror	r23
    2010:	67 95       	ror	r22
    2012:	b3 95       	inc	r27
    2014:	d9 f7       	brne	.-10     	; 0x200c <.L5^B1>

00002016 <.L_sign>:
    2016:	3e f4       	brtc	.+14     	; 0x2026 <.L6^B1>
    2018:	90 95       	com	r25
    201a:	80 95       	com	r24
    201c:	70 95       	com	r23
    201e:	61 95       	neg	r22
    2020:	7f 4f       	sbci	r23, 0xFF	; 255
    2022:	8f 4f       	sbci	r24, 0xFF	; 255
    2024:	9f 4f       	sbci	r25, 0xFF	; 255

00002026 <.L6^B1>:
    2026:	08 95       	ret

00002028 <__floatunsisf>:
    2028:	e8 94       	clt
    202a:	09 c0       	rjmp	.+18     	; 0x203e <.L1^B1>

0000202c <__floatsisf>:
    202c:	97 fb       	bst	r25, 7
    202e:	3e f4       	brtc	.+14     	; 0x203e <.L1^B1>
    2030:	90 95       	com	r25
    2032:	80 95       	com	r24
    2034:	70 95       	com	r23
    2036:	61 95       	neg	r22
    2038:	7f 4f       	sbci	r23, 0xFF	; 255
    203a:	8f 4f       	sbci	r24, 0xFF	; 255
    203c:	9f 4f       	sbci	r25, 0xFF	; 255

0000203e <.L1^B1>:
    203e:	99 23       	and	r25, r25
    2040:	a9 f0       	breq	.+42     	; 0x206c <.L4^B1>
    2042:	f9 2f       	mov	r31, r25
    2044:	96 e9       	ldi	r25, 0x96	; 150
    2046:	bb 27       	eor	r27, r27

00002048 <.L2^B1>:
    2048:	93 95       	inc	r25
    204a:	f6 95       	lsr	r31
    204c:	87 95       	ror	r24
    204e:	77 95       	ror	r23
    2050:	67 95       	ror	r22
    2052:	b7 95       	ror	r27
    2054:	f1 11       	cpse	r31, r1
    2056:	f8 cf       	rjmp	.-16     	; 0x2048 <.L2^B1>
    2058:	fa f4       	brpl	.+62     	; 0x2098 <.L_pack>
    205a:	bb 0f       	add	r27, r27
    205c:	11 f4       	brne	.+4      	; 0x2062 <.L3^B1>
    205e:	60 ff       	sbrs	r22, 0
    2060:	1b c0       	rjmp	.+54     	; 0x2098 <.L_pack>

00002062 <.L3^B1>:
    2062:	6f 5f       	subi	r22, 0xFF	; 255
    2064:	7f 4f       	sbci	r23, 0xFF	; 255
    2066:	8f 4f       	sbci	r24, 0xFF	; 255
    2068:	9f 4f       	sbci	r25, 0xFF	; 255
    206a:	16 c0       	rjmp	.+44     	; 0x2098 <.L_pack>

0000206c <.L4^B1>:
    206c:	88 23       	and	r24, r24
    206e:	11 f0       	breq	.+4      	; 0x2074 <.L5^B1>
    2070:	96 e9       	ldi	r25, 0x96	; 150
    2072:	11 c0       	rjmp	.+34     	; 0x2096 <.L8^B1>

00002074 <.L5^B1>:
    2074:	77 23       	and	r23, r23
    2076:	21 f0       	breq	.+8      	; 0x2080 <.L6^B1>
    2078:	9e e8       	ldi	r25, 0x8E	; 142
    207a:	87 2f       	mov	r24, r23
    207c:	76 2f       	mov	r23, r22
    207e:	05 c0       	rjmp	.+10     	; 0x208a <.L7^B1>

00002080 <.L6^B1>:
    2080:	66 23       	and	r22, r22
    2082:	71 f0       	breq	.+28     	; 0x20a0 <.L9^B1>
    2084:	96 e8       	ldi	r25, 0x86	; 134
    2086:	86 2f       	mov	r24, r22
    2088:	70 e0       	ldi	r23, 0x00	; 0

0000208a <.L7^B1>:
    208a:	60 e0       	ldi	r22, 0x00	; 0
    208c:	2a f0       	brmi	.+10     	; 0x2098 <.L_pack>

0000208e <.L10^B1>:
    208e:	9a 95       	dec	r25
    2090:	66 0f       	add	r22, r22
    2092:	77 1f       	adc	r23, r23
    2094:	88 1f       	adc	r24, r24

00002096 <.L8^B1>:
    2096:	da f7       	brpl	.-10     	; 0x208e <.L10^B1>

00002098 <.L_pack>:
    2098:	88 0f       	add	r24, r24
    209a:	96 95       	lsr	r25
    209c:	87 95       	ror	r24
    209e:	97 f9       	bld	r25, 7

000020a0 <.L9^B1>:
    20a0:	08 95       	ret

000020a2 <__fp_cmp>:
    20a2:	99 0f       	add	r25, r25
    20a4:	00 08       	sbc	r0, r0
    20a6:	55 0f       	add	r21, r21
    20a8:	aa 0b       	sbc	r26, r26
    20aa:	e0 e8       	ldi	r30, 0x80	; 128
    20ac:	fe ef       	ldi	r31, 0xFE	; 254
    20ae:	16 16       	cp	r1, r22
    20b0:	17 06       	cpc	r1, r23
    20b2:	e8 07       	cpc	r30, r24
    20b4:	f9 07       	cpc	r31, r25
    20b6:	c0 f0       	brcs	.+48     	; 0x20e8 <.L9^B1>
    20b8:	12 16       	cp	r1, r18
    20ba:	13 06       	cpc	r1, r19
    20bc:	e4 07       	cpc	r30, r20
    20be:	f5 07       	cpc	r31, r21
    20c0:	98 f0       	brcs	.+38     	; 0x20e8 <.L9^B1>
    20c2:	62 1b       	sub	r22, r18
    20c4:	73 0b       	sbc	r23, r19
    20c6:	84 0b       	sbc	r24, r20
    20c8:	95 0b       	sbc	r25, r21
    20ca:	39 f4       	brne	.+14     	; 0x20da <.L1^B1>
    20cc:	0a 26       	eor	r0, r26
    20ce:	61 f0       	breq	.+24     	; 0x20e8 <.L9^B1>
    20d0:	23 2b       	or	r18, r19
    20d2:	24 2b       	or	r18, r20
    20d4:	25 2b       	or	r18, r21
    20d6:	21 f4       	brne	.+8      	; 0x20e0 <.L2^B1>
    20d8:	08 95       	ret

000020da <.L1^B1>:
    20da:	0a 26       	eor	r0, r26
    20dc:	09 f4       	brne	.+2      	; 0x20e0 <.L2^B1>
    20de:	a1 40       	sbci	r26, 0x01	; 1

000020e0 <.L2^B1>:
    20e0:	a6 95       	lsr	r26
    20e2:	8f ef       	ldi	r24, 0xFF	; 255
    20e4:	81 1d       	adc	r24, r1
    20e6:	81 1d       	adc	r24, r1

000020e8 <.L9^B1>:
    20e8:	08 95       	ret

000020ea <__fp_inf>:
    20ea:	97 f9       	bld	r25, 7
    20ec:	9f 67       	ori	r25, 0x7F	; 127
    20ee:	80 e8       	ldi	r24, 0x80	; 128
    20f0:	70 e0       	ldi	r23, 0x00	; 0
    20f2:	60 e0       	ldi	r22, 0x00	; 0
    20f4:	08 95       	ret

000020f6 <__fp_nan>:
    20f6:	9f ef       	ldi	r25, 0xFF	; 255
    20f8:	80 ec       	ldi	r24, 0xC0	; 192
    20fa:	08 95       	ret

000020fc <__fp_pscA>:
    20fc:	00 24       	eor	r0, r0
    20fe:	0a 94       	dec	r0
    2100:	16 16       	cp	r1, r22
    2102:	17 06       	cpc	r1, r23
    2104:	18 06       	cpc	r1, r24
    2106:	09 06       	cpc	r0, r25
    2108:	08 95       	ret

0000210a <__fp_pscB>:
    210a:	00 24       	eor	r0, r0
    210c:	0a 94       	dec	r0
    210e:	12 16       	cp	r1, r18
    2110:	13 06       	cpc	r1, r19
    2112:	14 06       	cpc	r1, r20
    2114:	05 06       	cpc	r0, r21
    2116:	08 95       	ret

00002118 <__fp_round>:
    2118:	09 2e       	mov	r0, r25
    211a:	03 94       	inc	r0
    211c:	00 0c       	add	r0, r0
    211e:	11 f4       	brne	.+4      	; 0x2124 <.L1^B1>
    2120:	88 23       	and	r24, r24
    2122:	52 f0       	brmi	.+20     	; 0x2138 <.L3^B1>

00002124 <.L1^B1>:
    2124:	bb 0f       	add	r27, r27
    2126:	40 f4       	brcc	.+16     	; 0x2138 <.L3^B1>
    2128:	bf 2b       	or	r27, r31
    212a:	11 f4       	brne	.+4      	; 0x2130 <.L2^B1>
    212c:	60 ff       	sbrs	r22, 0
    212e:	04 c0       	rjmp	.+8      	; 0x2138 <.L3^B1>

00002130 <.L2^B1>:
    2130:	6f 5f       	subi	r22, 0xFF	; 255
    2132:	7f 4f       	sbci	r23, 0xFF	; 255
    2134:	8f 4f       	sbci	r24, 0xFF	; 255
    2136:	9f 4f       	sbci	r25, 0xFF	; 255

00002138 <.L3^B1>:
    2138:	08 95       	ret

0000213a <__fp_split3>:
    213a:	57 fd       	sbrc	r21, 7
    213c:	90 58       	subi	r25, 0x80	; 128
    213e:	44 0f       	add	r20, r20
    2140:	55 1f       	adc	r21, r21
    2142:	59 f0       	breq	.+22     	; 0x215a <.L4^B1>
    2144:	5f 3f       	cpi	r21, 0xFF	; 255
    2146:	71 f0       	breq	.+28     	; 0x2164 <.L5^B1>

00002148 <.L1^B1>:
    2148:	47 95       	ror	r20

0000214a <__fp_splitA>:
    214a:	88 0f       	add	r24, r24
    214c:	97 fb       	bst	r25, 7
    214e:	99 1f       	adc	r25, r25
    2150:	61 f0       	breq	.+24     	; 0x216a <.L6^B1>
    2152:	9f 3f       	cpi	r25, 0xFF	; 255
    2154:	79 f0       	breq	.+30     	; 0x2174 <.L7^B1>

00002156 <.L3^B1>:
    2156:	87 95       	ror	r24
    2158:	08 95       	ret

0000215a <.L4^B1>:
    215a:	12 16       	cp	r1, r18
    215c:	13 06       	cpc	r1, r19
    215e:	14 06       	cpc	r1, r20
    2160:	55 1f       	adc	r21, r21
    2162:	f2 cf       	rjmp	.-28     	; 0x2148 <.L1^B1>

00002164 <.L5^B1>:
    2164:	46 95       	lsr	r20
    2166:	f1 df       	rcall	.-30     	; 0x214a <__fp_splitA>
    2168:	08 c0       	rjmp	.+16     	; 0x217a <.L8^B1>

0000216a <.L6^B1>:
    216a:	16 16       	cp	r1, r22
    216c:	17 06       	cpc	r1, r23
    216e:	18 06       	cpc	r1, r24
    2170:	99 1f       	adc	r25, r25
    2172:	f1 cf       	rjmp	.-30     	; 0x2156 <.L3^B1>

00002174 <.L7^B1>:
    2174:	86 95       	lsr	r24
    2176:	71 05       	cpc	r23, r1
    2178:	61 05       	cpc	r22, r1

0000217a <.L8^B1>:
    217a:	08 94       	sec
    217c:	08 95       	ret

0000217e <__fp_zero>:
    217e:	e8 94       	clt

00002180 <__fp_szero>:
    2180:	bb 27       	eor	r27, r27
    2182:	66 27       	eor	r22, r22
    2184:	77 27       	eor	r23, r23
    2186:	cb 01       	movw	r24, r22
    2188:	97 f9       	bld	r25, 7
    218a:	08 95       	ret

0000218c <__gesf2>:
    218c:	0e 94 51 10 	call	0x20a2	; 0x20a2 <__fp_cmp>
    2190:	08 f4       	brcc	.+2      	; 0x2194 <.L1^B1>
    2192:	8f ef       	ldi	r24, 0xFF	; 255

00002194 <.L1^B1>:
    2194:	08 95       	ret

00002196 <__mulsf3>:
    2196:	0e 94 de 10 	call	0x21bc	; 0x21bc <__mulsf3x>
    219a:	0c 94 8c 10 	jmp	0x2118	; 0x2118 <__fp_round>

0000219e <.L^B1>:
    219e:	0e 94 7e 10 	call	0x20fc	; 0x20fc <__fp_pscA>
    21a2:	38 f0       	brcs	.+14     	; 0x21b2 <.L1^B1>
    21a4:	0e 94 85 10 	call	0x210a	; 0x210a <__fp_pscB>
    21a8:	20 f0       	brcs	.+8      	; 0x21b2 <.L1^B1>
    21aa:	95 23       	and	r25, r21
    21ac:	11 f0       	breq	.+4      	; 0x21b2 <.L1^B1>
    21ae:	0c 94 75 10 	jmp	0x20ea	; 0x20ea <__fp_inf>

000021b2 <.L1^B1>:
    21b2:	0c 94 7b 10 	jmp	0x20f6	; 0x20f6 <__fp_nan>

000021b6 <.L2^B1>:
    21b6:	11 24       	eor	r1, r1
    21b8:	0c 94 c0 10 	jmp	0x2180	; 0x2180 <__fp_szero>

000021bc <__mulsf3x>:
    21bc:	0e 94 9d 10 	call	0x213a	; 0x213a <__fp_split3>
    21c0:	70 f3       	brcs	.-36     	; 0x219e <.L^B1>

000021c2 <__mulsf3_pse>:
    21c2:	95 9f       	mul	r25, r21
    21c4:	c1 f3       	breq	.-16     	; 0x21b6 <.L2^B1>
    21c6:	95 0f       	add	r25, r21
    21c8:	50 e0       	ldi	r21, 0x00	; 0
    21ca:	55 1f       	adc	r21, r21
    21cc:	62 9f       	mul	r22, r18
    21ce:	f0 01       	movw	r30, r0
    21d0:	72 9f       	mul	r23, r18
    21d2:	bb 27       	eor	r27, r27
    21d4:	f0 0d       	add	r31, r0
    21d6:	b1 1d       	adc	r27, r1
    21d8:	63 9f       	mul	r22, r19
    21da:	aa 27       	eor	r26, r26
    21dc:	f0 0d       	add	r31, r0
    21de:	b1 1d       	adc	r27, r1
    21e0:	aa 1f       	adc	r26, r26
    21e2:	64 9f       	mul	r22, r20
    21e4:	66 27       	eor	r22, r22
    21e6:	b0 0d       	add	r27, r0
    21e8:	a1 1d       	adc	r26, r1
    21ea:	66 1f       	adc	r22, r22
    21ec:	82 9f       	mul	r24, r18
    21ee:	22 27       	eor	r18, r18
    21f0:	b0 0d       	add	r27, r0
    21f2:	a1 1d       	adc	r26, r1
    21f4:	62 1f       	adc	r22, r18
    21f6:	73 9f       	mul	r23, r19
    21f8:	b0 0d       	add	r27, r0
    21fa:	a1 1d       	adc	r26, r1
    21fc:	62 1f       	adc	r22, r18
    21fe:	83 9f       	mul	r24, r19
    2200:	a0 0d       	add	r26, r0
    2202:	61 1d       	adc	r22, r1
    2204:	22 1f       	adc	r18, r18
    2206:	74 9f       	mul	r23, r20
    2208:	33 27       	eor	r19, r19
    220a:	a0 0d       	add	r26, r0
    220c:	61 1d       	adc	r22, r1
    220e:	23 1f       	adc	r18, r19
    2210:	84 9f       	mul	r24, r20
    2212:	60 0d       	add	r22, r0
    2214:	21 1d       	adc	r18, r1
    2216:	82 2f       	mov	r24, r18
    2218:	76 2f       	mov	r23, r22
    221a:	6a 2f       	mov	r22, r26
    221c:	11 24       	eor	r1, r1
    221e:	9f 57       	subi	r25, 0x7F	; 127
    2220:	50 40       	sbci	r21, 0x00	; 0
    2222:	9a f0       	brmi	.+38     	; 0x224a <.L13^B1>
    2224:	f1 f0       	breq	.+60     	; 0x2262 <.L15^B1>

00002226 <.L10^B1>:
    2226:	88 23       	and	r24, r24
    2228:	4a f0       	brmi	.+18     	; 0x223c <.L11^B1>
    222a:	ee 0f       	add	r30, r30
    222c:	ff 1f       	adc	r31, r31
    222e:	bb 1f       	adc	r27, r27
    2230:	66 1f       	adc	r22, r22
    2232:	77 1f       	adc	r23, r23
    2234:	88 1f       	adc	r24, r24
    2236:	91 50       	subi	r25, 0x01	; 1
    2238:	50 40       	sbci	r21, 0x00	; 0
    223a:	a9 f7       	brne	.-22     	; 0x2226 <.L10^B1>

0000223c <.L11^B1>:
    223c:	9e 3f       	cpi	r25, 0xFE	; 254
    223e:	51 05       	cpc	r21, r1
    2240:	80 f0       	brcs	.+32     	; 0x2262 <.L15^B1>
    2242:	0c 94 75 10 	jmp	0x20ea	; 0x20ea <__fp_inf>

00002246 <.L12^B1>:
    2246:	0c 94 c0 10 	jmp	0x2180	; 0x2180 <__fp_szero>

0000224a <.L13^B1>:
    224a:	5f 3f       	cpi	r21, 0xFF	; 255
    224c:	e4 f3       	brlt	.-8      	; 0x2246 <.L12^B1>
    224e:	98 3e       	cpi	r25, 0xE8	; 232
    2250:	d4 f3       	brlt	.-12     	; 0x2246 <.L12^B1>

00002252 <.L14^B1>:
    2252:	86 95       	lsr	r24
    2254:	77 95       	ror	r23
    2256:	67 95       	ror	r22
    2258:	b7 95       	ror	r27
    225a:	f7 95       	ror	r31
    225c:	e7 95       	ror	r30
    225e:	9f 5f       	subi	r25, 0xFF	; 255
    2260:	c1 f7       	brne	.-16     	; 0x2252 <.L14^B1>

00002262 <.L15^B1>:
    2262:	fe 2b       	or	r31, r30
    2264:	88 0f       	add	r24, r24
    2266:	91 1d       	adc	r25, r1
    2268:	96 95       	lsr	r25
    226a:	87 95       	ror	r24
    226c:	97 f9       	bld	r25, 7
    226e:	08 95       	ret

00002270 <_exit>:
    2270:	f8 94       	cli

00002272 <__stop_program>:
    2272:	ff cf       	rjmp	.-2      	; 0x2272 <__stop_program>

00002274 <L0^A>:
    2274:	49 05       	cpc	r20, r9
    2276:	80 05       	cpc	r24, r0
    2278:	b7 05       	cpc	r27, r7
    227a:	e8 05       	cpc	r30, r8
    227c:	26 06       	cpc	r2, r22
    227e:	5c 06       	cpc	r5, r28
    2280:	8b 06       	cpc	r8, r27
    2282:	ba 06       	cpc	r11, r26
    2284:	6a 07       	cpc	r22, r26
    2286:	77 07       	cpc	r23, r23
    2288:	bf 07       	cpc	r27, r31
