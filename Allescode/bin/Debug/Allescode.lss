
bin\Debug\Allescode.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000020  00800200  000032aa  0000335e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000032aa  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000010  00800220  00800220  0000337e  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  0000337e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      00000012  00000000  00000000  00003381  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00003394  2**2
                  CONTENTS, READONLY, OCTETS
  6 .debug_aranges 00000178  00000000  00000000  000033d8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_info   00001b11  00000000  00000000  00003550  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_abbrev 000010b5  00000000  00000000  00005061  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line   000023e9  00000000  00000000  00006116  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_frame  000004f8  00000000  00000000  00008500  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_str    000007a3  00000000  00000000  000089f8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_line_str 00000191  00000000  00000000  0000919b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 90 00 	jmp	0x120	; 0x120 <__ctors_end>
       4:	0c 94 b1 00 	jmp	0x162	; 0x162 <__bad_interrupt>
       8:	0c 94 b1 00 	jmp	0x162	; 0x162 <__bad_interrupt>
       c:	0c 94 b1 00 	jmp	0x162	; 0x162 <__bad_interrupt>
      10:	0c 94 b1 00 	jmp	0x162	; 0x162 <__bad_interrupt>
      14:	0c 94 b1 00 	jmp	0x162	; 0x162 <__bad_interrupt>
      18:	0c 94 b1 00 	jmp	0x162	; 0x162 <__bad_interrupt>
      1c:	0c 94 b1 00 	jmp	0x162	; 0x162 <__bad_interrupt>
      20:	0c 94 b1 00 	jmp	0x162	; 0x162 <__bad_interrupt>
      24:	0c 94 b1 00 	jmp	0x162	; 0x162 <__bad_interrupt>
      28:	0c 94 b1 00 	jmp	0x162	; 0x162 <__bad_interrupt>
      2c:	0c 94 b1 00 	jmp	0x162	; 0x162 <__bad_interrupt>
      30:	0c 94 b1 00 	jmp	0x162	; 0x162 <__bad_interrupt>
      34:	0c 94 b1 00 	jmp	0x162	; 0x162 <__bad_interrupt>
      38:	0c 94 b1 00 	jmp	0x162	; 0x162 <__bad_interrupt>
      3c:	0c 94 f2 14 	jmp	0x29e4	; 0x29e4 <__vector_15>
      40:	0c 94 b1 00 	jmp	0x162	; 0x162 <__bad_interrupt>
      44:	0c 94 68 03 	jmp	0x6d0	; 0x6d0 <__vector_17>
      48:	0c 94 b1 00 	jmp	0x162	; 0x162 <__bad_interrupt>
      4c:	0c 94 b1 00 	jmp	0x162	; 0x162 <__bad_interrupt>
      50:	0c 94 3d 03 	jmp	0x67a	; 0x67a <__vector_20>
      54:	0c 94 b1 00 	jmp	0x162	; 0x162 <__bad_interrupt>
      58:	0c 94 b1 00 	jmp	0x162	; 0x162 <__bad_interrupt>
      5c:	0c 94 e3 03 	jmp	0x7c6	; 0x7c6 <__vector_23>
      60:	0c 94 b1 00 	jmp	0x162	; 0x162 <__bad_interrupt>
      64:	0c 94 b3 00 	jmp	0x166	; 0x166 <__vector_25>
      68:	0c 94 b1 00 	jmp	0x162	; 0x162 <__bad_interrupt>
      6c:	0c 94 b1 00 	jmp	0x162	; 0x162 <__bad_interrupt>
      70:	0c 94 b1 00 	jmp	0x162	; 0x162 <__bad_interrupt>
      74:	0c 94 b1 00 	jmp	0x162	; 0x162 <__bad_interrupt>
      78:	0c 94 b1 00 	jmp	0x162	; 0x162 <__bad_interrupt>
      7c:	0c 94 b1 00 	jmp	0x162	; 0x162 <__bad_interrupt>
      80:	0c 94 bb 03 	jmp	0x776	; 0x776 <__vector_32>
      84:	0c 94 b1 00 	jmp	0x162	; 0x162 <__bad_interrupt>
      88:	0c 94 b1 00 	jmp	0x162	; 0x162 <__bad_interrupt>
      8c:	0c 94 90 03 	jmp	0x720	; 0x720 <__vector_35>
      90:	0c 94 b1 00 	jmp	0x162	; 0x162 <__bad_interrupt>
      94:	0c 94 b1 00 	jmp	0x162	; 0x162 <__bad_interrupt>
      98:	0c 94 b1 00 	jmp	0x162	; 0x162 <__bad_interrupt>
      9c:	0c 94 b1 00 	jmp	0x162	; 0x162 <__bad_interrupt>
      a0:	0c 94 b1 00 	jmp	0x162	; 0x162 <__bad_interrupt>
      a4:	0c 94 b1 00 	jmp	0x162	; 0x162 <__bad_interrupt>
      a8:	0c 94 b1 00 	jmp	0x162	; 0x162 <__bad_interrupt>
      ac:	0c 94 b1 00 	jmp	0x162	; 0x162 <__bad_interrupt>
      b0:	0c 94 b1 00 	jmp	0x162	; 0x162 <__bad_interrupt>
      b4:	0c 94 01 04 	jmp	0x802	; 0x802 <__vector_45>
      b8:	0c 94 b1 00 	jmp	0x162	; 0x162 <__bad_interrupt>
      bc:	0c 94 b1 00 	jmp	0x162	; 0x162 <__bad_interrupt>
      c0:	0c 94 b1 00 	jmp	0x162	; 0x162 <__bad_interrupt>
      c4:	0c 94 b1 00 	jmp	0x162	; 0x162 <__bad_interrupt>
      c8:	0c 94 b1 00 	jmp	0x162	; 0x162 <__bad_interrupt>
      cc:	0c 94 b1 00 	jmp	0x162	; 0x162 <__bad_interrupt>
      d0:	0c 94 b1 00 	jmp	0x162	; 0x162 <__bad_interrupt>
      d4:	0c 94 b1 00 	jmp	0x162	; 0x162 <__bad_interrupt>
      d8:	0c 94 b1 00 	jmp	0x162	; 0x162 <__bad_interrupt>
      dc:	0c 94 b1 00 	jmp	0x162	; 0x162 <__bad_interrupt>
      e0:	0c 94 b1 00 	jmp	0x162	; 0x162 <__bad_interrupt>

000000e4 <__trampolines_start>:
      e4:	0c 94 de 04 	jmp	0x9bc	; 0x9bc <.L10>
      e8:	0c 94 86 07 	jmp	0xf0c	; 0xf0c <.L15>
      ec:	0c 94 20 06 	jmp	0xc40	; 0xc40 <.L20>
      f0:	0c 94 16 08 	jmp	0x102c	; 0x102c <.L14>
      f4:	0c 94 56 06 	jmp	0xcac	; 0xcac <.L19>
      f8:	0c 94 ce 07 	jmp	0xf9c	; 0xf9c <.L12>
      fc:	0c 94 43 05 	jmp	0xa86	; 0xa86 <.L24>
     100:	0c 94 54 04 	jmp	0x8a8	; 0x8a8 <.L101>
     104:	0c 94 b1 05 	jmp	0xb62	; 0xb62 <.L22>
     108:	0c 94 79 07 	jmp	0xef2	; 0xef2 <.L16>
     10c:	0c 94 b4 06 	jmp	0xd68	; 0xd68 <.L17>
     110:	0c 94 44 0b 	jmp	0x1688	; 0x1688 <.L13>
     114:	0c 94 e2 05 	jmp	0xbc4	; 0xbc4 <.L21>
     118:	0c 94 85 06 	jmp	0xd0a	; 0xd0a <.L18>
     11c:	0c 94 7a 05 	jmp	0xaf4	; 0xaf4 <.L23>

00000120 <__ctors_end>:
     120:	11 24       	eor	r1, r1
     122:	1f be       	out	0x3f, r1	; 63
     124:	cf ef       	ldi	r28, 0xFF	; 255
     126:	d1 e2       	ldi	r29, 0x21	; 33
     128:	de bf       	out	0x3e, r29	; 62
     12a:	cd bf       	out	0x3d, r28	; 61
     12c:	00 e0       	ldi	r16, 0x00	; 0
     12e:	0c bf       	out	0x3c, r16	; 60

00000130 <__do_copy_data>:
     130:	12 e0       	ldi	r17, 0x02	; 2

00000132 <.Loc.1>:
     132:	a0 e0       	ldi	r26, 0x00	; 0

00000134 <.Loc.2>:
     134:	b2 e0       	ldi	r27, 0x02	; 2

00000136 <.Loc.3>:
     136:	ea ea       	ldi	r30, 0xAA	; 170

00000138 <.Loc.4>:
     138:	f2 e3       	ldi	r31, 0x32	; 50

0000013a <.Loc.5>:
     13a:	00 e0       	ldi	r16, 0x00	; 0

0000013c <.Loc.6>:
     13c:	0b bf       	out	0x3b, r16	; 59

0000013e <.Loc.7>:
     13e:	02 c0       	rjmp	.+4      	; 0x144 <.L__do_copy_data_start>

00000140 <.L__do_copy_data_loop>:
     140:	07 90       	elpm	r0, Z+

00000142 <.Loc.9>:
     142:	0d 92       	st	X+, r0

00000144 <.L__do_copy_data_start>:
     144:	a0 32       	cpi	r26, 0x20	; 32

00000146 <.Loc.11>:
     146:	b1 07       	cpc	r27, r17

00000148 <.Loc.12>:
     148:	d9 f7       	brne	.-10     	; 0x140 <.L__do_copy_data_loop>

0000014a <__do_clear_bss>:
     14a:	22 e0       	ldi	r18, 0x02	; 2

0000014c <.Loc.1>:
     14c:	a0 e2       	ldi	r26, 0x20	; 32

0000014e <.Loc.2>:
     14e:	b2 e0       	ldi	r27, 0x02	; 2

00000150 <.Loc.3>:
     150:	01 c0       	rjmp	.+2      	; 0x154 <.Loc.5>

00000152 <.Loc.4>:
     152:	1d 92       	st	X+, r1

00000154 <.Loc.5>:
     154:	a0 33       	cpi	r26, 0x30	; 48

00000156 <.Loc.6>:
     156:	b2 07       	cpc	r27, r18

00000158 <.Loc.7>:
     158:	e1 f7       	brne	.-8      	; 0x152 <.Loc.4>

0000015a <L0^A>:
     15a:	0e 94 3b 04 	call	0x876	; 0x876 <main>
     15e:	0c 94 ef 18 	jmp	0x31de	; 0x31de <_exit>

00000162 <__bad_interrupt>:
     162:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000166 <__vector_25>:
int Bluetooth_Getal = 0;//BLUETOOTH GETAL
int verandergetal = 0;//ONNODIG
int veranderandergetal = 0;//ONNODIG

ISR(USART0_RX_vect)
{
     166:	1f 92       	push	r1
     168:	0f 92       	push	r0
     16a:	0f b6       	in	r0, 0x3f	; 63
     16c:	0f 92       	push	r0
     16e:	11 24       	eor	r1, r1
     170:	0b b6       	in	r0, 0x3b	; 59
     172:	0f 92       	push	r0
     174:	8f 93       	push	r24
     176:	9f 93       	push	r25
     178:	ef 93       	push	r30
     17a:	ff 93       	push	r31
     17c:	cf 93       	push	r28
     17e:	df 93       	push	r29
     180:	cd b7       	in	r28, 0x3d	; 61
     182:	de b7       	in	r29, 0x3e	; 62

00000184 <.Loc.1>:
    Bluetooth_Getal = UDR0;
     184:	86 ec       	ldi	r24, 0xC6	; 198
     186:	90 e0       	ldi	r25, 0x00	; 0
     188:	fc 01       	movw	r30, r24
     18a:	80 81       	ld	r24, Z
     18c:	88 2f       	mov	r24, r24
     18e:	90 e0       	ldi	r25, 0x00	; 0

00000190 <.Loc.2>:
     190:	90 93 21 02 	sts	0x0221, r25	; 0x800221 <Bluetooth_Getal+0x1>
     194:	80 93 20 02 	sts	0x0220, r24	; 0x800220 <Bluetooth_Getal>

00000198 <.Loc.3>:
    if (verandergetal == 0)//ONNODIG
     198:	80 91 22 02 	lds	r24, 0x0222	; 0x800222 <verandergetal>
     19c:	90 91 23 02 	lds	r25, 0x0223	; 0x800223 <verandergetal+0x1>

000001a0 <.Loc.4>:
     1a0:	00 97       	sbiw	r24, 0x00	; 0
     1a2:	51 f4       	brne	.+20     	; 0x1b8 <.L2>

000001a4 <.Loc.5>:
    {//ONNODIG
        verandergetal++;//ONNODIG
     1a4:	80 91 22 02 	lds	r24, 0x0222	; 0x800222 <verandergetal>
     1a8:	90 91 23 02 	lds	r25, 0x0223	; 0x800223 <verandergetal+0x1>
     1ac:	01 96       	adiw	r24, 0x01	; 1
     1ae:	90 93 23 02 	sts	0x0223, r25	; 0x800223 <verandergetal+0x1>
     1b2:	80 93 22 02 	sts	0x0222, r24	; 0x800222 <verandergetal>

000001b6 <.Loc.6>:
    }//ONNODIG
    else//ONNODIG
    {//ONNODIG
        verandergetal = 0;//ONNODIG
    }//ONNODIG
}
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <.L4>

000001b8 <.L2>:
        verandergetal = 0;//ONNODIG
     1b8:	10 92 23 02 	sts	0x0223, r1	; 0x800223 <verandergetal+0x1>
     1bc:	10 92 22 02 	sts	0x0222, r1	; 0x800222 <verandergetal>

000001c0 <.L4>:
}
     1c0:	00 00       	nop
     1c2:	df 91       	pop	r29
     1c4:	cf 91       	pop	r28
     1c6:	ff 91       	pop	r31
     1c8:	ef 91       	pop	r30
     1ca:	9f 91       	pop	r25
     1cc:	8f 91       	pop	r24
     1ce:	0f 90       	pop	r0
     1d0:	0b be       	out	0x3b, r0	; 59
     1d2:	0f 90       	pop	r0
     1d4:	0f be       	out	0x3f, r0	; 63
     1d6:	0f 90       	pop	r0
     1d8:	1f 90       	pop	r1
     1da:	18 95       	reti

000001dc <initBluetooth>:

void initBluetooth(void)
{
     1dc:	cf 93       	push	r28
     1de:	df 93       	push	r29
     1e0:	cd b7       	in	r28, 0x3d	; 61
     1e2:	de b7       	in	r29, 0x3e	; 62

000001e4 <.Loc.10>:
    //Bluetooth
    UBRR0H = (BRC >> 8);
     1e4:	85 ec       	ldi	r24, 0xC5	; 197
     1e6:	90 e0       	ldi	r25, 0x00	; 0

000001e8 <.Loc.11>:
     1e8:	fc 01       	movw	r30, r24
     1ea:	10 82       	st	Z, r1

000001ec <.Loc.12>:
    UBRR0L = BRC;
     1ec:	84 ec       	ldi	r24, 0xC4	; 196
     1ee:	90 e0       	ldi	r25, 0x00	; 0

000001f0 <.Loc.13>:
     1f0:	27 e6       	ldi	r18, 0x67	; 103
     1f2:	fc 01       	movw	r30, r24
     1f4:	20 83       	st	Z, r18

000001f6 <.Loc.14>:

    UCSR0B = (1 << RXEN0) |(1 << RXCIE0) |(1 << TXEN0) | (1 << TXCIE0);
     1f6:	81 ec       	ldi	r24, 0xC1	; 193
     1f8:	90 e0       	ldi	r25, 0x00	; 0

000001fa <.Loc.15>:
     1fa:	28 ed       	ldi	r18, 0xD8	; 216
     1fc:	fc 01       	movw	r30, r24
     1fe:	20 83       	st	Z, r18

00000200 <.Loc.16>:
    UCSR0C = (1 << UCSZ01) | (1 << UCSZ00);
     200:	82 ec       	ldi	r24, 0xC2	; 194
     202:	90 e0       	ldi	r25, 0x00	; 0

00000204 <.Loc.17>:
     204:	26 e0       	ldi	r18, 0x06	; 6
     206:	fc 01       	movw	r30, r24
     208:	20 83       	st	Z, r18

0000020a <.Loc.18>:

    sei();
     20a:	78 94       	sei

0000020c <.Loc.19>:
}
     20c:	00 00       	nop
     20e:	df 91       	pop	r29
     210:	cf 91       	pop	r28
     212:	08 95       	ret

00000214 <bochtrechts>:
volatile int timerteller = 0;
volatile int timertellerbak = 0;
volatile int bakvar = 0;

void bochtrechts()
{
     214:	cf 93       	push	r28
     216:	df 93       	push	r29
     218:	cd b7       	in	r28, 0x3d	; 61
     21a:	de b7       	in	r29, 0x3e	; 62

0000021c <.Loc.1>:
    PORT &= ~(1 << PIN11);
     21c:	82 e2       	ldi	r24, 0x22	; 34
     21e:	90 e0       	ldi	r25, 0x00	; 0
     220:	fc 01       	movw	r30, r24
     222:	20 81       	ld	r18, Z

00000224 <.Loc.2>:
     224:	82 e2       	ldi	r24, 0x22	; 34
     226:	90 e0       	ldi	r25, 0x00	; 0

00000228 <.Loc.3>:
     228:	2f 7b       	andi	r18, 0xBF	; 191
     22a:	fc 01       	movw	r30, r24
     22c:	20 83       	st	Z, r18

0000022e <.Loc.4>:
    PORT |= (1 << PIN12);
     22e:	82 e2       	ldi	r24, 0x22	; 34
     230:	90 e0       	ldi	r25, 0x00	; 0
     232:	fc 01       	movw	r30, r24
     234:	20 81       	ld	r18, Z
     236:	82 e2       	ldi	r24, 0x22	; 34
     238:	90 e0       	ldi	r25, 0x00	; 0

0000023a <.Loc.5>:
     23a:	20 62       	ori	r18, 0x20	; 32
     23c:	fc 01       	movw	r30, r24
     23e:	20 83       	st	Z, r18

00000240 <.Loc.6>:
    PORT &= ~(1 << PIN21);
     240:	82 e2       	ldi	r24, 0x22	; 34
     242:	90 e0       	ldi	r25, 0x00	; 0
     244:	fc 01       	movw	r30, r24
     246:	20 81       	ld	r18, Z

00000248 <.Loc.7>:
     248:	82 e2       	ldi	r24, 0x22	; 34
     24a:	90 e0       	ldi	r25, 0x00	; 0

0000024c <.Loc.8>:
     24c:	2f 7e       	andi	r18, 0xEF	; 239
     24e:	fc 01       	movw	r30, r24
     250:	20 83       	st	Z, r18

00000252 <.Loc.9>:
    PORT |= (1 << PIN22);
     252:	82 e2       	ldi	r24, 0x22	; 34
     254:	90 e0       	ldi	r25, 0x00	; 0
     256:	fc 01       	movw	r30, r24
     258:	20 81       	ld	r18, Z
     25a:	82 e2       	ldi	r24, 0x22	; 34
     25c:	90 e0       	ldi	r25, 0x00	; 0

0000025e <.Loc.10>:
     25e:	28 60       	ori	r18, 0x08	; 8
     260:	fc 01       	movw	r30, r24
     262:	20 83       	st	Z, r18

00000264 <.Loc.11>:
}
     264:	00 00       	nop
     266:	df 91       	pop	r29
     268:	cf 91       	pop	r28
     26a:	08 95       	ret

0000026c <rechtdoorrijden>:

void rechtdoorrijden()
{
     26c:	cf 93       	push	r28
     26e:	df 93       	push	r29
     270:	cd b7       	in	r28, 0x3d	; 61
     272:	de b7       	in	r29, 0x3e	; 62

00000274 <.Loc.13>:
    PORT &= ~(1 << PIN11);
     274:	82 e2       	ldi	r24, 0x22	; 34
     276:	90 e0       	ldi	r25, 0x00	; 0
     278:	fc 01       	movw	r30, r24
     27a:	20 81       	ld	r18, Z

0000027c <.Loc.14>:
     27c:	82 e2       	ldi	r24, 0x22	; 34
     27e:	90 e0       	ldi	r25, 0x00	; 0

00000280 <.Loc.15>:
     280:	2f 7b       	andi	r18, 0xBF	; 191
     282:	fc 01       	movw	r30, r24
     284:	20 83       	st	Z, r18

00000286 <.Loc.16>:
    PORT |= (1 << PIN12);
     286:	82 e2       	ldi	r24, 0x22	; 34
     288:	90 e0       	ldi	r25, 0x00	; 0
     28a:	fc 01       	movw	r30, r24
     28c:	20 81       	ld	r18, Z
     28e:	82 e2       	ldi	r24, 0x22	; 34
     290:	90 e0       	ldi	r25, 0x00	; 0

00000292 <.Loc.17>:
     292:	20 62       	ori	r18, 0x20	; 32
     294:	fc 01       	movw	r30, r24
     296:	20 83       	st	Z, r18

00000298 <.Loc.18>:
    PORT |= (1 << PIN21);
     298:	82 e2       	ldi	r24, 0x22	; 34
     29a:	90 e0       	ldi	r25, 0x00	; 0
     29c:	fc 01       	movw	r30, r24
     29e:	20 81       	ld	r18, Z
     2a0:	82 e2       	ldi	r24, 0x22	; 34
     2a2:	90 e0       	ldi	r25, 0x00	; 0

000002a4 <.Loc.19>:
     2a4:	20 61       	ori	r18, 0x10	; 16
     2a6:	fc 01       	movw	r30, r24
     2a8:	20 83       	st	Z, r18

000002aa <.Loc.20>:
    PORT &= ~(1 << PIN22);
     2aa:	82 e2       	ldi	r24, 0x22	; 34
     2ac:	90 e0       	ldi	r25, 0x00	; 0
     2ae:	fc 01       	movw	r30, r24
     2b0:	20 81       	ld	r18, Z

000002b2 <.Loc.21>:
     2b2:	82 e2       	ldi	r24, 0x22	; 34
     2b4:	90 e0       	ldi	r25, 0x00	; 0

000002b6 <.Loc.22>:
     2b6:	27 7f       	andi	r18, 0xF7	; 247
     2b8:	fc 01       	movw	r30, r24
     2ba:	20 83       	st	Z, r18

000002bc <.Loc.23>:
}
     2bc:	00 00       	nop
     2be:	df 91       	pop	r29
     2c0:	cf 91       	pop	r28
     2c2:	08 95       	ret

000002c4 <achteruitrijden>:

void achteruitrijden()
{
     2c4:	cf 93       	push	r28
     2c6:	df 93       	push	r29
     2c8:	cd b7       	in	r28, 0x3d	; 61
     2ca:	de b7       	in	r29, 0x3e	; 62

000002cc <.Loc.25>:
    PORT |= (1 << PIN11);
     2cc:	82 e2       	ldi	r24, 0x22	; 34
     2ce:	90 e0       	ldi	r25, 0x00	; 0
     2d0:	fc 01       	movw	r30, r24
     2d2:	20 81       	ld	r18, Z
     2d4:	82 e2       	ldi	r24, 0x22	; 34
     2d6:	90 e0       	ldi	r25, 0x00	; 0

000002d8 <.Loc.26>:
     2d8:	20 64       	ori	r18, 0x40	; 64
     2da:	fc 01       	movw	r30, r24
     2dc:	20 83       	st	Z, r18

000002de <.Loc.27>:
    PORT &= ~(1 << PIN12);
     2de:	82 e2       	ldi	r24, 0x22	; 34
     2e0:	90 e0       	ldi	r25, 0x00	; 0
     2e2:	fc 01       	movw	r30, r24
     2e4:	20 81       	ld	r18, Z

000002e6 <.Loc.28>:
     2e6:	82 e2       	ldi	r24, 0x22	; 34
     2e8:	90 e0       	ldi	r25, 0x00	; 0

000002ea <.Loc.29>:
     2ea:	2f 7d       	andi	r18, 0xDF	; 223
     2ec:	fc 01       	movw	r30, r24
     2ee:	20 83       	st	Z, r18

000002f0 <.Loc.30>:
    PORT &= ~(1 << PIN21);
     2f0:	82 e2       	ldi	r24, 0x22	; 34
     2f2:	90 e0       	ldi	r25, 0x00	; 0
     2f4:	fc 01       	movw	r30, r24
     2f6:	20 81       	ld	r18, Z

000002f8 <.Loc.31>:
     2f8:	82 e2       	ldi	r24, 0x22	; 34
     2fa:	90 e0       	ldi	r25, 0x00	; 0

000002fc <.Loc.32>:
     2fc:	2f 7e       	andi	r18, 0xEF	; 239
     2fe:	fc 01       	movw	r30, r24
     300:	20 83       	st	Z, r18

00000302 <.Loc.33>:
    PORT |= (1 << PIN22);
     302:	82 e2       	ldi	r24, 0x22	; 34
     304:	90 e0       	ldi	r25, 0x00	; 0
     306:	fc 01       	movw	r30, r24
     308:	20 81       	ld	r18, Z
     30a:	82 e2       	ldi	r24, 0x22	; 34
     30c:	90 e0       	ldi	r25, 0x00	; 0

0000030e <.Loc.34>:
     30e:	28 60       	ori	r18, 0x08	; 8
     310:	fc 01       	movw	r30, r24
     312:	20 83       	st	Z, r18

00000314 <.Loc.35>:
}
     314:	00 00       	nop
     316:	df 91       	pop	r29
     318:	cf 91       	pop	r28
     31a:	08 95       	ret

0000031c <naarrechtsrijden>:

void naarrechtsrijden()
{
     31c:	cf 93       	push	r28
     31e:	df 93       	push	r29
     320:	cd b7       	in	r28, 0x3d	; 61
     322:	de b7       	in	r29, 0x3e	; 62

00000324 <.Loc.37>:
    PORT &= ~(1 << PIN12);
     324:	82 e2       	ldi	r24, 0x22	; 34
     326:	90 e0       	ldi	r25, 0x00	; 0
     328:	fc 01       	movw	r30, r24
     32a:	20 81       	ld	r18, Z

0000032c <.Loc.38>:
     32c:	82 e2       	ldi	r24, 0x22	; 34
     32e:	90 e0       	ldi	r25, 0x00	; 0

00000330 <.Loc.39>:
     330:	2f 7d       	andi	r18, 0xDF	; 223
     332:	fc 01       	movw	r30, r24
     334:	20 83       	st	Z, r18

00000336 <.Loc.40>:
    PORT |= (1 << PIN11);
     336:	82 e2       	ldi	r24, 0x22	; 34
     338:	90 e0       	ldi	r25, 0x00	; 0
     33a:	fc 01       	movw	r30, r24
     33c:	20 81       	ld	r18, Z
     33e:	82 e2       	ldi	r24, 0x22	; 34
     340:	90 e0       	ldi	r25, 0x00	; 0

00000342 <.Loc.41>:
     342:	20 64       	ori	r18, 0x40	; 64
     344:	fc 01       	movw	r30, r24
     346:	20 83       	st	Z, r18

00000348 <.Loc.42>:
    PORT &= ~(1 << PIN22);
     348:	82 e2       	ldi	r24, 0x22	; 34
     34a:	90 e0       	ldi	r25, 0x00	; 0
     34c:	fc 01       	movw	r30, r24
     34e:	20 81       	ld	r18, Z

00000350 <.Loc.43>:
     350:	82 e2       	ldi	r24, 0x22	; 34
     352:	90 e0       	ldi	r25, 0x00	; 0

00000354 <.Loc.44>:
     354:	27 7f       	andi	r18, 0xF7	; 247
     356:	fc 01       	movw	r30, r24
     358:	20 83       	st	Z, r18

0000035a <.Loc.45>:
    PORT |= (1 << PIN21);
     35a:	82 e2       	ldi	r24, 0x22	; 34
     35c:	90 e0       	ldi	r25, 0x00	; 0
     35e:	fc 01       	movw	r30, r24
     360:	20 81       	ld	r18, Z
     362:	82 e2       	ldi	r24, 0x22	; 34
     364:	90 e0       	ldi	r25, 0x00	; 0

00000366 <.Loc.46>:
     366:	20 61       	ori	r18, 0x10	; 16
     368:	fc 01       	movw	r30, r24
     36a:	20 83       	st	Z, r18

0000036c <.Loc.47>:
}
     36c:	00 00       	nop
     36e:	df 91       	pop	r29
     370:	cf 91       	pop	r28
     372:	08 95       	ret

00000374 <naarlinkssrijden>:

void naarlinkssrijden()
{
     374:	cf 93       	push	r28
     376:	df 93       	push	r29
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62

0000037c <.Loc.49>:
    PORT |= (1 << PIN12);
     37c:	82 e2       	ldi	r24, 0x22	; 34
     37e:	90 e0       	ldi	r25, 0x00	; 0
     380:	fc 01       	movw	r30, r24
     382:	20 81       	ld	r18, Z
     384:	82 e2       	ldi	r24, 0x22	; 34
     386:	90 e0       	ldi	r25, 0x00	; 0

00000388 <.Loc.50>:
     388:	20 62       	ori	r18, 0x20	; 32
     38a:	fc 01       	movw	r30, r24
     38c:	20 83       	st	Z, r18

0000038e <.Loc.51>:
    PORT &= ~(1 << PIN11);
     38e:	82 e2       	ldi	r24, 0x22	; 34
     390:	90 e0       	ldi	r25, 0x00	; 0
     392:	fc 01       	movw	r30, r24
     394:	20 81       	ld	r18, Z

00000396 <.Loc.52>:
     396:	82 e2       	ldi	r24, 0x22	; 34
     398:	90 e0       	ldi	r25, 0x00	; 0

0000039a <.Loc.53>:
     39a:	2f 7b       	andi	r18, 0xBF	; 191
     39c:	fc 01       	movw	r30, r24
     39e:	20 83       	st	Z, r18

000003a0 <.Loc.54>:
    PORT |= (1 << PIN22);
     3a0:	82 e2       	ldi	r24, 0x22	; 34
     3a2:	90 e0       	ldi	r25, 0x00	; 0
     3a4:	fc 01       	movw	r30, r24
     3a6:	20 81       	ld	r18, Z
     3a8:	82 e2       	ldi	r24, 0x22	; 34
     3aa:	90 e0       	ldi	r25, 0x00	; 0

000003ac <.Loc.55>:
     3ac:	28 60       	ori	r18, 0x08	; 8
     3ae:	fc 01       	movw	r30, r24
     3b0:	20 83       	st	Z, r18

000003b2 <.Loc.56>:
    PORT &= ~(1 << PIN21);
     3b2:	82 e2       	ldi	r24, 0x22	; 34
     3b4:	90 e0       	ldi	r25, 0x00	; 0
     3b6:	fc 01       	movw	r30, r24
     3b8:	20 81       	ld	r18, Z

000003ba <.Loc.57>:
     3ba:	82 e2       	ldi	r24, 0x22	; 34
     3bc:	90 e0       	ldi	r25, 0x00	; 0

000003be <.Loc.58>:
     3be:	2f 7e       	andi	r18, 0xEF	; 239
     3c0:	fc 01       	movw	r30, r24
     3c2:	20 83       	st	Z, r18

000003c4 <.Loc.59>:
}
     3c4:	00 00       	nop
     3c6:	df 91       	pop	r29
     3c8:	cf 91       	pop	r28
     3ca:	08 95       	ret

000003cc <signaal_geven>:

void signaal_geven()
{
     3cc:	cf 93       	push	r28
     3ce:	df 93       	push	r29
     3d0:	cd b7       	in	r28, 0x3d	; 61
     3d2:	de b7       	in	r29, 0x3e	; 62
     3d4:	a2 97       	sbiw	r28, 0x22	; 34
     3d6:	0f b6       	in	r0, 0x3f	; 63
     3d8:	f8 94       	cli
     3da:	de bf       	out	0x3e, r29	; 62
     3dc:	0f be       	out	0x3f, r0	; 63
     3de:	cd bf       	out	0x3d, r28	; 61

000003e0 <.Loc.61>:
    PORT_LED |= (1<<LED_1);         // LED 1 aan
     3e0:	82 e0       	ldi	r24, 0x02	; 2
     3e2:	91 e0       	ldi	r25, 0x01	; 1
     3e4:	dc 01       	movw	r26, r24
     3e6:	2c 91       	ld	r18, X
     3e8:	82 e0       	ldi	r24, 0x02	; 2
     3ea:	91 e0       	ldi	r25, 0x01	; 1

000003ec <.Loc.62>:
     3ec:	20 61       	ori	r18, 0x10	; 16
     3ee:	fc 01       	movw	r30, r24
     3f0:	20 83       	st	Z, r18

000003f2 <.Loc.63>:
    PORT_LED &= ~(1<<LED_2);        // LED 2 uit
     3f2:	82 e0       	ldi	r24, 0x02	; 2
     3f4:	91 e0       	ldi	r25, 0x01	; 1
     3f6:	dc 01       	movw	r26, r24
     3f8:	2c 91       	ld	r18, X

000003fa <.Loc.64>:
     3fa:	82 e0       	ldi	r24, 0x02	; 2
     3fc:	91 e0       	ldi	r25, 0x01	; 1

000003fe <.Loc.65>:
     3fe:	2f 7d       	andi	r18, 0xDF	; 223
     400:	fc 01       	movw	r30, r24
     402:	20 83       	st	Z, r18

00000404 <.Loc.66>:
    PORT_buzzer |= (1<<buzzer);     // buzzer aan
     404:	82 e0       	ldi	r24, 0x02	; 2
     406:	91 e0       	ldi	r25, 0x01	; 1
     408:	dc 01       	movw	r26, r24
     40a:	2c 91       	ld	r18, X
     40c:	82 e0       	ldi	r24, 0x02	; 2
     40e:	91 e0       	ldi	r25, 0x01	; 1

00000410 <.Loc.67>:
     410:	28 60       	ori	r18, 0x08	; 8
     412:	fc 01       	movw	r30, r24
     414:	20 83       	st	Z, r18
     416:	80 e0       	ldi	r24, 0x00	; 0
     418:	90 e0       	ldi	r25, 0x00	; 0
     41a:	aa ef       	ldi	r26, 0xFA	; 250
     41c:	b3 e4       	ldi	r27, 0x43	; 67
     41e:	89 83       	std	Y+1, r24	; 0x01
     420:	9a 83       	std	Y+2, r25	; 0x02
     422:	ab 83       	std	Y+3, r26	; 0x03
     424:	bc 83       	std	Y+4, r27	; 0x04

00000426 <.LBB12>:

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     426:	20 e0       	ldi	r18, 0x00	; 0
     428:	30 e0       	ldi	r19, 0x00	; 0
     42a:	4a e7       	ldi	r20, 0x7A	; 122
     42c:	55 e4       	ldi	r21, 0x45	; 69
     42e:	69 81       	ldd	r22, Y+1	; 0x01
     430:	7a 81       	ldd	r23, Y+2	; 0x02
     432:	8b 81       	ldd	r24, Y+3	; 0x03
     434:	9c 81       	ldd	r25, Y+4	; 0x04
     436:	0e 94 82 18 	call	0x3104	; 0x3104 <__mulsf3>
     43a:	6b 8b       	std	Y+19, r22	; 0x13
     43c:	7c 8b       	std	Y+20, r23	; 0x14
     43e:	8d 8b       	std	Y+21, r24	; 0x15
     440:	9e 8b       	std	Y+22, r25	; 0x16
     442:	8b 89       	ldd	r24, Y+19	; 0x13
     444:	9c 89       	ldd	r25, Y+20	; 0x14
     446:	ad 89       	ldd	r26, Y+21	; 0x15
     448:	be 89       	ldd	r27, Y+22	; 0x16
     44a:	8d 83       	std	Y+5, r24	; 0x05
     44c:	9e 83       	std	Y+6, r25	; 0x06
     44e:	af 83       	std	Y+7, r26	; 0x07
     450:	b8 87       	std	Y+8, r27	; 0x08

00000452 <.Loc.69>:
	if (__tmp < 1.0)
     452:	20 e0       	ldi	r18, 0x00	; 0
     454:	30 e0       	ldi	r19, 0x00	; 0
     456:	40 e8       	ldi	r20, 0x80	; 128
     458:	5f e3       	ldi	r21, 0x3F	; 63
     45a:	6d 81       	ldd	r22, Y+5	; 0x05
     45c:	7e 81       	ldd	r23, Y+6	; 0x06
     45e:	8f 81       	ldd	r24, Y+7	; 0x07
     460:	98 85       	ldd	r25, Y+8	; 0x08
     462:	0e 94 1e 17 	call	0x2e3c	; 0x2e3c <__cmpsf2>
     466:	88 23       	and	r24, r24
     468:	2c f4       	brge	.+10     	; 0x474 <.L17>

0000046a <.Loc.70>:
		__ticks = 1;
     46a:	81 e0       	ldi	r24, 0x01	; 1
     46c:	90 e0       	ldi	r25, 0x00	; 0
     46e:	9a 87       	std	Y+10, r25	; 0x0a
     470:	89 87       	std	Y+9, r24	; 0x09
     472:	55 c0       	rjmp	.+170    	; 0x51e <.L9>

00000474 <.L17>:
	else if (__tmp > 65535)
     474:	20 e0       	ldi	r18, 0x00	; 0
     476:	3f ef       	ldi	r19, 0xFF	; 255
     478:	4f e7       	ldi	r20, 0x7F	; 127
     47a:	57 e4       	ldi	r21, 0x47	; 71
     47c:	6d 81       	ldd	r22, Y+5	; 0x05
     47e:	7e 81       	ldd	r23, Y+6	; 0x06
     480:	8f 81       	ldd	r24, Y+7	; 0x07
     482:	98 85       	ldd	r25, Y+8	; 0x08
     484:	0e 94 7d 18 	call	0x30fa	; 0x30fa <__gesf2>
     488:	88 23       	and	r24, r24
     48a:	d9 f1       	breq	.+118    	; 0x502 <.L18>
     48c:	d4 f1       	brlt	.+116    	; 0x502 <.L18>

0000048e <.Loc.72>:
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	30 e0       	ldi	r19, 0x00	; 0
     492:	40 e2       	ldi	r20, 0x20	; 32
     494:	51 e4       	ldi	r21, 0x41	; 65
     496:	69 81       	ldd	r22, Y+1	; 0x01
     498:	7a 81       	ldd	r23, Y+2	; 0x02
     49a:	8b 81       	ldd	r24, Y+3	; 0x03
     49c:	9c 81       	ldd	r25, Y+4	; 0x04
     49e:	0e 94 82 18 	call	0x3104	; 0x3104 <__mulsf3>
     4a2:	6f 8b       	std	Y+23, r22	; 0x17
     4a4:	78 8f       	std	Y+24, r23	; 0x18
     4a6:	89 8f       	std	Y+25, r24	; 0x19
     4a8:	9a 8f       	std	Y+26, r25	; 0x1a
     4aa:	8f 89       	ldd	r24, Y+23	; 0x17
     4ac:	98 8d       	ldd	r25, Y+24	; 0x18
     4ae:	a9 8d       	ldd	r26, Y+25	; 0x19
     4b0:	ba 8d       	ldd	r27, Y+26	; 0x1a
     4b2:	8f 87       	std	Y+15, r24	; 0x0f
     4b4:	98 8b       	std	Y+16, r25	; 0x10
     4b6:	a9 8b       	std	Y+17, r26	; 0x11
     4b8:	ba 8b       	std	Y+18, r27	; 0x12

000004ba <.Loc.73>:
     4ba:	6f 85       	ldd	r22, Y+15	; 0x0f
     4bc:	78 89       	ldd	r23, Y+16	; 0x10
     4be:	89 89       	ldd	r24, Y+17	; 0x11
     4c0:	9a 89       	ldd	r25, Y+18	; 0x12
     4c2:	0e 94 9c 17 	call	0x2f38	; 0x2f38 <__fixunssfsi>
     4c6:	6b 8f       	std	Y+27, r22	; 0x1b
     4c8:	7c 8f       	std	Y+28, r23	; 0x1c
     4ca:	8d 8f       	std	Y+29, r24	; 0x1d
     4cc:	9e 8f       	std	Y+30, r25	; 0x1e
     4ce:	ab 8d       	ldd	r26, Y+27	; 0x1b
     4d0:	bc 8d       	ldd	r27, Y+28	; 0x1c
     4d2:	ba 87       	std	Y+10, r27	; 0x0a
     4d4:	a9 87       	std	Y+9, r26	; 0x09

000004d6 <.Loc.74>:
		while(__ticks)
     4d6:	10 c0       	rjmp	.+32     	; 0x4f8 <.L12>

000004d8 <.L13>:
     4d8:	80 e9       	ldi	r24, 0x90	; 144
     4da:	91 e0       	ldi	r25, 0x01	; 1
     4dc:	9c 87       	std	Y+12, r25	; 0x0c
     4de:	8b 87       	std	Y+11, r24	; 0x0b

000004e0 <.LBB14>:
		"sbc %B0,__zero_reg__"    "\n\t"
		"brne 1b"
		: "+d" (__count)
	);
#else
	__asm__ volatile (
     4e0:	8b 85       	ldd	r24, Y+11	; 0x0b
     4e2:	9c 85       	ldd	r25, Y+12	; 0x0c

000004e4 <.L1^B1>:
     4e4:	01 97       	sbiw	r24, 0x01	; 1
     4e6:	f1 f7       	brne	.-4      	; 0x4e4 <.L1^B1>
     4e8:	9c 87       	std	Y+12, r25	; 0x0c
     4ea:	8b 87       	std	Y+11, r24	; 0x0b

000004ec <.Loc.76>:
	...

000004ee <.LBE14>:
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     4ee:	89 85       	ldd	r24, Y+9	; 0x09
     4f0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4f2:	01 97       	sbiw	r24, 0x01	; 1
     4f4:	9a 87       	std	Y+10, r25	; 0x0a
     4f6:	89 87       	std	Y+9, r24	; 0x09

000004f8 <.L12>:
		while(__ticks)
     4f8:	89 85       	ldd	r24, Y+9	; 0x09
     4fa:	9a 85       	ldd	r25, Y+10	; 0x0a
     4fc:	00 97       	sbiw	r24, 0x00	; 0
     4fe:	61 f7       	brne	.-40     	; 0x4d8 <.L13>

00000500 <.Loc.79>:
		}
		return;
     500:	19 c0       	rjmp	.+50     	; 0x534 <.L14>

00000502 <.L18>:
	}
	else
		__ticks = (uint16_t)__tmp;
     502:	6d 81       	ldd	r22, Y+5	; 0x05
     504:	7e 81       	ldd	r23, Y+6	; 0x06
     506:	8f 81       	ldd	r24, Y+7	; 0x07
     508:	98 85       	ldd	r25, Y+8	; 0x08
     50a:	0e 94 9c 17 	call	0x2f38	; 0x2f38 <__fixunssfsi>
     50e:	6f 8f       	std	Y+31, r22	; 0x1f
     510:	78 a3       	std	Y+32, r23	; 0x20
     512:	89 a3       	std	Y+33, r24	; 0x21
     514:	9a a3       	std	Y+34, r25	; 0x22
     516:	ef 8d       	ldd	r30, Y+31	; 0x1f
     518:	f8 a1       	ldd	r31, Y+32	; 0x20
     51a:	fa 87       	std	Y+10, r31	; 0x0a
     51c:	e9 87       	std	Y+9, r30	; 0x09

0000051e <.L9>:
     51e:	89 85       	ldd	r24, Y+9	; 0x09
     520:	9a 85       	ldd	r25, Y+10	; 0x0a
     522:	9e 87       	std	Y+14, r25	; 0x0e
     524:	8d 87       	std	Y+13, r24	; 0x0d

00000526 <.LBB16>:
     526:	8d 85       	ldd	r24, Y+13	; 0x0d
     528:	9e 85       	ldd	r25, Y+14	; 0x0e

0000052a <.L1^B2>:
     52a:	01 97       	sbiw	r24, 0x01	; 1
     52c:	f1 f7       	brne	.-4      	; 0x52a <.L1^B2>
     52e:	9e 87       	std	Y+14, r25	; 0x0e
     530:	8d 87       	std	Y+13, r24	; 0x0d

00000532 <.Loc.82>:
	...

00000534 <.L14>:
    _delay_ms(500);
    PORT_LED |= (1<<LED_2);         // LED 2 aan
     534:	82 e0       	ldi	r24, 0x02	; 2
     536:	91 e0       	ldi	r25, 0x01	; 1
     538:	dc 01       	movw	r26, r24
     53a:	2c 91       	ld	r18, X
     53c:	82 e0       	ldi	r24, 0x02	; 2
     53e:	91 e0       	ldi	r25, 0x01	; 1

00000540 <.Loc.84>:
     540:	20 62       	ori	r18, 0x20	; 32
     542:	fc 01       	movw	r30, r24
     544:	20 83       	st	Z, r18

00000546 <.Loc.85>:
    PORT_LED &= ~(1<<LED_1);        // LED 1 uit
     546:	82 e0       	ldi	r24, 0x02	; 2
     548:	91 e0       	ldi	r25, 0x01	; 1
     54a:	dc 01       	movw	r26, r24
     54c:	2c 91       	ld	r18, X

0000054e <.Loc.86>:
     54e:	82 e0       	ldi	r24, 0x02	; 2
     550:	91 e0       	ldi	r25, 0x01	; 1

00000552 <.Loc.87>:
     552:	2f 7e       	andi	r18, 0xEF	; 239
     554:	fc 01       	movw	r30, r24
     556:	20 83       	st	Z, r18

00000558 <.Loc.88>:
    PORT_buzzer &= ~(1<<buzzer);    // buzzer uit
     558:	82 e0       	ldi	r24, 0x02	; 2
     55a:	91 e0       	ldi	r25, 0x01	; 1
     55c:	dc 01       	movw	r26, r24
     55e:	2c 91       	ld	r18, X

00000560 <.Loc.89>:
     560:	82 e0       	ldi	r24, 0x02	; 2
     562:	91 e0       	ldi	r25, 0x01	; 1

00000564 <.Loc.90>:
     564:	27 7f       	andi	r18, 0xF7	; 247
     566:	fc 01       	movw	r30, r24
     568:	20 83       	st	Z, r18

0000056a <.Loc.91>:
}
     56a:	00 00       	nop
     56c:	a2 96       	adiw	r28, 0x22	; 34
     56e:	0f b6       	in	r0, 0x3f	; 63
     570:	f8 94       	cli
     572:	de bf       	out	0x3e, r29	; 62
     574:	0f be       	out	0x3f, r0	; 63
     576:	cd bf       	out	0x3d, r28	; 61
     578:	df 91       	pop	r29
     57a:	cf 91       	pop	r28
     57c:	08 95       	ret

0000057e <h_bridgeR_set_percentage>:

void h_bridgeR_set_percentage(signed char percentage)
{
     57e:	0f 93       	push	r16
     580:	1f 93       	push	r17
     582:	cf 93       	push	r28
     584:	df 93       	push	r29
     586:	00 d0       	rcall	.+0      	; 0x588 <L0^A>

00000588 <L0^A>:
     588:	0f 92       	push	r0
     58a:	0f 92       	push	r0
     58c:	cd b7       	in	r28, 0x3d	; 61
     58e:	de b7       	in	r29, 0x3e	; 62
     590:	89 83       	std	Y+1, r24	; 0x01

00000592 <.Loc.93>:
	if (percentage >= 0 && percentage <= 100)
     592:	89 81       	ldd	r24, Y+1	; 0x01
     594:	88 23       	and	r24, r24
     596:	3c f1       	brlt	.+78     	; 0x5e6 <.L21>

00000598 <.Loc.94>:
     598:	89 81       	ldd	r24, Y+1	; 0x01
     59a:	84 36       	cpi	r24, 0x64	; 100
     59c:	09 f0       	breq	.+2      	; 0x5a0 <.Loc.95>

0000059e <L0^A>:
     59e:	1c f5       	brge	.+70     	; 0x5e6 <.L21>

000005a0 <.Loc.95>:
	{
			OCR1A = (65536*percentage)/100;
     5a0:	89 81       	ldd	r24, Y+1	; 0x01
     5a2:	08 2e       	mov	r0, r24
     5a4:	00 0c       	add	r0, r0
     5a6:	99 0b       	sbc	r25, r25
     5a8:	aa 0b       	sbc	r26, r26
     5aa:	bb 0b       	sbc	r27, r27
     5ac:	ac 01       	movw	r20, r24
     5ae:	33 27       	eor	r19, r19
     5b0:	22 27       	eor	r18, r18
     5b2:	2a 83       	std	Y+2, r18	; 0x02
     5b4:	3b 83       	std	Y+3, r19	; 0x03
     5b6:	4c 83       	std	Y+4, r20	; 0x04
     5b8:	5d 83       	std	Y+5, r21	; 0x05

000005ba <.Loc.96>:
     5ba:	04 e6       	ldi	r16, 0x64	; 100
     5bc:	10 e0       	ldi	r17, 0x00	; 0
     5be:	20 e0       	ldi	r18, 0x00	; 0
     5c0:	30 e0       	ldi	r19, 0x00	; 0
     5c2:	6a 81       	ldd	r22, Y+2	; 0x02
     5c4:	7b 81       	ldd	r23, Y+3	; 0x03
     5c6:	8c 81       	ldd	r24, Y+4	; 0x04
     5c8:	9d 81       	ldd	r25, Y+5	; 0x05
     5ca:	a9 01       	movw	r20, r18
     5cc:	98 01       	movw	r18, r16
     5ce:	0e 94 c6 16 	call	0x2d8c	; 0x2d8c <__divmodsi4>
     5d2:	da 01       	movw	r26, r20
     5d4:	c9 01       	movw	r24, r18
     5d6:	ac 01       	movw	r20, r24
     5d8:	bd 01       	movw	r22, r26

000005da <.Loc.97>:
     5da:	88 e8       	ldi	r24, 0x88	; 136
     5dc:	90 e0       	ldi	r25, 0x00	; 0

000005de <.Loc.98>:
     5de:	9a 01       	movw	r18, r20
     5e0:	fc 01       	movw	r30, r24
     5e2:	31 83       	std	Z+1, r19	; 0x01
     5e4:	20 83       	st	Z, r18

000005e6 <.L21>:
	}
}
     5e6:	00 00       	nop
     5e8:	0f 90       	pop	r0
     5ea:	0f 90       	pop	r0
     5ec:	0f 90       	pop	r0
     5ee:	0f 90       	pop	r0
     5f0:	0f 90       	pop	r0
     5f2:	df 91       	pop	r29
     5f4:	cf 91       	pop	r28
     5f6:	1f 91       	pop	r17
     5f8:	0f 91       	pop	r16
     5fa:	08 95       	ret

000005fc <h_bridgeL_set_percentage>:

void h_bridgeL_set_percentage(signed char percentage)
{
     5fc:	0f 93       	push	r16
     5fe:	1f 93       	push	r17
     600:	cf 93       	push	r28
     602:	df 93       	push	r29
     604:	00 d0       	rcall	.+0      	; 0x606 <L0^A>

00000606 <L0^A>:
     606:	0f 92       	push	r0
     608:	0f 92       	push	r0
     60a:	cd b7       	in	r28, 0x3d	; 61
     60c:	de b7       	in	r29, 0x3e	; 62
     60e:	89 83       	std	Y+1, r24	; 0x01

00000610 <.Loc.101>:
	if (percentage >= 0 && percentage <= 100)
     610:	89 81       	ldd	r24, Y+1	; 0x01
     612:	88 23       	and	r24, r24
     614:	3c f1       	brlt	.+78     	; 0x664 <.L24>

00000616 <.Loc.102>:
     616:	89 81       	ldd	r24, Y+1	; 0x01
     618:	84 36       	cpi	r24, 0x64	; 100
     61a:	09 f0       	breq	.+2      	; 0x61e <.Loc.103>

0000061c <L0^A>:
     61c:	1c f5       	brge	.+70     	; 0x664 <.L24>

0000061e <.Loc.103>:
	{
			OCR3A = (65536*percentage)/100;
     61e:	89 81       	ldd	r24, Y+1	; 0x01
     620:	08 2e       	mov	r0, r24
     622:	00 0c       	add	r0, r0
     624:	99 0b       	sbc	r25, r25
     626:	aa 0b       	sbc	r26, r26
     628:	bb 0b       	sbc	r27, r27
     62a:	ac 01       	movw	r20, r24
     62c:	33 27       	eor	r19, r19
     62e:	22 27       	eor	r18, r18
     630:	2a 83       	std	Y+2, r18	; 0x02
     632:	3b 83       	std	Y+3, r19	; 0x03
     634:	4c 83       	std	Y+4, r20	; 0x04
     636:	5d 83       	std	Y+5, r21	; 0x05

00000638 <.Loc.104>:
     638:	04 e6       	ldi	r16, 0x64	; 100
     63a:	10 e0       	ldi	r17, 0x00	; 0
     63c:	20 e0       	ldi	r18, 0x00	; 0
     63e:	30 e0       	ldi	r19, 0x00	; 0
     640:	6a 81       	ldd	r22, Y+2	; 0x02
     642:	7b 81       	ldd	r23, Y+3	; 0x03
     644:	8c 81       	ldd	r24, Y+4	; 0x04
     646:	9d 81       	ldd	r25, Y+5	; 0x05
     648:	a9 01       	movw	r20, r18
     64a:	98 01       	movw	r18, r16
     64c:	0e 94 c6 16 	call	0x2d8c	; 0x2d8c <__divmodsi4>
     650:	da 01       	movw	r26, r20
     652:	c9 01       	movw	r24, r18
     654:	ac 01       	movw	r20, r24
     656:	bd 01       	movw	r22, r26

00000658 <.Loc.105>:
     658:	88 e9       	ldi	r24, 0x98	; 152
     65a:	90 e0       	ldi	r25, 0x00	; 0

0000065c <.Loc.106>:
     65c:	9a 01       	movw	r18, r20
     65e:	fc 01       	movw	r30, r24
     660:	31 83       	std	Z+1, r19	; 0x01
     662:	20 83       	st	Z, r18

00000664 <.L24>:
	}
}
     664:	00 00       	nop
     666:	0f 90       	pop	r0
     668:	0f 90       	pop	r0
     66a:	0f 90       	pop	r0
     66c:	0f 90       	pop	r0
     66e:	0f 90       	pop	r0
     670:	df 91       	pop	r29
     672:	cf 91       	pop	r28
     674:	1f 91       	pop	r17
     676:	0f 91       	pop	r16
     678:	08 95       	ret

0000067a <__vector_20>:

//H-brug PWMR
ISR(TIMER1_OVF_vect)
{
     67a:	1f 92       	push	r1
     67c:	0f 92       	push	r0
     67e:	0f b6       	in	r0, 0x3f	; 63
     680:	0f 92       	push	r0
     682:	11 24       	eor	r1, r1
     684:	0b b6       	in	r0, 0x3b	; 59
     686:	0f 92       	push	r0
     688:	2f 93       	push	r18
     68a:	3f 93       	push	r19
     68c:	8f 93       	push	r24
     68e:	9f 93       	push	r25
     690:	ef 93       	push	r30
     692:	ff 93       	push	r31
     694:	cf 93       	push	r28
     696:	df 93       	push	r29
     698:	cd b7       	in	r28, 0x3d	; 61
     69a:	de b7       	in	r29, 0x3e	; 62

0000069c <.Loc.109>:
    PORT ^= (1 << PEN1);
     69c:	82 e2       	ldi	r24, 0x22	; 34
     69e:	90 e0       	ldi	r25, 0x00	; 0
     6a0:	fc 01       	movw	r30, r24
     6a2:	30 81       	ld	r19, Z
     6a4:	82 e2       	ldi	r24, 0x22	; 34
     6a6:	90 e0       	ldi	r25, 0x00	; 0

000006a8 <.Loc.110>:
     6a8:	20 e8       	ldi	r18, 0x80	; 128
     6aa:	23 27       	eor	r18, r19
     6ac:	fc 01       	movw	r30, r24
     6ae:	20 83       	st	Z, r18

000006b0 <.Loc.111>:
}
     6b0:	00 00       	nop
     6b2:	df 91       	pop	r29
     6b4:	cf 91       	pop	r28
     6b6:	ff 91       	pop	r31
     6b8:	ef 91       	pop	r30
     6ba:	9f 91       	pop	r25
     6bc:	8f 91       	pop	r24
     6be:	3f 91       	pop	r19
     6c0:	2f 91       	pop	r18
     6c2:	0f 90       	pop	r0
     6c4:	0b be       	out	0x3b, r0	; 59
     6c6:	0f 90       	pop	r0
     6c8:	0f be       	out	0x3f, r0	; 63
     6ca:	0f 90       	pop	r0
     6cc:	1f 90       	pop	r1
     6ce:	18 95       	reti

000006d0 <__vector_17>:
//H-brug PWMR
ISR(TIMER1_COMPA_vect)
{
     6d0:	1f 92       	push	r1
     6d2:	0f 92       	push	r0
     6d4:	0f b6       	in	r0, 0x3f	; 63
     6d6:	0f 92       	push	r0
     6d8:	11 24       	eor	r1, r1
     6da:	0b b6       	in	r0, 0x3b	; 59
     6dc:	0f 92       	push	r0
     6de:	2f 93       	push	r18
     6e0:	8f 93       	push	r24
     6e2:	9f 93       	push	r25
     6e4:	ef 93       	push	r30
     6e6:	ff 93       	push	r31
     6e8:	cf 93       	push	r28
     6ea:	df 93       	push	r29
     6ec:	cd b7       	in	r28, 0x3d	; 61
     6ee:	de b7       	in	r29, 0x3e	; 62

000006f0 <.Loc.113>:
    PORT |= (1 << PEN1);
     6f0:	82 e2       	ldi	r24, 0x22	; 34
     6f2:	90 e0       	ldi	r25, 0x00	; 0
     6f4:	fc 01       	movw	r30, r24
     6f6:	20 81       	ld	r18, Z
     6f8:	82 e2       	ldi	r24, 0x22	; 34
     6fa:	90 e0       	ldi	r25, 0x00	; 0

000006fc <.Loc.114>:
     6fc:	20 68       	ori	r18, 0x80	; 128
     6fe:	fc 01       	movw	r30, r24
     700:	20 83       	st	Z, r18

00000702 <.Loc.115>:
}
     702:	00 00       	nop
     704:	df 91       	pop	r29
     706:	cf 91       	pop	r28
     708:	ff 91       	pop	r31
     70a:	ef 91       	pop	r30
     70c:	9f 91       	pop	r25
     70e:	8f 91       	pop	r24
     710:	2f 91       	pop	r18
     712:	0f 90       	pop	r0
     714:	0b be       	out	0x3b, r0	; 59
     716:	0f 90       	pop	r0
     718:	0f be       	out	0x3f, r0	; 63
     71a:	0f 90       	pop	r0
     71c:	1f 90       	pop	r1
     71e:	18 95       	reti

00000720 <__vector_35>:

//H-brug PWML
ISR(TIMER3_OVF_vect)
{
     720:	1f 92       	push	r1
     722:	0f 92       	push	r0
     724:	0f b6       	in	r0, 0x3f	; 63
     726:	0f 92       	push	r0
     728:	11 24       	eor	r1, r1
     72a:	0b b6       	in	r0, 0x3b	; 59
     72c:	0f 92       	push	r0
     72e:	2f 93       	push	r18
     730:	3f 93       	push	r19
     732:	8f 93       	push	r24
     734:	9f 93       	push	r25
     736:	ef 93       	push	r30
     738:	ff 93       	push	r31
     73a:	cf 93       	push	r28
     73c:	df 93       	push	r29
     73e:	cd b7       	in	r28, 0x3d	; 61
     740:	de b7       	in	r29, 0x3e	; 62

00000742 <.Loc.117>:
    PORT ^= (1 << PEN2);
     742:	82 e2       	ldi	r24, 0x22	; 34
     744:	90 e0       	ldi	r25, 0x00	; 0
     746:	fc 01       	movw	r30, r24
     748:	30 81       	ld	r19, Z
     74a:	82 e2       	ldi	r24, 0x22	; 34
     74c:	90 e0       	ldi	r25, 0x00	; 0

0000074e <.Loc.118>:
     74e:	24 e0       	ldi	r18, 0x04	; 4
     750:	23 27       	eor	r18, r19
     752:	fc 01       	movw	r30, r24
     754:	20 83       	st	Z, r18

00000756 <.Loc.119>:
}
     756:	00 00       	nop
     758:	df 91       	pop	r29
     75a:	cf 91       	pop	r28
     75c:	ff 91       	pop	r31
     75e:	ef 91       	pop	r30
     760:	9f 91       	pop	r25
     762:	8f 91       	pop	r24
     764:	3f 91       	pop	r19
     766:	2f 91       	pop	r18
     768:	0f 90       	pop	r0
     76a:	0b be       	out	0x3b, r0	; 59
     76c:	0f 90       	pop	r0
     76e:	0f be       	out	0x3f, r0	; 63
     770:	0f 90       	pop	r0
     772:	1f 90       	pop	r1
     774:	18 95       	reti

00000776 <__vector_32>:
//H-brug PWML
ISR(TIMER3_COMPA_vect)
{
     776:	1f 92       	push	r1
     778:	0f 92       	push	r0
     77a:	0f b6       	in	r0, 0x3f	; 63
     77c:	0f 92       	push	r0
     77e:	11 24       	eor	r1, r1
     780:	0b b6       	in	r0, 0x3b	; 59
     782:	0f 92       	push	r0
     784:	2f 93       	push	r18
     786:	8f 93       	push	r24
     788:	9f 93       	push	r25
     78a:	ef 93       	push	r30
     78c:	ff 93       	push	r31
     78e:	cf 93       	push	r28
     790:	df 93       	push	r29
     792:	cd b7       	in	r28, 0x3d	; 61
     794:	de b7       	in	r29, 0x3e	; 62

00000796 <.Loc.121>:
    PORT |= (1 << PEN2);
     796:	82 e2       	ldi	r24, 0x22	; 34
     798:	90 e0       	ldi	r25, 0x00	; 0
     79a:	fc 01       	movw	r30, r24
     79c:	20 81       	ld	r18, Z
     79e:	82 e2       	ldi	r24, 0x22	; 34
     7a0:	90 e0       	ldi	r25, 0x00	; 0

000007a2 <.Loc.122>:
     7a2:	24 60       	ori	r18, 0x04	; 4
     7a4:	fc 01       	movw	r30, r24
     7a6:	20 83       	st	Z, r18

000007a8 <.Loc.123>:
}
     7a8:	00 00       	nop
     7aa:	df 91       	pop	r29
     7ac:	cf 91       	pop	r28
     7ae:	ff 91       	pop	r31
     7b0:	ef 91       	pop	r30
     7b2:	9f 91       	pop	r25
     7b4:	8f 91       	pop	r24
     7b6:	2f 91       	pop	r18
     7b8:	0f 90       	pop	r0
     7ba:	0b be       	out	0x3b, r0	; 59
     7bc:	0f 90       	pop	r0
     7be:	0f be       	out	0x3f, r0	; 63
     7c0:	0f 90       	pop	r0
     7c2:	1f 90       	pop	r1
     7c4:	18 95       	reti

000007c6 <__vector_23>:

//Timer Noodtoestand
ISR(TIMER0_OVF_vect)
{
     7c6:	1f 92       	push	r1
     7c8:	0f 92       	push	r0
     7ca:	0f b6       	in	r0, 0x3f	; 63
     7cc:	0f 92       	push	r0
     7ce:	11 24       	eor	r1, r1
     7d0:	8f 93       	push	r24
     7d2:	9f 93       	push	r25
     7d4:	cf 93       	push	r28
     7d6:	df 93       	push	r29
     7d8:	cd b7       	in	r28, 0x3d	; 61
     7da:	de b7       	in	r29, 0x3e	; 62

000007dc <.Loc.125>:
    timerteller ++;
     7dc:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <timerteller>
     7e0:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <timerteller+0x1>
     7e4:	01 96       	adiw	r24, 0x01	; 1
     7e6:	90 93 27 02 	sts	0x0227, r25	; 0x800227 <timerteller+0x1>
     7ea:	80 93 26 02 	sts	0x0226, r24	; 0x800226 <timerteller>

000007ee <.Loc.126>:
}
     7ee:	00 00       	nop
     7f0:	df 91       	pop	r29
     7f2:	cf 91       	pop	r28
     7f4:	9f 91       	pop	r25
     7f6:	8f 91       	pop	r24
     7f8:	0f 90       	pop	r0
     7fa:	0f be       	out	0x3f, r0	; 63
     7fc:	0f 90       	pop	r0
     7fe:	1f 90       	pop	r1
     800:	18 95       	reti

00000802 <__vector_45>:

//Timer Bak detectie
ISR(TIMER4_OVF_vect)
{
     802:	1f 92       	push	r1
     804:	0f 92       	push	r0
     806:	0f b6       	in	r0, 0x3f	; 63
     808:	0f 92       	push	r0
     80a:	11 24       	eor	r1, r1
     80c:	0b b6       	in	r0, 0x3b	; 59
     80e:	0f 92       	push	r0
     810:	8f 93       	push	r24
     812:	9f 93       	push	r25
     814:	ef 93       	push	r30
     816:	ff 93       	push	r31
     818:	cf 93       	push	r28
     81a:	df 93       	push	r29
     81c:	cd b7       	in	r28, 0x3d	; 61
     81e:	de b7       	in	r29, 0x3e	; 62

00000820 <.Loc.128>:
    if(timertellerbak >= 2)
     820:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <timertellerbak>
     824:	90 91 29 02 	lds	r25, 0x0229	; 0x800229 <timertellerbak+0x1>

00000828 <.Loc.129>:
     828:	81 30       	cpi	r24, 0x01	; 1
     82a:	91 05       	cpc	r25, r1
     82c:	69 f0       	breq	.+26     	; 0x848 <.L31>
     82e:	64 f0       	brlt	.+24     	; 0x848 <.L31>

00000830 <.Loc.130>:
    {
        timertellerbak = 0;
     830:	10 92 29 02 	sts	0x0229, r1	; 0x800229 <timertellerbak+0x1>
     834:	10 92 28 02 	sts	0x0228, r1	; 0x800228 <timertellerbak>

00000838 <.Loc.131>:
        bakvar = 0;
     838:	10 92 2b 02 	sts	0x022B, r1	; 0x80022b <bakvar+0x1>
     83c:	10 92 2a 02 	sts	0x022A, r1	; 0x80022a <bakvar>

00000840 <.Loc.132>:
        TCCR4B = 0;
     840:	81 ea       	ldi	r24, 0xA1	; 161
     842:	90 e0       	ldi	r25, 0x00	; 0

00000844 <.Loc.133>:
     844:	fc 01       	movw	r30, r24
     846:	10 82       	st	Z, r1

00000848 <.L31>:
    }
    timertellerbak ++;
     848:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <timertellerbak>
     84c:	90 91 29 02 	lds	r25, 0x0229	; 0x800229 <timertellerbak+0x1>
     850:	01 96       	adiw	r24, 0x01	; 1
     852:	90 93 29 02 	sts	0x0229, r25	; 0x800229 <timertellerbak+0x1>
     856:	80 93 28 02 	sts	0x0228, r24	; 0x800228 <timertellerbak>

0000085a <.Loc.135>:
}
     85a:	00 00       	nop
     85c:	df 91       	pop	r29
     85e:	cf 91       	pop	r28
     860:	ff 91       	pop	r31
     862:	ef 91       	pop	r30
     864:	9f 91       	pop	r25
     866:	8f 91       	pop	r24
     868:	0f 90       	pop	r0
     86a:	0b be       	out	0x3b, r0	; 59
     86c:	0f 90       	pop	r0
     86e:	0f be       	out	0x3f, r0	; 63
     870:	0f 90       	pop	r0
     872:	1f 90       	pop	r1
     874:	18 95       	reti

00000876 <main>:
7: Noodknop ingedrukt
8: Noodknop uitgedrukt
*/

int main(void)
{
     876:	0f 93       	push	r16
     878:	1f 93       	push	r17
     87a:	cf 93       	push	r28
     87c:	df 93       	push	r29
     87e:	cd b7       	in	r28, 0x3d	; 61
     880:	de b7       	in	r29, 0x3e	; 62
     882:	c2 5b       	subi	r28, 0xB2	; 178
     884:	d1 09       	sbc	r29, r1
     886:	0f b6       	in	r0, 0x3f	; 63
     888:	f8 94       	cli
     88a:	de bf       	out	0x3e, r29	; 62
     88c:	0f be       	out	0x3f, r0	; 63
     88e:	cd bf       	out	0x3d, r28	; 61

00000890 <.Loc.1>:
    init();
     890:	0e 94 b1 0c 	call	0x1962	; 0x1962 <init>

00000894 <.Loc.2>:
    init_display_meneer();
     894:	0e 94 10 15 	call	0x2a20	; 0x2a20 <init_display_meneer>

00000898 <.Loc.3>:
    initultrasoon();
     898:	0e 94 a6 0d 	call	0x1b4c	; 0x1b4c <initultrasoon>

0000089c <.Loc.4>:
    int waardeachter = 0;
     89c:	1e 82       	std	Y+6, r1	; 0x06
     89e:	1d 82       	std	Y+5, r1	; 0x05

000008a0 <.Loc.5>:
    int waardevoor;

    int toestand = 0;
     8a0:	1a 82       	std	Y+2, r1	; 0x02
     8a2:	19 82       	std	Y+1, r1	; 0x01

000008a4 <.Loc.6>:
    int toestandvolgen = 0;
     8a4:	1c 82       	std	Y+4, r1	; 0x04
     8a6:	1b 82       	std	Y+3, r1	; 0x03

000008a8 <.L101>:

    while(1)
    {
        //waardeachter = achterGetDistance();
        waardevoor = voorGetDistance();
     8a8:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <voorGetDistance>
     8ac:	98 87       	std	Y+8, r25	; 0x08
     8ae:	8f 83       	std	Y+7, r24	; 0x07

000008b0 <.Loc.8>:
        display_getal(waardevoor);
     8b0:	8f 81       	ldd	r24, Y+7	; 0x07
     8b2:	98 85       	ldd	r25, Y+8	; 0x08
     8b4:	0e 94 d9 15 	call	0x2bb2	; 0x2bb2 <display_getal>

000008b8 <.Loc.9>:

        if(Bluetooth_Getal == 2)//Bluetooth verbroken
     8b8:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <Bluetooth_Getal>
     8bc:	90 91 21 02 	lds	r25, 0x0221	; 0x800221 <Bluetooth_Getal+0x1>

000008c0 <.Loc.10>:
     8c0:	82 30       	cpi	r24, 0x02	; 2
     8c2:	91 05       	cpc	r25, r1
     8c4:	11 f4       	brne	.+4      	; 0x8ca <.L2>

000008c6 <.Loc.11>:
        {
            toestand = 0;
     8c6:	1a 82       	std	Y+2, r1	; 0x02
     8c8:	19 82       	std	Y+1, r1	; 0x01

000008ca <.L2>:
        }
        if(Bluetooth_Getal == 6)//Uitknop ingedrukt
     8ca:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <Bluetooth_Getal>
     8ce:	90 91 21 02 	lds	r25, 0x0221	; 0x800221 <Bluetooth_Getal+0x1>

000008d2 <.Loc.13>:
     8d2:	86 30       	cpi	r24, 0x06	; 6
     8d4:	91 05       	cpc	r25, r1
     8d6:	21 f4       	brne	.+8      	; 0x8e0 <.L3>

000008d8 <.Loc.14>:
        {
            toestand = 1;
     8d8:	81 e0       	ldi	r24, 0x01	; 1
     8da:	90 e0       	ldi	r25, 0x00	; 0
     8dc:	9a 83       	std	Y+2, r25	; 0x02
     8de:	89 83       	std	Y+1, r24	; 0x01

000008e0 <.L3>:
        }
        if(Bluetooth_Getal == 7)// || (Noodknopport & (1<<Noodknoppin)) == 0))
     8e0:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <Bluetooth_Getal>
     8e4:	90 91 21 02 	lds	r25, 0x0221	; 0x800221 <Bluetooth_Getal+0x1>

000008e8 <.Loc.16>:
     8e8:	87 30       	cpi	r24, 0x07	; 7
     8ea:	91 05       	cpc	r25, r1
     8ec:	21 f4       	brne	.+8      	; 0x8f6 <.L4>

000008ee <.Loc.17>:
        {
            toestand = 99;
     8ee:	83 e6       	ldi	r24, 0x63	; 99
     8f0:	90 e0       	ldi	r25, 0x00	; 0
     8f2:	9a 83       	std	Y+2, r25	; 0x02
     8f4:	89 83       	std	Y+1, r24	; 0x01

000008f6 <.L4>:
        }
        if((toestand >= 3) && (toestand != 99) && (((IRregister & (1 << IRbaklinks)) == 0) || ((IRregister & (1 << IRbakrechts)) == 0)))//Plantenbak gedetecteerd
     8f6:	89 81       	ldd	r24, Y+1	; 0x01
     8f8:	9a 81       	ldd	r25, Y+2	; 0x02
     8fa:	82 30       	cpi	r24, 0x02	; 2
     8fc:	91 05       	cpc	r25, r1
     8fe:	a9 f1       	breq	.+106    	; 0x96a <.L5>
     900:	a4 f1       	brlt	.+104    	; 0x96a <.L5>

00000902 <.Loc.19>:
     902:	89 81       	ldd	r24, Y+1	; 0x01
     904:	9a 81       	ldd	r25, Y+2	; 0x02
     906:	83 36       	cpi	r24, 0x63	; 99
     908:	91 05       	cpc	r25, r1
     90a:	79 f1       	breq	.+94     	; 0x96a <.L5>

0000090c <.Loc.20>:
     90c:	86 e2       	ldi	r24, 0x26	; 38
     90e:	90 e0       	ldi	r25, 0x00	; 0
     910:	dc 01       	movw	r26, r24
     912:	8c 91       	ld	r24, X

00000914 <.Loc.21>:
     914:	88 2f       	mov	r24, r24
     916:	90 e0       	ldi	r25, 0x00	; 0
     918:	80 72       	andi	r24, 0x20	; 32
     91a:	99 27       	eor	r25, r25

0000091c <.Loc.22>:
     91c:	00 97       	sbiw	r24, 0x00	; 0
     91e:	51 f0       	breq	.+20     	; 0x934 <.L6>

00000920 <.Loc.23>:
     920:	86 e2       	ldi	r24, 0x26	; 38
     922:	90 e0       	ldi	r25, 0x00	; 0
     924:	fc 01       	movw	r30, r24
     926:	80 81       	ld	r24, Z

00000928 <.Loc.24>:
     928:	88 2f       	mov	r24, r24
     92a:	90 e0       	ldi	r25, 0x00	; 0
     92c:	80 71       	andi	r24, 0x10	; 16
     92e:	99 27       	eor	r25, r25

00000930 <.Loc.25>:
     930:	00 97       	sbiw	r24, 0x00	; 0
     932:	d9 f4       	brne	.+54     	; 0x96a <.L5>

00000934 <.L6>:
        {
            if(bakvar != 1)
     934:	80 91 2a 02 	lds	r24, 0x022A	; 0x80022a <bakvar>
     938:	90 91 2b 02 	lds	r25, 0x022B	; 0x80022b <bakvar+0x1>

0000093c <.Loc.27>:
     93c:	81 30       	cpi	r24, 0x01	; 1
     93e:	91 05       	cpc	r25, r1
     940:	81 f0       	breq	.+32     	; 0x962 <.L7>

00000942 <.Loc.28>:
            {
                bakvar = 1;
     942:	81 e0       	ldi	r24, 0x01	; 1
     944:	90 e0       	ldi	r25, 0x00	; 0
     946:	90 93 2b 02 	sts	0x022B, r25	; 0x80022b <bakvar+0x1>
     94a:	80 93 2a 02 	sts	0x022A, r24	; 0x80022a <bakvar>

0000094e <.Loc.29>:
                TCCR4B = (1 << CS42) | (0 << CS41) | (0 << CS40);
     94e:	81 ea       	ldi	r24, 0xA1	; 161
     950:	90 e0       	ldi	r25, 0x00	; 0

00000952 <.Loc.30>:
     952:	24 e0       	ldi	r18, 0x04	; 4
     954:	dc 01       	movw	r26, r24
     956:	2c 93       	st	X, r18

00000958 <.Loc.31>:
                toestand = 8;
     958:	88 e0       	ldi	r24, 0x08	; 8
     95a:	90 e0       	ldi	r25, 0x00	; 0
     95c:	9a 83       	std	Y+2, r25	; 0x02
     95e:	89 83       	std	Y+1, r24	; 0x01
     960:	04 c0       	rjmp	.+8      	; 0x96a <.L5>

00000962 <.L7>:
            }
            else
            {
                toestand = 4;
     962:	84 e0       	ldi	r24, 0x04	; 4
     964:	90 e0       	ldi	r25, 0x00	; 0
     966:	9a 83       	std	Y+2, r25	; 0x02
     968:	89 83       	std	Y+1, r24	; 0x01

0000096a <.L5>:
            }
        }
        if((toestand >= 3) && (toestand != 99) && (waardevoor <= 80))//Voorultrasoon ziet object
     96a:	89 81       	ldd	r24, Y+1	; 0x01
     96c:	9a 81       	ldd	r25, Y+2	; 0x02
     96e:	82 30       	cpi	r24, 0x02	; 2
     970:	91 05       	cpc	r25, r1
     972:	81 f0       	breq	.+32     	; 0x994 <.L8>
     974:	7c f0       	brlt	.+30     	; 0x994 <.L8>

00000976 <.Loc.34>:
     976:	89 81       	ldd	r24, Y+1	; 0x01
     978:	9a 81       	ldd	r25, Y+2	; 0x02
     97a:	83 36       	cpi	r24, 0x63	; 99
     97c:	91 05       	cpc	r25, r1
     97e:	51 f0       	breq	.+20     	; 0x994 <.L8>

00000980 <.Loc.35>:
     980:	8f 81       	ldd	r24, Y+7	; 0x07
     982:	98 85       	ldd	r25, Y+8	; 0x08
     984:	80 35       	cpi	r24, 0x50	; 80
     986:	91 05       	cpc	r25, r1
     988:	09 f0       	breq	.+2      	; 0x98c <.Loc.36>

0000098a <L0^A>:
     98a:	24 f4       	brge	.+8      	; 0x994 <.L8>

0000098c <.Loc.36>:
        {
            toestand = 9;
     98c:	89 e0       	ldi	r24, 0x09	; 9
     98e:	90 e0       	ldi	r25, 0x00	; 0
     990:	9a 83       	std	Y+2, r25	; 0x02
     992:	89 83       	std	Y+1, r24	; 0x01

00000994 <.L8>:
//        }
//        if((toestand >= 3) && ((IRregister & (1 << IRonderlinks)) && (IRregister & (1 << IRonderrechts))))
//        {
//            toestand = 10;
//        }
        switch(toestand)
     994:	89 81       	ldd	r24, Y+1	; 0x01
     996:	9a 81       	ldd	r25, Y+2	; 0x02
     998:	09 2e       	mov	r0, r25
     99a:	00 0c       	add	r0, r0
     99c:	aa 0b       	sbc	r26, r26
     99e:	bb 0b       	sbc	r27, r27
     9a0:	83 36       	cpi	r24, 0x63	; 99
     9a2:	91 05       	cpc	r25, r1
     9a4:	a1 05       	cpc	r26, r1
     9a6:	b1 05       	cpc	r27, r1
     9a8:	11 f0       	breq	.+4      	; 0x9ae <L0^A+0x2>

000009aa <L0^A>:
     9aa:	08 f0       	brcs	.+2      	; 0x9ae <L0^A+0x2>

000009ac <L0^A>:
     9ac:	7d cf       	rjmp	.-262    	; 0x8a8 <.L101>
     9ae:	fc 01       	movw	r30, r24
     9b0:	88 27       	eor	r24, r24
     9b2:	ef 50       	subi	r30, 0x0F	; 15
     9b4:	f7 4e       	sbci	r31, 0xE7	; 231
     9b6:	8f 4f       	sbci	r24, 0xFF	; 255
     9b8:	0c 94 e5 16 	jmp	0x2dca	; 0x2dca <__tablejump2__>

000009bc <.L10>:
        {
        case 99://Noodtoestand
            h_bridgeR_set_percentage(snelheiduit);//motoren uit
     9bc:	83 e6       	ldi	r24, 0x63	; 99
     9be:	0e 94 bf 02 	call	0x57e	; 0x57e <h_bridgeR_set_percentage>

000009c2 <.Loc.39>:
            h_bridgeL_set_percentage(snelheiduit);
     9c2:	83 e6       	ldi	r24, 0x63	; 99
     9c4:	0e 94 fe 02 	call	0x5fc	; 0x5fc <h_bridgeL_set_percentage>

000009c8 <.Loc.40>:
            if(timerteller <= 30)
     9c8:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <timerteller>
     9cc:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <timerteller+0x1>

000009d0 <.Loc.41>:
     9d0:	8e 31       	cpi	r24, 0x1E	; 30
     9d2:	91 05       	cpc	r25, r1
     9d4:	09 f0       	breq	.+2      	; 0x9d8 <.Loc.42>

000009d6 <L0^A>:
     9d6:	dc f4       	brge	.+54     	; 0xa0e <.L25>

000009d8 <.Loc.42>:
            {
                PORT_buzzer &= ~(1<<buzzer);//buzzer
     9d8:	82 e0       	ldi	r24, 0x02	; 2
     9da:	91 e0       	ldi	r25, 0x01	; 1
     9dc:	fc 01       	movw	r30, r24
     9de:	20 81       	ld	r18, Z

000009e0 <.Loc.43>:
     9e0:	82 e0       	ldi	r24, 0x02	; 2
     9e2:	91 e0       	ldi	r25, 0x01	; 1

000009e4 <.Loc.44>:
     9e4:	27 7f       	andi	r18, 0xF7	; 247
     9e6:	dc 01       	movw	r26, r24
     9e8:	2c 93       	st	X, r18

000009ea <.Loc.45>:
                PORT_LED &= ~(1<<LED_1);//LED
     9ea:	82 e0       	ldi	r24, 0x02	; 2
     9ec:	91 e0       	ldi	r25, 0x01	; 1
     9ee:	fc 01       	movw	r30, r24
     9f0:	20 81       	ld	r18, Z

000009f2 <.Loc.46>:
     9f2:	82 e0       	ldi	r24, 0x02	; 2
     9f4:	91 e0       	ldi	r25, 0x01	; 1

000009f6 <.Loc.47>:
     9f6:	2f 7e       	andi	r18, 0xEF	; 239
     9f8:	dc 01       	movw	r26, r24
     9fa:	2c 93       	st	X, r18

000009fc <.Loc.48>:
                PORT_LED &= ~(1<<LED_2);//LED
     9fc:	82 e0       	ldi	r24, 0x02	; 2
     9fe:	91 e0       	ldi	r25, 0x01	; 1
     a00:	fc 01       	movw	r30, r24
     a02:	20 81       	ld	r18, Z

00000a04 <.Loc.49>:
     a04:	82 e0       	ldi	r24, 0x02	; 2
     a06:	91 e0       	ldi	r25, 0x01	; 1

00000a08 <.Loc.50>:
     a08:	2f 7d       	andi	r18, 0xDF	; 223
     a0a:	dc 01       	movw	r26, r24
     a0c:	2c 93       	st	X, r18

00000a0e <.L25>:
            }
            if(timerteller >= 30)
     a0e:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <timerteller>
     a12:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <timerteller+0x1>

00000a16 <.Loc.52>:
     a16:	8d 31       	cpi	r24, 0x1D	; 29
     a18:	91 05       	cpc	r25, r1
     a1a:	41 f1       	breq	.+80     	; 0xa6c <.L26>
     a1c:	3c f1       	brlt	.+78     	; 0xa6c <.L26>

00000a1e <.Loc.53>:
            {
                PORT_buzzer |= (1<<buzzer);//buzzer
     a1e:	82 e0       	ldi	r24, 0x02	; 2
     a20:	91 e0       	ldi	r25, 0x01	; 1
     a22:	fc 01       	movw	r30, r24
     a24:	20 81       	ld	r18, Z
     a26:	82 e0       	ldi	r24, 0x02	; 2
     a28:	91 e0       	ldi	r25, 0x01	; 1

00000a2a <.Loc.54>:
     a2a:	28 60       	ori	r18, 0x08	; 8
     a2c:	dc 01       	movw	r26, r24
     a2e:	2c 93       	st	X, r18

00000a30 <.Loc.55>:
                PORT_LED |= (1<<LED_1);//LED
     a30:	82 e0       	ldi	r24, 0x02	; 2
     a32:	91 e0       	ldi	r25, 0x01	; 1
     a34:	fc 01       	movw	r30, r24
     a36:	20 81       	ld	r18, Z
     a38:	82 e0       	ldi	r24, 0x02	; 2
     a3a:	91 e0       	ldi	r25, 0x01	; 1

00000a3c <.Loc.56>:
     a3c:	20 61       	ori	r18, 0x10	; 16
     a3e:	dc 01       	movw	r26, r24
     a40:	2c 93       	st	X, r18

00000a42 <.Loc.57>:
                PORT_LED |= (1<<LED_2);//LED
     a42:	82 e0       	ldi	r24, 0x02	; 2
     a44:	91 e0       	ldi	r25, 0x01	; 1
     a46:	fc 01       	movw	r30, r24
     a48:	20 81       	ld	r18, Z
     a4a:	82 e0       	ldi	r24, 0x02	; 2
     a4c:	91 e0       	ldi	r25, 0x01	; 1

00000a4e <.Loc.58>:
     a4e:	20 62       	ori	r18, 0x20	; 32
     a50:	dc 01       	movw	r26, r24
     a52:	2c 93       	st	X, r18

00000a54 <.Loc.59>:
                if(timerteller >= 60)
     a54:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <timerteller>
     a58:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <timerteller+0x1>

00000a5c <.Loc.60>:
     a5c:	8b 33       	cpi	r24, 0x3B	; 59
     a5e:	91 05       	cpc	r25, r1
     a60:	29 f0       	breq	.+10     	; 0xa6c <.L26>
     a62:	24 f0       	brlt	.+8      	; 0xa6c <.L26>

00000a64 <.Loc.61>:
                {
                    timerteller = 0;
     a64:	10 92 27 02 	sts	0x0227, r1	; 0x800227 <timerteller+0x1>
     a68:	10 92 26 02 	sts	0x0226, r1	; 0x800226 <timerteller>

00000a6c <.L26>:
                }
            }
            if((Bluetooth_Getal == 8))// && ((Noodknopport & (1<<Noodknoppin)) != 0))
     a6c:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <Bluetooth_Getal>
     a70:	90 91 21 02 	lds	r25, 0x0221	; 0x800221 <Bluetooth_Getal+0x1>

00000a74 <.Loc.63>:
     a74:	88 30       	cpi	r24, 0x08	; 8
     a76:	91 05       	cpc	r25, r1
     a78:	09 f0       	breq	.+2      	; 0xa7c <.Loc.64>

00000a7a <L0^A>:
     a7a:	46 c7       	rjmp	.+3724   	; 0x1908 <.L122>

00000a7c <.Loc.64>:
            {
                toestand = 2;
     a7c:	82 e0       	ldi	r24, 0x02	; 2
     a7e:	90 e0       	ldi	r25, 0x00	; 0
     a80:	9a 83       	std	Y+2, r25	; 0x02
     a82:	89 83       	std	Y+1, r24	; 0x01

00000a84 <.Loc.65>:
            }
            break;
     a84:	41 c7       	rjmp	.+3714   	; 0x1908 <.L122>

00000a86 <.L24>:
        case 0:
            PORT_buzzer &= ~(1<<buzzer);
     a86:	82 e0       	ldi	r24, 0x02	; 2
     a88:	91 e0       	ldi	r25, 0x01	; 1
     a8a:	fc 01       	movw	r30, r24
     a8c:	20 81       	ld	r18, Z

00000a8e <.Loc.67>:
     a8e:	82 e0       	ldi	r24, 0x02	; 2
     a90:	91 e0       	ldi	r25, 0x01	; 1

00000a92 <.Loc.68>:
     a92:	27 7f       	andi	r18, 0xF7	; 247
     a94:	dc 01       	movw	r26, r24
     a96:	2c 93       	st	X, r18

00000a98 <.Loc.69>:
            PORT_LED |= (1<<LED_2);
     a98:	82 e0       	ldi	r24, 0x02	; 2
     a9a:	91 e0       	ldi	r25, 0x01	; 1
     a9c:	fc 01       	movw	r30, r24
     a9e:	20 81       	ld	r18, Z
     aa0:	82 e0       	ldi	r24, 0x02	; 2
     aa2:	91 e0       	ldi	r25, 0x01	; 1

00000aa4 <.Loc.70>:
     aa4:	20 62       	ori	r18, 0x20	; 32
     aa6:	dc 01       	movw	r26, r24
     aa8:	2c 93       	st	X, r18

00000aaa <.Loc.71>:
            PORT_LED &= ~(1<<LED_1);
     aaa:	82 e0       	ldi	r24, 0x02	; 2
     aac:	91 e0       	ldi	r25, 0x01	; 1
     aae:	fc 01       	movw	r30, r24
     ab0:	20 81       	ld	r18, Z

00000ab2 <.Loc.72>:
     ab2:	82 e0       	ldi	r24, 0x02	; 2
     ab4:	91 e0       	ldi	r25, 0x01	; 1

00000ab6 <.Loc.73>:
     ab6:	2f 7e       	andi	r18, 0xEF	; 239
     ab8:	dc 01       	movw	r26, r24
     aba:	2c 93       	st	X, r18

00000abc <.Loc.74>:
            PORT_buzzer &= ~(1<<buzzer);
     abc:	82 e0       	ldi	r24, 0x02	; 2
     abe:	91 e0       	ldi	r25, 0x01	; 1
     ac0:	fc 01       	movw	r30, r24
     ac2:	20 81       	ld	r18, Z

00000ac4 <.Loc.75>:
     ac4:	82 e0       	ldi	r24, 0x02	; 2
     ac6:	91 e0       	ldi	r25, 0x01	; 1

00000ac8 <.Loc.76>:
     ac8:	27 7f       	andi	r18, 0xF7	; 247
     aca:	dc 01       	movw	r26, r24
     acc:	2c 93       	st	X, r18

00000ace <.Loc.77>:
            h_bridgeL_set_percentage(snelheiduit);//motoren uit
     ace:	83 e6       	ldi	r24, 0x63	; 99
     ad0:	0e 94 fe 02 	call	0x5fc	; 0x5fc <h_bridgeL_set_percentage>

00000ad4 <.Loc.78>:
            h_bridgeR_set_percentage(snelheiduit);
     ad4:	83 e6       	ldi	r24, 0x63	; 99
     ad6:	0e 94 bf 02 	call	0x57e	; 0x57e <h_bridgeR_set_percentage>

00000ada <.Loc.79>:
            if(Bluetooth_Getal == 1)//Bluetooth verbonden
     ada:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <Bluetooth_Getal>
     ade:	90 91 21 02 	lds	r25, 0x0221	; 0x800221 <Bluetooth_Getal+0x1>

00000ae2 <.Loc.80>:
     ae2:	81 30       	cpi	r24, 0x01	; 1
     ae4:	91 05       	cpc	r25, r1
     ae6:	09 f0       	breq	.+2      	; 0xaea <.Loc.81>

00000ae8 <L0^A>:
     ae8:	12 c7       	rjmp	.+3620   	; 0x190e <.L123>

00000aea <.Loc.81>:
            {
                toestand = 1;
     aea:	81 e0       	ldi	r24, 0x01	; 1
     aec:	90 e0       	ldi	r25, 0x00	; 0
     aee:	9a 83       	std	Y+2, r25	; 0x02
     af0:	89 83       	std	Y+1, r24	; 0x01

00000af2 <.Loc.82>:
            }
            break;
     af2:	0d c7       	rjmp	.+3610   	; 0x190e <.L123>

00000af4 <.L23>:
        case 1://wachten op aan knop
            PORT_buzzer &= ~(1<<buzzer);
     af4:	82 e0       	ldi	r24, 0x02	; 2
     af6:	91 e0       	ldi	r25, 0x01	; 1
     af8:	fc 01       	movw	r30, r24
     afa:	20 81       	ld	r18, Z

00000afc <.Loc.84>:
     afc:	82 e0       	ldi	r24, 0x02	; 2
     afe:	91 e0       	ldi	r25, 0x01	; 1

00000b00 <.Loc.85>:
     b00:	27 7f       	andi	r18, 0xF7	; 247
     b02:	dc 01       	movw	r26, r24
     b04:	2c 93       	st	X, r18

00000b06 <.Loc.86>:
            PORT_LED |= (1<<LED_2);
     b06:	82 e0       	ldi	r24, 0x02	; 2
     b08:	91 e0       	ldi	r25, 0x01	; 1
     b0a:	fc 01       	movw	r30, r24
     b0c:	20 81       	ld	r18, Z
     b0e:	82 e0       	ldi	r24, 0x02	; 2
     b10:	91 e0       	ldi	r25, 0x01	; 1

00000b12 <.Loc.87>:
     b12:	20 62       	ori	r18, 0x20	; 32
     b14:	dc 01       	movw	r26, r24
     b16:	2c 93       	st	X, r18

00000b18 <.Loc.88>:
            PORT_LED |= (1<<LED_1);
     b18:	82 e0       	ldi	r24, 0x02	; 2
     b1a:	91 e0       	ldi	r25, 0x01	; 1
     b1c:	fc 01       	movw	r30, r24
     b1e:	20 81       	ld	r18, Z
     b20:	82 e0       	ldi	r24, 0x02	; 2
     b22:	91 e0       	ldi	r25, 0x01	; 1

00000b24 <.Loc.89>:
     b24:	20 61       	ori	r18, 0x10	; 16
     b26:	dc 01       	movw	r26, r24
     b28:	2c 93       	st	X, r18

00000b2a <.Loc.90>:
            PORT_buzzer &= ~(1<<buzzer);
     b2a:	82 e0       	ldi	r24, 0x02	; 2
     b2c:	91 e0       	ldi	r25, 0x01	; 1
     b2e:	fc 01       	movw	r30, r24
     b30:	20 81       	ld	r18, Z

00000b32 <.Loc.91>:
     b32:	82 e0       	ldi	r24, 0x02	; 2
     b34:	91 e0       	ldi	r25, 0x01	; 1

00000b36 <.Loc.92>:
     b36:	27 7f       	andi	r18, 0xF7	; 247
     b38:	dc 01       	movw	r26, r24
     b3a:	2c 93       	st	X, r18

00000b3c <.Loc.93>:
            h_bridgeL_set_percentage(snelheiduit);//motoren uit
     b3c:	83 e6       	ldi	r24, 0x63	; 99
     b3e:	0e 94 fe 02 	call	0x5fc	; 0x5fc <h_bridgeL_set_percentage>

00000b42 <.Loc.94>:
            h_bridgeR_set_percentage(snelheiduit);
     b42:	83 e6       	ldi	r24, 0x63	; 99
     b44:	0e 94 bf 02 	call	0x57e	; 0x57e <h_bridgeR_set_percentage>

00000b48 <.Loc.95>:
            if(Bluetooth_Getal == 3)//Aanknop
     b48:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <Bluetooth_Getal>
     b4c:	90 91 21 02 	lds	r25, 0x0221	; 0x800221 <Bluetooth_Getal+0x1>

00000b50 <.Loc.96>:
     b50:	83 30       	cpi	r24, 0x03	; 3
     b52:	91 05       	cpc	r25, r1
     b54:	09 f0       	breq	.+2      	; 0xb58 <.Loc.97>

00000b56 <L0^A>:
     b56:	de c6       	rjmp	.+3516   	; 0x1914 <.L124>

00000b58 <.Loc.97>:
            {
                toestand = 2;
     b58:	82 e0       	ldi	r24, 0x02	; 2
     b5a:	90 e0       	ldi	r25, 0x00	; 0
     b5c:	9a 83       	std	Y+2, r25	; 0x02
     b5e:	89 83       	std	Y+1, r24	; 0x01

00000b60 <.Loc.98>:
            }
            break;
     b60:	d9 c6       	rjmp	.+3506   	; 0x1914 <.L124>

00000b62 <.L22>:
        case 2://toestand keuze case
            PORT_buzzer &= ~(1<<buzzer);
     b62:	82 e0       	ldi	r24, 0x02	; 2
     b64:	91 e0       	ldi	r25, 0x01	; 1
     b66:	fc 01       	movw	r30, r24
     b68:	20 81       	ld	r18, Z

00000b6a <.Loc.100>:
     b6a:	82 e0       	ldi	r24, 0x02	; 2
     b6c:	91 e0       	ldi	r25, 0x01	; 1

00000b6e <.Loc.101>:
     b6e:	27 7f       	andi	r18, 0xF7	; 247
     b70:	dc 01       	movw	r26, r24
     b72:	2c 93       	st	X, r18

00000b74 <.Loc.102>:
            PORT_LED &= ~(1<<LED_2);
     b74:	82 e0       	ldi	r24, 0x02	; 2
     b76:	91 e0       	ldi	r25, 0x01	; 1
     b78:	fc 01       	movw	r30, r24
     b7a:	20 81       	ld	r18, Z

00000b7c <.Loc.103>:
     b7c:	82 e0       	ldi	r24, 0x02	; 2
     b7e:	91 e0       	ldi	r25, 0x01	; 1

00000b80 <.Loc.104>:
     b80:	2f 7d       	andi	r18, 0xDF	; 223
     b82:	dc 01       	movw	r26, r24
     b84:	2c 93       	st	X, r18

00000b86 <.Loc.105>:
            PORT_LED |= (1<<LED_1);
     b86:	82 e0       	ldi	r24, 0x02	; 2
     b88:	91 e0       	ldi	r25, 0x01	; 1
     b8a:	fc 01       	movw	r30, r24
     b8c:	20 81       	ld	r18, Z
     b8e:	82 e0       	ldi	r24, 0x02	; 2
     b90:	91 e0       	ldi	r25, 0x01	; 1

00000b92 <.Loc.106>:
     b92:	20 61       	ori	r18, 0x10	; 16
     b94:	dc 01       	movw	r26, r24
     b96:	2c 93       	st	X, r18

00000b98 <.Loc.107>:
            PORT_buzzer &= ~(1<<buzzer);
     b98:	82 e0       	ldi	r24, 0x02	; 2
     b9a:	91 e0       	ldi	r25, 0x01	; 1
     b9c:	fc 01       	movw	r30, r24
     b9e:	20 81       	ld	r18, Z

00000ba0 <.Loc.108>:
     ba0:	82 e0       	ldi	r24, 0x02	; 2
     ba2:	91 e0       	ldi	r25, 0x01	; 1

00000ba4 <.Loc.109>:
     ba4:	27 7f       	andi	r18, 0xF7	; 247
     ba6:	dc 01       	movw	r26, r24
     ba8:	2c 93       	st	X, r18

00000baa <.Loc.110>:
            if(Bluetooth_Getal == 4)//Autonoomknop
     baa:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <Bluetooth_Getal>
     bae:	90 91 21 02 	lds	r25, 0x0221	; 0x800221 <Bluetooth_Getal+0x1>

00000bb2 <.Loc.111>:
     bb2:	84 30       	cpi	r24, 0x04	; 4
     bb4:	91 05       	cpc	r25, r1
     bb6:	09 f0       	breq	.+2      	; 0xbba <.Loc.112>

00000bb8 <L0^A>:
     bb8:	b0 c6       	rjmp	.+3424   	; 0x191a <.L125>

00000bba <.Loc.112>:
            {
                toestand = 3;
     bba:	83 e0       	ldi	r24, 0x03	; 3
     bbc:	90 e0       	ldi	r25, 0x00	; 0
     bbe:	9a 83       	std	Y+2, r25	; 0x02
     bc0:	89 83       	std	Y+1, r24	; 0x01

00000bc2 <.Loc.113>:
            }
//            if(Bluetooth_Getal == 5)//Volgknop
//            {
//                toestand = 11;
//            }
            break;
     bc2:	ab c6       	rjmp	.+3414   	; 0x191a <.L125>

00000bc4 <.L21>:
        case 3://rijstrook inrijden
            PORT_LED &= ~(1<<LED_2);
     bc4:	82 e0       	ldi	r24, 0x02	; 2
     bc6:	91 e0       	ldi	r25, 0x01	; 1
     bc8:	fc 01       	movw	r30, r24
     bca:	20 81       	ld	r18, Z

00000bcc <.Loc.115>:
     bcc:	82 e0       	ldi	r24, 0x02	; 2
     bce:	91 e0       	ldi	r25, 0x01	; 1

00000bd0 <.Loc.116>:
     bd0:	2f 7d       	andi	r18, 0xDF	; 223
     bd2:	dc 01       	movw	r26, r24
     bd4:	2c 93       	st	X, r18

00000bd6 <.Loc.117>:
            PORT_LED &= ~(1<<LED_1);
     bd6:	82 e0       	ldi	r24, 0x02	; 2
     bd8:	91 e0       	ldi	r25, 0x01	; 1
     bda:	fc 01       	movw	r30, r24
     bdc:	20 81       	ld	r18, Z

00000bde <.Loc.118>:
     bde:	82 e0       	ldi	r24, 0x02	; 2
     be0:	91 e0       	ldi	r25, 0x01	; 1

00000be2 <.Loc.119>:
     be2:	2f 7e       	andi	r18, 0xEF	; 239
     be4:	dc 01       	movw	r26, r24
     be6:	2c 93       	st	X, r18

00000be8 <.Loc.120>:
            PORT_buzzer &= ~(1<<buzzer);
     be8:	82 e0       	ldi	r24, 0x02	; 2
     bea:	91 e0       	ldi	r25, 0x01	; 1
     bec:	fc 01       	movw	r30, r24
     bee:	20 81       	ld	r18, Z

00000bf0 <.Loc.121>:
     bf0:	82 e0       	ldi	r24, 0x02	; 2
     bf2:	91 e0       	ldi	r25, 0x01	; 1

00000bf4 <.Loc.122>:
     bf4:	27 7f       	andi	r18, 0xF7	; 247
     bf6:	dc 01       	movw	r26, r24
     bf8:	2c 93       	st	X, r18

00000bfa <.Loc.123>:
            h_bridgeR_set_percentage(snelheidrechtdoor);
     bfa:	86 e4       	ldi	r24, 0x46	; 70
     bfc:	0e 94 bf 02 	call	0x57e	; 0x57e <h_bridgeR_set_percentage>

00000c00 <.Loc.124>:
            h_bridgeL_set_percentage(snelheidrechtdoor);
     c00:	86 e4       	ldi	r24, 0x46	; 70
     c02:	0e 94 fe 02 	call	0x5fc	; 0x5fc <h_bridgeL_set_percentage>

00000c06 <.Loc.125>:
            rechtdoorrijden();
     c06:	0e 94 36 01 	call	0x26c	; 0x26c <rechtdoorrijden>

00000c0a <.Loc.126>:
            if(((IRregister & (1 << IRonderrechts)) == 0) && ((IRregister & (1 << IRonderlinks)) == 0))
     c0a:	86 e2       	ldi	r24, 0x26	; 38
     c0c:	90 e0       	ldi	r25, 0x00	; 0
     c0e:	fc 01       	movw	r30, r24
     c10:	80 81       	ld	r24, Z

00000c12 <.Loc.127>:
     c12:	88 2f       	mov	r24, r24
     c14:	90 e0       	ldi	r25, 0x00	; 0
     c16:	84 70       	andi	r24, 0x04	; 4
     c18:	99 27       	eor	r25, r25

00000c1a <.Loc.128>:
     c1a:	00 97       	sbiw	r24, 0x00	; 0
     c1c:	09 f0       	breq	.+2      	; 0xc20 <.Loc.129>

00000c1e <L0^A>:
     c1e:	80 c6       	rjmp	.+3328   	; 0x1920 <.L126>

00000c20 <.Loc.129>:
     c20:	86 e2       	ldi	r24, 0x26	; 38
     c22:	90 e0       	ldi	r25, 0x00	; 0
     c24:	dc 01       	movw	r26, r24
     c26:	8c 91       	ld	r24, X

00000c28 <.Loc.130>:
     c28:	88 2f       	mov	r24, r24
     c2a:	90 e0       	ldi	r25, 0x00	; 0
     c2c:	88 70       	andi	r24, 0x08	; 8
     c2e:	99 27       	eor	r25, r25

00000c30 <.Loc.131>:
     c30:	00 97       	sbiw	r24, 0x00	; 0
     c32:	09 f0       	breq	.+2      	; 0xc36 <.Loc.132>

00000c34 <L0^A>:
     c34:	75 c6       	rjmp	.+3306   	; 0x1920 <.L126>

00000c36 <.Loc.132>:
            {
                toestand = 4;
     c36:	84 e0       	ldi	r24, 0x04	; 4
     c38:	90 e0       	ldi	r25, 0x00	; 0
     c3a:	9a 83       	std	Y+2, r25	; 0x02
     c3c:	89 83       	std	Y+1, r24	; 0x01

00000c3e <.Loc.133>:
            }
            break;
     c3e:	70 c6       	rjmp	.+3296   	; 0x1920 <.L126>

00000c40 <.L20>:
        case 4://Tussen de balken rechtdoor
            //Motoren naar rechtdoor
            rechtdoorrijden();
     c40:	0e 94 36 01 	call	0x26c	; 0x26c <rechtdoorrijden>

00000c44 <.Loc.135>:
            h_bridgeR_set_percentage(snelheidrechtdoor);
     c44:	86 e4       	ldi	r24, 0x46	; 70
     c46:	0e 94 bf 02 	call	0x57e	; 0x57e <h_bridgeR_set_percentage>

00000c4a <.Loc.136>:
            h_bridgeL_set_percentage(snelheidrechtdoor);
     c4a:	86 e4       	ldi	r24, 0x46	; 70
     c4c:	0e 94 fe 02 	call	0x5fc	; 0x5fc <h_bridgeL_set_percentage>

00000c50 <.Loc.137>:
            if(IRregister & (1 << IRonderrechts))
     c50:	86 e2       	ldi	r24, 0x26	; 38
     c52:	90 e0       	ldi	r25, 0x00	; 0
     c54:	fc 01       	movw	r30, r24
     c56:	80 81       	ld	r24, Z

00000c58 <.Loc.138>:
     c58:	88 2f       	mov	r24, r24
     c5a:	90 e0       	ldi	r25, 0x00	; 0
     c5c:	84 70       	andi	r24, 0x04	; 4
     c5e:	99 27       	eor	r25, r25

00000c60 <.Loc.139>:
     c60:	00 97       	sbiw	r24, 0x00	; 0
     c62:	29 f0       	breq	.+10     	; 0xc6e <.L32>

00000c64 <.Loc.140>:
            {
                toestand = 5;
     c64:	85 e0       	ldi	r24, 0x05	; 5
     c66:	90 e0       	ldi	r25, 0x00	; 0
     c68:	9a 83       	std	Y+2, r25	; 0x02
     c6a:	89 83       	std	Y+1, r24	; 0x01

00000c6c <.Loc.141>:
            }
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
            {
                //toestand = 7;
            }
            break;
     c6c:	5c c6       	rjmp	.+3256   	; 0x1926 <.L127>

00000c6e <.L32>:
            else if(IRregister & (1 << IRonderlinks))
     c6e:	86 e2       	ldi	r24, 0x26	; 38
     c70:	90 e0       	ldi	r25, 0x00	; 0
     c72:	dc 01       	movw	r26, r24
     c74:	8c 91       	ld	r24, X

00000c76 <.Loc.143>:
     c76:	88 2f       	mov	r24, r24
     c78:	90 e0       	ldi	r25, 0x00	; 0
     c7a:	88 70       	andi	r24, 0x08	; 8
     c7c:	99 27       	eor	r25, r25

00000c7e <.Loc.144>:
     c7e:	00 97       	sbiw	r24, 0x00	; 0
     c80:	29 f0       	breq	.+10     	; 0xc8c <.L34>

00000c82 <.Loc.145>:
                toestand = 6;
     c82:	86 e0       	ldi	r24, 0x06	; 6
     c84:	90 e0       	ldi	r25, 0x00	; 0
     c86:	9a 83       	std	Y+2, r25	; 0x02
     c88:	89 83       	std	Y+1, r24	; 0x01

00000c8a <.Loc.146>:
            break;
     c8a:	4d c6       	rjmp	.+3226   	; 0x1926 <.L127>

00000c8c <.L34>:
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
     c8c:	86 e2       	ldi	r24, 0x26	; 38
     c8e:	90 e0       	ldi	r25, 0x00	; 0
     c90:	fc 01       	movw	r30, r24
     c92:	80 81       	ld	r24, Z

00000c94 <.Loc.148>:
     c94:	88 2f       	mov	r24, r24
     c96:	90 e0       	ldi	r25, 0x00	; 0
     c98:	84 70       	andi	r24, 0x04	; 4
     c9a:	99 27       	eor	r25, r25

00000c9c <.Loc.149>:
     c9c:	00 97       	sbiw	r24, 0x00	; 0
     c9e:	09 f4       	brne	.+2      	; 0xca2 <.Loc.150>

00000ca0 <L0^A>:
     ca0:	42 c6       	rjmp	.+3204   	; 0x1926 <.L127>

00000ca2 <.Loc.150>:
     ca2:	86 e2       	ldi	r24, 0x26	; 38
     ca4:	90 e0       	ldi	r25, 0x00	; 0
     ca6:	dc 01       	movw	r26, r24
     ca8:	8c 91       	ld	r24, X

00000caa <.Loc.151>:
            break;
     caa:	3d c6       	rjmp	.+3194   	; 0x1926 <.L127>

00000cac <.L19>:
        case 5:
            //Motoren naar rechts
            h_bridgeR_set_percentage(snelheidhard);
     cac:	8c e3       	ldi	r24, 0x3C	; 60
     cae:	0e 94 bf 02 	call	0x57e	; 0x57e <h_bridgeR_set_percentage>

00000cb2 <.Loc.153>:
            h_bridgeL_set_percentage(snelheidzacht);
     cb2:	80 e5       	ldi	r24, 0x50	; 80
     cb4:	0e 94 fe 02 	call	0x5fc	; 0x5fc <h_bridgeL_set_percentage>

00000cb8 <.Loc.154>:
            if(((IRregister & (1 << IRonderrechts)) == 0) && ((IRregister & (1 << IRonderlinks)) == 0))
     cb8:	86 e2       	ldi	r24, 0x26	; 38
     cba:	90 e0       	ldi	r25, 0x00	; 0
     cbc:	fc 01       	movw	r30, r24
     cbe:	80 81       	ld	r24, Z

00000cc0 <.Loc.155>:
     cc0:	88 2f       	mov	r24, r24
     cc2:	90 e0       	ldi	r25, 0x00	; 0
     cc4:	84 70       	andi	r24, 0x04	; 4
     cc6:	99 27       	eor	r25, r25

00000cc8 <.Loc.156>:
     cc8:	00 97       	sbiw	r24, 0x00	; 0
     cca:	79 f4       	brne	.+30     	; 0xcea <.L35>

00000ccc <.Loc.157>:
     ccc:	86 e2       	ldi	r24, 0x26	; 38
     cce:	90 e0       	ldi	r25, 0x00	; 0
     cd0:	dc 01       	movw	r26, r24
     cd2:	8c 91       	ld	r24, X

00000cd4 <.Loc.158>:
     cd4:	88 2f       	mov	r24, r24
     cd6:	90 e0       	ldi	r25, 0x00	; 0
     cd8:	88 70       	andi	r24, 0x08	; 8
     cda:	99 27       	eor	r25, r25

00000cdc <.Loc.159>:
     cdc:	00 97       	sbiw	r24, 0x00	; 0
     cde:	29 f4       	brne	.+10     	; 0xcea <.L35>

00000ce0 <.Loc.160>:
            {
                toestand = 4;
     ce0:	84 e0       	ldi	r24, 0x04	; 4
     ce2:	90 e0       	ldi	r25, 0x00	; 0
     ce4:	9a 83       	std	Y+2, r25	; 0x02
     ce6:	89 83       	std	Y+1, r24	; 0x01

00000ce8 <.Loc.161>:
            }
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
            {
                //toestand = 7;
            }
            break;
     ce8:	21 c6       	rjmp	.+3138   	; 0x192c <.L128>

00000cea <.L35>:
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
     cea:	86 e2       	ldi	r24, 0x26	; 38
     cec:	90 e0       	ldi	r25, 0x00	; 0
     cee:	fc 01       	movw	r30, r24
     cf0:	80 81       	ld	r24, Z

00000cf2 <.Loc.163>:
     cf2:	88 2f       	mov	r24, r24
     cf4:	90 e0       	ldi	r25, 0x00	; 0
     cf6:	84 70       	andi	r24, 0x04	; 4
     cf8:	99 27       	eor	r25, r25

00000cfa <.Loc.164>:
     cfa:	00 97       	sbiw	r24, 0x00	; 0
     cfc:	09 f4       	brne	.+2      	; 0xd00 <.Loc.165>

00000cfe <L0^A>:
     cfe:	16 c6       	rjmp	.+3116   	; 0x192c <.L128>

00000d00 <.Loc.165>:
     d00:	86 e2       	ldi	r24, 0x26	; 38
     d02:	90 e0       	ldi	r25, 0x00	; 0
     d04:	dc 01       	movw	r26, r24
     d06:	8c 91       	ld	r24, X

00000d08 <.Loc.166>:
            break;
     d08:	11 c6       	rjmp	.+3106   	; 0x192c <.L128>

00000d0a <.L18>:
        case 6:
            //Motoren naar links
            h_bridgeR_set_percentage(snelheidzacht);
     d0a:	80 e5       	ldi	r24, 0x50	; 80
     d0c:	0e 94 bf 02 	call	0x57e	; 0x57e <h_bridgeR_set_percentage>

00000d10 <.Loc.168>:
            h_bridgeL_set_percentage(snelheidhard);
     d10:	8c e3       	ldi	r24, 0x3C	; 60
     d12:	0e 94 fe 02 	call	0x5fc	; 0x5fc <h_bridgeL_set_percentage>

00000d16 <.Loc.169>:
            if(((IRregister & (1 << IRonderrechts)) == 0) && ((IRregister & (1 << IRonderlinks)) == 0))
     d16:	86 e2       	ldi	r24, 0x26	; 38
     d18:	90 e0       	ldi	r25, 0x00	; 0
     d1a:	fc 01       	movw	r30, r24
     d1c:	80 81       	ld	r24, Z

00000d1e <.Loc.170>:
     d1e:	88 2f       	mov	r24, r24
     d20:	90 e0       	ldi	r25, 0x00	; 0
     d22:	84 70       	andi	r24, 0x04	; 4
     d24:	99 27       	eor	r25, r25

00000d26 <.Loc.171>:
     d26:	00 97       	sbiw	r24, 0x00	; 0
     d28:	79 f4       	brne	.+30     	; 0xd48 <.L37>

00000d2a <.Loc.172>:
     d2a:	86 e2       	ldi	r24, 0x26	; 38
     d2c:	90 e0       	ldi	r25, 0x00	; 0
     d2e:	dc 01       	movw	r26, r24
     d30:	8c 91       	ld	r24, X

00000d32 <.Loc.173>:
     d32:	88 2f       	mov	r24, r24
     d34:	90 e0       	ldi	r25, 0x00	; 0
     d36:	88 70       	andi	r24, 0x08	; 8
     d38:	99 27       	eor	r25, r25

00000d3a <.Loc.174>:
     d3a:	00 97       	sbiw	r24, 0x00	; 0
     d3c:	29 f4       	brne	.+10     	; 0xd48 <.L37>

00000d3e <.Loc.175>:
            {
                toestand = 4;
     d3e:	84 e0       	ldi	r24, 0x04	; 4
     d40:	90 e0       	ldi	r25, 0x00	; 0
     d42:	9a 83       	std	Y+2, r25	; 0x02
     d44:	89 83       	std	Y+1, r24	; 0x01

00000d46 <.Loc.176>:
            }
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
            {
                //toestand = 7;
            }
            break;
     d46:	f5 c5       	rjmp	.+3050   	; 0x1932 <.L129>

00000d48 <.L37>:
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
     d48:	86 e2       	ldi	r24, 0x26	; 38
     d4a:	90 e0       	ldi	r25, 0x00	; 0
     d4c:	fc 01       	movw	r30, r24
     d4e:	80 81       	ld	r24, Z

00000d50 <.Loc.178>:
     d50:	88 2f       	mov	r24, r24
     d52:	90 e0       	ldi	r25, 0x00	; 0
     d54:	84 70       	andi	r24, 0x04	; 4
     d56:	99 27       	eor	r25, r25

00000d58 <.Loc.179>:
     d58:	00 97       	sbiw	r24, 0x00	; 0
     d5a:	09 f4       	brne	.+2      	; 0xd5e <.Loc.180>

00000d5c <L0^A>:
     d5c:	ea c5       	rjmp	.+3028   	; 0x1932 <.L129>

00000d5e <.Loc.180>:
     d5e:	86 e2       	ldi	r24, 0x26	; 38
     d60:	90 e0       	ldi	r25, 0x00	; 0
     d62:	dc 01       	movw	r26, r24
     d64:	8c 91       	ld	r24, X

00000d66 <.Loc.181>:
            break;
     d66:	e5 c5       	rjmp	.+3018   	; 0x1932 <.L129>

00000d68 <.L17>:
     d68:	80 e0       	ldi	r24, 0x00	; 0
     d6a:	90 e0       	ldi	r25, 0x00	; 0
     d6c:	aa ef       	ldi	r26, 0xFA	; 250
     d6e:	b4 e4       	ldi	r27, 0x44	; 68
     d70:	89 87       	std	Y+9, r24	; 0x09
     d72:	9a 87       	std	Y+10, r25	; 0x0a
     d74:	ab 87       	std	Y+11, r26	; 0x0b
     d76:	bc 87       	std	Y+12, r27	; 0x0c

00000d78 <.LBB108>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     d78:	20 e0       	ldi	r18, 0x00	; 0
     d7a:	30 e0       	ldi	r19, 0x00	; 0
     d7c:	4a e7       	ldi	r20, 0x7A	; 122
     d7e:	55 e4       	ldi	r21, 0x45	; 69
     d80:	69 85       	ldd	r22, Y+9	; 0x09
     d82:	7a 85       	ldd	r23, Y+10	; 0x0a
     d84:	8b 85       	ldd	r24, Y+11	; 0x0b
     d86:	9c 85       	ldd	r25, Y+12	; 0x0c
     d88:	0e 94 82 18 	call	0x3104	; 0x3104 <__mulsf3>
     d8c:	a7 96       	adiw	r28, 0x27	; 39
     d8e:	6c af       	std	Y+60, r22	; 0x3c
     d90:	7d af       	std	Y+61, r23	; 0x3d
     d92:	8e af       	std	Y+62, r24	; 0x3e
     d94:	9f af       	std	Y+63, r25	; 0x3f
     d96:	a7 97       	sbiw	r28, 0x27	; 39
     d98:	a7 96       	adiw	r28, 0x27	; 39
     d9a:	8c ad       	ldd	r24, Y+60	; 0x3c
     d9c:	9d ad       	ldd	r25, Y+61	; 0x3d
     d9e:	ae ad       	ldd	r26, Y+62	; 0x3e
     da0:	bf ad       	ldd	r27, Y+63	; 0x3f
     da2:	a7 97       	sbiw	r28, 0x27	; 39
     da4:	8d 87       	std	Y+13, r24	; 0x0d
     da6:	9e 87       	std	Y+14, r25	; 0x0e
     da8:	af 87       	std	Y+15, r26	; 0x0f
     daa:	b8 8b       	std	Y+16, r27	; 0x10

00000dac <.Loc.183>:
	if (__tmp < 1.0)
     dac:	20 e0       	ldi	r18, 0x00	; 0
     dae:	30 e0       	ldi	r19, 0x00	; 0
     db0:	40 e8       	ldi	r20, 0x80	; 128
     db2:	5f e3       	ldi	r21, 0x3F	; 63
     db4:	6d 85       	ldd	r22, Y+13	; 0x0d
     db6:	7e 85       	ldd	r23, Y+14	; 0x0e
     db8:	8f 85       	ldd	r24, Y+15	; 0x0f
     dba:	98 89       	ldd	r25, Y+16	; 0x10
     dbc:	0e 94 1e 17 	call	0x2e3c	; 0x2e3c <__cmpsf2>
     dc0:	88 23       	and	r24, r24
     dc2:	2c f4       	brge	.+10     	; 0xdce <.L112>

00000dc4 <.Loc.184>:
		__ticks = 1;
     dc4:	81 e0       	ldi	r24, 0x01	; 1
     dc6:	90 e0       	ldi	r25, 0x00	; 0
     dc8:	9a 8b       	std	Y+18, r25	; 0x12
     dca:	89 8b       	std	Y+17, r24	; 0x11
     dcc:	66 c0       	rjmp	.+204    	; 0xe9a <.L41>

00000dce <.L112>:
	else if (__tmp > 65535)
     dce:	20 e0       	ldi	r18, 0x00	; 0
     dd0:	3f ef       	ldi	r19, 0xFF	; 255
     dd2:	4f e7       	ldi	r20, 0x7F	; 127
     dd4:	57 e4       	ldi	r21, 0x47	; 71
     dd6:	6d 85       	ldd	r22, Y+13	; 0x0d
     dd8:	7e 85       	ldd	r23, Y+14	; 0x0e
     dda:	8f 85       	ldd	r24, Y+15	; 0x0f
     ddc:	98 89       	ldd	r25, Y+16	; 0x10
     dde:	0e 94 7d 18 	call	0x30fa	; 0x30fa <__gesf2>
     de2:	88 23       	and	r24, r24
     de4:	09 f0       	breq	.+2      	; 0xde8 <L0^A>

00000de6 <L0^A>:
     de6:	0c f4       	brge	.+2      	; 0xdea <.Loc.186>

00000de8 <L0^A>:
     de8:	46 c0       	rjmp	.+140    	; 0xe76 <.L113>

00000dea <.Loc.186>:
		__ticks = (uint16_t) (__ms * 10.0);
     dea:	20 e0       	ldi	r18, 0x00	; 0
     dec:	30 e0       	ldi	r19, 0x00	; 0
     dee:	40 e2       	ldi	r20, 0x20	; 32
     df0:	51 e4       	ldi	r21, 0x41	; 65
     df2:	69 85       	ldd	r22, Y+9	; 0x09
     df4:	7a 85       	ldd	r23, Y+10	; 0x0a
     df6:	8b 85       	ldd	r24, Y+11	; 0x0b
     df8:	9c 85       	ldd	r25, Y+12	; 0x0c
     dfa:	0e 94 82 18 	call	0x3104	; 0x3104 <__mulsf3>
     dfe:	ab 96       	adiw	r28, 0x2b	; 43
     e00:	6c af       	std	Y+60, r22	; 0x3c
     e02:	7d af       	std	Y+61, r23	; 0x3d
     e04:	8e af       	std	Y+62, r24	; 0x3e
     e06:	9f af       	std	Y+63, r25	; 0x3f
     e08:	ab 97       	sbiw	r28, 0x2b	; 43
     e0a:	ab 96       	adiw	r28, 0x2b	; 43
     e0c:	8c ad       	ldd	r24, Y+60	; 0x3c
     e0e:	9d ad       	ldd	r25, Y+61	; 0x3d
     e10:	ae ad       	ldd	r26, Y+62	; 0x3e
     e12:	bf ad       	ldd	r27, Y+63	; 0x3f
     e14:	ab 97       	sbiw	r28, 0x2b	; 43
     e16:	63 96       	adiw	r28, 0x13	; 19
     e18:	8c af       	std	Y+60, r24	; 0x3c
     e1a:	9d af       	std	Y+61, r25	; 0x3d
     e1c:	ae af       	std	Y+62, r26	; 0x3e
     e1e:	bf af       	std	Y+63, r27	; 0x3f
     e20:	63 97       	sbiw	r28, 0x13	; 19

00000e22 <.Loc.187>:
     e22:	63 96       	adiw	r28, 0x13	; 19
     e24:	6c ad       	ldd	r22, Y+60	; 0x3c
     e26:	7d ad       	ldd	r23, Y+61	; 0x3d
     e28:	8e ad       	ldd	r24, Y+62	; 0x3e
     e2a:	9f ad       	ldd	r25, Y+63	; 0x3f
     e2c:	63 97       	sbiw	r28, 0x13	; 19
     e2e:	0e 94 9c 17 	call	0x2f38	; 0x2f38 <__fixunssfsi>
     e32:	af 96       	adiw	r28, 0x2f	; 47
     e34:	6c af       	std	Y+60, r22	; 0x3c
     e36:	7d af       	std	Y+61, r23	; 0x3d
     e38:	8e af       	std	Y+62, r24	; 0x3e
     e3a:	9f af       	std	Y+63, r25	; 0x3f
     e3c:	af 97       	sbiw	r28, 0x2f	; 47
     e3e:	ad 96       	adiw	r28, 0x2d	; 45
     e40:	ae ad       	ldd	r26, Y+62	; 0x3e
     e42:	bf ad       	ldd	r27, Y+63	; 0x3f
     e44:	ad 97       	sbiw	r28, 0x2d	; 45
     e46:	ba 8b       	std	Y+18, r27	; 0x12
     e48:	a9 8b       	std	Y+17, r26	; 0x11

00000e4a <.Loc.188>:
		while(__ticks)
     e4a:	10 c0       	rjmp	.+32     	; 0xe6c <.L44>

00000e4c <.L45>:
     e4c:	80 e9       	ldi	r24, 0x90	; 144
     e4e:	91 e0       	ldi	r25, 0x01	; 1
     e50:	9c 8b       	std	Y+20, r25	; 0x14
     e52:	8b 8b       	std	Y+19, r24	; 0x13

00000e54 <.LBB110>:
     e54:	8b 89       	ldd	r24, Y+19	; 0x13
     e56:	9c 89       	ldd	r25, Y+20	; 0x14

00000e58 <.L1^B1>:
     e58:	01 97       	sbiw	r24, 0x01	; 1
     e5a:	f1 f7       	brne	.-4      	; 0xe58 <.L1^B1>
     e5c:	9c 8b       	std	Y+20, r25	; 0x14
     e5e:	8b 8b       	std	Y+19, r24	; 0x13

00000e60 <.Loc.190>:
	...

00000e62 <.LBE110>:
			__ticks --;
     e62:	89 89       	ldd	r24, Y+17	; 0x11
     e64:	9a 89       	ldd	r25, Y+18	; 0x12
     e66:	01 97       	sbiw	r24, 0x01	; 1
     e68:	9a 8b       	std	Y+18, r25	; 0x12
     e6a:	89 8b       	std	Y+17, r24	; 0x11

00000e6c <.L44>:
		while(__ticks)
     e6c:	89 89       	ldd	r24, Y+17	; 0x11
     e6e:	9a 89       	ldd	r25, Y+18	; 0x12
     e70:	00 97       	sbiw	r24, 0x00	; 0
     e72:	61 f7       	brne	.-40     	; 0xe4c <.L45>

00000e74 <.Loc.193>:
		return;
     e74:	1d c0       	rjmp	.+58     	; 0xeb0 <.L46>

00000e76 <.L113>:
		__ticks = (uint16_t)__tmp;
     e76:	6d 85       	ldd	r22, Y+13	; 0x0d
     e78:	7e 85       	ldd	r23, Y+14	; 0x0e
     e7a:	8f 85       	ldd	r24, Y+15	; 0x0f
     e7c:	98 89       	ldd	r25, Y+16	; 0x10
     e7e:	0e 94 9c 17 	call	0x2f38	; 0x2f38 <__fixunssfsi>
     e82:	e3 96       	adiw	r28, 0x33	; 51
     e84:	6c af       	std	Y+60, r22	; 0x3c
     e86:	7d af       	std	Y+61, r23	; 0x3d
     e88:	8e af       	std	Y+62, r24	; 0x3e
     e8a:	9f af       	std	Y+63, r25	; 0x3f
     e8c:	e3 97       	sbiw	r28, 0x33	; 51
     e8e:	e1 96       	adiw	r28, 0x31	; 49
     e90:	ee ad       	ldd	r30, Y+62	; 0x3e
     e92:	ff ad       	ldd	r31, Y+63	; 0x3f
     e94:	e1 97       	sbiw	r28, 0x31	; 49
     e96:	fa 8b       	std	Y+18, r31	; 0x12
     e98:	e9 8b       	std	Y+17, r30	; 0x11

00000e9a <.L41>:
     e9a:	89 89       	ldd	r24, Y+17	; 0x11
     e9c:	9a 89       	ldd	r25, Y+18	; 0x12
     e9e:	9e 8b       	std	Y+22, r25	; 0x16
     ea0:	8d 8b       	std	Y+21, r24	; 0x15

00000ea2 <.LBB112>:
     ea2:	8d 89       	ldd	r24, Y+21	; 0x15
     ea4:	9e 89       	ldd	r25, Y+22	; 0x16

00000ea6 <.L1^B2>:
     ea6:	01 97       	sbiw	r24, 0x01	; 1
     ea8:	f1 f7       	brne	.-4      	; 0xea6 <.L1^B2>
     eaa:	9e 8b       	std	Y+22, r25	; 0x16
     eac:	8d 8b       	std	Y+21, r24	; 0x15

00000eae <.Loc.196>:
	...

00000eb0 <.L46>:
        case 7://Balken niet meer in zicht en bocht maken
            _delay_ms(2000);
            h_bridgeR_set_percentage(snelheidhard);
     eb0:	8c e3       	ldi	r24, 0x3C	; 60
     eb2:	0e 94 bf 02 	call	0x57e	; 0x57e <h_bridgeR_set_percentage>

00000eb6 <.Loc.198>:
            h_bridgeL_set_percentage(snelheidzacht);
     eb6:	80 e5       	ldi	r24, 0x50	; 80
     eb8:	0e 94 fe 02 	call	0x5fc	; 0x5fc <h_bridgeL_set_percentage>

00000ebc <.Loc.199>:
            if(((IRregister & (1 << IRonderlinks)) == 0) && ((IRregister & (1 << IRonderrechts)) == 0))
     ebc:	86 e2       	ldi	r24, 0x26	; 38
     ebe:	90 e0       	ldi	r25, 0x00	; 0
     ec0:	dc 01       	movw	r26, r24
     ec2:	8c 91       	ld	r24, X

00000ec4 <.Loc.200>:
     ec4:	88 2f       	mov	r24, r24
     ec6:	90 e0       	ldi	r25, 0x00	; 0
     ec8:	88 70       	andi	r24, 0x08	; 8
     eca:	99 27       	eor	r25, r25

00000ecc <.Loc.201>:
     ecc:	00 97       	sbiw	r24, 0x00	; 0
     ece:	09 f0       	breq	.+2      	; 0xed2 <.Loc.202>

00000ed0 <L0^A>:
     ed0:	33 c5       	rjmp	.+2662   	; 0x1938 <.L130>

00000ed2 <.Loc.202>:
     ed2:	86 e2       	ldi	r24, 0x26	; 38
     ed4:	90 e0       	ldi	r25, 0x00	; 0
     ed6:	fc 01       	movw	r30, r24
     ed8:	80 81       	ld	r24, Z

00000eda <.Loc.203>:
     eda:	88 2f       	mov	r24, r24
     edc:	90 e0       	ldi	r25, 0x00	; 0
     ede:	84 70       	andi	r24, 0x04	; 4
     ee0:	99 27       	eor	r25, r25

00000ee2 <.Loc.204>:
     ee2:	00 97       	sbiw	r24, 0x00	; 0
     ee4:	09 f0       	breq	.+2      	; 0xee8 <.Loc.205>

00000ee6 <L0^A>:
     ee6:	28 c5       	rjmp	.+2640   	; 0x1938 <.L130>

00000ee8 <.Loc.205>:
            {
                toestand = 4;
     ee8:	84 e0       	ldi	r24, 0x04	; 4
     eea:	90 e0       	ldi	r25, 0x00	; 0
     eec:	9a 83       	std	Y+2, r25	; 0x02
     eee:	89 83       	std	Y+1, r24	; 0x01

00000ef0 <.Loc.206>:
            }
            break;
     ef0:	23 c5       	rjmp	.+2630   	; 0x1938 <.L130>

00000ef2 <.L16>:
        case 8://signaleren
            h_bridgeR_set_percentage(snelheiduit);
     ef2:	83 e6       	ldi	r24, 0x63	; 99
     ef4:	0e 94 bf 02 	call	0x57e	; 0x57e <h_bridgeR_set_percentage>

00000ef8 <.Loc.208>:
            h_bridgeL_set_percentage(snelheiduit);
     ef8:	83 e6       	ldi	r24, 0x63	; 99
     efa:	0e 94 fe 02 	call	0x5fc	; 0x5fc <h_bridgeL_set_percentage>

00000efe <.Loc.209>:
            signaal_geven();
     efe:	0e 94 e6 01 	call	0x3cc	; 0x3cc <signaal_geven>

00000f02 <.Loc.210>:
            toestand = 4;
     f02:	84 e0       	ldi	r24, 0x04	; 4
     f04:	90 e0       	ldi	r25, 0x00	; 0
     f06:	9a 83       	std	Y+2, r25	; 0x02
     f08:	89 83       	std	Y+1, r24	; 0x01

00000f0a <.Loc.211>:
            break;
     f0a:	29 c5       	rjmp	.+2642   	; 0x195e <.L9>

00000f0c <.L15>:
        case 9://Voorultrasoon ziet iets
            h_bridgeR_set_percentage(snelheiduit);
     f0c:	83 e6       	ldi	r24, 0x63	; 99
     f0e:	0e 94 bf 02 	call	0x57e	; 0x57e <h_bridgeR_set_percentage>

00000f12 <.Loc.213>:
            h_bridgeL_set_percentage(snelheiduit);
     f12:	83 e6       	ldi	r24, 0x63	; 99
     f14:	0e 94 fe 02 	call	0x5fc	; 0x5fc <h_bridgeL_set_percentage>

00000f18 <.Loc.214>:
            PORT_LED |= (1<<LED_1);
     f18:	82 e0       	ldi	r24, 0x02	; 2
     f1a:	91 e0       	ldi	r25, 0x01	; 1
     f1c:	dc 01       	movw	r26, r24
     f1e:	2c 91       	ld	r18, X
     f20:	82 e0       	ldi	r24, 0x02	; 2
     f22:	91 e0       	ldi	r25, 0x01	; 1

00000f24 <.Loc.215>:
     f24:	20 61       	ori	r18, 0x10	; 16
     f26:	fc 01       	movw	r30, r24
     f28:	20 83       	st	Z, r18

00000f2a <.Loc.216>:
            PORT_LED |= (1<<LED_2);
     f2a:	82 e0       	ldi	r24, 0x02	; 2
     f2c:	91 e0       	ldi	r25, 0x01	; 1
     f2e:	dc 01       	movw	r26, r24
     f30:	2c 91       	ld	r18, X
     f32:	82 e0       	ldi	r24, 0x02	; 2
     f34:	91 e0       	ldi	r25, 0x01	; 1

00000f36 <.Loc.217>:
     f36:	20 62       	ori	r18, 0x20	; 32
     f38:	fc 01       	movw	r30, r24
     f3a:	20 83       	st	Z, r18

00000f3c <.Loc.218>:
            PORT_buzzer |= (1<<buzzer);
     f3c:	82 e0       	ldi	r24, 0x02	; 2
     f3e:	91 e0       	ldi	r25, 0x01	; 1
     f40:	dc 01       	movw	r26, r24
     f42:	2c 91       	ld	r18, X
     f44:	82 e0       	ldi	r24, 0x02	; 2
     f46:	91 e0       	ldi	r25, 0x01	; 1

00000f48 <.Loc.219>:
     f48:	28 60       	ori	r18, 0x08	; 8
     f4a:	fc 01       	movw	r30, r24
     f4c:	20 83       	st	Z, r18

00000f4e <.Loc.220>:
            if(waardevoor > 100)
     f4e:	8f 81       	ldd	r24, Y+7	; 0x07
     f50:	98 85       	ldd	r25, Y+8	; 0x08
     f52:	84 36       	cpi	r24, 0x64	; 100
     f54:	91 05       	cpc	r25, r1
     f56:	09 f0       	breq	.+2      	; 0xf5a <L0^A>

00000f58 <L0^A>:
     f58:	0c f4       	brge	.+2      	; 0xf5c <.Loc.221>

00000f5a <L0^A>:
     f5a:	f1 c4       	rjmp	.+2530   	; 0x193e <.L131>

00000f5c <.Loc.221>:
            {
                PORT_LED &= ~(1<<LED_2);         // LED 2 aan
     f5c:	82 e0       	ldi	r24, 0x02	; 2
     f5e:	91 e0       	ldi	r25, 0x01	; 1
     f60:	dc 01       	movw	r26, r24
     f62:	2c 91       	ld	r18, X

00000f64 <.Loc.222>:
     f64:	82 e0       	ldi	r24, 0x02	; 2
     f66:	91 e0       	ldi	r25, 0x01	; 1

00000f68 <.Loc.223>:
     f68:	2f 7d       	andi	r18, 0xDF	; 223
     f6a:	fc 01       	movw	r30, r24
     f6c:	20 83       	st	Z, r18

00000f6e <.Loc.224>:
                PORT_LED &= ~(1<<LED_1);        // LED 1 uit
     f6e:	82 e0       	ldi	r24, 0x02	; 2
     f70:	91 e0       	ldi	r25, 0x01	; 1
     f72:	dc 01       	movw	r26, r24
     f74:	2c 91       	ld	r18, X

00000f76 <.Loc.225>:
     f76:	82 e0       	ldi	r24, 0x02	; 2
     f78:	91 e0       	ldi	r25, 0x01	; 1

00000f7a <.Loc.226>:
     f7a:	2f 7e       	andi	r18, 0xEF	; 239
     f7c:	fc 01       	movw	r30, r24
     f7e:	20 83       	st	Z, r18

00000f80 <.Loc.227>:
                PORT_buzzer &= ~(1<<buzzer);    // buzzer uit
     f80:	82 e0       	ldi	r24, 0x02	; 2
     f82:	91 e0       	ldi	r25, 0x01	; 1
     f84:	dc 01       	movw	r26, r24
     f86:	2c 91       	ld	r18, X

00000f88 <.Loc.228>:
     f88:	82 e0       	ldi	r24, 0x02	; 2
     f8a:	91 e0       	ldi	r25, 0x01	; 1

00000f8c <.Loc.229>:
     f8c:	27 7f       	andi	r18, 0xF7	; 247
     f8e:	fc 01       	movw	r30, r24
     f90:	20 83       	st	Z, r18

00000f92 <.Loc.230>:
                toestand = 4;
     f92:	84 e0       	ldi	r24, 0x04	; 4
     f94:	90 e0       	ldi	r25, 0x00	; 0
     f96:	9a 83       	std	Y+2, r25	; 0x02
     f98:	89 83       	std	Y+1, r24	; 0x01

00000f9a <.Loc.231>:
            }
            break;
     f9a:	d1 c4       	rjmp	.+2466   	; 0x193e <.L131>

00000f9c <.L12>:
        case 33:
            h_bridgeR_set_percentage(snelheiduit);
     f9c:	83 e6       	ldi	r24, 0x63	; 99
     f9e:	0e 94 bf 02 	call	0x57e	; 0x57e <h_bridgeR_set_percentage>

00000fa2 <.Loc.233>:
            h_bridgeL_set_percentage(snelheiduit);
     fa2:	83 e6       	ldi	r24, 0x63	; 99
     fa4:	0e 94 fe 02 	call	0x5fc	; 0x5fc <h_bridgeL_set_percentage>

00000fa8 <.Loc.234>:
            PORT_LED |= (1<<LED_1);
     fa8:	82 e0       	ldi	r24, 0x02	; 2
     faa:	91 e0       	ldi	r25, 0x01	; 1
     fac:	dc 01       	movw	r26, r24
     fae:	2c 91       	ld	r18, X
     fb0:	82 e0       	ldi	r24, 0x02	; 2
     fb2:	91 e0       	ldi	r25, 0x01	; 1

00000fb4 <.Loc.235>:
     fb4:	20 61       	ori	r18, 0x10	; 16
     fb6:	fc 01       	movw	r30, r24
     fb8:	20 83       	st	Z, r18

00000fba <.Loc.236>:
            PORT_LED |= (1<<LED_2);
     fba:	82 e0       	ldi	r24, 0x02	; 2
     fbc:	91 e0       	ldi	r25, 0x01	; 1
     fbe:	dc 01       	movw	r26, r24
     fc0:	2c 91       	ld	r18, X
     fc2:	82 e0       	ldi	r24, 0x02	; 2
     fc4:	91 e0       	ldi	r25, 0x01	; 1

00000fc6 <.Loc.237>:
     fc6:	20 62       	ori	r18, 0x20	; 32
     fc8:	fc 01       	movw	r30, r24
     fca:	20 83       	st	Z, r18

00000fcc <.Loc.238>:
            PORT_buzzer |= (1<<buzzer);
     fcc:	82 e0       	ldi	r24, 0x02	; 2
     fce:	91 e0       	ldi	r25, 0x01	; 1
     fd0:	dc 01       	movw	r26, r24
     fd2:	2c 91       	ld	r18, X
     fd4:	82 e0       	ldi	r24, 0x02	; 2
     fd6:	91 e0       	ldi	r25, 0x01	; 1

00000fd8 <.Loc.239>:
     fd8:	28 60       	ori	r18, 0x08	; 8
     fda:	fc 01       	movw	r30, r24
     fdc:	20 83       	st	Z, r18

00000fde <.Loc.240>:
            if(waardeachter > 100)
     fde:	8d 81       	ldd	r24, Y+5	; 0x05
     fe0:	9e 81       	ldd	r25, Y+6	; 0x06
     fe2:	84 36       	cpi	r24, 0x64	; 100
     fe4:	91 05       	cpc	r25, r1
     fe6:	09 f0       	breq	.+2      	; 0xfea <L0^A>

00000fe8 <L0^A>:
     fe8:	0c f4       	brge	.+2      	; 0xfec <.Loc.241>

00000fea <L0^A>:
     fea:	ac c4       	rjmp	.+2392   	; 0x1944 <.L132>

00000fec <.Loc.241>:
            {
                PORT_LED &= ~(1<<LED_2);         // LED 2 aan
     fec:	82 e0       	ldi	r24, 0x02	; 2
     fee:	91 e0       	ldi	r25, 0x01	; 1
     ff0:	dc 01       	movw	r26, r24
     ff2:	2c 91       	ld	r18, X

00000ff4 <.Loc.242>:
     ff4:	82 e0       	ldi	r24, 0x02	; 2
     ff6:	91 e0       	ldi	r25, 0x01	; 1

00000ff8 <.Loc.243>:
     ff8:	2f 7d       	andi	r18, 0xDF	; 223
     ffa:	fc 01       	movw	r30, r24
     ffc:	20 83       	st	Z, r18

00000ffe <.Loc.244>:
                PORT_LED &= ~(1<<LED_1);        // LED 1 uit
     ffe:	82 e0       	ldi	r24, 0x02	; 2
    1000:	91 e0       	ldi	r25, 0x01	; 1
    1002:	dc 01       	movw	r26, r24
    1004:	2c 91       	ld	r18, X

00001006 <.Loc.245>:
    1006:	82 e0       	ldi	r24, 0x02	; 2
    1008:	91 e0       	ldi	r25, 0x01	; 1

0000100a <.Loc.246>:
    100a:	2f 7e       	andi	r18, 0xEF	; 239
    100c:	fc 01       	movw	r30, r24
    100e:	20 83       	st	Z, r18

00001010 <.Loc.247>:
                PORT_buzzer &= ~(1<<buzzer);    // buzzer uit
    1010:	82 e0       	ldi	r24, 0x02	; 2
    1012:	91 e0       	ldi	r25, 0x01	; 1
    1014:	dc 01       	movw	r26, r24
    1016:	2c 91       	ld	r18, X

00001018 <.Loc.248>:
    1018:	82 e0       	ldi	r24, 0x02	; 2
    101a:	91 e0       	ldi	r25, 0x01	; 1

0000101c <.Loc.249>:
    101c:	27 7f       	andi	r18, 0xF7	; 247
    101e:	fc 01       	movw	r30, r24
    1020:	20 83       	st	Z, r18

00001022 <.Loc.250>:
                toestand = 4;
    1022:	84 e0       	ldi	r24, 0x04	; 4
    1024:	90 e0       	ldi	r25, 0x00	; 0
    1026:	9a 83       	std	Y+2, r25	; 0x02
    1028:	89 83       	std	Y+1, r24	; 0x01

0000102a <.Loc.251>:
            }
            break;
    102a:	8c c4       	rjmp	.+2328   	; 0x1944 <.L132>

0000102c <.L14>:
        case 10:
            rechtdoorrijden();
    102c:	0e 94 36 01 	call	0x26c	; 0x26c <rechtdoorrijden>
    1030:	9e 01       	movw	r18, r28
    1032:	2f 5b       	subi	r18, 0xBF	; 191
    1034:	3f 4f       	sbci	r19, 0xFF	; 255
    1036:	80 e0       	ldi	r24, 0x00	; 0
    1038:	90 e0       	ldi	r25, 0x00	; 0
    103a:	aa e7       	ldi	r26, 0x7A	; 122
    103c:	b4 e4       	ldi	r27, 0x44	; 68
    103e:	f9 01       	movw	r30, r18
    1040:	80 83       	st	Z, r24
    1042:	91 83       	std	Z+1, r25	; 0x01
    1044:	a2 83       	std	Z+2, r26	; 0x02
    1046:	b3 83       	std	Z+3, r27	; 0x03

00001048 <.LBB114>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    1048:	8e 01       	movw	r16, r28
    104a:	0b 5b       	subi	r16, 0xBB	; 187
    104c:	1f 4f       	sbci	r17, 0xFF	; 255
    104e:	ce 01       	movw	r24, r28
    1050:	8f 5b       	subi	r24, 0xBF	; 191
    1052:	9f 4f       	sbci	r25, 0xFF	; 255
    1054:	20 e0       	ldi	r18, 0x00	; 0
    1056:	30 e0       	ldi	r19, 0x00	; 0
    1058:	4a e7       	ldi	r20, 0x7A	; 122
    105a:	55 e4       	ldi	r21, 0x45	; 69
    105c:	dc 01       	movw	r26, r24
    105e:	6d 91       	ld	r22, X+
    1060:	7d 91       	ld	r23, X+
    1062:	8d 91       	ld	r24, X+
    1064:	9c 91       	ld	r25, X
    1066:	0e 94 82 18 	call	0x3104	; 0x3104 <__mulsf3>
    106a:	e7 96       	adiw	r28, 0x37	; 55
    106c:	6c af       	std	Y+60, r22	; 0x3c
    106e:	7d af       	std	Y+61, r23	; 0x3d
    1070:	8e af       	std	Y+62, r24	; 0x3e
    1072:	9f af       	std	Y+63, r25	; 0x3f
    1074:	e7 97       	sbiw	r28, 0x37	; 55
    1076:	e7 96       	adiw	r28, 0x37	; 55
    1078:	8c ad       	ldd	r24, Y+60	; 0x3c
    107a:	9d ad       	ldd	r25, Y+61	; 0x3d
    107c:	ae ad       	ldd	r26, Y+62	; 0x3e
    107e:	bf ad       	ldd	r27, Y+63	; 0x3f
    1080:	e7 97       	sbiw	r28, 0x37	; 55
    1082:	f8 01       	movw	r30, r16
    1084:	80 83       	st	Z, r24
    1086:	91 83       	std	Z+1, r25	; 0x01
    1088:	a2 83       	std	Z+2, r26	; 0x02
    108a:	b3 83       	std	Z+3, r27	; 0x03

0000108c <.Loc.254>:
	if (__tmp < 1.0)
    108c:	ce 01       	movw	r24, r28
    108e:	8b 5b       	subi	r24, 0xBB	; 187
    1090:	9f 4f       	sbci	r25, 0xFF	; 255
    1092:	20 e0       	ldi	r18, 0x00	; 0
    1094:	30 e0       	ldi	r19, 0x00	; 0
    1096:	40 e8       	ldi	r20, 0x80	; 128
    1098:	5f e3       	ldi	r21, 0x3F	; 63
    109a:	dc 01       	movw	r26, r24
    109c:	6d 91       	ld	r22, X+
    109e:	7d 91       	ld	r23, X+
    10a0:	8d 91       	ld	r24, X+
    10a2:	9c 91       	ld	r25, X
    10a4:	0e 94 1e 17 	call	0x2e3c	; 0x2e3c <__cmpsf2>
    10a8:	88 23       	and	r24, r24
    10aa:	4c f4       	brge	.+18     	; 0x10be <.L114>

000010ac <.Loc.255>:
		__ticks = 1;
    10ac:	ce 01       	movw	r24, r28
    10ae:	87 5b       	subi	r24, 0xB7	; 183
    10b0:	9f 4f       	sbci	r25, 0xFF	; 255
    10b2:	21 e0       	ldi	r18, 0x01	; 1
    10b4:	30 e0       	ldi	r19, 0x00	; 0
    10b6:	fc 01       	movw	r30, r24
    10b8:	31 83       	std	Z+1, r19	; 0x01
    10ba:	20 83       	st	Z, r18
    10bc:	99 c0       	rjmp	.+306    	; 0x11f0 <.L52>

000010be <.L114>:
	else if (__tmp > 65535)
    10be:	ce 01       	movw	r24, r28
    10c0:	8b 5b       	subi	r24, 0xBB	; 187
    10c2:	9f 4f       	sbci	r25, 0xFF	; 255
    10c4:	20 e0       	ldi	r18, 0x00	; 0
    10c6:	3f ef       	ldi	r19, 0xFF	; 255
    10c8:	4f e7       	ldi	r20, 0x7F	; 127
    10ca:	57 e4       	ldi	r21, 0x47	; 71
    10cc:	dc 01       	movw	r26, r24
    10ce:	6d 91       	ld	r22, X+
    10d0:	7d 91       	ld	r23, X+
    10d2:	8d 91       	ld	r24, X+
    10d4:	9c 91       	ld	r25, X
    10d6:	0e 94 7d 18 	call	0x30fa	; 0x30fa <__gesf2>
    10da:	88 23       	and	r24, r24
    10dc:	09 f0       	breq	.+2      	; 0x10e0 <L0^A>

000010de <L0^A>:
    10de:	0c f4       	brge	.+2      	; 0x10e2 <.Loc.257>

000010e0 <L0^A>:
    10e0:	69 c0       	rjmp	.+210    	; 0x11b4 <.L115>

000010e2 <.Loc.257>:
		__ticks = (uint16_t) (__ms * 10.0);
    10e2:	ce 01       	movw	r24, r28
    10e4:	8f 5b       	subi	r24, 0xBF	; 191
    10e6:	9f 4f       	sbci	r25, 0xFF	; 255
    10e8:	20 e0       	ldi	r18, 0x00	; 0
    10ea:	30 e0       	ldi	r19, 0x00	; 0
    10ec:	40 e2       	ldi	r20, 0x20	; 32
    10ee:	51 e4       	ldi	r21, 0x41	; 65
    10f0:	fc 01       	movw	r30, r24
    10f2:	60 81       	ld	r22, Z
    10f4:	71 81       	ldd	r23, Z+1	; 0x01
    10f6:	82 81       	ldd	r24, Z+2	; 0x02
    10f8:	93 81       	ldd	r25, Z+3	; 0x03
    10fa:	0e 94 82 18 	call	0x3104	; 0x3104 <__mulsf3>
    10fe:	eb 96       	adiw	r28, 0x3b	; 59
    1100:	6c af       	std	Y+60, r22	; 0x3c
    1102:	7d af       	std	Y+61, r23	; 0x3d
    1104:	8e af       	std	Y+62, r24	; 0x3e
    1106:	9f af       	std	Y+63, r25	; 0x3f
    1108:	eb 97       	sbiw	r28, 0x3b	; 59
    110a:	eb 96       	adiw	r28, 0x3b	; 59
    110c:	8c ad       	ldd	r24, Y+60	; 0x3c
    110e:	9d ad       	ldd	r25, Y+61	; 0x3d
    1110:	ae ad       	ldd	r26, Y+62	; 0x3e
    1112:	bf ad       	ldd	r27, Y+63	; 0x3f
    1114:	eb 97       	sbiw	r28, 0x3b	; 59
    1116:	a3 96       	adiw	r28, 0x23	; 35
    1118:	8c af       	std	Y+60, r24	; 0x3c
    111a:	9d af       	std	Y+61, r25	; 0x3d
    111c:	ae af       	std	Y+62, r26	; 0x3e
    111e:	bf af       	std	Y+63, r27	; 0x3f
    1120:	a3 97       	sbiw	r28, 0x23	; 35

00001122 <.Loc.258>:
    1122:	8e 01       	movw	r16, r28
    1124:	07 5b       	subi	r16, 0xB7	; 183
    1126:	1f 4f       	sbci	r17, 0xFF	; 255
    1128:	a3 96       	adiw	r28, 0x23	; 35
    112a:	6c ad       	ldd	r22, Y+60	; 0x3c
    112c:	7d ad       	ldd	r23, Y+61	; 0x3d
    112e:	8e ad       	ldd	r24, Y+62	; 0x3e
    1130:	9f ad       	ldd	r25, Y+63	; 0x3f
    1132:	a3 97       	sbiw	r28, 0x23	; 35
    1134:	0e 94 9c 17 	call	0x2f38	; 0x2f38 <__fixunssfsi>
    1138:	ef 96       	adiw	r28, 0x3f	; 63
    113a:	6c af       	std	Y+60, r22	; 0x3c
    113c:	7d af       	std	Y+61, r23	; 0x3d
    113e:	8e af       	std	Y+62, r24	; 0x3e
    1140:	9f af       	std	Y+63, r25	; 0x3f
    1142:	ef 97       	sbiw	r28, 0x3f	; 63
    1144:	ed 96       	adiw	r28, 0x3d	; 61
    1146:	ee ad       	ldd	r30, Y+62	; 0x3e
    1148:	ff ad       	ldd	r31, Y+63	; 0x3f
    114a:	ed 97       	sbiw	r28, 0x3d	; 61
    114c:	d8 01       	movw	r26, r16
    114e:	11 96       	adiw	r26, 0x01	; 1
    1150:	fc 93       	st	X, r31
    1152:	ee 93       	st	-X, r30

00001154 <.Loc.259>:
		while(__ticks)
    1154:	26 c0       	rjmp	.+76     	; 0x11a2 <.L55>

00001156 <.L56>:
    1156:	ce 01       	movw	r24, r28
    1158:	85 5b       	subi	r24, 0xB5	; 181
    115a:	9f 4f       	sbci	r25, 0xFF	; 255
    115c:	20 e9       	ldi	r18, 0x90	; 144
    115e:	31 e0       	ldi	r19, 0x01	; 1
    1160:	dc 01       	movw	r26, r24
    1162:	2d 93       	st	X+, r18
    1164:	3c 93       	st	X, r19

00001166 <.LBB116>:
    1166:	ce 01       	movw	r24, r28
    1168:	85 5b       	subi	r24, 0xB5	; 181
    116a:	9f 4f       	sbci	r25, 0xFF	; 255
    116c:	fc 01       	movw	r30, r24
    116e:	80 81       	ld	r24, Z
    1170:	91 81       	ldd	r25, Z+1	; 0x01

00001172 <.L1^B3>:
    1172:	01 97       	sbiw	r24, 0x01	; 1
    1174:	f1 f7       	brne	.-4      	; 0x1172 <.L1^B3>
    1176:	9e 01       	movw	r18, r28
    1178:	25 5b       	subi	r18, 0xB5	; 181
    117a:	3f 4f       	sbci	r19, 0xFF	; 255
    117c:	d9 01       	movw	r26, r18
    117e:	8d 93       	st	X+, r24
    1180:	9c 93       	st	X, r25

00001182 <.Loc.261>:
	...

00001184 <.LBE116>:
			__ticks --;
    1184:	ce 01       	movw	r24, r28
    1186:	87 5b       	subi	r24, 0xB7	; 183
    1188:	9f 4f       	sbci	r25, 0xFF	; 255
    118a:	9e 01       	movw	r18, r28
    118c:	27 5b       	subi	r18, 0xB7	; 183
    118e:	3f 4f       	sbci	r19, 0xFF	; 255
    1190:	f9 01       	movw	r30, r18
    1192:	20 81       	ld	r18, Z
    1194:	31 81       	ldd	r19, Z+1	; 0x01
    1196:	21 50       	subi	r18, 0x01	; 1
    1198:	31 09       	sbc	r19, r1
    119a:	dc 01       	movw	r26, r24
    119c:	11 96       	adiw	r26, 0x01	; 1
    119e:	3c 93       	st	X, r19
    11a0:	2e 93       	st	-X, r18

000011a2 <.L55>:
		while(__ticks)
    11a2:	ce 01       	movw	r24, r28
    11a4:	87 5b       	subi	r24, 0xB7	; 183
    11a6:	9f 4f       	sbci	r25, 0xFF	; 255
    11a8:	fc 01       	movw	r30, r24
    11aa:	80 81       	ld	r24, Z
    11ac:	91 81       	ldd	r25, Z+1	; 0x01
    11ae:	00 97       	sbiw	r24, 0x00	; 0
    11b0:	91 f6       	brne	.-92     	; 0x1156 <.L56>

000011b2 <.Loc.264>:
		return;
    11b2:	39 c0       	rjmp	.+114    	; 0x1226 <.L57>

000011b4 <.L115>:
		__ticks = (uint16_t)__tmp;
    11b4:	8e 01       	movw	r16, r28
    11b6:	07 5b       	subi	r16, 0xB7	; 183
    11b8:	1f 4f       	sbci	r17, 0xFF	; 255
    11ba:	ce 01       	movw	r24, r28
    11bc:	8b 5b       	subi	r24, 0xBB	; 187
    11be:	9f 4f       	sbci	r25, 0xFF	; 255
    11c0:	dc 01       	movw	r26, r24
    11c2:	6d 91       	ld	r22, X+
    11c4:	7d 91       	ld	r23, X+
    11c6:	8d 91       	ld	r24, X+
    11c8:	9c 91       	ld	r25, X
    11ca:	0e 94 9c 17 	call	0x2f38	; 0x2f38 <__fixunssfsi>
    11ce:	c1 58       	subi	r28, 0x81	; 129
    11d0:	df 4f       	sbci	r29, 0xFF	; 255
    11d2:	68 83       	st	Y, r22
    11d4:	79 83       	std	Y+1, r23	; 0x01
    11d6:	8a 83       	std	Y+2, r24	; 0x02
    11d8:	9b 83       	std	Y+3, r25	; 0x03
    11da:	cf 57       	subi	r28, 0x7F	; 127
    11dc:	d0 40       	sbci	r29, 0x00	; 0
    11de:	c1 58       	subi	r28, 0x81	; 129
    11e0:	df 4f       	sbci	r29, 0xFF	; 255
    11e2:	88 81       	ld	r24, Y
    11e4:	99 81       	ldd	r25, Y+1	; 0x01
    11e6:	cf 57       	subi	r28, 0x7F	; 127
    11e8:	d0 40       	sbci	r29, 0x00	; 0
    11ea:	f8 01       	movw	r30, r16
    11ec:	91 83       	std	Z+1, r25	; 0x01
    11ee:	80 83       	st	Z, r24

000011f0 <.L52>:
    11f0:	ce 01       	movw	r24, r28
    11f2:	83 5b       	subi	r24, 0xB3	; 179
    11f4:	9f 4f       	sbci	r25, 0xFF	; 255
    11f6:	9e 01       	movw	r18, r28
    11f8:	27 5b       	subi	r18, 0xB7	; 183
    11fa:	3f 4f       	sbci	r19, 0xFF	; 255
    11fc:	d9 01       	movw	r26, r18
    11fe:	2d 91       	ld	r18, X+
    1200:	3c 91       	ld	r19, X
    1202:	fc 01       	movw	r30, r24
    1204:	31 83       	std	Z+1, r19	; 0x01
    1206:	20 83       	st	Z, r18

00001208 <.LBB118>:
    1208:	ce 01       	movw	r24, r28
    120a:	83 5b       	subi	r24, 0xB3	; 179
    120c:	9f 4f       	sbci	r25, 0xFF	; 255
    120e:	dc 01       	movw	r26, r24
    1210:	8d 91       	ld	r24, X+
    1212:	9c 91       	ld	r25, X

00001214 <.L1^B4>:
    1214:	01 97       	sbiw	r24, 0x01	; 1
    1216:	f1 f7       	brne	.-4      	; 0x1214 <.L1^B4>
    1218:	9e 01       	movw	r18, r28
    121a:	23 5b       	subi	r18, 0xB3	; 179
    121c:	3f 4f       	sbci	r19, 0xFF	; 255
    121e:	f9 01       	movw	r30, r18
    1220:	91 83       	std	Z+1, r25	; 0x01
    1222:	80 83       	st	Z, r24

00001224 <.Loc.267>:
	...

00001226 <.L57>:
            _delay_ms(1000);
            bochtrechts();
    1226:	0e 94 0a 01 	call	0x214	; 0x214 <bochtrechts>
    122a:	80 e0       	ldi	r24, 0x00	; 0
    122c:	90 e0       	ldi	r25, 0x00	; 0
    122e:	aa ef       	ldi	r26, 0xFA	; 250
    1230:	b3 e4       	ldi	r27, 0x43	; 67
    1232:	8b ab       	std	Y+51, r24	; 0x33
    1234:	9c ab       	std	Y+52, r25	; 0x34
    1236:	ad ab       	std	Y+53, r26	; 0x35
    1238:	be ab       	std	Y+54, r27	; 0x36

0000123a <.LBB120>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    123a:	20 e0       	ldi	r18, 0x00	; 0
    123c:	30 e0       	ldi	r19, 0x00	; 0
    123e:	4a e7       	ldi	r20, 0x7A	; 122
    1240:	55 e4       	ldi	r21, 0x45	; 69
    1242:	6b a9       	ldd	r22, Y+51	; 0x33
    1244:	7c a9       	ldd	r23, Y+52	; 0x34
    1246:	8d a9       	ldd	r24, Y+53	; 0x35
    1248:	9e a9       	ldd	r25, Y+54	; 0x36
    124a:	0e 94 82 18 	call	0x3104	; 0x3104 <__mulsf3>
    124e:	cd 57       	subi	r28, 0x7D	; 125
    1250:	df 4f       	sbci	r29, 0xFF	; 255
    1252:	68 83       	st	Y, r22
    1254:	79 83       	std	Y+1, r23	; 0x01
    1256:	8a 83       	std	Y+2, r24	; 0x02
    1258:	9b 83       	std	Y+3, r25	; 0x03
    125a:	c3 58       	subi	r28, 0x83	; 131
    125c:	d0 40       	sbci	r29, 0x00	; 0
    125e:	cd 57       	subi	r28, 0x7D	; 125
    1260:	df 4f       	sbci	r29, 0xFF	; 255
    1262:	88 81       	ld	r24, Y
    1264:	99 81       	ldd	r25, Y+1	; 0x01
    1266:	aa 81       	ldd	r26, Y+2	; 0x02
    1268:	bb 81       	ldd	r27, Y+3	; 0x03
    126a:	c3 58       	subi	r28, 0x83	; 131
    126c:	d0 40       	sbci	r29, 0x00	; 0
    126e:	8f ab       	std	Y+55, r24	; 0x37
    1270:	98 af       	std	Y+56, r25	; 0x38
    1272:	a9 af       	std	Y+57, r26	; 0x39
    1274:	ba af       	std	Y+58, r27	; 0x3a

00001276 <.Loc.270>:
	if (__tmp < 1.0)
    1276:	20 e0       	ldi	r18, 0x00	; 0
    1278:	30 e0       	ldi	r19, 0x00	; 0
    127a:	40 e8       	ldi	r20, 0x80	; 128
    127c:	5f e3       	ldi	r21, 0x3F	; 63
    127e:	6f a9       	ldd	r22, Y+55	; 0x37
    1280:	78 ad       	ldd	r23, Y+56	; 0x38
    1282:	89 ad       	ldd	r24, Y+57	; 0x39
    1284:	9a ad       	ldd	r25, Y+58	; 0x3a
    1286:	0e 94 1e 17 	call	0x2e3c	; 0x2e3c <__cmpsf2>
    128a:	88 23       	and	r24, r24
    128c:	2c f4       	brge	.+10     	; 0x1298 <.L116>

0000128e <.Loc.271>:
		__ticks = 1;
    128e:	81 e0       	ldi	r24, 0x01	; 1
    1290:	90 e0       	ldi	r25, 0x00	; 0
    1292:	9c af       	std	Y+60, r25	; 0x3c
    1294:	8b af       	std	Y+59, r24	; 0x3b
    1296:	72 c0       	rjmp	.+228    	; 0x137c <.L60>

00001298 <.L116>:
	else if (__tmp > 65535)
    1298:	20 e0       	ldi	r18, 0x00	; 0
    129a:	3f ef       	ldi	r19, 0xFF	; 255
    129c:	4f e7       	ldi	r20, 0x7F	; 127
    129e:	57 e4       	ldi	r21, 0x47	; 71
    12a0:	6f a9       	ldd	r22, Y+55	; 0x37
    12a2:	78 ad       	ldd	r23, Y+56	; 0x38
    12a4:	89 ad       	ldd	r24, Y+57	; 0x39
    12a6:	9a ad       	ldd	r25, Y+58	; 0x3a
    12a8:	0e 94 7d 18 	call	0x30fa	; 0x30fa <__gesf2>
    12ac:	88 23       	and	r24, r24
    12ae:	09 f0       	breq	.+2      	; 0x12b2 <L0^A>

000012b0 <L0^A>:
    12b0:	0c f4       	brge	.+2      	; 0x12b4 <.Loc.273>

000012b2 <L0^A>:
    12b2:	4e c0       	rjmp	.+156    	; 0x1350 <.L117>

000012b4 <.Loc.273>:
		__ticks = (uint16_t) (__ms * 10.0);
    12b4:	20 e0       	ldi	r18, 0x00	; 0
    12b6:	30 e0       	ldi	r19, 0x00	; 0
    12b8:	40 e2       	ldi	r20, 0x20	; 32
    12ba:	51 e4       	ldi	r21, 0x41	; 65
    12bc:	6b a9       	ldd	r22, Y+51	; 0x33
    12be:	7c a9       	ldd	r23, Y+52	; 0x34
    12c0:	8d a9       	ldd	r24, Y+53	; 0x35
    12c2:	9e a9       	ldd	r25, Y+54	; 0x36
    12c4:	0e 94 82 18 	call	0x3104	; 0x3104 <__mulsf3>
    12c8:	c9 57       	subi	r28, 0x79	; 121
    12ca:	df 4f       	sbci	r29, 0xFF	; 255
    12cc:	68 83       	st	Y, r22
    12ce:	79 83       	std	Y+1, r23	; 0x01
    12d0:	8a 83       	std	Y+2, r24	; 0x02
    12d2:	9b 83       	std	Y+3, r25	; 0x03
    12d4:	c7 58       	subi	r28, 0x87	; 135
    12d6:	d0 40       	sbci	r29, 0x00	; 0
    12d8:	c9 57       	subi	r28, 0x79	; 121
    12da:	df 4f       	sbci	r29, 0xFF	; 255
    12dc:	88 81       	ld	r24, Y
    12de:	99 81       	ldd	r25, Y+1	; 0x01
    12e0:	aa 81       	ldd	r26, Y+2	; 0x02
    12e2:	bb 81       	ldd	r27, Y+3	; 0x03
    12e4:	c7 58       	subi	r28, 0x87	; 135
    12e6:	d0 40       	sbci	r29, 0x00	; 0
    12e8:	6f 96       	adiw	r28, 0x1f	; 31
    12ea:	8c af       	std	Y+60, r24	; 0x3c
    12ec:	9d af       	std	Y+61, r25	; 0x3d
    12ee:	ae af       	std	Y+62, r26	; 0x3e
    12f0:	bf af       	std	Y+63, r27	; 0x3f
    12f2:	6f 97       	sbiw	r28, 0x1f	; 31

000012f4 <.Loc.274>:
    12f4:	6f 96       	adiw	r28, 0x1f	; 31
    12f6:	6c ad       	ldd	r22, Y+60	; 0x3c
    12f8:	7d ad       	ldd	r23, Y+61	; 0x3d
    12fa:	8e ad       	ldd	r24, Y+62	; 0x3e
    12fc:	9f ad       	ldd	r25, Y+63	; 0x3f
    12fe:	6f 97       	sbiw	r28, 0x1f	; 31
    1300:	0e 94 9c 17 	call	0x2f38	; 0x2f38 <__fixunssfsi>
    1304:	c5 57       	subi	r28, 0x75	; 117
    1306:	df 4f       	sbci	r29, 0xFF	; 255
    1308:	68 83       	st	Y, r22
    130a:	79 83       	std	Y+1, r23	; 0x01
    130c:	8a 83       	std	Y+2, r24	; 0x02
    130e:	9b 83       	std	Y+3, r25	; 0x03
    1310:	cb 58       	subi	r28, 0x8B	; 139
    1312:	d0 40       	sbci	r29, 0x00	; 0
    1314:	c5 57       	subi	r28, 0x75	; 117
    1316:	df 4f       	sbci	r29, 0xFF	; 255
    1318:	a8 81       	ld	r26, Y
    131a:	b9 81       	ldd	r27, Y+1	; 0x01
    131c:	cb 58       	subi	r28, 0x8B	; 139
    131e:	d0 40       	sbci	r29, 0x00	; 0
    1320:	bc af       	std	Y+60, r27	; 0x3c
    1322:	ab af       	std	Y+59, r26	; 0x3b

00001324 <.Loc.275>:
		while(__ticks)
    1324:	10 c0       	rjmp	.+32     	; 0x1346 <.L63>

00001326 <.L64>:
    1326:	80 e9       	ldi	r24, 0x90	; 144
    1328:	91 e0       	ldi	r25, 0x01	; 1
    132a:	9e af       	std	Y+62, r25	; 0x3e
    132c:	8d af       	std	Y+61, r24	; 0x3d

0000132e <.LBB122>:
    132e:	8d ad       	ldd	r24, Y+61	; 0x3d
    1330:	9e ad       	ldd	r25, Y+62	; 0x3e

00001332 <.L1^B5>:
    1332:	01 97       	sbiw	r24, 0x01	; 1
    1334:	f1 f7       	brne	.-4      	; 0x1332 <.L1^B5>
    1336:	9e af       	std	Y+62, r25	; 0x3e
    1338:	8d af       	std	Y+61, r24	; 0x3d

0000133a <.Loc.277>:
	...

0000133c <.LBE122>:
			__ticks --;
    133c:	8b ad       	ldd	r24, Y+59	; 0x3b
    133e:	9c ad       	ldd	r25, Y+60	; 0x3c
    1340:	01 97       	sbiw	r24, 0x01	; 1
    1342:	9c af       	std	Y+60, r25	; 0x3c
    1344:	8b af       	std	Y+59, r24	; 0x3b

00001346 <.L63>:
		while(__ticks)
    1346:	8b ad       	ldd	r24, Y+59	; 0x3b
    1348:	9c ad       	ldd	r25, Y+60	; 0x3c
    134a:	00 97       	sbiw	r24, 0x00	; 0
    134c:	61 f7       	brne	.-40     	; 0x1326 <.L64>

0000134e <.Loc.280>:
		return;
    134e:	2b c0       	rjmp	.+86     	; 0x13a6 <.L65>

00001350 <.L117>:
		__ticks = (uint16_t)__tmp;
    1350:	6f a9       	ldd	r22, Y+55	; 0x37
    1352:	78 ad       	ldd	r23, Y+56	; 0x38
    1354:	89 ad       	ldd	r24, Y+57	; 0x39
    1356:	9a ad       	ldd	r25, Y+58	; 0x3a
    1358:	0e 94 9c 17 	call	0x2f38	; 0x2f38 <__fixunssfsi>
    135c:	c1 57       	subi	r28, 0x71	; 113
    135e:	df 4f       	sbci	r29, 0xFF	; 255
    1360:	68 83       	st	Y, r22
    1362:	79 83       	std	Y+1, r23	; 0x01
    1364:	8a 83       	std	Y+2, r24	; 0x02
    1366:	9b 83       	std	Y+3, r25	; 0x03
    1368:	cf 58       	subi	r28, 0x8F	; 143
    136a:	d0 40       	sbci	r29, 0x00	; 0
    136c:	c1 57       	subi	r28, 0x71	; 113
    136e:	df 4f       	sbci	r29, 0xFF	; 255
    1370:	e8 81       	ld	r30, Y
    1372:	f9 81       	ldd	r31, Y+1	; 0x01
    1374:	cf 58       	subi	r28, 0x8F	; 143
    1376:	d0 40       	sbci	r29, 0x00	; 0
    1378:	fc af       	std	Y+60, r31	; 0x3c
    137a:	eb af       	std	Y+59, r30	; 0x3b

0000137c <.L60>:
    137c:	2b ad       	ldd	r18, Y+59	; 0x3b
    137e:	3c ad       	ldd	r19, Y+60	; 0x3c
    1380:	ce 01       	movw	r24, r28
    1382:	cf 96       	adiw	r24, 0x3f	; 63
    1384:	dc 01       	movw	r26, r24
    1386:	2d 93       	st	X+, r18
    1388:	3c 93       	st	X, r19

0000138a <.LBB124>:
    138a:	ce 01       	movw	r24, r28
    138c:	cf 96       	adiw	r24, 0x3f	; 63
    138e:	fc 01       	movw	r30, r24
    1390:	80 81       	ld	r24, Z
    1392:	91 81       	ldd	r25, Z+1	; 0x01

00001394 <.L1^B6>:
    1394:	01 97       	sbiw	r24, 0x01	; 1
    1396:	f1 f7       	brne	.-4      	; 0x1394 <.L1^B6>
    1398:	9e 01       	movw	r18, r28
    139a:	21 5c       	subi	r18, 0xC1	; 193
    139c:	3f 4f       	sbci	r19, 0xFF	; 255
    139e:	d9 01       	movw	r26, r18
    13a0:	8d 93       	st	X+, r24
    13a2:	9c 93       	st	X, r25

000013a4 <.Loc.283>:
	...

000013a6 <.L65>:
            _delay_ms(500);
            rechtdoorrijden();
    13a6:	0e 94 36 01 	call	0x26c	; 0x26c <rechtdoorrijden>
    13aa:	80 e0       	ldi	r24, 0x00	; 0
    13ac:	90 e0       	ldi	r25, 0x00	; 0
    13ae:	aa e7       	ldi	r26, 0x7A	; 122
    13b0:	b4 e4       	ldi	r27, 0x44	; 68
    13b2:	8d a3       	std	Y+37, r24	; 0x25
    13b4:	9e a3       	std	Y+38, r25	; 0x26
    13b6:	af a3       	std	Y+39, r26	; 0x27
    13b8:	b8 a7       	std	Y+40, r27	; 0x28

000013ba <.LBB126>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    13ba:	20 e0       	ldi	r18, 0x00	; 0
    13bc:	30 e0       	ldi	r19, 0x00	; 0
    13be:	4a e7       	ldi	r20, 0x7A	; 122
    13c0:	55 e4       	ldi	r21, 0x45	; 69
    13c2:	6d a1       	ldd	r22, Y+37	; 0x25
    13c4:	7e a1       	ldd	r23, Y+38	; 0x26
    13c6:	8f a1       	ldd	r24, Y+39	; 0x27
    13c8:	98 a5       	ldd	r25, Y+40	; 0x28
    13ca:	0e 94 82 18 	call	0x3104	; 0x3104 <__mulsf3>
    13ce:	cd 56       	subi	r28, 0x6D	; 109
    13d0:	df 4f       	sbci	r29, 0xFF	; 255
    13d2:	68 83       	st	Y, r22
    13d4:	79 83       	std	Y+1, r23	; 0x01
    13d6:	8a 83       	std	Y+2, r24	; 0x02
    13d8:	9b 83       	std	Y+3, r25	; 0x03
    13da:	c3 59       	subi	r28, 0x93	; 147
    13dc:	d0 40       	sbci	r29, 0x00	; 0
    13de:	cd 56       	subi	r28, 0x6D	; 109
    13e0:	df 4f       	sbci	r29, 0xFF	; 255
    13e2:	88 81       	ld	r24, Y
    13e4:	99 81       	ldd	r25, Y+1	; 0x01
    13e6:	aa 81       	ldd	r26, Y+2	; 0x02
    13e8:	bb 81       	ldd	r27, Y+3	; 0x03
    13ea:	c3 59       	subi	r28, 0x93	; 147
    13ec:	d0 40       	sbci	r29, 0x00	; 0
    13ee:	89 a7       	std	Y+41, r24	; 0x29
    13f0:	9a a7       	std	Y+42, r25	; 0x2a
    13f2:	ab a7       	std	Y+43, r26	; 0x2b
    13f4:	bc a7       	std	Y+44, r27	; 0x2c

000013f6 <.Loc.286>:
	if (__tmp < 1.0)
    13f6:	20 e0       	ldi	r18, 0x00	; 0
    13f8:	30 e0       	ldi	r19, 0x00	; 0
    13fa:	40 e8       	ldi	r20, 0x80	; 128
    13fc:	5f e3       	ldi	r21, 0x3F	; 63
    13fe:	69 a5       	ldd	r22, Y+41	; 0x29
    1400:	7a a5       	ldd	r23, Y+42	; 0x2a
    1402:	8b a5       	ldd	r24, Y+43	; 0x2b
    1404:	9c a5       	ldd	r25, Y+44	; 0x2c
    1406:	0e 94 1e 17 	call	0x2e3c	; 0x2e3c <__cmpsf2>
    140a:	88 23       	and	r24, r24
    140c:	2c f4       	brge	.+10     	; 0x1418 <.L118>

0000140e <.Loc.287>:
		__ticks = 1;
    140e:	81 e0       	ldi	r24, 0x01	; 1
    1410:	90 e0       	ldi	r25, 0x00	; 0
    1412:	9e a7       	std	Y+46, r25	; 0x2e
    1414:	8d a7       	std	Y+45, r24	; 0x2d
    1416:	72 c0       	rjmp	.+228    	; 0x14fc <.L68>

00001418 <.L118>:
	else if (__tmp > 65535)
    1418:	20 e0       	ldi	r18, 0x00	; 0
    141a:	3f ef       	ldi	r19, 0xFF	; 255
    141c:	4f e7       	ldi	r20, 0x7F	; 127
    141e:	57 e4       	ldi	r21, 0x47	; 71
    1420:	69 a5       	ldd	r22, Y+41	; 0x29
    1422:	7a a5       	ldd	r23, Y+42	; 0x2a
    1424:	8b a5       	ldd	r24, Y+43	; 0x2b
    1426:	9c a5       	ldd	r25, Y+44	; 0x2c
    1428:	0e 94 7d 18 	call	0x30fa	; 0x30fa <__gesf2>
    142c:	88 23       	and	r24, r24
    142e:	09 f0       	breq	.+2      	; 0x1432 <L0^A>

00001430 <L0^A>:
    1430:	0c f4       	brge	.+2      	; 0x1434 <.Loc.289>

00001432 <L0^A>:
    1432:	4e c0       	rjmp	.+156    	; 0x14d0 <.L119>

00001434 <.Loc.289>:
		__ticks = (uint16_t) (__ms * 10.0);
    1434:	20 e0       	ldi	r18, 0x00	; 0
    1436:	30 e0       	ldi	r19, 0x00	; 0
    1438:	40 e2       	ldi	r20, 0x20	; 32
    143a:	51 e4       	ldi	r21, 0x41	; 65
    143c:	6d a1       	ldd	r22, Y+37	; 0x25
    143e:	7e a1       	ldd	r23, Y+38	; 0x26
    1440:	8f a1       	ldd	r24, Y+39	; 0x27
    1442:	98 a5       	ldd	r25, Y+40	; 0x28
    1444:	0e 94 82 18 	call	0x3104	; 0x3104 <__mulsf3>
    1448:	c9 56       	subi	r28, 0x69	; 105
    144a:	df 4f       	sbci	r29, 0xFF	; 255
    144c:	68 83       	st	Y, r22
    144e:	79 83       	std	Y+1, r23	; 0x01
    1450:	8a 83       	std	Y+2, r24	; 0x02
    1452:	9b 83       	std	Y+3, r25	; 0x03
    1454:	c7 59       	subi	r28, 0x97	; 151
    1456:	d0 40       	sbci	r29, 0x00	; 0
    1458:	c9 56       	subi	r28, 0x69	; 105
    145a:	df 4f       	sbci	r29, 0xFF	; 255
    145c:	88 81       	ld	r24, Y
    145e:	99 81       	ldd	r25, Y+1	; 0x01
    1460:	aa 81       	ldd	r26, Y+2	; 0x02
    1462:	bb 81       	ldd	r27, Y+3	; 0x03
    1464:	c7 59       	subi	r28, 0x97	; 151
    1466:	d0 40       	sbci	r29, 0x00	; 0
    1468:	6b 96       	adiw	r28, 0x1b	; 27
    146a:	8c af       	std	Y+60, r24	; 0x3c
    146c:	9d af       	std	Y+61, r25	; 0x3d
    146e:	ae af       	std	Y+62, r26	; 0x3e
    1470:	bf af       	std	Y+63, r27	; 0x3f
    1472:	6b 97       	sbiw	r28, 0x1b	; 27

00001474 <.Loc.290>:
    1474:	6b 96       	adiw	r28, 0x1b	; 27
    1476:	6c ad       	ldd	r22, Y+60	; 0x3c
    1478:	7d ad       	ldd	r23, Y+61	; 0x3d
    147a:	8e ad       	ldd	r24, Y+62	; 0x3e
    147c:	9f ad       	ldd	r25, Y+63	; 0x3f
    147e:	6b 97       	sbiw	r28, 0x1b	; 27
    1480:	0e 94 9c 17 	call	0x2f38	; 0x2f38 <__fixunssfsi>
    1484:	c5 56       	subi	r28, 0x65	; 101
    1486:	df 4f       	sbci	r29, 0xFF	; 255
    1488:	68 83       	st	Y, r22
    148a:	79 83       	std	Y+1, r23	; 0x01
    148c:	8a 83       	std	Y+2, r24	; 0x02
    148e:	9b 83       	std	Y+3, r25	; 0x03
    1490:	cb 59       	subi	r28, 0x9B	; 155
    1492:	d0 40       	sbci	r29, 0x00	; 0
    1494:	c5 56       	subi	r28, 0x65	; 101
    1496:	df 4f       	sbci	r29, 0xFF	; 255
    1498:	a8 81       	ld	r26, Y
    149a:	b9 81       	ldd	r27, Y+1	; 0x01
    149c:	cb 59       	subi	r28, 0x9B	; 155
    149e:	d0 40       	sbci	r29, 0x00	; 0
    14a0:	be a7       	std	Y+46, r27	; 0x2e
    14a2:	ad a7       	std	Y+45, r26	; 0x2d

000014a4 <.Loc.291>:
		while(__ticks)
    14a4:	10 c0       	rjmp	.+32     	; 0x14c6 <.L71>

000014a6 <.L72>:
    14a6:	80 e9       	ldi	r24, 0x90	; 144
    14a8:	91 e0       	ldi	r25, 0x01	; 1
    14aa:	98 ab       	std	Y+48, r25	; 0x30
    14ac:	8f a7       	std	Y+47, r24	; 0x2f

000014ae <.LBB128>:
    14ae:	8f a5       	ldd	r24, Y+47	; 0x2f
    14b0:	98 a9       	ldd	r25, Y+48	; 0x30

000014b2 <.L1^B7>:
    14b2:	01 97       	sbiw	r24, 0x01	; 1
    14b4:	f1 f7       	brne	.-4      	; 0x14b2 <.L1^B7>
    14b6:	98 ab       	std	Y+48, r25	; 0x30
    14b8:	8f a7       	std	Y+47, r24	; 0x2f

000014ba <.Loc.293>:
	...

000014bc <.LBE128>:
			__ticks --;
    14bc:	8d a5       	ldd	r24, Y+45	; 0x2d
    14be:	9e a5       	ldd	r25, Y+46	; 0x2e
    14c0:	01 97       	sbiw	r24, 0x01	; 1
    14c2:	9e a7       	std	Y+46, r25	; 0x2e
    14c4:	8d a7       	std	Y+45, r24	; 0x2d

000014c6 <.L71>:
		while(__ticks)
    14c6:	8d a5       	ldd	r24, Y+45	; 0x2d
    14c8:	9e a5       	ldd	r25, Y+46	; 0x2e
    14ca:	00 97       	sbiw	r24, 0x00	; 0
    14cc:	61 f7       	brne	.-40     	; 0x14a6 <.L72>

000014ce <.Loc.296>:
		return;
    14ce:	21 c0       	rjmp	.+66     	; 0x1512 <.L73>

000014d0 <.L119>:
		__ticks = (uint16_t)__tmp;
    14d0:	69 a5       	ldd	r22, Y+41	; 0x29
    14d2:	7a a5       	ldd	r23, Y+42	; 0x2a
    14d4:	8b a5       	ldd	r24, Y+43	; 0x2b
    14d6:	9c a5       	ldd	r25, Y+44	; 0x2c
    14d8:	0e 94 9c 17 	call	0x2f38	; 0x2f38 <__fixunssfsi>
    14dc:	c1 56       	subi	r28, 0x61	; 97
    14de:	df 4f       	sbci	r29, 0xFF	; 255
    14e0:	68 83       	st	Y, r22
    14e2:	79 83       	std	Y+1, r23	; 0x01
    14e4:	8a 83       	std	Y+2, r24	; 0x02
    14e6:	9b 83       	std	Y+3, r25	; 0x03
    14e8:	cf 59       	subi	r28, 0x9F	; 159
    14ea:	d0 40       	sbci	r29, 0x00	; 0
    14ec:	c1 56       	subi	r28, 0x61	; 97
    14ee:	df 4f       	sbci	r29, 0xFF	; 255
    14f0:	e8 81       	ld	r30, Y
    14f2:	f9 81       	ldd	r31, Y+1	; 0x01
    14f4:	cf 59       	subi	r28, 0x9F	; 159
    14f6:	d0 40       	sbci	r29, 0x00	; 0
    14f8:	fe a7       	std	Y+46, r31	; 0x2e
    14fa:	ed a7       	std	Y+45, r30	; 0x2d

000014fc <.L68>:
    14fc:	8d a5       	ldd	r24, Y+45	; 0x2d
    14fe:	9e a5       	ldd	r25, Y+46	; 0x2e
    1500:	9a ab       	std	Y+50, r25	; 0x32
    1502:	89 ab       	std	Y+49, r24	; 0x31

00001504 <.LBB130>:
    1504:	89 a9       	ldd	r24, Y+49	; 0x31
    1506:	9a a9       	ldd	r25, Y+50	; 0x32

00001508 <.L1^B8>:
    1508:	01 97       	sbiw	r24, 0x01	; 1
    150a:	f1 f7       	brne	.-4      	; 0x1508 <.L1^B8>
    150c:	9a ab       	std	Y+50, r25	; 0x32
    150e:	89 ab       	std	Y+49, r24	; 0x31

00001510 <.Loc.299>:
	...

00001512 <.L73>:
            _delay_ms(1000);
            bochtrechts();
    1512:	0e 94 0a 01 	call	0x214	; 0x214 <bochtrechts>
    1516:	80 e0       	ldi	r24, 0x00	; 0
    1518:	90 e0       	ldi	r25, 0x00	; 0
    151a:	aa ef       	ldi	r26, 0xFA	; 250
    151c:	b3 e4       	ldi	r27, 0x43	; 67
    151e:	8f 8b       	std	Y+23, r24	; 0x17
    1520:	98 8f       	std	Y+24, r25	; 0x18
    1522:	a9 8f       	std	Y+25, r26	; 0x19
    1524:	ba 8f       	std	Y+26, r27	; 0x1a

00001526 <.LBB132>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    1526:	20 e0       	ldi	r18, 0x00	; 0
    1528:	30 e0       	ldi	r19, 0x00	; 0
    152a:	4a e7       	ldi	r20, 0x7A	; 122
    152c:	55 e4       	ldi	r21, 0x45	; 69
    152e:	6f 89       	ldd	r22, Y+23	; 0x17
    1530:	78 8d       	ldd	r23, Y+24	; 0x18
    1532:	89 8d       	ldd	r24, Y+25	; 0x19
    1534:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1536:	0e 94 82 18 	call	0x3104	; 0x3104 <__mulsf3>
    153a:	cd 55       	subi	r28, 0x5D	; 93
    153c:	df 4f       	sbci	r29, 0xFF	; 255
    153e:	68 83       	st	Y, r22
    1540:	79 83       	std	Y+1, r23	; 0x01
    1542:	8a 83       	std	Y+2, r24	; 0x02
    1544:	9b 83       	std	Y+3, r25	; 0x03
    1546:	c3 5a       	subi	r28, 0xA3	; 163
    1548:	d0 40       	sbci	r29, 0x00	; 0
    154a:	cd 55       	subi	r28, 0x5D	; 93
    154c:	df 4f       	sbci	r29, 0xFF	; 255
    154e:	88 81       	ld	r24, Y
    1550:	99 81       	ldd	r25, Y+1	; 0x01
    1552:	aa 81       	ldd	r26, Y+2	; 0x02
    1554:	bb 81       	ldd	r27, Y+3	; 0x03
    1556:	c3 5a       	subi	r28, 0xA3	; 163
    1558:	d0 40       	sbci	r29, 0x00	; 0
    155a:	8b 8f       	std	Y+27, r24	; 0x1b
    155c:	9c 8f       	std	Y+28, r25	; 0x1c
    155e:	ad 8f       	std	Y+29, r26	; 0x1d
    1560:	be 8f       	std	Y+30, r27	; 0x1e

00001562 <.Loc.302>:
	if (__tmp < 1.0)
    1562:	20 e0       	ldi	r18, 0x00	; 0
    1564:	30 e0       	ldi	r19, 0x00	; 0
    1566:	40 e8       	ldi	r20, 0x80	; 128
    1568:	5f e3       	ldi	r21, 0x3F	; 63
    156a:	6b 8d       	ldd	r22, Y+27	; 0x1b
    156c:	7c 8d       	ldd	r23, Y+28	; 0x1c
    156e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1570:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1572:	0e 94 1e 17 	call	0x2e3c	; 0x2e3c <__cmpsf2>
    1576:	88 23       	and	r24, r24
    1578:	2c f4       	brge	.+10     	; 0x1584 <.L120>

0000157a <.Loc.303>:
		__ticks = 1;
    157a:	81 e0       	ldi	r24, 0x01	; 1
    157c:	90 e0       	ldi	r25, 0x00	; 0
    157e:	98 a3       	std	Y+32, r25	; 0x20
    1580:	8f 8f       	std	Y+31, r24	; 0x1f
    1582:	72 c0       	rjmp	.+228    	; 0x1668 <.L76>

00001584 <.L120>:
	else if (__tmp > 65535)
    1584:	20 e0       	ldi	r18, 0x00	; 0
    1586:	3f ef       	ldi	r19, 0xFF	; 255
    1588:	4f e7       	ldi	r20, 0x7F	; 127
    158a:	57 e4       	ldi	r21, 0x47	; 71
    158c:	6b 8d       	ldd	r22, Y+27	; 0x1b
    158e:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1590:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1592:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1594:	0e 94 7d 18 	call	0x30fa	; 0x30fa <__gesf2>
    1598:	88 23       	and	r24, r24
    159a:	09 f0       	breq	.+2      	; 0x159e <L0^A>

0000159c <L0^A>:
    159c:	0c f4       	brge	.+2      	; 0x15a0 <.Loc.305>

0000159e <L0^A>:
    159e:	4e c0       	rjmp	.+156    	; 0x163c <.L121>

000015a0 <.Loc.305>:
		__ticks = (uint16_t) (__ms * 10.0);
    15a0:	20 e0       	ldi	r18, 0x00	; 0
    15a2:	30 e0       	ldi	r19, 0x00	; 0
    15a4:	40 e2       	ldi	r20, 0x20	; 32
    15a6:	51 e4       	ldi	r21, 0x41	; 65
    15a8:	6f 89       	ldd	r22, Y+23	; 0x17
    15aa:	78 8d       	ldd	r23, Y+24	; 0x18
    15ac:	89 8d       	ldd	r24, Y+25	; 0x19
    15ae:	9a 8d       	ldd	r25, Y+26	; 0x1a
    15b0:	0e 94 82 18 	call	0x3104	; 0x3104 <__mulsf3>
    15b4:	c9 55       	subi	r28, 0x59	; 89
    15b6:	df 4f       	sbci	r29, 0xFF	; 255
    15b8:	68 83       	st	Y, r22
    15ba:	79 83       	std	Y+1, r23	; 0x01
    15bc:	8a 83       	std	Y+2, r24	; 0x02
    15be:	9b 83       	std	Y+3, r25	; 0x03
    15c0:	c7 5a       	subi	r28, 0xA7	; 167
    15c2:	d0 40       	sbci	r29, 0x00	; 0
    15c4:	c9 55       	subi	r28, 0x59	; 89
    15c6:	df 4f       	sbci	r29, 0xFF	; 255
    15c8:	88 81       	ld	r24, Y
    15ca:	99 81       	ldd	r25, Y+1	; 0x01
    15cc:	aa 81       	ldd	r26, Y+2	; 0x02
    15ce:	bb 81       	ldd	r27, Y+3	; 0x03
    15d0:	c7 5a       	subi	r28, 0xA7	; 167
    15d2:	d0 40       	sbci	r29, 0x00	; 0
    15d4:	67 96       	adiw	r28, 0x17	; 23
    15d6:	8c af       	std	Y+60, r24	; 0x3c
    15d8:	9d af       	std	Y+61, r25	; 0x3d
    15da:	ae af       	std	Y+62, r26	; 0x3e
    15dc:	bf af       	std	Y+63, r27	; 0x3f
    15de:	67 97       	sbiw	r28, 0x17	; 23

000015e0 <.Loc.306>:
    15e0:	67 96       	adiw	r28, 0x17	; 23
    15e2:	6c ad       	ldd	r22, Y+60	; 0x3c
    15e4:	7d ad       	ldd	r23, Y+61	; 0x3d
    15e6:	8e ad       	ldd	r24, Y+62	; 0x3e
    15e8:	9f ad       	ldd	r25, Y+63	; 0x3f
    15ea:	67 97       	sbiw	r28, 0x17	; 23
    15ec:	0e 94 9c 17 	call	0x2f38	; 0x2f38 <__fixunssfsi>
    15f0:	c5 55       	subi	r28, 0x55	; 85
    15f2:	df 4f       	sbci	r29, 0xFF	; 255
    15f4:	68 83       	st	Y, r22
    15f6:	79 83       	std	Y+1, r23	; 0x01
    15f8:	8a 83       	std	Y+2, r24	; 0x02
    15fa:	9b 83       	std	Y+3, r25	; 0x03
    15fc:	cb 5a       	subi	r28, 0xAB	; 171
    15fe:	d0 40       	sbci	r29, 0x00	; 0
    1600:	c5 55       	subi	r28, 0x55	; 85
    1602:	df 4f       	sbci	r29, 0xFF	; 255
    1604:	a8 81       	ld	r26, Y
    1606:	b9 81       	ldd	r27, Y+1	; 0x01
    1608:	cb 5a       	subi	r28, 0xAB	; 171
    160a:	d0 40       	sbci	r29, 0x00	; 0
    160c:	b8 a3       	std	Y+32, r27	; 0x20
    160e:	af 8f       	std	Y+31, r26	; 0x1f

00001610 <.Loc.307>:
		while(__ticks)
    1610:	10 c0       	rjmp	.+32     	; 0x1632 <.L79>

00001612 <.L80>:
    1612:	80 e9       	ldi	r24, 0x90	; 144
    1614:	91 e0       	ldi	r25, 0x01	; 1
    1616:	9a a3       	std	Y+34, r25	; 0x22
    1618:	89 a3       	std	Y+33, r24	; 0x21

0000161a <.LBB134>:
    161a:	89 a1       	ldd	r24, Y+33	; 0x21
    161c:	9a a1       	ldd	r25, Y+34	; 0x22

0000161e <.L1^B9>:
    161e:	01 97       	sbiw	r24, 0x01	; 1
    1620:	f1 f7       	brne	.-4      	; 0x161e <.L1^B9>
    1622:	9a a3       	std	Y+34, r25	; 0x22
    1624:	89 a3       	std	Y+33, r24	; 0x21

00001626 <.Loc.309>:
	...

00001628 <.LBE134>:
			__ticks --;
    1628:	8f 8d       	ldd	r24, Y+31	; 0x1f
    162a:	98 a1       	ldd	r25, Y+32	; 0x20
    162c:	01 97       	sbiw	r24, 0x01	; 1
    162e:	98 a3       	std	Y+32, r25	; 0x20
    1630:	8f 8f       	std	Y+31, r24	; 0x1f

00001632 <.L79>:
		while(__ticks)
    1632:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1634:	98 a1       	ldd	r25, Y+32	; 0x20
    1636:	00 97       	sbiw	r24, 0x00	; 0
    1638:	61 f7       	brne	.-40     	; 0x1612 <.L80>

0000163a <.Loc.312>:
		return;
    163a:	21 c0       	rjmp	.+66     	; 0x167e <.L81>

0000163c <.L121>:
		__ticks = (uint16_t)__tmp;
    163c:	6b 8d       	ldd	r22, Y+27	; 0x1b
    163e:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1640:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1642:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1644:	0e 94 9c 17 	call	0x2f38	; 0x2f38 <__fixunssfsi>
    1648:	c1 55       	subi	r28, 0x51	; 81
    164a:	df 4f       	sbci	r29, 0xFF	; 255
    164c:	68 83       	st	Y, r22
    164e:	79 83       	std	Y+1, r23	; 0x01
    1650:	8a 83       	std	Y+2, r24	; 0x02
    1652:	9b 83       	std	Y+3, r25	; 0x03
    1654:	cf 5a       	subi	r28, 0xAF	; 175
    1656:	d0 40       	sbci	r29, 0x00	; 0
    1658:	c1 55       	subi	r28, 0x51	; 81
    165a:	df 4f       	sbci	r29, 0xFF	; 255
    165c:	e8 81       	ld	r30, Y
    165e:	f9 81       	ldd	r31, Y+1	; 0x01
    1660:	cf 5a       	subi	r28, 0xAF	; 175
    1662:	d0 40       	sbci	r29, 0x00	; 0
    1664:	f8 a3       	std	Y+32, r31	; 0x20
    1666:	ef 8f       	std	Y+31, r30	; 0x1f

00001668 <.L76>:
    1668:	8f 8d       	ldd	r24, Y+31	; 0x1f
    166a:	98 a1       	ldd	r25, Y+32	; 0x20
    166c:	9c a3       	std	Y+36, r25	; 0x24
    166e:	8b a3       	std	Y+35, r24	; 0x23

00001670 <.LBB136>:
    1670:	8b a1       	ldd	r24, Y+35	; 0x23
    1672:	9c a1       	ldd	r25, Y+36	; 0x24

00001674 <.L1^B10>:
    1674:	01 97       	sbiw	r24, 0x01	; 1
    1676:	f1 f7       	brne	.-4      	; 0x1674 <.L1^B10>
    1678:	9c a3       	std	Y+36, r25	; 0x24
    167a:	8b a3       	std	Y+35, r24	; 0x23

0000167c <.Loc.315>:
	...

0000167e <.L81>:
            _delay_ms(500);
            toestand = 3;
    167e:	83 e0       	ldi	r24, 0x03	; 3
    1680:	90 e0       	ldi	r25, 0x00	; 0
    1682:	9a 83       	std	Y+2, r25	; 0x02
    1684:	89 83       	std	Y+1, r24	; 0x01

00001686 <.Loc.317>:
            break;
    1686:	6b c1       	rjmp	.+726    	; 0x195e <.L9>

00001688 <.L13>:
        case 11:
            if(waardevoor <= 150)
    1688:	8f 81       	ldd	r24, Y+7	; 0x07
    168a:	98 85       	ldd	r25, Y+8	; 0x08
    168c:	86 39       	cpi	r24, 0x96	; 150
    168e:	91 05       	cpc	r25, r1
    1690:	09 f0       	breq	.+2      	; 0x1694 <.Loc.319>

00001692 <L0^A>:
    1692:	24 f4       	brge	.+8      	; 0x169c <.L82>

00001694 <.Loc.319>:
            {
                toestandvolgen = 3;
    1694:	83 e0       	ldi	r24, 0x03	; 3
    1696:	90 e0       	ldi	r25, 0x00	; 0
    1698:	9c 83       	std	Y+4, r25	; 0x04
    169a:	8b 83       	std	Y+3, r24	; 0x03

0000169c <.L82>:
            }
//            if(waardeachter <= 30)
//            {
//                toestandvolgen = 13;
//            }
            if((waardevoor > 150) || (waardeachter > 150))
    169c:	8f 81       	ldd	r24, Y+7	; 0x07
    169e:	98 85       	ldd	r25, Y+8	; 0x08
    16a0:	86 39       	cpi	r24, 0x96	; 150
    16a2:	91 05       	cpc	r25, r1
    16a4:	09 f0       	breq	.+2      	; 0x16a8 <.Loc.321>

000016a6 <L0^A>:
    16a6:	34 f4       	brge	.+12     	; 0x16b4 <.L83>

000016a8 <.Loc.321>:
    16a8:	8d 81       	ldd	r24, Y+5	; 0x05
    16aa:	9e 81       	ldd	r25, Y+6	; 0x06
    16ac:	86 39       	cpi	r24, 0x96	; 150
    16ae:	91 05       	cpc	r25, r1
    16b0:	19 f0       	breq	.+6      	; 0x16b8 <.L84>
    16b2:	14 f0       	brlt	.+4      	; 0x16b8 <.L84>

000016b4 <.L83>:
            {
                toestandvolgen = 0;
    16b4:	1c 82       	std	Y+4, r1	; 0x04
    16b6:	1b 82       	std	Y+3, r1	; 0x03

000016b8 <.L84>:
            }
            if(Bluetooth_Getal == 2)//Bluetooth verbroken
    16b8:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <Bluetooth_Getal>
    16bc:	90 91 21 02 	lds	r25, 0x0221	; 0x800221 <Bluetooth_Getal+0x1>

000016c0 <.Loc.324>:
    16c0:	82 30       	cpi	r24, 0x02	; 2
    16c2:	91 05       	cpc	r25, r1
    16c4:	11 f4       	brne	.+4      	; 0x16ca <.L85>

000016c6 <.Loc.325>:
            {
                toestand = 0;
    16c6:	1a 82       	std	Y+2, r1	; 0x02
    16c8:	19 82       	std	Y+1, r1	; 0x01

000016ca <.L85>:
            }
            if(Bluetooth_Getal == 6)//Uitknop ingedrukt
    16ca:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <Bluetooth_Getal>
    16ce:	90 91 21 02 	lds	r25, 0x0221	; 0x800221 <Bluetooth_Getal+0x1>

000016d2 <.Loc.327>:
    16d2:	86 30       	cpi	r24, 0x06	; 6
    16d4:	91 05       	cpc	r25, r1
    16d6:	21 f4       	brne	.+8      	; 0x16e0 <.L86>

000016d8 <.Loc.328>:
            {
                toestand = 1;
    16d8:	81 e0       	ldi	r24, 0x01	; 1
    16da:	90 e0       	ldi	r25, 0x00	; 0
    16dc:	9a 83       	std	Y+2, r25	; 0x02
    16de:	89 83       	std	Y+1, r24	; 0x01

000016e0 <.L86>:
            }
            if(Bluetooth_Getal == 7)// || (Noodknopport & (1<<Noodknoppin)) == 0))
    16e0:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <Bluetooth_Getal>
    16e4:	90 91 21 02 	lds	r25, 0x0221	; 0x800221 <Bluetooth_Getal+0x1>

000016e8 <.Loc.330>:
    16e8:	87 30       	cpi	r24, 0x07	; 7
    16ea:	91 05       	cpc	r25, r1
    16ec:	21 f4       	brne	.+8      	; 0x16f6 <.L87>

000016ee <.Loc.331>:
            {
                toestand = 99;
    16ee:	83 e6       	ldi	r24, 0x63	; 99
    16f0:	90 e0       	ldi	r25, 0x00	; 0
    16f2:	9a 83       	std	Y+2, r25	; 0x02
    16f4:	89 83       	std	Y+1, r24	; 0x01

000016f6 <.L87>:
    16f6:	8b 81       	ldd	r24, Y+3	; 0x03
    16f8:	9c 81       	ldd	r25, Y+4	; 0x04
    16fa:	86 30       	cpi	r24, 0x06	; 6
    16fc:	91 05       	cpc	r25, r1
    16fe:	09 f4       	brne	.+2      	; 0x1702 <L0^A+0x2>

00001700 <L0^A>:
    1700:	d5 c0       	rjmp	.+426    	; 0x18ac <.L88>
    1702:	8b 81       	ldd	r24, Y+3	; 0x03
    1704:	9c 81       	ldd	r25, Y+4	; 0x04
    1706:	86 30       	cpi	r24, 0x06	; 6
    1708:	91 05       	cpc	r25, r1
    170a:	11 f0       	breq	.+4      	; 0x1710 <L0^A+0x2>

0000170c <L0^A>:
    170c:	0c f0       	brlt	.+2      	; 0x1710 <L0^A+0x2>

0000170e <L0^A>:
    170e:	cc c8       	rjmp	.-3688   	; 0x8a8 <.L101>
    1710:	8b 81       	ldd	r24, Y+3	; 0x03
    1712:	9c 81       	ldd	r25, Y+4	; 0x04
    1714:	85 30       	cpi	r24, 0x05	; 5
    1716:	91 05       	cpc	r25, r1
    1718:	09 f4       	brne	.+2      	; 0x171c <L0^A+0x2>

0000171a <L0^A>:
    171a:	99 c0       	rjmp	.+306    	; 0x184e <.L89>
    171c:	8b 81       	ldd	r24, Y+3	; 0x03
    171e:	9c 81       	ldd	r25, Y+4	; 0x04
    1720:	85 30       	cpi	r24, 0x05	; 5
    1722:	91 05       	cpc	r25, r1
    1724:	11 f0       	breq	.+4      	; 0x172a <L0^A+0x2>

00001726 <L0^A>:
    1726:	0c f0       	brlt	.+2      	; 0x172a <L0^A+0x2>

00001728 <L0^A>:
    1728:	bf c8       	rjmp	.-3714   	; 0x8a8 <.L101>
    172a:	8b 81       	ldd	r24, Y+3	; 0x03
    172c:	9c 81       	ldd	r25, Y+4	; 0x04
    172e:	84 30       	cpi	r24, 0x04	; 4
    1730:	91 05       	cpc	r25, r1
    1732:	09 f4       	brne	.+2      	; 0x1736 <L0^A+0x2>

00001734 <L0^A>:
    1734:	56 c0       	rjmp	.+172    	; 0x17e2 <.L90>
    1736:	8b 81       	ldd	r24, Y+3	; 0x03
    1738:	9c 81       	ldd	r25, Y+4	; 0x04
    173a:	84 30       	cpi	r24, 0x04	; 4
    173c:	91 05       	cpc	r25, r1
    173e:	11 f0       	breq	.+4      	; 0x1744 <L0^A+0x2>

00001740 <L0^A>:
    1740:	0c f0       	brlt	.+2      	; 0x1744 <L0^A+0x2>

00001742 <L0^A>:
    1742:	b2 c8       	rjmp	.-3740   	; 0x8a8 <.L101>
    1744:	8b 81       	ldd	r24, Y+3	; 0x03
    1746:	9c 81       	ldd	r25, Y+4	; 0x04
    1748:	00 97       	sbiw	r24, 0x00	; 0
    174a:	31 f0       	breq	.+12     	; 0x1758 <.L91>
    174c:	8b 81       	ldd	r24, Y+3	; 0x03
    174e:	9c 81       	ldd	r25, Y+4	; 0x04
    1750:	83 30       	cpi	r24, 0x03	; 3
    1752:	91 05       	cpc	r25, r1
    1754:	41 f0       	breq	.+16     	; 0x1766 <.L92>
    1756:	a8 c8       	rjmp	.-3760   	; 0x8a8 <.L101>

00001758 <.L91>:
            }
            switch(toestandvolgen)
            {
            case 0:
                h_bridgeR_set_percentage(snelheiduit);
    1758:	83 e6       	ldi	r24, 0x63	; 99
    175a:	0e 94 bf 02 	call	0x57e	; 0x57e <h_bridgeR_set_percentage>

0000175e <.Loc.333>:
                h_bridgeL_set_percentage(snelheiduit);
    175e:	83 e6       	ldi	r24, 0x63	; 99
    1760:	0e 94 fe 02 	call	0x5fc	; 0x5fc <h_bridgeL_set_percentage>

00001764 <.Loc.334>:
                break;
    1764:	fc c0       	rjmp	.+504    	; 0x195e <.L9>

00001766 <.L92>:
            case 3:
                PORT_LED &= ~(1<<LED_2);
    1766:	82 e0       	ldi	r24, 0x02	; 2
    1768:	91 e0       	ldi	r25, 0x01	; 1
    176a:	dc 01       	movw	r26, r24
    176c:	2c 91       	ld	r18, X

0000176e <.Loc.336>:
    176e:	82 e0       	ldi	r24, 0x02	; 2
    1770:	91 e0       	ldi	r25, 0x01	; 1

00001772 <.Loc.337>:
    1772:	2f 7d       	andi	r18, 0xDF	; 223
    1774:	fc 01       	movw	r30, r24
    1776:	20 83       	st	Z, r18

00001778 <.Loc.338>:
                PORT_LED &= ~(1<<LED_1);
    1778:	82 e0       	ldi	r24, 0x02	; 2
    177a:	91 e0       	ldi	r25, 0x01	; 1
    177c:	dc 01       	movw	r26, r24
    177e:	2c 91       	ld	r18, X

00001780 <.Loc.339>:
    1780:	82 e0       	ldi	r24, 0x02	; 2
    1782:	91 e0       	ldi	r25, 0x01	; 1

00001784 <.Loc.340>:
    1784:	2f 7e       	andi	r18, 0xEF	; 239
    1786:	fc 01       	movw	r30, r24
    1788:	20 83       	st	Z, r18

0000178a <.Loc.341>:
                PORT_buzzer &= ~(1<<buzzer);
    178a:	82 e0       	ldi	r24, 0x02	; 2
    178c:	91 e0       	ldi	r25, 0x01	; 1
    178e:	dc 01       	movw	r26, r24
    1790:	2c 91       	ld	r18, X

00001792 <.Loc.342>:
    1792:	82 e0       	ldi	r24, 0x02	; 2
    1794:	91 e0       	ldi	r25, 0x01	; 1

00001796 <.Loc.343>:
    1796:	27 7f       	andi	r18, 0xF7	; 247
    1798:	fc 01       	movw	r30, r24
    179a:	20 83       	st	Z, r18

0000179c <.Loc.344>:
                h_bridgeR_set_percentage(snelheidrechtdoor);
    179c:	86 e4       	ldi	r24, 0x46	; 70
    179e:	0e 94 bf 02 	call	0x57e	; 0x57e <h_bridgeR_set_percentage>

000017a2 <.Loc.345>:
                h_bridgeL_set_percentage(snelheidrechtdoor);
    17a2:	86 e4       	ldi	r24, 0x46	; 70
    17a4:	0e 94 fe 02 	call	0x5fc	; 0x5fc <h_bridgeL_set_percentage>

000017a8 <.Loc.346>:
                rechtdoorrijden();
    17a8:	0e 94 36 01 	call	0x26c	; 0x26c <rechtdoorrijden>

000017ac <.Loc.347>:
                if(((IRregister & (1 << IRonderrechts)) == 0) && ((IRregister & (1 << IRonderlinks)) == 0))
    17ac:	86 e2       	ldi	r24, 0x26	; 38
    17ae:	90 e0       	ldi	r25, 0x00	; 0
    17b0:	dc 01       	movw	r26, r24
    17b2:	8c 91       	ld	r24, X

000017b4 <.Loc.348>:
    17b4:	88 2f       	mov	r24, r24
    17b6:	90 e0       	ldi	r25, 0x00	; 0
    17b8:	84 70       	andi	r24, 0x04	; 4
    17ba:	99 27       	eor	r25, r25

000017bc <.Loc.349>:
    17bc:	00 97       	sbiw	r24, 0x00	; 0
    17be:	09 f0       	breq	.+2      	; 0x17c2 <.Loc.350>

000017c0 <L0^A>:
    17c0:	c4 c0       	rjmp	.+392    	; 0x194a <.L133>

000017c2 <.Loc.350>:
    17c2:	86 e2       	ldi	r24, 0x26	; 38
    17c4:	90 e0       	ldi	r25, 0x00	; 0
    17c6:	fc 01       	movw	r30, r24
    17c8:	80 81       	ld	r24, Z

000017ca <.Loc.351>:
    17ca:	88 2f       	mov	r24, r24
    17cc:	90 e0       	ldi	r25, 0x00	; 0
    17ce:	88 70       	andi	r24, 0x08	; 8
    17d0:	99 27       	eor	r25, r25

000017d2 <.Loc.352>:
    17d2:	00 97       	sbiw	r24, 0x00	; 0
    17d4:	09 f0       	breq	.+2      	; 0x17d8 <.Loc.353>

000017d6 <L0^A>:
    17d6:	b9 c0       	rjmp	.+370    	; 0x194a <.L133>

000017d8 <.Loc.353>:
                {
                    toestandvolgen = 4;
    17d8:	84 e0       	ldi	r24, 0x04	; 4
    17da:	90 e0       	ldi	r25, 0x00	; 0
    17dc:	9c 83       	std	Y+4, r25	; 0x04
    17de:	8b 83       	std	Y+3, r24	; 0x03

000017e0 <.Loc.354>:
                }
                break;
    17e0:	b4 c0       	rjmp	.+360    	; 0x194a <.L133>

000017e2 <.L90>:
            case 4://Tussen de balken rechtdoor
                //Motoren naar rechtdoor
                rechtdoorrijden();
    17e2:	0e 94 36 01 	call	0x26c	; 0x26c <rechtdoorrijden>

000017e6 <.Loc.356>:
                h_bridgeR_set_percentage(snelheidrechtdoor);
    17e6:	86 e4       	ldi	r24, 0x46	; 70
    17e8:	0e 94 bf 02 	call	0x57e	; 0x57e <h_bridgeR_set_percentage>

000017ec <.Loc.357>:
                h_bridgeL_set_percentage(snelheidrechtdoor);
    17ec:	86 e4       	ldi	r24, 0x46	; 70
    17ee:	0e 94 fe 02 	call	0x5fc	; 0x5fc <h_bridgeL_set_percentage>

000017f2 <.Loc.358>:
                if(IRregister & (1 << IRonderrechts))
    17f2:	86 e2       	ldi	r24, 0x26	; 38
    17f4:	90 e0       	ldi	r25, 0x00	; 0
    17f6:	dc 01       	movw	r26, r24
    17f8:	8c 91       	ld	r24, X

000017fa <.Loc.359>:
    17fa:	88 2f       	mov	r24, r24
    17fc:	90 e0       	ldi	r25, 0x00	; 0
    17fe:	84 70       	andi	r24, 0x04	; 4
    1800:	99 27       	eor	r25, r25

00001802 <.Loc.360>:
    1802:	00 97       	sbiw	r24, 0x00	; 0
    1804:	29 f0       	breq	.+10     	; 0x1810 <.L94>

00001806 <.Loc.361>:
                {
                    toestandvolgen = 5;
    1806:	85 e0       	ldi	r24, 0x05	; 5
    1808:	90 e0       	ldi	r25, 0x00	; 0
    180a:	9c 83       	std	Y+4, r25	; 0x04
    180c:	8b 83       	std	Y+3, r24	; 0x03

0000180e <.Loc.362>:
                }
                else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
                {
                    //toestandvolgen = 7;
                }
                break;
    180e:	a0 c0       	rjmp	.+320    	; 0x1950 <.L134>

00001810 <.L94>:
                else if(IRregister & (1 << IRonderlinks))
    1810:	86 e2       	ldi	r24, 0x26	; 38
    1812:	90 e0       	ldi	r25, 0x00	; 0
    1814:	fc 01       	movw	r30, r24
    1816:	80 81       	ld	r24, Z

00001818 <.Loc.364>:
    1818:	88 2f       	mov	r24, r24
    181a:	90 e0       	ldi	r25, 0x00	; 0
    181c:	88 70       	andi	r24, 0x08	; 8
    181e:	99 27       	eor	r25, r25

00001820 <.Loc.365>:
    1820:	00 97       	sbiw	r24, 0x00	; 0
    1822:	29 f0       	breq	.+10     	; 0x182e <.L96>

00001824 <.Loc.366>:
                    toestandvolgen = 6;
    1824:	86 e0       	ldi	r24, 0x06	; 6
    1826:	90 e0       	ldi	r25, 0x00	; 0
    1828:	9c 83       	std	Y+4, r25	; 0x04
    182a:	8b 83       	std	Y+3, r24	; 0x03

0000182c <.Loc.367>:
                break;
    182c:	91 c0       	rjmp	.+290    	; 0x1950 <.L134>

0000182e <.L96>:
                else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
    182e:	86 e2       	ldi	r24, 0x26	; 38
    1830:	90 e0       	ldi	r25, 0x00	; 0
    1832:	dc 01       	movw	r26, r24
    1834:	8c 91       	ld	r24, X

00001836 <.Loc.369>:
    1836:	88 2f       	mov	r24, r24
    1838:	90 e0       	ldi	r25, 0x00	; 0
    183a:	84 70       	andi	r24, 0x04	; 4
    183c:	99 27       	eor	r25, r25

0000183e <.Loc.370>:
    183e:	00 97       	sbiw	r24, 0x00	; 0
    1840:	09 f4       	brne	.+2      	; 0x1844 <.Loc.371>

00001842 <L0^A>:
    1842:	86 c0       	rjmp	.+268    	; 0x1950 <.L134>

00001844 <.Loc.371>:
    1844:	86 e2       	ldi	r24, 0x26	; 38
    1846:	90 e0       	ldi	r25, 0x00	; 0
    1848:	fc 01       	movw	r30, r24
    184a:	80 81       	ld	r24, Z

0000184c <.Loc.372>:
                break;
    184c:	81 c0       	rjmp	.+258    	; 0x1950 <.L134>

0000184e <.L89>:
            case 5:
                //Motoren naar rechts
                h_bridgeR_set_percentage(snelheidhard);
    184e:	8c e3       	ldi	r24, 0x3C	; 60
    1850:	0e 94 bf 02 	call	0x57e	; 0x57e <h_bridgeR_set_percentage>

00001854 <.Loc.374>:
                h_bridgeL_set_percentage(snelheidzacht);
    1854:	80 e5       	ldi	r24, 0x50	; 80
    1856:	0e 94 fe 02 	call	0x5fc	; 0x5fc <h_bridgeL_set_percentage>

0000185a <.Loc.375>:
                if(((IRregister & (1 << IRonderrechts)) == 0) && ((IRregister & (1 << IRonderlinks)) == 0))
    185a:	86 e2       	ldi	r24, 0x26	; 38
    185c:	90 e0       	ldi	r25, 0x00	; 0
    185e:	dc 01       	movw	r26, r24
    1860:	8c 91       	ld	r24, X

00001862 <.Loc.376>:
    1862:	88 2f       	mov	r24, r24
    1864:	90 e0       	ldi	r25, 0x00	; 0
    1866:	84 70       	andi	r24, 0x04	; 4
    1868:	99 27       	eor	r25, r25

0000186a <.Loc.377>:
    186a:	00 97       	sbiw	r24, 0x00	; 0
    186c:	79 f4       	brne	.+30     	; 0x188c <.L97>

0000186e <.Loc.378>:
    186e:	86 e2       	ldi	r24, 0x26	; 38
    1870:	90 e0       	ldi	r25, 0x00	; 0
    1872:	fc 01       	movw	r30, r24
    1874:	80 81       	ld	r24, Z

00001876 <.Loc.379>:
    1876:	88 2f       	mov	r24, r24
    1878:	90 e0       	ldi	r25, 0x00	; 0
    187a:	88 70       	andi	r24, 0x08	; 8
    187c:	99 27       	eor	r25, r25

0000187e <.Loc.380>:
    187e:	00 97       	sbiw	r24, 0x00	; 0
    1880:	29 f4       	brne	.+10     	; 0x188c <.L97>

00001882 <.Loc.381>:
                {
                    toestandvolgen = 4;
    1882:	84 e0       	ldi	r24, 0x04	; 4
    1884:	90 e0       	ldi	r25, 0x00	; 0
    1886:	9c 83       	std	Y+4, r25	; 0x04
    1888:	8b 83       	std	Y+3, r24	; 0x03

0000188a <.Loc.382>:
                }
                else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
                {
                    //toestandvolgen = 7;
                }
                break;
    188a:	65 c0       	rjmp	.+202    	; 0x1956 <.L135>

0000188c <.L97>:
                else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
    188c:	86 e2       	ldi	r24, 0x26	; 38
    188e:	90 e0       	ldi	r25, 0x00	; 0
    1890:	dc 01       	movw	r26, r24
    1892:	8c 91       	ld	r24, X

00001894 <.Loc.384>:
    1894:	88 2f       	mov	r24, r24
    1896:	90 e0       	ldi	r25, 0x00	; 0
    1898:	84 70       	andi	r24, 0x04	; 4
    189a:	99 27       	eor	r25, r25

0000189c <.Loc.385>:
    189c:	00 97       	sbiw	r24, 0x00	; 0
    189e:	09 f4       	brne	.+2      	; 0x18a2 <.Loc.386>

000018a0 <L0^A>:
    18a0:	5a c0       	rjmp	.+180    	; 0x1956 <.L135>

000018a2 <.Loc.386>:
    18a2:	86 e2       	ldi	r24, 0x26	; 38
    18a4:	90 e0       	ldi	r25, 0x00	; 0
    18a6:	fc 01       	movw	r30, r24
    18a8:	80 81       	ld	r24, Z

000018aa <.Loc.387>:
                break;
    18aa:	55 c0       	rjmp	.+170    	; 0x1956 <.L135>

000018ac <.L88>:
            case 6:
                //Motoren naar links
                h_bridgeR_set_percentage(snelheidzacht);
    18ac:	80 e5       	ldi	r24, 0x50	; 80
    18ae:	0e 94 bf 02 	call	0x57e	; 0x57e <h_bridgeR_set_percentage>

000018b2 <.Loc.389>:
                h_bridgeL_set_percentage(snelheidhard);
    18b2:	8c e3       	ldi	r24, 0x3C	; 60
    18b4:	0e 94 fe 02 	call	0x5fc	; 0x5fc <h_bridgeL_set_percentage>

000018b8 <.Loc.390>:
                if(((IRregister & (1 << IRonderrechts)) == 0) && ((IRregister & (1 << IRonderlinks)) == 0))
    18b8:	86 e2       	ldi	r24, 0x26	; 38
    18ba:	90 e0       	ldi	r25, 0x00	; 0
    18bc:	dc 01       	movw	r26, r24
    18be:	8c 91       	ld	r24, X

000018c0 <.Loc.391>:
    18c0:	88 2f       	mov	r24, r24
    18c2:	90 e0       	ldi	r25, 0x00	; 0
    18c4:	84 70       	andi	r24, 0x04	; 4
    18c6:	99 27       	eor	r25, r25

000018c8 <.Loc.392>:
    18c8:	00 97       	sbiw	r24, 0x00	; 0
    18ca:	79 f4       	brne	.+30     	; 0x18ea <.L99>

000018cc <.Loc.393>:
    18cc:	86 e2       	ldi	r24, 0x26	; 38
    18ce:	90 e0       	ldi	r25, 0x00	; 0
    18d0:	fc 01       	movw	r30, r24
    18d2:	80 81       	ld	r24, Z

000018d4 <.Loc.394>:
    18d4:	88 2f       	mov	r24, r24
    18d6:	90 e0       	ldi	r25, 0x00	; 0
    18d8:	88 70       	andi	r24, 0x08	; 8
    18da:	99 27       	eor	r25, r25

000018dc <.Loc.395>:
    18dc:	00 97       	sbiw	r24, 0x00	; 0
    18de:	29 f4       	brne	.+10     	; 0x18ea <.L99>

000018e0 <.Loc.396>:
                {
                    toestandvolgen = 4;
    18e0:	84 e0       	ldi	r24, 0x04	; 4
    18e2:	90 e0       	ldi	r25, 0x00	; 0
    18e4:	9c 83       	std	Y+4, r25	; 0x04
    18e6:	8b 83       	std	Y+3, r24	; 0x03

000018e8 <.Loc.397>:
                }
                else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
                {
                    //toestandvolgen = 7;
                }
                break;
    18e8:	39 c0       	rjmp	.+114    	; 0x195c <.L136>

000018ea <.L99>:
                else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
    18ea:	86 e2       	ldi	r24, 0x26	; 38
    18ec:	90 e0       	ldi	r25, 0x00	; 0
    18ee:	dc 01       	movw	r26, r24
    18f0:	8c 91       	ld	r24, X

000018f2 <.Loc.399>:
    18f2:	88 2f       	mov	r24, r24
    18f4:	90 e0       	ldi	r25, 0x00	; 0
    18f6:	84 70       	andi	r24, 0x04	; 4
    18f8:	99 27       	eor	r25, r25

000018fa <.Loc.400>:
    18fa:	00 97       	sbiw	r24, 0x00	; 0
    18fc:	79 f1       	breq	.+94     	; 0x195c <.L136>

000018fe <.Loc.401>:
    18fe:	86 e2       	ldi	r24, 0x26	; 38
    1900:	90 e0       	ldi	r25, 0x00	; 0
    1902:	fc 01       	movw	r30, r24
    1904:	80 81       	ld	r24, Z

00001906 <.Loc.402>:
                break;
    1906:	2a c0       	rjmp	.+84     	; 0x195c <.L136>

00001908 <.L122>:
            break;
    1908:	00 00       	nop
    190a:	0c 94 54 04 	jmp	0x8a8	; 0x8a8 <.L101>

0000190e <.L123>:
            break;
    190e:	00 00       	nop
    1910:	0c 94 54 04 	jmp	0x8a8	; 0x8a8 <.L101>

00001914 <.L124>:
            break;
    1914:	00 00       	nop
    1916:	0c 94 54 04 	jmp	0x8a8	; 0x8a8 <.L101>

0000191a <.L125>:
            break;
    191a:	00 00       	nop
    191c:	0c 94 54 04 	jmp	0x8a8	; 0x8a8 <.L101>

00001920 <.L126>:
            break;
    1920:	00 00       	nop
    1922:	0c 94 54 04 	jmp	0x8a8	; 0x8a8 <.L101>

00001926 <.L127>:
            break;
    1926:	00 00       	nop
    1928:	0c 94 54 04 	jmp	0x8a8	; 0x8a8 <.L101>

0000192c <.L128>:
            break;
    192c:	00 00       	nop
    192e:	0c 94 54 04 	jmp	0x8a8	; 0x8a8 <.L101>

00001932 <.L129>:
            break;
    1932:	00 00       	nop
    1934:	0c 94 54 04 	jmp	0x8a8	; 0x8a8 <.L101>

00001938 <.L130>:
            break;
    1938:	00 00       	nop
    193a:	0c 94 54 04 	jmp	0x8a8	; 0x8a8 <.L101>

0000193e <.L131>:
            break;
    193e:	00 00       	nop
    1940:	0c 94 54 04 	jmp	0x8a8	; 0x8a8 <.L101>

00001944 <.L132>:
            break;
    1944:	00 00       	nop
    1946:	0c 94 54 04 	jmp	0x8a8	; 0x8a8 <.L101>

0000194a <.L133>:
                break;
    194a:	00 00       	nop
    194c:	0c 94 54 04 	jmp	0x8a8	; 0x8a8 <.L101>

00001950 <.L134>:
                break;
    1950:	00 00       	nop
    1952:	0c 94 54 04 	jmp	0x8a8	; 0x8a8 <.L101>

00001956 <.L135>:
                break;
    1956:	00 00       	nop
    1958:	0c 94 54 04 	jmp	0x8a8	; 0x8a8 <.L101>

0000195c <.L136>:
	...

0000195e <.L9>:
    {
    195e:	0c 94 54 04 	jmp	0x8a8	; 0x8a8 <.L101>

00001962 <init>:

    return 0;
}

void init()
{
    1962:	cf 93       	push	r28
    1964:	df 93       	push	r29
    1966:	cd b7       	in	r28, 0x3d	; 61
    1968:	de b7       	in	r29, 0x3e	; 62

0000196a <.Loc.420>:
    initBluetooth();
    196a:	0e 94 ee 00 	call	0x1dc	; 0x1dc <initBluetooth>

0000196e <.Loc.421>:
    sei();
    196e:	78 94       	sei

00001970 <.Loc.422>:

    //timer PWM motorenR
    TCCR1B = (0 << CS12) | (0 << CS11) | (1 << CS10);
    1970:	81 e8       	ldi	r24, 0x81	; 129
    1972:	90 e0       	ldi	r25, 0x00	; 0

00001974 <.Loc.423>:
    1974:	21 e0       	ldi	r18, 0x01	; 1
    1976:	fc 01       	movw	r30, r24
    1978:	20 83       	st	Z, r18

0000197a <.Loc.424>:
    TIMSK1 = (1 << OCIE1A) | (1 << TOIE1);
    197a:	8f e6       	ldi	r24, 0x6F	; 111
    197c:	90 e0       	ldi	r25, 0x00	; 0

0000197e <.Loc.425>:
    197e:	23 e0       	ldi	r18, 0x03	; 3
    1980:	fc 01       	movw	r30, r24
    1982:	20 83       	st	Z, r18

00001984 <.Loc.426>:

    OCR1A = 0;
    1984:	88 e8       	ldi	r24, 0x88	; 136
    1986:	90 e0       	ldi	r25, 0x00	; 0

00001988 <.Loc.427>:
    1988:	fc 01       	movw	r30, r24
    198a:	11 82       	std	Z+1, r1	; 0x01
    198c:	10 82       	st	Z, r1

0000198e <.Loc.428>:
    //timer PWM motorenL
    TCCR3B = (0 << CS32) | (0 << CS31) | (1 << CS30);
    198e:	81 e9       	ldi	r24, 0x91	; 145
    1990:	90 e0       	ldi	r25, 0x00	; 0

00001992 <.Loc.429>:
    1992:	21 e0       	ldi	r18, 0x01	; 1
    1994:	fc 01       	movw	r30, r24
    1996:	20 83       	st	Z, r18

00001998 <.Loc.430>:
    TIMSK3 = (1 << OCIE3A) | (1 << TOIE3);
    1998:	81 e7       	ldi	r24, 0x71	; 113
    199a:	90 e0       	ldi	r25, 0x00	; 0

0000199c <.Loc.431>:
    199c:	23 e0       	ldi	r18, 0x03	; 3
    199e:	fc 01       	movw	r30, r24
    19a0:	20 83       	st	Z, r18

000019a2 <.Loc.432>:

    OCR3A = 0;
    19a2:	88 e9       	ldi	r24, 0x98	; 152
    19a4:	90 e0       	ldi	r25, 0x00	; 0

000019a6 <.Loc.433>:
    19a6:	fc 01       	movw	r30, r24
    19a8:	11 82       	std	Z+1, r1	; 0x01
    19aa:	10 82       	st	Z, r1

000019ac <.Loc.434>:

    //timer noodtoestand
    TCCR0B = (1 << CS02) | (1 << CS00);
    19ac:	85 e4       	ldi	r24, 0x45	; 69
    19ae:	90 e0       	ldi	r25, 0x00	; 0

000019b0 <.Loc.435>:
    19b0:	25 e0       	ldi	r18, 0x05	; 5
    19b2:	fc 01       	movw	r30, r24
    19b4:	20 83       	st	Z, r18

000019b6 <.Loc.436>:
    TIMSK0 |= (1 << TOIE0);
    19b6:	8e e6       	ldi	r24, 0x6E	; 110
    19b8:	90 e0       	ldi	r25, 0x00	; 0
    19ba:	fc 01       	movw	r30, r24
    19bc:	20 81       	ld	r18, Z
    19be:	8e e6       	ldi	r24, 0x6E	; 110
    19c0:	90 e0       	ldi	r25, 0x00	; 0

000019c2 <.Loc.437>:
    19c2:	21 60       	ori	r18, 0x01	; 1
    19c4:	fc 01       	movw	r30, r24
    19c6:	20 83       	st	Z, r18

000019c8 <.Loc.438>:

    //timer noodtoestand
    //TCCR4B = (1 << CS42) | (1 << CS40);
    TIMSK4 |= (1 << TOIE4);
    19c8:	82 e7       	ldi	r24, 0x72	; 114
    19ca:	90 e0       	ldi	r25, 0x00	; 0
    19cc:	fc 01       	movw	r30, r24
    19ce:	20 81       	ld	r18, Z
    19d0:	82 e7       	ldi	r24, 0x72	; 114
    19d2:	90 e0       	ldi	r25, 0x00	; 0

000019d4 <.Loc.439>:
    19d4:	21 60       	ori	r18, 0x01	; 1
    19d6:	fc 01       	movw	r30, r24
    19d8:	20 83       	st	Z, r18

000019da <.Loc.440>:

    //pinout h-brug
    DDR |= (1 << PEN1);
    19da:	81 e2       	ldi	r24, 0x21	; 33
    19dc:	90 e0       	ldi	r25, 0x00	; 0
    19de:	fc 01       	movw	r30, r24
    19e0:	20 81       	ld	r18, Z
    19e2:	81 e2       	ldi	r24, 0x21	; 33
    19e4:	90 e0       	ldi	r25, 0x00	; 0

000019e6 <.Loc.441>:
    19e6:	20 68       	ori	r18, 0x80	; 128
    19e8:	fc 01       	movw	r30, r24
    19ea:	20 83       	st	Z, r18

000019ec <.Loc.442>:
    DDR |= (1 << PIN11);
    19ec:	81 e2       	ldi	r24, 0x21	; 33
    19ee:	90 e0       	ldi	r25, 0x00	; 0
    19f0:	fc 01       	movw	r30, r24
    19f2:	20 81       	ld	r18, Z
    19f4:	81 e2       	ldi	r24, 0x21	; 33
    19f6:	90 e0       	ldi	r25, 0x00	; 0

000019f8 <.Loc.443>:
    19f8:	20 64       	ori	r18, 0x40	; 64
    19fa:	fc 01       	movw	r30, r24
    19fc:	20 83       	st	Z, r18

000019fe <.Loc.444>:
    DDR |= (1 << PIN12);
    19fe:	81 e2       	ldi	r24, 0x21	; 33
    1a00:	90 e0       	ldi	r25, 0x00	; 0
    1a02:	fc 01       	movw	r30, r24
    1a04:	20 81       	ld	r18, Z
    1a06:	81 e2       	ldi	r24, 0x21	; 33
    1a08:	90 e0       	ldi	r25, 0x00	; 0

00001a0a <.Loc.445>:
    1a0a:	20 62       	ori	r18, 0x20	; 32
    1a0c:	fc 01       	movw	r30, r24
    1a0e:	20 83       	st	Z, r18

00001a10 <.Loc.446>:
    DDR |= (1 << PIN21);
    1a10:	81 e2       	ldi	r24, 0x21	; 33
    1a12:	90 e0       	ldi	r25, 0x00	; 0
    1a14:	fc 01       	movw	r30, r24
    1a16:	20 81       	ld	r18, Z
    1a18:	81 e2       	ldi	r24, 0x21	; 33
    1a1a:	90 e0       	ldi	r25, 0x00	; 0

00001a1c <.Loc.447>:
    1a1c:	20 61       	ori	r18, 0x10	; 16
    1a1e:	fc 01       	movw	r30, r24
    1a20:	20 83       	st	Z, r18

00001a22 <.Loc.448>:
    DDR |= (1 << PIN22);
    1a22:	81 e2       	ldi	r24, 0x21	; 33
    1a24:	90 e0       	ldi	r25, 0x00	; 0
    1a26:	fc 01       	movw	r30, r24
    1a28:	20 81       	ld	r18, Z
    1a2a:	81 e2       	ldi	r24, 0x21	; 33
    1a2c:	90 e0       	ldi	r25, 0x00	; 0

00001a2e <.Loc.449>:
    1a2e:	28 60       	ori	r18, 0x08	; 8
    1a30:	fc 01       	movw	r30, r24
    1a32:	20 83       	st	Z, r18

00001a34 <.Loc.450>:
    DDR |= (1 << PEN2);
    1a34:	81 e2       	ldi	r24, 0x21	; 33
    1a36:	90 e0       	ldi	r25, 0x00	; 0
    1a38:	fc 01       	movw	r30, r24
    1a3a:	20 81       	ld	r18, Z
    1a3c:	81 e2       	ldi	r24, 0x21	; 33
    1a3e:	90 e0       	ldi	r25, 0x00	; 0

00001a40 <.Loc.451>:
    1a40:	24 60       	ori	r18, 0x04	; 4
    1a42:	fc 01       	movw	r30, r24
    1a44:	20 83       	st	Z, r18

00001a46 <.Loc.452>:

    //H-brug pinnen LOW
    PORT &= ~(1 << PEN1);
    1a46:	82 e2       	ldi	r24, 0x22	; 34
    1a48:	90 e0       	ldi	r25, 0x00	; 0
    1a4a:	fc 01       	movw	r30, r24
    1a4c:	20 81       	ld	r18, Z

00001a4e <.Loc.453>:
    1a4e:	82 e2       	ldi	r24, 0x22	; 34
    1a50:	90 e0       	ldi	r25, 0x00	; 0

00001a52 <.Loc.454>:
    1a52:	2f 77       	andi	r18, 0x7F	; 127
    1a54:	fc 01       	movw	r30, r24
    1a56:	20 83       	st	Z, r18

00001a58 <.Loc.455>:
	PORT &= ~(1 << PIN11);
    1a58:	82 e2       	ldi	r24, 0x22	; 34
    1a5a:	90 e0       	ldi	r25, 0x00	; 0
    1a5c:	fc 01       	movw	r30, r24
    1a5e:	20 81       	ld	r18, Z

00001a60 <.Loc.456>:
    1a60:	82 e2       	ldi	r24, 0x22	; 34
    1a62:	90 e0       	ldi	r25, 0x00	; 0

00001a64 <.Loc.457>:
    1a64:	2f 7b       	andi	r18, 0xBF	; 191
    1a66:	fc 01       	movw	r30, r24
    1a68:	20 83       	st	Z, r18

00001a6a <.Loc.458>:
	PORT &= ~(1 << PIN12);
    1a6a:	82 e2       	ldi	r24, 0x22	; 34
    1a6c:	90 e0       	ldi	r25, 0x00	; 0
    1a6e:	fc 01       	movw	r30, r24
    1a70:	20 81       	ld	r18, Z

00001a72 <.Loc.459>:
    1a72:	82 e2       	ldi	r24, 0x22	; 34
    1a74:	90 e0       	ldi	r25, 0x00	; 0

00001a76 <.Loc.460>:
    1a76:	2f 7d       	andi	r18, 0xDF	; 223
    1a78:	fc 01       	movw	r30, r24
    1a7a:	20 83       	st	Z, r18

00001a7c <.Loc.461>:
	PORT &= ~(1 << PIN21);
    1a7c:	82 e2       	ldi	r24, 0x22	; 34
    1a7e:	90 e0       	ldi	r25, 0x00	; 0
    1a80:	fc 01       	movw	r30, r24
    1a82:	20 81       	ld	r18, Z

00001a84 <.Loc.462>:
    1a84:	82 e2       	ldi	r24, 0x22	; 34
    1a86:	90 e0       	ldi	r25, 0x00	; 0

00001a88 <.Loc.463>:
    1a88:	2f 7e       	andi	r18, 0xEF	; 239
    1a8a:	fc 01       	movw	r30, r24
    1a8c:	20 83       	st	Z, r18

00001a8e <.Loc.464>:
	PORT &= ~(1 << PIN22);
    1a8e:	82 e2       	ldi	r24, 0x22	; 34
    1a90:	90 e0       	ldi	r25, 0x00	; 0
    1a92:	fc 01       	movw	r30, r24
    1a94:	20 81       	ld	r18, Z

00001a96 <.Loc.465>:
    1a96:	82 e2       	ldi	r24, 0x22	; 34
    1a98:	90 e0       	ldi	r25, 0x00	; 0

00001a9a <.Loc.466>:
    1a9a:	27 7f       	andi	r18, 0xF7	; 247
    1a9c:	fc 01       	movw	r30, r24
    1a9e:	20 83       	st	Z, r18

00001aa0 <.Loc.467>:
	PORT &= ~(1 << PEN2);
    1aa0:	82 e2       	ldi	r24, 0x22	; 34
    1aa2:	90 e0       	ldi	r25, 0x00	; 0
    1aa4:	fc 01       	movw	r30, r24
    1aa6:	20 81       	ld	r18, Z

00001aa8 <.Loc.468>:
    1aa8:	82 e2       	ldi	r24, 0x22	; 34
    1aaa:	90 e0       	ldi	r25, 0x00	; 0

00001aac <.Loc.469>:
    1aac:	2b 7f       	andi	r18, 0xFB	; 251
    1aae:	fc 01       	movw	r30, r24
    1ab0:	20 83       	st	Z, r18

00001ab2 <.Loc.470>:

	//LEDS
    DDR_LED |= (1<<LED_1) | (1<<LED_2);     // enable pins as output
    1ab2:	81 e0       	ldi	r24, 0x01	; 1
    1ab4:	91 e0       	ldi	r25, 0x01	; 1
    1ab6:	fc 01       	movw	r30, r24
    1ab8:	20 81       	ld	r18, Z
    1aba:	81 e0       	ldi	r24, 0x01	; 1
    1abc:	91 e0       	ldi	r25, 0x01	; 1

00001abe <.Loc.471>:
    1abe:	20 63       	ori	r18, 0x30	; 48
    1ac0:	fc 01       	movw	r30, r24
    1ac2:	20 83       	st	Z, r18

00001ac4 <.Loc.472>:
    PORT_LED &= ~(1<<LED_1) & ~(1<<LED_2);  // put pins low
    1ac4:	82 e0       	ldi	r24, 0x02	; 2
    1ac6:	91 e0       	ldi	r25, 0x01	; 1
    1ac8:	fc 01       	movw	r30, r24
    1aca:	20 81       	ld	r18, Z

00001acc <.Loc.473>:
    1acc:	82 e0       	ldi	r24, 0x02	; 2
    1ace:	91 e0       	ldi	r25, 0x01	; 1

00001ad0 <.Loc.474>:
    1ad0:	2f 7c       	andi	r18, 0xCF	; 207
    1ad2:	fc 01       	movw	r30, r24
    1ad4:	20 83       	st	Z, r18

00001ad6 <.Loc.475>:
    DDRB |= (1 << PB7);
    1ad6:	84 e2       	ldi	r24, 0x24	; 36
    1ad8:	90 e0       	ldi	r25, 0x00	; 0
    1ada:	fc 01       	movw	r30, r24
    1adc:	20 81       	ld	r18, Z
    1ade:	84 e2       	ldi	r24, 0x24	; 36
    1ae0:	90 e0       	ldi	r25, 0x00	; 0

00001ae2 <.Loc.476>:
    1ae2:	20 68       	ori	r18, 0x80	; 128
    1ae4:	fc 01       	movw	r30, r24
    1ae6:	20 83       	st	Z, r18

00001ae8 <.Loc.477>:
    PORTB |= ~(1 << PB7);
    1ae8:	85 e2       	ldi	r24, 0x25	; 37
    1aea:	90 e0       	ldi	r25, 0x00	; 0
    1aec:	fc 01       	movw	r30, r24
    1aee:	80 81       	ld	r24, Z

00001af0 <.Loc.478>:
    1af0:	28 2f       	mov	r18, r24
    1af2:	2f 67       	ori	r18, 0x7F	; 127

00001af4 <.Loc.479>:
    1af4:	85 e2       	ldi	r24, 0x25	; 37
    1af6:	90 e0       	ldi	r25, 0x00	; 0

00001af8 <.Loc.480>:
    1af8:	fc 01       	movw	r30, r24
    1afa:	20 83       	st	Z, r18

00001afc <.Loc.481>:

    //Buzzer
    DDR_buzzer |= (1<<buzzer);              // enable pins as output
    1afc:	81 e0       	ldi	r24, 0x01	; 1
    1afe:	91 e0       	ldi	r25, 0x01	; 1
    1b00:	fc 01       	movw	r30, r24
    1b02:	20 81       	ld	r18, Z
    1b04:	81 e0       	ldi	r24, 0x01	; 1
    1b06:	91 e0       	ldi	r25, 0x01	; 1

00001b08 <.Loc.482>:
    1b08:	28 60       	ori	r18, 0x08	; 8
    1b0a:	fc 01       	movw	r30, r24
    1b0c:	20 83       	st	Z, r18

00001b0e <.Loc.483>:
    PORT_buzzer &= ~(1<<buzzer);            // put pins low
    1b0e:	82 e0       	ldi	r24, 0x02	; 2
    1b10:	91 e0       	ldi	r25, 0x01	; 1
    1b12:	fc 01       	movw	r30, r24
    1b14:	20 81       	ld	r18, Z

00001b16 <.Loc.484>:
    1b16:	82 e0       	ldi	r24, 0x02	; 2
    1b18:	91 e0       	ldi	r25, 0x01	; 1

00001b1a <.Loc.485>:
    1b1a:	27 7f       	andi	r18, 0xF7	; 247
    1b1c:	fc 01       	movw	r30, r24
    1b1e:	20 83       	st	Z, r18

00001b20 <.Loc.486>:

    //knoppen
	DDRF &= ~(1<<Noodknoppin);
    1b20:	80 e3       	ldi	r24, 0x30	; 48
    1b22:	90 e0       	ldi	r25, 0x00	; 0
    1b24:	fc 01       	movw	r30, r24
    1b26:	20 81       	ld	r18, Z

00001b28 <.Loc.487>:
    1b28:	80 e3       	ldi	r24, 0x30	; 48
    1b2a:	90 e0       	ldi	r25, 0x00	; 0

00001b2c <.Loc.488>:
    1b2c:	2d 7f       	andi	r18, 0xFD	; 253
    1b2e:	fc 01       	movw	r30, r24
    1b30:	20 83       	st	Z, r18

00001b32 <.Loc.489>:
	PORTF |= (1<<Noodknoppin);   		// enAble alle knoppen voor input
    1b32:	81 e3       	ldi	r24, 0x31	; 49
    1b34:	90 e0       	ldi	r25, 0x00	; 0
    1b36:	fc 01       	movw	r30, r24
    1b38:	20 81       	ld	r18, Z
    1b3a:	81 e3       	ldi	r24, 0x31	; 49
    1b3c:	90 e0       	ldi	r25, 0x00	; 0

00001b3e <.Loc.490>:
    1b3e:	22 60       	ori	r18, 0x02	; 2
    1b40:	fc 01       	movw	r30, r24
    1b42:	20 83       	st	Z, r18

00001b44 <.Loc.491>:
}
    1b44:	00 00       	nop
    1b46:	df 91       	pop	r29
    1b48:	cf 91       	pop	r28
    1b4a:	08 95       	ret

00001b4c <initultrasoon>:

void initultrasoon(void){
    1b4c:	cf 93       	push	r28
    1b4e:	df 93       	push	r29
    1b50:	cd b7       	in	r28, 0x3d	; 61
    1b52:	de b7       	in	r29, 0x3e	; 62

00001b54 <.Loc.493>:
    TCCR2A = 0;
    1b54:	80 eb       	ldi	r24, 0xB0	; 176
    1b56:	90 e0       	ldi	r25, 0x00	; 0

00001b58 <.Loc.494>:
    1b58:	fc 01       	movw	r30, r24
    1b5a:	10 82       	st	Z, r1

00001b5c <.Loc.495>:
    TCCR2B |= (1<<CS20);
    1b5c:	81 eb       	ldi	r24, 0xB1	; 177
    1b5e:	90 e0       	ldi	r25, 0x00	; 0
    1b60:	fc 01       	movw	r30, r24
    1b62:	20 81       	ld	r18, Z
    1b64:	81 eb       	ldi	r24, 0xB1	; 177
    1b66:	90 e0       	ldi	r25, 0x00	; 0

00001b68 <.Loc.496>:
    1b68:	21 60       	ori	r18, 0x01	; 1
    1b6a:	fc 01       	movw	r30, r24
    1b6c:	20 83       	st	Z, r18

00001b6e <.Loc.497>:
    //16000000 / 256 = 62,500
    //1 / 62500 = 0.000016s
    //62500x/sec
    TIMSK2 = (1<<TOIE2);
    1b6e:	80 e7       	ldi	r24, 0x70	; 112
    1b70:	90 e0       	ldi	r25, 0x00	; 0

00001b72 <.Loc.498>:
    1b72:	21 e0       	ldi	r18, 0x01	; 1
    1b74:	fc 01       	movw	r30, r24
    1b76:	20 83       	st	Z, r18

00001b78 <.Loc.499>:

    //achter ultrasoon
    DDRK &= ~(1<<PK0);
    1b78:	87 e0       	ldi	r24, 0x07	; 7
    1b7a:	91 e0       	ldi	r25, 0x01	; 1
    1b7c:	fc 01       	movw	r30, r24
    1b7e:	20 81       	ld	r18, Z

00001b80 <.Loc.500>:
    1b80:	87 e0       	ldi	r24, 0x07	; 7
    1b82:	91 e0       	ldi	r25, 0x01	; 1

00001b84 <.Loc.501>:
    1b84:	2e 7f       	andi	r18, 0xFE	; 254
    1b86:	fc 01       	movw	r30, r24
    1b88:	20 83       	st	Z, r18

00001b8a <.Loc.502>:
    DDRL |= (1<<PL7);
    1b8a:	8a e0       	ldi	r24, 0x0A	; 10
    1b8c:	91 e0       	ldi	r25, 0x01	; 1
    1b8e:	fc 01       	movw	r30, r24
    1b90:	20 81       	ld	r18, Z
    1b92:	8a e0       	ldi	r24, 0x0A	; 10
    1b94:	91 e0       	ldi	r25, 0x01	; 1

00001b96 <.Loc.503>:
    1b96:	20 68       	ori	r18, 0x80	; 128
    1b98:	fc 01       	movw	r30, r24
    1b9a:	20 83       	st	Z, r18

00001b9c <.Loc.504>:
    PORTL &= ~(1<<PL7);
    1b9c:	8b e0       	ldi	r24, 0x0B	; 11
    1b9e:	91 e0       	ldi	r25, 0x01	; 1
    1ba0:	fc 01       	movw	r30, r24
    1ba2:	20 81       	ld	r18, Z

00001ba4 <.Loc.505>:
    1ba4:	8b e0       	ldi	r24, 0x0B	; 11
    1ba6:	91 e0       	ldi	r25, 0x01	; 1

00001ba8 <.Loc.506>:
    1ba8:	2f 77       	andi	r18, 0x7F	; 127
    1baa:	fc 01       	movw	r30, r24
    1bac:	20 83       	st	Z, r18

00001bae <.Loc.507>:

    //voor ultrasoon
    DDRF &= ~(1<<PF7);
    1bae:	80 e3       	ldi	r24, 0x30	; 48
    1bb0:	90 e0       	ldi	r25, 0x00	; 0
    1bb2:	fc 01       	movw	r30, r24
    1bb4:	20 81       	ld	r18, Z

00001bb6 <.Loc.508>:
    1bb6:	80 e3       	ldi	r24, 0x30	; 48
    1bb8:	90 e0       	ldi	r25, 0x00	; 0

00001bba <.Loc.509>:
    1bba:	2f 77       	andi	r18, 0x7F	; 127
    1bbc:	fc 01       	movw	r30, r24
    1bbe:	20 83       	st	Z, r18

00001bc0 <.Loc.510>:
    DDRL |= (1<<PL6);
    1bc0:	8a e0       	ldi	r24, 0x0A	; 10
    1bc2:	91 e0       	ldi	r25, 0x01	; 1
    1bc4:	fc 01       	movw	r30, r24
    1bc6:	20 81       	ld	r18, Z
    1bc8:	8a e0       	ldi	r24, 0x0A	; 10
    1bca:	91 e0       	ldi	r25, 0x01	; 1

00001bcc <.Loc.511>:
    1bcc:	20 64       	ori	r18, 0x40	; 64
    1bce:	fc 01       	movw	r30, r24
    1bd0:	20 83       	st	Z, r18

00001bd2 <.Loc.512>:
    PORTL &= ~(1<<PL6);
    1bd2:	8b e0       	ldi	r24, 0x0B	; 11
    1bd4:	91 e0       	ldi	r25, 0x01	; 1
    1bd6:	fc 01       	movw	r30, r24
    1bd8:	20 81       	ld	r18, Z

00001bda <.Loc.513>:
    1bda:	8b e0       	ldi	r24, 0x0B	; 11
    1bdc:	91 e0       	ldi	r25, 0x01	; 1

00001bde <.Loc.514>:
    1bde:	2f 7b       	andi	r18, 0xBF	; 191
    1be0:	fc 01       	movw	r30, r24
    1be2:	20 83       	st	Z, r18

00001be4 <.Loc.515>:
}
    1be4:	00 00       	nop
    1be6:	df 91       	pop	r29
    1be8:	cf 91       	pop	r28
    1bea:	08 95       	ret

00001bec <achterGetDistance>:

int achterGetDistance(void){
    1bec:	cf 93       	push	r28
    1bee:	df 93       	push	r29
    1bf0:	cd b7       	in	r28, 0x3d	; 61
    1bf2:	de b7       	in	r29, 0x3e	; 62
    1bf4:	6e 97       	sbiw	r28, 0x1e	; 30
    1bf6:	0f b6       	in	r0, 0x3f	; 63
    1bf8:	f8 94       	cli
    1bfa:	de bf       	out	0x3e, r29	; 62
    1bfc:	0f be       	out	0x3f, r0	; 63
    1bfe:	cd bf       	out	0x3d, r28	; 61

00001c00 <.Loc.517>:

    int Distance;

    achterTriggerPulse();
    1c00:	0e 94 0a 0f 	call	0x1e14	; 0x1e14 <achterTriggerPulse>

00001c04 <.Loc.518>:
	...

00001c06 <.L140>:

    while ((PINK & (1<<PK0)) == 0){
    1c06:	86 e0       	ldi	r24, 0x06	; 6
    1c08:	91 e0       	ldi	r25, 0x01	; 1
    1c0a:	dc 01       	movw	r26, r24
    1c0c:	8c 91       	ld	r24, X

00001c0e <.Loc.520>:
    1c0e:	88 2f       	mov	r24, r24
    1c10:	90 e0       	ldi	r25, 0x00	; 0
    1c12:	81 70       	andi	r24, 0x01	; 1
    1c14:	99 27       	eor	r25, r25

00001c16 <.Loc.521>:
    1c16:	00 97       	sbiw	r24, 0x00	; 0
    1c18:	b1 f3       	breq	.-20     	; 0x1c06 <.L140>

00001c1a <.Loc.522>:

    }
    TCNT2 = 0;
    1c1a:	82 eb       	ldi	r24, 0xB2	; 178
    1c1c:	90 e0       	ldi	r25, 0x00	; 0

00001c1e <.Loc.523>:
    1c1e:	fc 01       	movw	r30, r24
    1c20:	10 82       	st	Z, r1

00001c22 <.Loc.524>:
    TIFR2 = 1<<TOV2;
    1c22:	87 e3       	ldi	r24, 0x37	; 55
    1c24:	90 e0       	ldi	r25, 0x00	; 0

00001c26 <.Loc.525>:
    1c26:	21 e0       	ldi	r18, 0x01	; 1
    1c28:	dc 01       	movw	r26, r24
    1c2a:	2c 93       	st	X, r18

00001c2c <.Loc.526>:
    count = 0;
    1c2c:	10 92 2f 02 	sts	0x022F, r1	; 0x80022f <count+0x1>
    1c30:	10 92 2e 02 	sts	0x022E, r1	; 0x80022e <count>

00001c34 <.Loc.527>:
	...

00001c36 <.L141>:

    while ((PINK & (1<<PK0)) != 0){
    1c36:	86 e0       	ldi	r24, 0x06	; 6
    1c38:	91 e0       	ldi	r25, 0x01	; 1
    1c3a:	fc 01       	movw	r30, r24
    1c3c:	80 81       	ld	r24, Z

00001c3e <.Loc.529>:
    1c3e:	88 2f       	mov	r24, r24
    1c40:	90 e0       	ldi	r25, 0x00	; 0
    1c42:	81 70       	andi	r24, 0x01	; 1
    1c44:	99 27       	eor	r25, r25

00001c46 <.Loc.530>:
    1c46:	00 97       	sbiw	r24, 0x00	; 0
    1c48:	b1 f7       	brne	.-20     	; 0x1c36 <.L141>

00001c4a <.Loc.531>:

    }
    Distance = count;
    1c4a:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <count>
    1c4e:	90 91 2f 02 	lds	r25, 0x022F	; 0x80022f <count+0x1>
    1c52:	9a 83       	std	Y+2, r25	; 0x02
    1c54:	89 83       	std	Y+1, r24	; 0x01

00001c56 <.Loc.532>:

    Distance = Distance * 0.008 * 343;
    1c56:	89 81       	ldd	r24, Y+1	; 0x01
    1c58:	9a 81       	ldd	r25, Y+2	; 0x02
    1c5a:	9c 01       	movw	r18, r24
    1c5c:	99 0f       	add	r25, r25
    1c5e:	44 0b       	sbc	r20, r20
    1c60:	55 0b       	sbc	r21, r21
    1c62:	2f 87       	std	Y+15, r18	; 0x0f
    1c64:	38 8b       	std	Y+16, r19	; 0x10
    1c66:	49 8b       	std	Y+17, r20	; 0x11
    1c68:	5a 8b       	std	Y+18, r21	; 0x12
    1c6a:	6f 85       	ldd	r22, Y+15	; 0x0f
    1c6c:	78 89       	ldd	r23, Y+16	; 0x10
    1c6e:	89 89       	ldd	r24, Y+17	; 0x11
    1c70:	9a 89       	ldd	r25, Y+18	; 0x12
    1c72:	0e 94 cd 17 	call	0x2f9a	; 0x2f9a <__floatsisf>
    1c76:	6b 83       	std	Y+3, r22	; 0x03
    1c78:	7c 83       	std	Y+4, r23	; 0x04
    1c7a:	8d 83       	std	Y+5, r24	; 0x05
    1c7c:	9e 83       	std	Y+6, r25	; 0x06
    1c7e:	2f e6       	ldi	r18, 0x6F	; 111
    1c80:	32 e1       	ldi	r19, 0x12	; 18
    1c82:	43 e0       	ldi	r20, 0x03	; 3
    1c84:	5c e3       	ldi	r21, 0x3C	; 60
    1c86:	6b 81       	ldd	r22, Y+3	; 0x03
    1c88:	7c 81       	ldd	r23, Y+4	; 0x04
    1c8a:	8d 81       	ldd	r24, Y+5	; 0x05
    1c8c:	9e 81       	ldd	r25, Y+6	; 0x06
    1c8e:	0e 94 82 18 	call	0x3104	; 0x3104 <__mulsf3>
    1c92:	6b 8b       	std	Y+19, r22	; 0x13
    1c94:	7c 8b       	std	Y+20, r23	; 0x14
    1c96:	8d 8b       	std	Y+21, r24	; 0x15
    1c98:	9e 8b       	std	Y+22, r25	; 0x16
    1c9a:	8b 89       	ldd	r24, Y+19	; 0x13
    1c9c:	9c 89       	ldd	r25, Y+20	; 0x14
    1c9e:	ad 89       	ldd	r26, Y+21	; 0x15
    1ca0:	be 89       	ldd	r27, Y+22	; 0x16
    1ca2:	8f 83       	std	Y+7, r24	; 0x07
    1ca4:	98 87       	std	Y+8, r25	; 0x08
    1ca6:	a9 87       	std	Y+9, r26	; 0x09
    1ca8:	ba 87       	std	Y+10, r27	; 0x0a

00001caa <.Loc.533>:
    1caa:	20 e0       	ldi	r18, 0x00	; 0
    1cac:	30 e8       	ldi	r19, 0x80	; 128
    1cae:	4b ea       	ldi	r20, 0xAB	; 171
    1cb0:	53 e4       	ldi	r21, 0x43	; 67
    1cb2:	6f 81       	ldd	r22, Y+7	; 0x07
    1cb4:	78 85       	ldd	r23, Y+8	; 0x08
    1cb6:	89 85       	ldd	r24, Y+9	; 0x09
    1cb8:	9a 85       	ldd	r25, Y+10	; 0x0a
    1cba:	0e 94 82 18 	call	0x3104	; 0x3104 <__mulsf3>
    1cbe:	6f 8b       	std	Y+23, r22	; 0x17
    1cc0:	78 8f       	std	Y+24, r23	; 0x18
    1cc2:	89 8f       	std	Y+25, r24	; 0x19
    1cc4:	9a 8f       	std	Y+26, r25	; 0x1a
    1cc6:	2f 89       	ldd	r18, Y+23	; 0x17
    1cc8:	38 8d       	ldd	r19, Y+24	; 0x18
    1cca:	49 8d       	ldd	r20, Y+25	; 0x19
    1ccc:	5a 8d       	ldd	r21, Y+26	; 0x1a
    1cce:	2b 87       	std	Y+11, r18	; 0x0b
    1cd0:	3c 87       	std	Y+12, r19	; 0x0c
    1cd2:	4d 87       	std	Y+13, r20	; 0x0d
    1cd4:	5e 87       	std	Y+14, r21	; 0x0e

00001cd6 <.Loc.534>:
    1cd6:	6b 85       	ldd	r22, Y+11	; 0x0b
    1cd8:	7c 85       	ldd	r23, Y+12	; 0x0c
    1cda:	8d 85       	ldd	r24, Y+13	; 0x0d
    1cdc:	9e 85       	ldd	r25, Y+14	; 0x0e
    1cde:	0e 94 95 17 	call	0x2f2a	; 0x2f2a <__fixsfsi>
    1ce2:	6b 8f       	std	Y+27, r22	; 0x1b
    1ce4:	7c 8f       	std	Y+28, r23	; 0x1c
    1ce6:	8d 8f       	std	Y+29, r24	; 0x1d
    1ce8:	9e 8f       	std	Y+30, r25	; 0x1e
    1cea:	4b 8d       	ldd	r20, Y+27	; 0x1b
    1cec:	5c 8d       	ldd	r21, Y+28	; 0x1c
    1cee:	5a 83       	std	Y+2, r21	; 0x02
    1cf0:	49 83       	std	Y+1, r20	; 0x01

00001cf2 <.Loc.535>:
    //34 cm / ms
    //340   mm / ms
    //0.34  mm / us
    //5.44 * count geeft distance in mm

    return Distance;
    1cf2:	89 81       	ldd	r24, Y+1	; 0x01
    1cf4:	9a 81       	ldd	r25, Y+2	; 0x02

00001cf6 <.Loc.536>:
}
    1cf6:	6e 96       	adiw	r28, 0x1e	; 30
    1cf8:	0f b6       	in	r0, 0x3f	; 63
    1cfa:	f8 94       	cli
    1cfc:	de bf       	out	0x3e, r29	; 62
    1cfe:	0f be       	out	0x3f, r0	; 63
    1d00:	cd bf       	out	0x3d, r28	; 61
    1d02:	df 91       	pop	r29
    1d04:	cf 91       	pop	r28
    1d06:	08 95       	ret

00001d08 <voorGetDistance>:

int voorGetDistance(void){
    1d08:	cf 93       	push	r28
    1d0a:	df 93       	push	r29
    1d0c:	cd b7       	in	r28, 0x3d	; 61
    1d0e:	de b7       	in	r29, 0x3e	; 62
    1d10:	6e 97       	sbiw	r28, 0x1e	; 30
    1d12:	0f b6       	in	r0, 0x3f	; 63
    1d14:	f8 94       	cli
    1d16:	de bf       	out	0x3e, r29	; 62
    1d18:	0f be       	out	0x3f, r0	; 63
    1d1a:	cd bf       	out	0x3d, r28	; 61

00001d1c <.Loc.538>:

    int Distance;

    voorTriggerPulse();
    1d1c:	0e 94 fe 11 	call	0x23fc	; 0x23fc <voorTriggerPulse>

00001d20 <.Loc.539>:
	...

00001d22 <.L144>:

    while ((PINF & (1<<PF7)) == 0){
    1d22:	8f e2       	ldi	r24, 0x2F	; 47
    1d24:	90 e0       	ldi	r25, 0x00	; 0
    1d26:	dc 01       	movw	r26, r24
    1d28:	8c 91       	ld	r24, X

00001d2a <.Loc.541>:
    1d2a:	88 23       	and	r24, r24
    1d2c:	d4 f7       	brge	.-12     	; 0x1d22 <.L144>

00001d2e <.Loc.542>:

    }
    TCNT2 = 0;
    1d2e:	82 eb       	ldi	r24, 0xB2	; 178
    1d30:	90 e0       	ldi	r25, 0x00	; 0

00001d32 <.Loc.543>:
    1d32:	fc 01       	movw	r30, r24
    1d34:	10 82       	st	Z, r1

00001d36 <.Loc.544>:
    TIFR2 = 1<<TOV2;
    1d36:	87 e3       	ldi	r24, 0x37	; 55
    1d38:	90 e0       	ldi	r25, 0x00	; 0

00001d3a <.Loc.545>:
    1d3a:	21 e0       	ldi	r18, 0x01	; 1
    1d3c:	dc 01       	movw	r26, r24
    1d3e:	2c 93       	st	X, r18

00001d40 <.Loc.546>:
    count = 0;
    1d40:	10 92 2f 02 	sts	0x022F, r1	; 0x80022f <count+0x1>
    1d44:	10 92 2e 02 	sts	0x022E, r1	; 0x80022e <count>

00001d48 <.Loc.547>:
	...

00001d4a <.L145>:

    while ((PINF & (1<<PF7)) != 0){
    1d4a:	8f e2       	ldi	r24, 0x2F	; 47
    1d4c:	90 e0       	ldi	r25, 0x00	; 0
    1d4e:	fc 01       	movw	r30, r24
    1d50:	80 81       	ld	r24, Z

00001d52 <.Loc.549>:
    1d52:	88 23       	and	r24, r24
    1d54:	d4 f3       	brlt	.-12     	; 0x1d4a <.L145>

00001d56 <.Loc.550>:

    }
    Distance = count;
    1d56:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <count>
    1d5a:	90 91 2f 02 	lds	r25, 0x022F	; 0x80022f <count+0x1>
    1d5e:	9a 83       	std	Y+2, r25	; 0x02
    1d60:	89 83       	std	Y+1, r24	; 0x01

00001d62 <.Loc.551>:

    Distance = Distance * 0.008 * 343;
    1d62:	89 81       	ldd	r24, Y+1	; 0x01
    1d64:	9a 81       	ldd	r25, Y+2	; 0x02
    1d66:	9c 01       	movw	r18, r24
    1d68:	99 0f       	add	r25, r25
    1d6a:	44 0b       	sbc	r20, r20
    1d6c:	55 0b       	sbc	r21, r21
    1d6e:	2f 87       	std	Y+15, r18	; 0x0f
    1d70:	38 8b       	std	Y+16, r19	; 0x10
    1d72:	49 8b       	std	Y+17, r20	; 0x11
    1d74:	5a 8b       	std	Y+18, r21	; 0x12
    1d76:	6f 85       	ldd	r22, Y+15	; 0x0f
    1d78:	78 89       	ldd	r23, Y+16	; 0x10
    1d7a:	89 89       	ldd	r24, Y+17	; 0x11
    1d7c:	9a 89       	ldd	r25, Y+18	; 0x12
    1d7e:	0e 94 cd 17 	call	0x2f9a	; 0x2f9a <__floatsisf>
    1d82:	6b 83       	std	Y+3, r22	; 0x03
    1d84:	7c 83       	std	Y+4, r23	; 0x04
    1d86:	8d 83       	std	Y+5, r24	; 0x05
    1d88:	9e 83       	std	Y+6, r25	; 0x06
    1d8a:	2f e6       	ldi	r18, 0x6F	; 111
    1d8c:	32 e1       	ldi	r19, 0x12	; 18
    1d8e:	43 e0       	ldi	r20, 0x03	; 3
    1d90:	5c e3       	ldi	r21, 0x3C	; 60
    1d92:	6b 81       	ldd	r22, Y+3	; 0x03
    1d94:	7c 81       	ldd	r23, Y+4	; 0x04
    1d96:	8d 81       	ldd	r24, Y+5	; 0x05
    1d98:	9e 81       	ldd	r25, Y+6	; 0x06
    1d9a:	0e 94 82 18 	call	0x3104	; 0x3104 <__mulsf3>
    1d9e:	6b 8b       	std	Y+19, r22	; 0x13
    1da0:	7c 8b       	std	Y+20, r23	; 0x14
    1da2:	8d 8b       	std	Y+21, r24	; 0x15
    1da4:	9e 8b       	std	Y+22, r25	; 0x16
    1da6:	8b 89       	ldd	r24, Y+19	; 0x13
    1da8:	9c 89       	ldd	r25, Y+20	; 0x14
    1daa:	ad 89       	ldd	r26, Y+21	; 0x15
    1dac:	be 89       	ldd	r27, Y+22	; 0x16
    1dae:	8f 83       	std	Y+7, r24	; 0x07
    1db0:	98 87       	std	Y+8, r25	; 0x08
    1db2:	a9 87       	std	Y+9, r26	; 0x09
    1db4:	ba 87       	std	Y+10, r27	; 0x0a

00001db6 <.Loc.552>:
    1db6:	20 e0       	ldi	r18, 0x00	; 0
    1db8:	30 e8       	ldi	r19, 0x80	; 128
    1dba:	4b ea       	ldi	r20, 0xAB	; 171
    1dbc:	53 e4       	ldi	r21, 0x43	; 67
    1dbe:	6f 81       	ldd	r22, Y+7	; 0x07
    1dc0:	78 85       	ldd	r23, Y+8	; 0x08
    1dc2:	89 85       	ldd	r24, Y+9	; 0x09
    1dc4:	9a 85       	ldd	r25, Y+10	; 0x0a
    1dc6:	0e 94 82 18 	call	0x3104	; 0x3104 <__mulsf3>
    1dca:	6f 8b       	std	Y+23, r22	; 0x17
    1dcc:	78 8f       	std	Y+24, r23	; 0x18
    1dce:	89 8f       	std	Y+25, r24	; 0x19
    1dd0:	9a 8f       	std	Y+26, r25	; 0x1a
    1dd2:	2f 89       	ldd	r18, Y+23	; 0x17
    1dd4:	38 8d       	ldd	r19, Y+24	; 0x18
    1dd6:	49 8d       	ldd	r20, Y+25	; 0x19
    1dd8:	5a 8d       	ldd	r21, Y+26	; 0x1a
    1dda:	2b 87       	std	Y+11, r18	; 0x0b
    1ddc:	3c 87       	std	Y+12, r19	; 0x0c
    1dde:	4d 87       	std	Y+13, r20	; 0x0d
    1de0:	5e 87       	std	Y+14, r21	; 0x0e

00001de2 <.Loc.553>:
    1de2:	6b 85       	ldd	r22, Y+11	; 0x0b
    1de4:	7c 85       	ldd	r23, Y+12	; 0x0c
    1de6:	8d 85       	ldd	r24, Y+13	; 0x0d
    1de8:	9e 85       	ldd	r25, Y+14	; 0x0e
    1dea:	0e 94 95 17 	call	0x2f2a	; 0x2f2a <__fixsfsi>
    1dee:	6b 8f       	std	Y+27, r22	; 0x1b
    1df0:	7c 8f       	std	Y+28, r23	; 0x1c
    1df2:	8d 8f       	std	Y+29, r24	; 0x1d
    1df4:	9e 8f       	std	Y+30, r25	; 0x1e
    1df6:	4b 8d       	ldd	r20, Y+27	; 0x1b
    1df8:	5c 8d       	ldd	r21, Y+28	; 0x1c
    1dfa:	5a 83       	std	Y+2, r21	; 0x02
    1dfc:	49 83       	std	Y+1, r20	; 0x01

00001dfe <.Loc.554>:
    //34 cm / ms
    //340   mm / ms
    //0.34  mm / us
    //5.44 * count geeft distance in mm

    return Distance;
    1dfe:	89 81       	ldd	r24, Y+1	; 0x01
    1e00:	9a 81       	ldd	r25, Y+2	; 0x02

00001e02 <.Loc.555>:
}
    1e02:	6e 96       	adiw	r28, 0x1e	; 30
    1e04:	0f b6       	in	r0, 0x3f	; 63
    1e06:	f8 94       	cli
    1e08:	de bf       	out	0x3e, r29	; 62
    1e0a:	0f be       	out	0x3f, r0	; 63
    1e0c:	cd bf       	out	0x3d, r28	; 61
    1e0e:	df 91       	pop	r29
    1e10:	cf 91       	pop	r28
    1e12:	08 95       	ret

00001e14 <achterTriggerPulse>:

void achterTriggerPulse (void){
    1e14:	cf 93       	push	r28
    1e16:	df 93       	push	r29
    1e18:	cd b7       	in	r28, 0x3d	; 61
    1e1a:	de b7       	in	r29, 0x3e	; 62
    1e1c:	c0 59       	subi	r28, 0x90	; 144
    1e1e:	d1 09       	sbc	r29, r1
    1e20:	0f b6       	in	r0, 0x3f	; 63
    1e22:	f8 94       	cli
    1e24:	de bf       	out	0x3e, r29	; 62
    1e26:	0f be       	out	0x3f, r0	; 63
    1e28:	cd bf       	out	0x3d, r28	; 61

00001e2a <.Loc.557>:
    PORTL &= (~(1<<PL6));
    1e2a:	8b e0       	ldi	r24, 0x0B	; 11
    1e2c:	91 e0       	ldi	r25, 0x01	; 1
    1e2e:	dc 01       	movw	r26, r24
    1e30:	2c 91       	ld	r18, X

00001e32 <.Loc.558>:
    1e32:	8b e0       	ldi	r24, 0x0B	; 11
    1e34:	91 e0       	ldi	r25, 0x01	; 1

00001e36 <.Loc.559>:
    1e36:	2f 7b       	andi	r18, 0xBF	; 191
    1e38:	fc 01       	movw	r30, r24
    1e3a:	20 83       	st	Z, r18
    1e3c:	80 e0       	ldi	r24, 0x00	; 0
    1e3e:	90 e0       	ldi	r25, 0x00	; 0
    1e40:	a0 e0       	ldi	r26, 0x00	; 0
    1e42:	b0 e4       	ldi	r27, 0x40	; 64
    1e44:	89 a3       	std	Y+33, r24	; 0x21
    1e46:	9a a3       	std	Y+34, r25	; 0x22
    1e48:	ab a3       	std	Y+35, r26	; 0x23
    1e4a:	bc a3       	std	Y+36, r27	; 0x24

00001e4c <.LBB138>:
	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint8_t __ticks;
	double __tmp2 ;
	__tmp = ((F_CPU) / 3e6) * __us;
    1e4c:	2b ea       	ldi	r18, 0xAB	; 171
    1e4e:	3a ea       	ldi	r19, 0xAA	; 170
    1e50:	4a ea       	ldi	r20, 0xAA	; 170
    1e52:	50 e4       	ldi	r21, 0x40	; 64
    1e54:	69 a1       	ldd	r22, Y+33	; 0x21
    1e56:	7a a1       	ldd	r23, Y+34	; 0x22
    1e58:	8b a1       	ldd	r24, Y+35	; 0x23
    1e5a:	9c a1       	ldd	r25, Y+36	; 0x24
    1e5c:	0e 94 82 18 	call	0x3104	; 0x3104 <__mulsf3>
    1e60:	2d 96       	adiw	r28, 0x0d	; 13
    1e62:	6c af       	std	Y+60, r22	; 0x3c
    1e64:	7d af       	std	Y+61, r23	; 0x3d
    1e66:	8e af       	std	Y+62, r24	; 0x3e
    1e68:	9f af       	std	Y+63, r25	; 0x3f
    1e6a:	2d 97       	sbiw	r28, 0x0d	; 13
    1e6c:	2d 96       	adiw	r28, 0x0d	; 13
    1e6e:	8c ad       	ldd	r24, Y+60	; 0x3c
    1e70:	9d ad       	ldd	r25, Y+61	; 0x3d
    1e72:	ae ad       	ldd	r26, Y+62	; 0x3e
    1e74:	bf ad       	ldd	r27, Y+63	; 0x3f
    1e76:	2d 97       	sbiw	r28, 0x0d	; 13
    1e78:	8d a3       	std	Y+37, r24	; 0x25
    1e7a:	9e a3       	std	Y+38, r25	; 0x26
    1e7c:	af a3       	std	Y+39, r26	; 0x27
    1e7e:	b8 a7       	std	Y+40, r27	; 0x28

00001e80 <.Loc.561>:
	__tmp2 = ((F_CPU) / 4e6) * __us;
    1e80:	20 e0       	ldi	r18, 0x00	; 0
    1e82:	30 e0       	ldi	r19, 0x00	; 0
    1e84:	40 e8       	ldi	r20, 0x80	; 128
    1e86:	50 e4       	ldi	r21, 0x40	; 64
    1e88:	69 a1       	ldd	r22, Y+33	; 0x21
    1e8a:	7a a1       	ldd	r23, Y+34	; 0x22
    1e8c:	8b a1       	ldd	r24, Y+35	; 0x23
    1e8e:	9c a1       	ldd	r25, Y+36	; 0x24
    1e90:	0e 94 82 18 	call	0x3104	; 0x3104 <__mulsf3>
    1e94:	61 96       	adiw	r28, 0x11	; 17
    1e96:	6c af       	std	Y+60, r22	; 0x3c
    1e98:	7d af       	std	Y+61, r23	; 0x3d
    1e9a:	8e af       	std	Y+62, r24	; 0x3e
    1e9c:	9f af       	std	Y+63, r25	; 0x3f
    1e9e:	61 97       	sbiw	r28, 0x11	; 17
    1ea0:	61 96       	adiw	r28, 0x11	; 17
    1ea2:	8c ad       	ldd	r24, Y+60	; 0x3c
    1ea4:	9d ad       	ldd	r25, Y+61	; 0x3d
    1ea6:	ae ad       	ldd	r26, Y+62	; 0x3e
    1ea8:	bf ad       	ldd	r27, Y+63	; 0x3f
    1eaa:	61 97       	sbiw	r28, 0x11	; 17
    1eac:	89 a7       	std	Y+41, r24	; 0x29
    1eae:	9a a7       	std	Y+42, r25	; 0x2a
    1eb0:	ab a7       	std	Y+43, r26	; 0x2b
    1eb2:	bc a7       	std	Y+44, r27	; 0x2c

00001eb4 <.Loc.562>:
	if (__tmp < 1.0)
    1eb4:	20 e0       	ldi	r18, 0x00	; 0
    1eb6:	30 e0       	ldi	r19, 0x00	; 0
    1eb8:	40 e8       	ldi	r20, 0x80	; 128
    1eba:	5f e3       	ldi	r21, 0x3F	; 63
    1ebc:	6d a1       	ldd	r22, Y+37	; 0x25
    1ebe:	7e a1       	ldd	r23, Y+38	; 0x26
    1ec0:	8f a1       	ldd	r24, Y+39	; 0x27
    1ec2:	98 a5       	ldd	r25, Y+40	; 0x28
    1ec4:	0e 94 1e 17 	call	0x2e3c	; 0x2e3c <__cmpsf2>
    1ec8:	88 23       	and	r24, r24
    1eca:	1c f4       	brge	.+6      	; 0x1ed2 <.L190>

00001ecc <.Loc.563>:
		__ticks = 1;
    1ecc:	81 e0       	ldi	r24, 0x01	; 1
    1ece:	8d a7       	std	Y+45, r24	; 0x2d
    1ed0:	ff c0       	rjmp	.+510    	; 0x20d0 <.L150>

00001ed2 <.L190>:
	else if (__tmp2 > 65535)
    1ed2:	20 e0       	ldi	r18, 0x00	; 0
    1ed4:	3f ef       	ldi	r19, 0xFF	; 255
    1ed6:	4f e7       	ldi	r20, 0x7F	; 127
    1ed8:	57 e4       	ldi	r21, 0x47	; 71
    1eda:	69 a5       	ldd	r22, Y+41	; 0x29
    1edc:	7a a5       	ldd	r23, Y+42	; 0x2a
    1ede:	8b a5       	ldd	r24, Y+43	; 0x2b
    1ee0:	9c a5       	ldd	r25, Y+44	; 0x2c
    1ee2:	0e 94 7d 18 	call	0x30fa	; 0x30fa <__gesf2>
    1ee6:	88 23       	and	r24, r24
    1ee8:	09 f0       	breq	.+2      	; 0x1eec <L0^A>

00001eea <L0^A>:
    1eea:	0c f4       	brge	.+2      	; 0x1eee <.Loc.565>

00001eec <L0^A>:
    1eec:	b6 c0       	rjmp	.+364    	; 0x205a <.L191>

00001eee <.Loc.565>:
	{
		_delay_ms(__us / 1000.0);
    1eee:	20 e0       	ldi	r18, 0x00	; 0
    1ef0:	30 e0       	ldi	r19, 0x00	; 0
    1ef2:	4a e7       	ldi	r20, 0x7A	; 122
    1ef4:	54 e4       	ldi	r21, 0x44	; 68
    1ef6:	69 a1       	ldd	r22, Y+33	; 0x21
    1ef8:	7a a1       	ldd	r23, Y+34	; 0x22
    1efa:	8b a1       	ldd	r24, Y+35	; 0x23
    1efc:	9c a1       	ldd	r25, Y+36	; 0x24
    1efe:	0e 94 23 17 	call	0x2e46	; 0x2e46 <__divsf3>
    1f02:	65 96       	adiw	r28, 0x15	; 21
    1f04:	6c af       	std	Y+60, r22	; 0x3c
    1f06:	7d af       	std	Y+61, r23	; 0x3d
    1f08:	8e af       	std	Y+62, r24	; 0x3e
    1f0a:	9f af       	std	Y+63, r25	; 0x3f
    1f0c:	65 97       	sbiw	r28, 0x15	; 21
    1f0e:	65 96       	adiw	r28, 0x15	; 21
    1f10:	8c ad       	ldd	r24, Y+60	; 0x3c
    1f12:	9d ad       	ldd	r25, Y+61	; 0x3d
    1f14:	ae ad       	ldd	r26, Y+62	; 0x3e
    1f16:	bf ad       	ldd	r27, Y+63	; 0x3f
    1f18:	65 97       	sbiw	r28, 0x15	; 21
    1f1a:	8e a7       	std	Y+46, r24	; 0x2e
    1f1c:	9f a7       	std	Y+47, r25	; 0x2f
    1f1e:	a8 ab       	std	Y+48, r26	; 0x30
    1f20:	b9 ab       	std	Y+49, r27	; 0x31

00001f22 <.LBB140>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    1f22:	20 e0       	ldi	r18, 0x00	; 0
    1f24:	30 e0       	ldi	r19, 0x00	; 0
    1f26:	4a e7       	ldi	r20, 0x7A	; 122
    1f28:	55 e4       	ldi	r21, 0x45	; 69
    1f2a:	6e a5       	ldd	r22, Y+46	; 0x2e
    1f2c:	7f a5       	ldd	r23, Y+47	; 0x2f
    1f2e:	88 a9       	ldd	r24, Y+48	; 0x30
    1f30:	99 a9       	ldd	r25, Y+49	; 0x31
    1f32:	0e 94 82 18 	call	0x3104	; 0x3104 <__mulsf3>
    1f36:	69 96       	adiw	r28, 0x19	; 25
    1f38:	6c af       	std	Y+60, r22	; 0x3c
    1f3a:	7d af       	std	Y+61, r23	; 0x3d
    1f3c:	8e af       	std	Y+62, r24	; 0x3e
    1f3e:	9f af       	std	Y+63, r25	; 0x3f
    1f40:	69 97       	sbiw	r28, 0x19	; 25
    1f42:	69 96       	adiw	r28, 0x19	; 25
    1f44:	8c ad       	ldd	r24, Y+60	; 0x3c
    1f46:	9d ad       	ldd	r25, Y+61	; 0x3d
    1f48:	ae ad       	ldd	r26, Y+62	; 0x3e
    1f4a:	bf ad       	ldd	r27, Y+63	; 0x3f
    1f4c:	69 97       	sbiw	r28, 0x19	; 25
    1f4e:	8a ab       	std	Y+50, r24	; 0x32
    1f50:	9b ab       	std	Y+51, r25	; 0x33
    1f52:	ac ab       	std	Y+52, r26	; 0x34
    1f54:	bd ab       	std	Y+53, r27	; 0x35

00001f56 <.Loc.567>:
	if (__tmp < 1.0)
    1f56:	20 e0       	ldi	r18, 0x00	; 0
    1f58:	30 e0       	ldi	r19, 0x00	; 0
    1f5a:	40 e8       	ldi	r20, 0x80	; 128
    1f5c:	5f e3       	ldi	r21, 0x3F	; 63
    1f5e:	6a a9       	ldd	r22, Y+50	; 0x32
    1f60:	7b a9       	ldd	r23, Y+51	; 0x33
    1f62:	8c a9       	ldd	r24, Y+52	; 0x34
    1f64:	9d a9       	ldd	r25, Y+53	; 0x35
    1f66:	0e 94 1e 17 	call	0x2e3c	; 0x2e3c <__cmpsf2>
    1f6a:	88 23       	and	r24, r24
    1f6c:	2c f4       	brge	.+10     	; 0x1f78 <.L192>

00001f6e <.Loc.568>:
		__ticks = 1;
    1f6e:	81 e0       	ldi	r24, 0x01	; 1
    1f70:	90 e0       	ldi	r25, 0x00	; 0
    1f72:	9f ab       	std	Y+55, r25	; 0x37
    1f74:	8e ab       	std	Y+54, r24	; 0x36
    1f76:	66 c0       	rjmp	.+204    	; 0x2044 <.L155>

00001f78 <.L192>:
	else if (__tmp > 65535)
    1f78:	20 e0       	ldi	r18, 0x00	; 0
    1f7a:	3f ef       	ldi	r19, 0xFF	; 255
    1f7c:	4f e7       	ldi	r20, 0x7F	; 127
    1f7e:	57 e4       	ldi	r21, 0x47	; 71
    1f80:	6a a9       	ldd	r22, Y+50	; 0x32
    1f82:	7b a9       	ldd	r23, Y+51	; 0x33
    1f84:	8c a9       	ldd	r24, Y+52	; 0x34
    1f86:	9d a9       	ldd	r25, Y+53	; 0x35
    1f88:	0e 94 7d 18 	call	0x30fa	; 0x30fa <__gesf2>
    1f8c:	88 23       	and	r24, r24
    1f8e:	09 f0       	breq	.+2      	; 0x1f92 <L0^A>

00001f90 <L0^A>:
    1f90:	0c f4       	brge	.+2      	; 0x1f94 <.Loc.570>

00001f92 <L0^A>:
    1f92:	46 c0       	rjmp	.+140    	; 0x2020 <.L193>

00001f94 <.Loc.570>:
		__ticks = (uint16_t) (__ms * 10.0);
    1f94:	20 e0       	ldi	r18, 0x00	; 0
    1f96:	30 e0       	ldi	r19, 0x00	; 0
    1f98:	40 e2       	ldi	r20, 0x20	; 32
    1f9a:	51 e4       	ldi	r21, 0x41	; 65
    1f9c:	6e a5       	ldd	r22, Y+46	; 0x2e
    1f9e:	7f a5       	ldd	r23, Y+47	; 0x2f
    1fa0:	88 a9       	ldd	r24, Y+48	; 0x30
    1fa2:	99 a9       	ldd	r25, Y+49	; 0x31
    1fa4:	0e 94 82 18 	call	0x3104	; 0x3104 <__mulsf3>
    1fa8:	6d 96       	adiw	r28, 0x1d	; 29
    1faa:	6c af       	std	Y+60, r22	; 0x3c
    1fac:	7d af       	std	Y+61, r23	; 0x3d
    1fae:	8e af       	std	Y+62, r24	; 0x3e
    1fb0:	9f af       	std	Y+63, r25	; 0x3f
    1fb2:	6d 97       	sbiw	r28, 0x1d	; 29
    1fb4:	6d 96       	adiw	r28, 0x1d	; 29
    1fb6:	8c ad       	ldd	r24, Y+60	; 0x3c
    1fb8:	9d ad       	ldd	r25, Y+61	; 0x3d
    1fba:	ae ad       	ldd	r26, Y+62	; 0x3e
    1fbc:	bf ad       	ldd	r27, Y+63	; 0x3f
    1fbe:	6d 97       	sbiw	r28, 0x1d	; 29
    1fc0:	29 96       	adiw	r28, 0x09	; 9
    1fc2:	8c af       	std	Y+60, r24	; 0x3c
    1fc4:	9d af       	std	Y+61, r25	; 0x3d
    1fc6:	ae af       	std	Y+62, r26	; 0x3e
    1fc8:	bf af       	std	Y+63, r27	; 0x3f
    1fca:	29 97       	sbiw	r28, 0x09	; 9

00001fcc <.Loc.571>:
    1fcc:	29 96       	adiw	r28, 0x09	; 9
    1fce:	6c ad       	ldd	r22, Y+60	; 0x3c
    1fd0:	7d ad       	ldd	r23, Y+61	; 0x3d
    1fd2:	8e ad       	ldd	r24, Y+62	; 0x3e
    1fd4:	9f ad       	ldd	r25, Y+63	; 0x3f
    1fd6:	29 97       	sbiw	r28, 0x09	; 9
    1fd8:	0e 94 9c 17 	call	0x2f38	; 0x2f38 <__fixunssfsi>
    1fdc:	a1 96       	adiw	r28, 0x21	; 33
    1fde:	6c af       	std	Y+60, r22	; 0x3c
    1fe0:	7d af       	std	Y+61, r23	; 0x3d
    1fe2:	8e af       	std	Y+62, r24	; 0x3e
    1fe4:	9f af       	std	Y+63, r25	; 0x3f
    1fe6:	a1 97       	sbiw	r28, 0x21	; 33
    1fe8:	6f 96       	adiw	r28, 0x1f	; 31
    1fea:	ae ad       	ldd	r26, Y+62	; 0x3e
    1fec:	bf ad       	ldd	r27, Y+63	; 0x3f
    1fee:	6f 97       	sbiw	r28, 0x1f	; 31
    1ff0:	bf ab       	std	Y+55, r27	; 0x37
    1ff2:	ae ab       	std	Y+54, r26	; 0x36

00001ff4 <.Loc.572>:
		while(__ticks)
    1ff4:	10 c0       	rjmp	.+32     	; 0x2016 <.L158>

00001ff6 <.L159>:
    1ff6:	80 e9       	ldi	r24, 0x90	; 144
    1ff8:	91 e0       	ldi	r25, 0x01	; 1
    1ffa:	99 af       	std	Y+57, r25	; 0x39
    1ffc:	88 af       	std	Y+56, r24	; 0x38

00001ffe <.LBB142>:
    1ffe:	88 ad       	ldd	r24, Y+56	; 0x38
    2000:	99 ad       	ldd	r25, Y+57	; 0x39

00002002 <.L1^B11>:
    2002:	01 97       	sbiw	r24, 0x01	; 1
    2004:	f1 f7       	brne	.-4      	; 0x2002 <.L1^B11>
    2006:	99 af       	std	Y+57, r25	; 0x39
    2008:	88 af       	std	Y+56, r24	; 0x38

0000200a <.Loc.574>:
	...

0000200c <.LBE142>:
			__ticks --;
    200c:	8e a9       	ldd	r24, Y+54	; 0x36
    200e:	9f a9       	ldd	r25, Y+55	; 0x37
    2010:	01 97       	sbiw	r24, 0x01	; 1
    2012:	9f ab       	std	Y+55, r25	; 0x37
    2014:	8e ab       	std	Y+54, r24	; 0x36

00002016 <.L158>:
		while(__ticks)
    2016:	8e a9       	ldd	r24, Y+54	; 0x36
    2018:	9f a9       	ldd	r25, Y+55	; 0x37
    201a:	00 97       	sbiw	r24, 0x00	; 0
    201c:	61 f7       	brne	.-40     	; 0x1ff6 <.L159>

0000201e <.Loc.577>:
		return;
    201e:	58 c0       	rjmp	.+176    	; 0x20d0 <.L150>

00002020 <.L193>:
		__ticks = (uint16_t)__tmp;
    2020:	6a a9       	ldd	r22, Y+50	; 0x32
    2022:	7b a9       	ldd	r23, Y+51	; 0x33
    2024:	8c a9       	ldd	r24, Y+52	; 0x34
    2026:	9d a9       	ldd	r25, Y+53	; 0x35
    2028:	0e 94 9c 17 	call	0x2f38	; 0x2f38 <__fixunssfsi>
    202c:	a5 96       	adiw	r28, 0x25	; 37
    202e:	6c af       	std	Y+60, r22	; 0x3c
    2030:	7d af       	std	Y+61, r23	; 0x3d
    2032:	8e af       	std	Y+62, r24	; 0x3e
    2034:	9f af       	std	Y+63, r25	; 0x3f
    2036:	a5 97       	sbiw	r28, 0x25	; 37
    2038:	a3 96       	adiw	r28, 0x23	; 35
    203a:	ee ad       	ldd	r30, Y+62	; 0x3e
    203c:	ff ad       	ldd	r31, Y+63	; 0x3f
    203e:	a3 97       	sbiw	r28, 0x23	; 35
    2040:	ff ab       	std	Y+55, r31	; 0x37
    2042:	ee ab       	std	Y+54, r30	; 0x36

00002044 <.L155>:
    2044:	8e a9       	ldd	r24, Y+54	; 0x36
    2046:	9f a9       	ldd	r25, Y+55	; 0x37
    2048:	9b af       	std	Y+59, r25	; 0x3b
    204a:	8a af       	std	Y+58, r24	; 0x3a

0000204c <.LBB144>:
    204c:	8a ad       	ldd	r24, Y+58	; 0x3a
    204e:	9b ad       	ldd	r25, Y+59	; 0x3b

00002050 <.L1^B12>:
    2050:	01 97       	sbiw	r24, 0x01	; 1
    2052:	f1 f7       	brne	.-4      	; 0x2050 <.L1^B12>
    2054:	9b af       	std	Y+59, r25	; 0x3b
    2056:	8a af       	std	Y+58, r24	; 0x3a

00002058 <.Loc.580>:
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
#endif /* __AVR_TINY__ */
}
    2058:	3b c0       	rjmp	.+118    	; 0x20d0 <.L150>

0000205a <.L191>:
	}
	else if (__tmp > 255)
    205a:	20 e0       	ldi	r18, 0x00	; 0
    205c:	30 e0       	ldi	r19, 0x00	; 0
    205e:	4f e7       	ldi	r20, 0x7F	; 127
    2060:	53 e4       	ldi	r21, 0x43	; 67
    2062:	6d a1       	ldd	r22, Y+37	; 0x25
    2064:	7e a1       	ldd	r23, Y+38	; 0x26
    2066:	8f a1       	ldd	r24, Y+39	; 0x27
    2068:	98 a5       	ldd	r25, Y+40	; 0x28
    206a:	0e 94 7d 18 	call	0x30fa	; 0x30fa <__gesf2>
    206e:	88 23       	and	r24, r24
    2070:	f9 f0       	breq	.+62     	; 0x20b0 <.L194>
    2072:	f4 f0       	brlt	.+60     	; 0x20b0 <.L194>

00002074 <.LBB146>:
	{
		uint16_t __ticks=(uint16_t)__tmp2;
    2074:	69 a5       	ldd	r22, Y+41	; 0x29
    2076:	7a a5       	ldd	r23, Y+42	; 0x2a
    2078:	8b a5       	ldd	r24, Y+43	; 0x2b
    207a:	9c a5       	ldd	r25, Y+44	; 0x2c
    207c:	0e 94 9c 17 	call	0x2f38	; 0x2f38 <__fixunssfsi>
    2080:	a9 96       	adiw	r28, 0x29	; 41
    2082:	6c af       	std	Y+60, r22	; 0x3c
    2084:	7d af       	std	Y+61, r23	; 0x3d
    2086:	8e af       	std	Y+62, r24	; 0x3e
    2088:	9f af       	std	Y+63, r25	; 0x3f
    208a:	a9 97       	sbiw	r28, 0x29	; 41
    208c:	a7 96       	adiw	r28, 0x27	; 39
    208e:	8e ad       	ldd	r24, Y+62	; 0x3e
    2090:	9f ad       	ldd	r25, Y+63	; 0x3f
    2092:	a7 97       	sbiw	r28, 0x27	; 39
    2094:	9d af       	std	Y+61, r25	; 0x3d
    2096:	8c af       	std	Y+60, r24	; 0x3c
    2098:	8c ad       	ldd	r24, Y+60	; 0x3c
    209a:	9d ad       	ldd	r25, Y+61	; 0x3d
    209c:	9f af       	std	Y+63, r25	; 0x3f
    209e:	8e af       	std	Y+62, r24	; 0x3e

000020a0 <.LBB147>:
	__asm__ volatile (
    20a0:	8e ad       	ldd	r24, Y+62	; 0x3e
    20a2:	9f ad       	ldd	r25, Y+63	; 0x3f

000020a4 <.L1^B13>:
    20a4:	01 97       	sbiw	r24, 0x01	; 1
    20a6:	f1 f7       	brne	.-4      	; 0x20a4 <.L1^B13>
    20a8:	9f af       	std	Y+63, r25	; 0x3f
    20aa:	8e af       	std	Y+62, r24	; 0x3e

000020ac <.Loc.584>:
	...

000020ae <.LBE147>:
		_delay_loop_2(__ticks);
		return;
    20ae:	24 c0       	rjmp	.+72     	; 0x20f8 <.L163>

000020b0 <.L194>:
	}
	else
		__ticks = (uint8_t)__tmp;
    20b0:	6d a1       	ldd	r22, Y+37	; 0x25
    20b2:	7e a1       	ldd	r23, Y+38	; 0x26
    20b4:	8f a1       	ldd	r24, Y+39	; 0x27
    20b6:	98 a5       	ldd	r25, Y+40	; 0x28
    20b8:	0e 94 9c 17 	call	0x2f38	; 0x2f38 <__fixunssfsi>
    20bc:	ad 96       	adiw	r28, 0x2d	; 45
    20be:	6c af       	std	Y+60, r22	; 0x3c
    20c0:	7d af       	std	Y+61, r23	; 0x3d
    20c2:	8e af       	std	Y+62, r24	; 0x3e
    20c4:	9f af       	std	Y+63, r25	; 0x3f
    20c6:	ad 97       	sbiw	r28, 0x2d	; 45
    20c8:	aa 96       	adiw	r28, 0x2a	; 42
    20ca:	9f ad       	ldd	r25, Y+63	; 0x3f
    20cc:	aa 97       	sbiw	r28, 0x2a	; 42
    20ce:	9d a7       	std	Y+45, r25	; 0x2d

000020d0 <.L150>:
    20d0:	2d a5       	ldd	r18, Y+45	; 0x2d
    20d2:	ce 01       	movw	r24, r28
    20d4:	80 5c       	subi	r24, 0xC0	; 192
    20d6:	9f 4f       	sbci	r25, 0xFF	; 255
    20d8:	dc 01       	movw	r26, r24
    20da:	2c 93       	st	X, r18

000020dc <.LBB149>:
	__asm__ volatile (
    20dc:	ce 01       	movw	r24, r28
    20de:	80 5c       	subi	r24, 0xC0	; 192
    20e0:	9f 4f       	sbci	r25, 0xFF	; 255
    20e2:	fc 01       	movw	r30, r24
    20e4:	80 81       	ld	r24, Z
    20e6:	28 2f       	mov	r18, r24

000020e8 <.L1^B14>:
    20e8:	2a 95       	dec	r18
    20ea:	f1 f7       	brne	.-4      	; 0x20e8 <.L1^B14>
    20ec:	ce 01       	movw	r24, r28
    20ee:	80 5c       	subi	r24, 0xC0	; 192
    20f0:	9f 4f       	sbci	r25, 0xFF	; 255
    20f2:	dc 01       	movw	r26, r24
    20f4:	2c 93       	st	X, r18

000020f6 <.Loc.588>:
	...

000020f8 <.L163>:
    _delay_us(2);
    PORTL |= (1<<PL6);
    20f8:	8b e0       	ldi	r24, 0x0B	; 11
    20fa:	91 e0       	ldi	r25, 0x01	; 1
    20fc:	fc 01       	movw	r30, r24
    20fe:	20 81       	ld	r18, Z
    2100:	8b e0       	ldi	r24, 0x0B	; 11
    2102:	91 e0       	ldi	r25, 0x01	; 1

00002104 <.Loc.590>:
    2104:	20 64       	ori	r18, 0x40	; 64
    2106:	dc 01       	movw	r26, r24
    2108:	2c 93       	st	X, r18
    210a:	80 e0       	ldi	r24, 0x00	; 0
    210c:	90 e0       	ldi	r25, 0x00	; 0
    210e:	a0 e2       	ldi	r26, 0x20	; 32
    2110:	b1 e4       	ldi	r27, 0x41	; 65
    2112:	89 83       	std	Y+1, r24	; 0x01
    2114:	9a 83       	std	Y+2, r25	; 0x02
    2116:	ab 83       	std	Y+3, r26	; 0x03
    2118:	bc 83       	std	Y+4, r27	; 0x04

0000211a <.LBB151>:
	__tmp = ((F_CPU) / 3e6) * __us;
    211a:	2b ea       	ldi	r18, 0xAB	; 171
    211c:	3a ea       	ldi	r19, 0xAA	; 170
    211e:	4a ea       	ldi	r20, 0xAA	; 170
    2120:	50 e4       	ldi	r21, 0x40	; 64
    2122:	69 81       	ldd	r22, Y+1	; 0x01
    2124:	7a 81       	ldd	r23, Y+2	; 0x02
    2126:	8b 81       	ldd	r24, Y+3	; 0x03
    2128:	9c 81       	ldd	r25, Y+4	; 0x04
    212a:	0e 94 82 18 	call	0x3104	; 0x3104 <__mulsf3>
    212e:	e1 96       	adiw	r28, 0x31	; 49
    2130:	6c af       	std	Y+60, r22	; 0x3c
    2132:	7d af       	std	Y+61, r23	; 0x3d
    2134:	8e af       	std	Y+62, r24	; 0x3e
    2136:	9f af       	std	Y+63, r25	; 0x3f
    2138:	e1 97       	sbiw	r28, 0x31	; 49
    213a:	e1 96       	adiw	r28, 0x31	; 49
    213c:	8c ad       	ldd	r24, Y+60	; 0x3c
    213e:	9d ad       	ldd	r25, Y+61	; 0x3d
    2140:	ae ad       	ldd	r26, Y+62	; 0x3e
    2142:	bf ad       	ldd	r27, Y+63	; 0x3f
    2144:	e1 97       	sbiw	r28, 0x31	; 49
    2146:	8d 83       	std	Y+5, r24	; 0x05
    2148:	9e 83       	std	Y+6, r25	; 0x06
    214a:	af 83       	std	Y+7, r26	; 0x07
    214c:	b8 87       	std	Y+8, r27	; 0x08

0000214e <.Loc.592>:
	__tmp2 = ((F_CPU) / 4e6) * __us;
    214e:	20 e0       	ldi	r18, 0x00	; 0
    2150:	30 e0       	ldi	r19, 0x00	; 0
    2152:	40 e8       	ldi	r20, 0x80	; 128
    2154:	50 e4       	ldi	r21, 0x40	; 64
    2156:	69 81       	ldd	r22, Y+1	; 0x01
    2158:	7a 81       	ldd	r23, Y+2	; 0x02
    215a:	8b 81       	ldd	r24, Y+3	; 0x03
    215c:	9c 81       	ldd	r25, Y+4	; 0x04
    215e:	0e 94 82 18 	call	0x3104	; 0x3104 <__mulsf3>
    2162:	e5 96       	adiw	r28, 0x35	; 53
    2164:	6c af       	std	Y+60, r22	; 0x3c
    2166:	7d af       	std	Y+61, r23	; 0x3d
    2168:	8e af       	std	Y+62, r24	; 0x3e
    216a:	9f af       	std	Y+63, r25	; 0x3f
    216c:	e5 97       	sbiw	r28, 0x35	; 53
    216e:	e5 96       	adiw	r28, 0x35	; 53
    2170:	8c ad       	ldd	r24, Y+60	; 0x3c
    2172:	9d ad       	ldd	r25, Y+61	; 0x3d
    2174:	ae ad       	ldd	r26, Y+62	; 0x3e
    2176:	bf ad       	ldd	r27, Y+63	; 0x3f
    2178:	e5 97       	sbiw	r28, 0x35	; 53
    217a:	89 87       	std	Y+9, r24	; 0x09
    217c:	9a 87       	std	Y+10, r25	; 0x0a
    217e:	ab 87       	std	Y+11, r26	; 0x0b
    2180:	bc 87       	std	Y+12, r27	; 0x0c

00002182 <.Loc.593>:
	if (__tmp < 1.0)
    2182:	20 e0       	ldi	r18, 0x00	; 0
    2184:	30 e0       	ldi	r19, 0x00	; 0
    2186:	40 e8       	ldi	r20, 0x80	; 128
    2188:	5f e3       	ldi	r21, 0x3F	; 63
    218a:	6d 81       	ldd	r22, Y+5	; 0x05
    218c:	7e 81       	ldd	r23, Y+6	; 0x06
    218e:	8f 81       	ldd	r24, Y+7	; 0x07
    2190:	98 85       	ldd	r25, Y+8	; 0x08
    2192:	0e 94 1e 17 	call	0x2e3c	; 0x2e3c <__cmpsf2>
    2196:	88 23       	and	r24, r24
    2198:	1c f4       	brge	.+6      	; 0x21a0 <.L195>

0000219a <.Loc.594>:
		__ticks = 1;
    219a:	81 e0       	ldi	r24, 0x01	; 1
    219c:	8d 87       	std	Y+13, r24	; 0x0d
    219e:	13 c1       	rjmp	.+550    	; 0x23c6 <.L166>

000021a0 <.L195>:
	else if (__tmp2 > 65535)
    21a0:	20 e0       	ldi	r18, 0x00	; 0
    21a2:	3f ef       	ldi	r19, 0xFF	; 255
    21a4:	4f e7       	ldi	r20, 0x7F	; 127
    21a6:	57 e4       	ldi	r21, 0x47	; 71
    21a8:	69 85       	ldd	r22, Y+9	; 0x09
    21aa:	7a 85       	ldd	r23, Y+10	; 0x0a
    21ac:	8b 85       	ldd	r24, Y+11	; 0x0b
    21ae:	9c 85       	ldd	r25, Y+12	; 0x0c
    21b0:	0e 94 7d 18 	call	0x30fa	; 0x30fa <__gesf2>
    21b4:	88 23       	and	r24, r24
    21b6:	09 f0       	breq	.+2      	; 0x21ba <L0^A>

000021b8 <L0^A>:
    21b8:	0c f4       	brge	.+2      	; 0x21bc <.Loc.596>

000021ba <L0^A>:
    21ba:	c2 c0       	rjmp	.+388    	; 0x2340 <.L196>

000021bc <.Loc.596>:
		_delay_ms(__us / 1000.0);
    21bc:	20 e0       	ldi	r18, 0x00	; 0
    21be:	30 e0       	ldi	r19, 0x00	; 0
    21c0:	4a e7       	ldi	r20, 0x7A	; 122
    21c2:	54 e4       	ldi	r21, 0x44	; 68
    21c4:	69 81       	ldd	r22, Y+1	; 0x01
    21c6:	7a 81       	ldd	r23, Y+2	; 0x02
    21c8:	8b 81       	ldd	r24, Y+3	; 0x03
    21ca:	9c 81       	ldd	r25, Y+4	; 0x04
    21cc:	0e 94 23 17 	call	0x2e46	; 0x2e46 <__divsf3>
    21d0:	e9 96       	adiw	r28, 0x39	; 57
    21d2:	6c af       	std	Y+60, r22	; 0x3c
    21d4:	7d af       	std	Y+61, r23	; 0x3d
    21d6:	8e af       	std	Y+62, r24	; 0x3e
    21d8:	9f af       	std	Y+63, r25	; 0x3f
    21da:	e9 97       	sbiw	r28, 0x39	; 57
    21dc:	e9 96       	adiw	r28, 0x39	; 57
    21de:	8c ad       	ldd	r24, Y+60	; 0x3c
    21e0:	9d ad       	ldd	r25, Y+61	; 0x3d
    21e2:	ae ad       	ldd	r26, Y+62	; 0x3e
    21e4:	bf ad       	ldd	r27, Y+63	; 0x3f
    21e6:	e9 97       	sbiw	r28, 0x39	; 57
    21e8:	8e 87       	std	Y+14, r24	; 0x0e
    21ea:	9f 87       	std	Y+15, r25	; 0x0f
    21ec:	a8 8b       	std	Y+16, r26	; 0x10
    21ee:	b9 8b       	std	Y+17, r27	; 0x11

000021f0 <.LBB153>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    21f0:	20 e0       	ldi	r18, 0x00	; 0
    21f2:	30 e0       	ldi	r19, 0x00	; 0
    21f4:	4a e7       	ldi	r20, 0x7A	; 122
    21f6:	55 e4       	ldi	r21, 0x45	; 69
    21f8:	6e 85       	ldd	r22, Y+14	; 0x0e
    21fa:	7f 85       	ldd	r23, Y+15	; 0x0f
    21fc:	88 89       	ldd	r24, Y+16	; 0x10
    21fe:	99 89       	ldd	r25, Y+17	; 0x11
    2200:	0e 94 82 18 	call	0x3104	; 0x3104 <__mulsf3>
    2204:	ed 96       	adiw	r28, 0x3d	; 61
    2206:	6c af       	std	Y+60, r22	; 0x3c
    2208:	7d af       	std	Y+61, r23	; 0x3d
    220a:	8e af       	std	Y+62, r24	; 0x3e
    220c:	9f af       	std	Y+63, r25	; 0x3f
    220e:	ed 97       	sbiw	r28, 0x3d	; 61
    2210:	ed 96       	adiw	r28, 0x3d	; 61
    2212:	8c ad       	ldd	r24, Y+60	; 0x3c
    2214:	9d ad       	ldd	r25, Y+61	; 0x3d
    2216:	ae ad       	ldd	r26, Y+62	; 0x3e
    2218:	bf ad       	ldd	r27, Y+63	; 0x3f
    221a:	ed 97       	sbiw	r28, 0x3d	; 61
    221c:	8a 8b       	std	Y+18, r24	; 0x12
    221e:	9b 8b       	std	Y+19, r25	; 0x13
    2220:	ac 8b       	std	Y+20, r26	; 0x14
    2222:	bd 8b       	std	Y+21, r27	; 0x15

00002224 <.Loc.598>:
	if (__tmp < 1.0)
    2224:	20 e0       	ldi	r18, 0x00	; 0
    2226:	30 e0       	ldi	r19, 0x00	; 0
    2228:	40 e8       	ldi	r20, 0x80	; 128
    222a:	5f e3       	ldi	r21, 0x3F	; 63
    222c:	6a 89       	ldd	r22, Y+18	; 0x12
    222e:	7b 89       	ldd	r23, Y+19	; 0x13
    2230:	8c 89       	ldd	r24, Y+20	; 0x14
    2232:	9d 89       	ldd	r25, Y+21	; 0x15
    2234:	0e 94 1e 17 	call	0x2e3c	; 0x2e3c <__cmpsf2>
    2238:	88 23       	and	r24, r24
    223a:	2c f4       	brge	.+10     	; 0x2246 <.L197>

0000223c <.Loc.599>:
		__ticks = 1;
    223c:	81 e0       	ldi	r24, 0x01	; 1
    223e:	90 e0       	ldi	r25, 0x00	; 0
    2240:	9f 8b       	std	Y+23, r25	; 0x17
    2242:	8e 8b       	std	Y+22, r24	; 0x16
    2244:	72 c0       	rjmp	.+228    	; 0x232a <.L171>

00002246 <.L197>:
	else if (__tmp > 65535)
    2246:	20 e0       	ldi	r18, 0x00	; 0
    2248:	3f ef       	ldi	r19, 0xFF	; 255
    224a:	4f e7       	ldi	r20, 0x7F	; 127
    224c:	57 e4       	ldi	r21, 0x47	; 71
    224e:	6a 89       	ldd	r22, Y+18	; 0x12
    2250:	7b 89       	ldd	r23, Y+19	; 0x13
    2252:	8c 89       	ldd	r24, Y+20	; 0x14
    2254:	9d 89       	ldd	r25, Y+21	; 0x15
    2256:	0e 94 7d 18 	call	0x30fa	; 0x30fa <__gesf2>
    225a:	88 23       	and	r24, r24
    225c:	09 f0       	breq	.+2      	; 0x2260 <L0^A>

0000225e <L0^A>:
    225e:	0c f4       	brge	.+2      	; 0x2262 <.Loc.601>

00002260 <L0^A>:
    2260:	4e c0       	rjmp	.+156    	; 0x22fe <.L198>

00002262 <.Loc.601>:
		__ticks = (uint16_t) (__ms * 10.0);
    2262:	20 e0       	ldi	r18, 0x00	; 0
    2264:	30 e0       	ldi	r19, 0x00	; 0
    2266:	40 e2       	ldi	r20, 0x20	; 32
    2268:	51 e4       	ldi	r21, 0x41	; 65
    226a:	6e 85       	ldd	r22, Y+14	; 0x0e
    226c:	7f 85       	ldd	r23, Y+15	; 0x0f
    226e:	88 89       	ldd	r24, Y+16	; 0x10
    2270:	99 89       	ldd	r25, Y+17	; 0x11
    2272:	0e 94 82 18 	call	0x3104	; 0x3104 <__mulsf3>
    2276:	c3 58       	subi	r28, 0x83	; 131
    2278:	df 4f       	sbci	r29, 0xFF	; 255
    227a:	68 83       	st	Y, r22
    227c:	79 83       	std	Y+1, r23	; 0x01
    227e:	8a 83       	std	Y+2, r24	; 0x02
    2280:	9b 83       	std	Y+3, r25	; 0x03
    2282:	cd 57       	subi	r28, 0x7D	; 125
    2284:	d0 40       	sbci	r29, 0x00	; 0
    2286:	c3 58       	subi	r28, 0x83	; 131
    2288:	df 4f       	sbci	r29, 0xFF	; 255
    228a:	88 81       	ld	r24, Y
    228c:	99 81       	ldd	r25, Y+1	; 0x01
    228e:	aa 81       	ldd	r26, Y+2	; 0x02
    2290:	bb 81       	ldd	r27, Y+3	; 0x03
    2292:	cd 57       	subi	r28, 0x7D	; 125
    2294:	d0 40       	sbci	r29, 0x00	; 0
    2296:	25 96       	adiw	r28, 0x05	; 5
    2298:	8c af       	std	Y+60, r24	; 0x3c
    229a:	9d af       	std	Y+61, r25	; 0x3d
    229c:	ae af       	std	Y+62, r26	; 0x3e
    229e:	bf af       	std	Y+63, r27	; 0x3f
    22a0:	25 97       	sbiw	r28, 0x05	; 5

000022a2 <.Loc.602>:
    22a2:	25 96       	adiw	r28, 0x05	; 5
    22a4:	6c ad       	ldd	r22, Y+60	; 0x3c
    22a6:	7d ad       	ldd	r23, Y+61	; 0x3d
    22a8:	8e ad       	ldd	r24, Y+62	; 0x3e
    22aa:	9f ad       	ldd	r25, Y+63	; 0x3f
    22ac:	25 97       	sbiw	r28, 0x05	; 5
    22ae:	0e 94 9c 17 	call	0x2f38	; 0x2f38 <__fixunssfsi>
    22b2:	cf 57       	subi	r28, 0x7F	; 127
    22b4:	df 4f       	sbci	r29, 0xFF	; 255
    22b6:	68 83       	st	Y, r22
    22b8:	79 83       	std	Y+1, r23	; 0x01
    22ba:	8a 83       	std	Y+2, r24	; 0x02
    22bc:	9b 83       	std	Y+3, r25	; 0x03
    22be:	c1 58       	subi	r28, 0x81	; 129
    22c0:	d0 40       	sbci	r29, 0x00	; 0
    22c2:	cf 57       	subi	r28, 0x7F	; 127
    22c4:	df 4f       	sbci	r29, 0xFF	; 255
    22c6:	a8 81       	ld	r26, Y
    22c8:	b9 81       	ldd	r27, Y+1	; 0x01
    22ca:	c1 58       	subi	r28, 0x81	; 129
    22cc:	d0 40       	sbci	r29, 0x00	; 0
    22ce:	bf 8b       	std	Y+23, r27	; 0x17
    22d0:	ae 8b       	std	Y+22, r26	; 0x16

000022d2 <.Loc.603>:
		while(__ticks)
    22d2:	10 c0       	rjmp	.+32     	; 0x22f4 <.L174>

000022d4 <.L175>:
    22d4:	80 e9       	ldi	r24, 0x90	; 144
    22d6:	91 e0       	ldi	r25, 0x01	; 1
    22d8:	99 8f       	std	Y+25, r25	; 0x19
    22da:	88 8f       	std	Y+24, r24	; 0x18

000022dc <.LBB155>:
	__asm__ volatile (
    22dc:	88 8d       	ldd	r24, Y+24	; 0x18
    22de:	99 8d       	ldd	r25, Y+25	; 0x19

000022e0 <.L1^B15>:
    22e0:	01 97       	sbiw	r24, 0x01	; 1
    22e2:	f1 f7       	brne	.-4      	; 0x22e0 <.L1^B15>
    22e4:	99 8f       	std	Y+25, r25	; 0x19
    22e6:	88 8f       	std	Y+24, r24	; 0x18

000022e8 <.Loc.605>:
	...

000022ea <.LBE155>:
			__ticks --;
    22ea:	8e 89       	ldd	r24, Y+22	; 0x16
    22ec:	9f 89       	ldd	r25, Y+23	; 0x17
    22ee:	01 97       	sbiw	r24, 0x01	; 1
    22f0:	9f 8b       	std	Y+23, r25	; 0x17
    22f2:	8e 8b       	std	Y+22, r24	; 0x16

000022f4 <.L174>:
		while(__ticks)
    22f4:	8e 89       	ldd	r24, Y+22	; 0x16
    22f6:	9f 89       	ldd	r25, Y+23	; 0x17
    22f8:	00 97       	sbiw	r24, 0x00	; 0
    22fa:	61 f7       	brne	.-40     	; 0x22d4 <.L175>

000022fc <.Loc.608>:
		return;
    22fc:	64 c0       	rjmp	.+200    	; 0x23c6 <.L166>

000022fe <.L198>:
		__ticks = (uint16_t)__tmp;
    22fe:	6a 89       	ldd	r22, Y+18	; 0x12
    2300:	7b 89       	ldd	r23, Y+19	; 0x13
    2302:	8c 89       	ldd	r24, Y+20	; 0x14
    2304:	9d 89       	ldd	r25, Y+21	; 0x15
    2306:	0e 94 9c 17 	call	0x2f38	; 0x2f38 <__fixunssfsi>
    230a:	cb 57       	subi	r28, 0x7B	; 123
    230c:	df 4f       	sbci	r29, 0xFF	; 255
    230e:	68 83       	st	Y, r22
    2310:	79 83       	std	Y+1, r23	; 0x01
    2312:	8a 83       	std	Y+2, r24	; 0x02
    2314:	9b 83       	std	Y+3, r25	; 0x03
    2316:	c5 58       	subi	r28, 0x85	; 133
    2318:	d0 40       	sbci	r29, 0x00	; 0
    231a:	cb 57       	subi	r28, 0x7B	; 123
    231c:	df 4f       	sbci	r29, 0xFF	; 255
    231e:	e8 81       	ld	r30, Y
    2320:	f9 81       	ldd	r31, Y+1	; 0x01
    2322:	c5 58       	subi	r28, 0x85	; 133
    2324:	d0 40       	sbci	r29, 0x00	; 0
    2326:	ff 8b       	std	Y+23, r31	; 0x17
    2328:	ee 8b       	std	Y+22, r30	; 0x16

0000232a <.L171>:
    232a:	8e 89       	ldd	r24, Y+22	; 0x16
    232c:	9f 89       	ldd	r25, Y+23	; 0x17
    232e:	9b 8f       	std	Y+27, r25	; 0x1b
    2330:	8a 8f       	std	Y+26, r24	; 0x1a

00002332 <.LBB157>:
    2332:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2334:	9b 8d       	ldd	r25, Y+27	; 0x1b

00002336 <.L1^B16>:
    2336:	01 97       	sbiw	r24, 0x01	; 1
    2338:	f1 f7       	brne	.-4      	; 0x2336 <.L1^B16>
    233a:	9b 8f       	std	Y+27, r25	; 0x1b
    233c:	8a 8f       	std	Y+26, r24	; 0x1a

0000233e <.Loc.611>:
}
    233e:	43 c0       	rjmp	.+134    	; 0x23c6 <.L166>

00002340 <.L196>:
	else if (__tmp > 255)
    2340:	20 e0       	ldi	r18, 0x00	; 0
    2342:	30 e0       	ldi	r19, 0x00	; 0
    2344:	4f e7       	ldi	r20, 0x7F	; 127
    2346:	53 e4       	ldi	r21, 0x43	; 67
    2348:	6d 81       	ldd	r22, Y+5	; 0x05
    234a:	7e 81       	ldd	r23, Y+6	; 0x06
    234c:	8f 81       	ldd	r24, Y+7	; 0x07
    234e:	98 85       	ldd	r25, Y+8	; 0x08
    2350:	0e 94 7d 18 	call	0x30fa	; 0x30fa <__gesf2>
    2354:	88 23       	and	r24, r24
    2356:	19 f1       	breq	.+70     	; 0x239e <.L199>
    2358:	14 f1       	brlt	.+68     	; 0x239e <.L199>

0000235a <.LBB159>:
		uint16_t __ticks=(uint16_t)__tmp2;
    235a:	69 85       	ldd	r22, Y+9	; 0x09
    235c:	7a 85       	ldd	r23, Y+10	; 0x0a
    235e:	8b 85       	ldd	r24, Y+11	; 0x0b
    2360:	9c 85       	ldd	r25, Y+12	; 0x0c
    2362:	0e 94 9c 17 	call	0x2f38	; 0x2f38 <__fixunssfsi>
    2366:	c7 57       	subi	r28, 0x77	; 119
    2368:	df 4f       	sbci	r29, 0xFF	; 255
    236a:	68 83       	st	Y, r22
    236c:	79 83       	std	Y+1, r23	; 0x01
    236e:	8a 83       	std	Y+2, r24	; 0x02
    2370:	9b 83       	std	Y+3, r25	; 0x03
    2372:	c9 58       	subi	r28, 0x89	; 137
    2374:	d0 40       	sbci	r29, 0x00	; 0
    2376:	c7 57       	subi	r28, 0x77	; 119
    2378:	df 4f       	sbci	r29, 0xFF	; 255
    237a:	88 81       	ld	r24, Y
    237c:	99 81       	ldd	r25, Y+1	; 0x01
    237e:	c9 58       	subi	r28, 0x89	; 137
    2380:	d0 40       	sbci	r29, 0x00	; 0
    2382:	9d 8f       	std	Y+29, r25	; 0x1d
    2384:	8c 8f       	std	Y+28, r24	; 0x1c
    2386:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2388:	9d 8d       	ldd	r25, Y+29	; 0x1d
    238a:	9f 8f       	std	Y+31, r25	; 0x1f
    238c:	8e 8f       	std	Y+30, r24	; 0x1e

0000238e <.LBB160>:
	__asm__ volatile (
    238e:	8e 8d       	ldd	r24, Y+30	; 0x1e
    2390:	9f 8d       	ldd	r25, Y+31	; 0x1f

00002392 <.L1^B17>:
    2392:	01 97       	sbiw	r24, 0x01	; 1
    2394:	f1 f7       	brne	.-4      	; 0x2392 <.L1^B17>
    2396:	9f 8f       	std	Y+31, r25	; 0x1f
    2398:	8e 8f       	std	Y+30, r24	; 0x1e

0000239a <.Loc.615>:
	...

0000239c <.LBE160>:
		return;
    239c:	1b c0       	rjmp	.+54     	; 0x23d4 <.L179>

0000239e <.L199>:
		__ticks = (uint8_t)__tmp;
    239e:	6d 81       	ldd	r22, Y+5	; 0x05
    23a0:	7e 81       	ldd	r23, Y+6	; 0x06
    23a2:	8f 81       	ldd	r24, Y+7	; 0x07
    23a4:	98 85       	ldd	r25, Y+8	; 0x08
    23a6:	0e 94 9c 17 	call	0x2f38	; 0x2f38 <__fixunssfsi>
    23aa:	c3 57       	subi	r28, 0x73	; 115
    23ac:	df 4f       	sbci	r29, 0xFF	; 255
    23ae:	68 83       	st	Y, r22
    23b0:	79 83       	std	Y+1, r23	; 0x01
    23b2:	8a 83       	std	Y+2, r24	; 0x02
    23b4:	9b 83       	std	Y+3, r25	; 0x03
    23b6:	cd 58       	subi	r28, 0x8D	; 141
    23b8:	d0 40       	sbci	r29, 0x00	; 0
    23ba:	c3 57       	subi	r28, 0x73	; 115
    23bc:	df 4f       	sbci	r29, 0xFF	; 255
    23be:	98 81       	ld	r25, Y
    23c0:	cd 58       	subi	r28, 0x8D	; 141
    23c2:	d0 40       	sbci	r29, 0x00	; 0
    23c4:	9d 87       	std	Y+13, r25	; 0x0d

000023c6 <.L166>:
    23c6:	8d 85       	ldd	r24, Y+13	; 0x0d
    23c8:	88 a3       	std	Y+32, r24	; 0x20

000023ca <.LBB162>:
	__asm__ volatile (
    23ca:	88 a1       	ldd	r24, Y+32	; 0x20

000023cc <.L1^B18>:
    23cc:	8a 95       	dec	r24
    23ce:	f1 f7       	brne	.-4      	; 0x23cc <.L1^B18>
    23d0:	88 a3       	std	Y+32, r24	; 0x20

000023d2 <.Loc.619>:
	...

000023d4 <.L179>:
    _delay_us(10);
    PORTL &= (~(1<<PL6));
    23d4:	8b e0       	ldi	r24, 0x0B	; 11
    23d6:	91 e0       	ldi	r25, 0x01	; 1
    23d8:	dc 01       	movw	r26, r24
    23da:	2c 91       	ld	r18, X

000023dc <.Loc.621>:
    23dc:	8b e0       	ldi	r24, 0x0B	; 11
    23de:	91 e0       	ldi	r25, 0x01	; 1

000023e0 <.Loc.622>:
    23e0:	2f 7b       	andi	r18, 0xBF	; 191
    23e2:	fc 01       	movw	r30, r24
    23e4:	20 83       	st	Z, r18

000023e6 <.Loc.623>:
}
    23e6:	00 00       	nop
    23e8:	c0 57       	subi	r28, 0x70	; 112
    23ea:	df 4f       	sbci	r29, 0xFF	; 255
    23ec:	0f b6       	in	r0, 0x3f	; 63
    23ee:	f8 94       	cli
    23f0:	de bf       	out	0x3e, r29	; 62
    23f2:	0f be       	out	0x3f, r0	; 63
    23f4:	cd bf       	out	0x3d, r28	; 61
    23f6:	df 91       	pop	r29
    23f8:	cf 91       	pop	r28
    23fa:	08 95       	ret

000023fc <voorTriggerPulse>:

void voorTriggerPulse (void){
    23fc:	cf 93       	push	r28
    23fe:	df 93       	push	r29
    2400:	cd b7       	in	r28, 0x3d	; 61
    2402:	de b7       	in	r29, 0x3e	; 62
    2404:	c0 59       	subi	r28, 0x90	; 144
    2406:	d1 09       	sbc	r29, r1
    2408:	0f b6       	in	r0, 0x3f	; 63
    240a:	f8 94       	cli
    240c:	de bf       	out	0x3e, r29	; 62
    240e:	0f be       	out	0x3f, r0	; 63
    2410:	cd bf       	out	0x3d, r28	; 61

00002412 <.Loc.625>:
    PORTL &= (~(1<<PL6));
    2412:	8b e0       	ldi	r24, 0x0B	; 11
    2414:	91 e0       	ldi	r25, 0x01	; 1
    2416:	dc 01       	movw	r26, r24
    2418:	2c 91       	ld	r18, X

0000241a <.Loc.626>:
    241a:	8b e0       	ldi	r24, 0x0B	; 11
    241c:	91 e0       	ldi	r25, 0x01	; 1

0000241e <.Loc.627>:
    241e:	2f 7b       	andi	r18, 0xBF	; 191
    2420:	fc 01       	movw	r30, r24
    2422:	20 83       	st	Z, r18
    2424:	80 e0       	ldi	r24, 0x00	; 0
    2426:	90 e0       	ldi	r25, 0x00	; 0
    2428:	a0 e0       	ldi	r26, 0x00	; 0
    242a:	b0 e4       	ldi	r27, 0x40	; 64
    242c:	89 a3       	std	Y+33, r24	; 0x21
    242e:	9a a3       	std	Y+34, r25	; 0x22
    2430:	ab a3       	std	Y+35, r26	; 0x23
    2432:	bc a3       	std	Y+36, r27	; 0x24

00002434 <.LBB164>:
	__tmp = ((F_CPU) / 3e6) * __us;
    2434:	2b ea       	ldi	r18, 0xAB	; 171
    2436:	3a ea       	ldi	r19, 0xAA	; 170
    2438:	4a ea       	ldi	r20, 0xAA	; 170
    243a:	50 e4       	ldi	r21, 0x40	; 64
    243c:	69 a1       	ldd	r22, Y+33	; 0x21
    243e:	7a a1       	ldd	r23, Y+34	; 0x22
    2440:	8b a1       	ldd	r24, Y+35	; 0x23
    2442:	9c a1       	ldd	r25, Y+36	; 0x24
    2444:	0e 94 82 18 	call	0x3104	; 0x3104 <__mulsf3>
    2448:	2d 96       	adiw	r28, 0x0d	; 13
    244a:	6c af       	std	Y+60, r22	; 0x3c
    244c:	7d af       	std	Y+61, r23	; 0x3d
    244e:	8e af       	std	Y+62, r24	; 0x3e
    2450:	9f af       	std	Y+63, r25	; 0x3f
    2452:	2d 97       	sbiw	r28, 0x0d	; 13
    2454:	2d 96       	adiw	r28, 0x0d	; 13
    2456:	8c ad       	ldd	r24, Y+60	; 0x3c
    2458:	9d ad       	ldd	r25, Y+61	; 0x3d
    245a:	ae ad       	ldd	r26, Y+62	; 0x3e
    245c:	bf ad       	ldd	r27, Y+63	; 0x3f
    245e:	2d 97       	sbiw	r28, 0x0d	; 13
    2460:	8d a3       	std	Y+37, r24	; 0x25
    2462:	9e a3       	std	Y+38, r25	; 0x26
    2464:	af a3       	std	Y+39, r26	; 0x27
    2466:	b8 a7       	std	Y+40, r27	; 0x28

00002468 <.Loc.629>:
	__tmp2 = ((F_CPU) / 4e6) * __us;
    2468:	20 e0       	ldi	r18, 0x00	; 0
    246a:	30 e0       	ldi	r19, 0x00	; 0
    246c:	40 e8       	ldi	r20, 0x80	; 128
    246e:	50 e4       	ldi	r21, 0x40	; 64
    2470:	69 a1       	ldd	r22, Y+33	; 0x21
    2472:	7a a1       	ldd	r23, Y+34	; 0x22
    2474:	8b a1       	ldd	r24, Y+35	; 0x23
    2476:	9c a1       	ldd	r25, Y+36	; 0x24
    2478:	0e 94 82 18 	call	0x3104	; 0x3104 <__mulsf3>
    247c:	61 96       	adiw	r28, 0x11	; 17
    247e:	6c af       	std	Y+60, r22	; 0x3c
    2480:	7d af       	std	Y+61, r23	; 0x3d
    2482:	8e af       	std	Y+62, r24	; 0x3e
    2484:	9f af       	std	Y+63, r25	; 0x3f
    2486:	61 97       	sbiw	r28, 0x11	; 17
    2488:	61 96       	adiw	r28, 0x11	; 17
    248a:	8c ad       	ldd	r24, Y+60	; 0x3c
    248c:	9d ad       	ldd	r25, Y+61	; 0x3d
    248e:	ae ad       	ldd	r26, Y+62	; 0x3e
    2490:	bf ad       	ldd	r27, Y+63	; 0x3f
    2492:	61 97       	sbiw	r28, 0x11	; 17
    2494:	89 a7       	std	Y+41, r24	; 0x29
    2496:	9a a7       	std	Y+42, r25	; 0x2a
    2498:	ab a7       	std	Y+43, r26	; 0x2b
    249a:	bc a7       	std	Y+44, r27	; 0x2c

0000249c <.Loc.630>:
	if (__tmp < 1.0)
    249c:	20 e0       	ldi	r18, 0x00	; 0
    249e:	30 e0       	ldi	r19, 0x00	; 0
    24a0:	40 e8       	ldi	r20, 0x80	; 128
    24a2:	5f e3       	ldi	r21, 0x3F	; 63
    24a4:	6d a1       	ldd	r22, Y+37	; 0x25
    24a6:	7e a1       	ldd	r23, Y+38	; 0x26
    24a8:	8f a1       	ldd	r24, Y+39	; 0x27
    24aa:	98 a5       	ldd	r25, Y+40	; 0x28
    24ac:	0e 94 1e 17 	call	0x2e3c	; 0x2e3c <__cmpsf2>
    24b0:	88 23       	and	r24, r24
    24b2:	1c f4       	brge	.+6      	; 0x24ba <.L243>

000024b4 <.Loc.631>:
		__ticks = 1;
    24b4:	81 e0       	ldi	r24, 0x01	; 1
    24b6:	8d a7       	std	Y+45, r24	; 0x2d
    24b8:	ff c0       	rjmp	.+510    	; 0x26b8 <.L203>

000024ba <.L243>:
	else if (__tmp2 > 65535)
    24ba:	20 e0       	ldi	r18, 0x00	; 0
    24bc:	3f ef       	ldi	r19, 0xFF	; 255
    24be:	4f e7       	ldi	r20, 0x7F	; 127
    24c0:	57 e4       	ldi	r21, 0x47	; 71
    24c2:	69 a5       	ldd	r22, Y+41	; 0x29
    24c4:	7a a5       	ldd	r23, Y+42	; 0x2a
    24c6:	8b a5       	ldd	r24, Y+43	; 0x2b
    24c8:	9c a5       	ldd	r25, Y+44	; 0x2c
    24ca:	0e 94 7d 18 	call	0x30fa	; 0x30fa <__gesf2>
    24ce:	88 23       	and	r24, r24
    24d0:	09 f0       	breq	.+2      	; 0x24d4 <L0^A>

000024d2 <L0^A>:
    24d2:	0c f4       	brge	.+2      	; 0x24d6 <.Loc.633>

000024d4 <L0^A>:
    24d4:	b6 c0       	rjmp	.+364    	; 0x2642 <.L244>

000024d6 <.Loc.633>:
		_delay_ms(__us / 1000.0);
    24d6:	20 e0       	ldi	r18, 0x00	; 0
    24d8:	30 e0       	ldi	r19, 0x00	; 0
    24da:	4a e7       	ldi	r20, 0x7A	; 122
    24dc:	54 e4       	ldi	r21, 0x44	; 68
    24de:	69 a1       	ldd	r22, Y+33	; 0x21
    24e0:	7a a1       	ldd	r23, Y+34	; 0x22
    24e2:	8b a1       	ldd	r24, Y+35	; 0x23
    24e4:	9c a1       	ldd	r25, Y+36	; 0x24
    24e6:	0e 94 23 17 	call	0x2e46	; 0x2e46 <__divsf3>
    24ea:	65 96       	adiw	r28, 0x15	; 21
    24ec:	6c af       	std	Y+60, r22	; 0x3c
    24ee:	7d af       	std	Y+61, r23	; 0x3d
    24f0:	8e af       	std	Y+62, r24	; 0x3e
    24f2:	9f af       	std	Y+63, r25	; 0x3f
    24f4:	65 97       	sbiw	r28, 0x15	; 21
    24f6:	65 96       	adiw	r28, 0x15	; 21
    24f8:	8c ad       	ldd	r24, Y+60	; 0x3c
    24fa:	9d ad       	ldd	r25, Y+61	; 0x3d
    24fc:	ae ad       	ldd	r26, Y+62	; 0x3e
    24fe:	bf ad       	ldd	r27, Y+63	; 0x3f
    2500:	65 97       	sbiw	r28, 0x15	; 21
    2502:	8e a7       	std	Y+46, r24	; 0x2e
    2504:	9f a7       	std	Y+47, r25	; 0x2f
    2506:	a8 ab       	std	Y+48, r26	; 0x30
    2508:	b9 ab       	std	Y+49, r27	; 0x31

0000250a <.LBB166>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    250a:	20 e0       	ldi	r18, 0x00	; 0
    250c:	30 e0       	ldi	r19, 0x00	; 0
    250e:	4a e7       	ldi	r20, 0x7A	; 122
    2510:	55 e4       	ldi	r21, 0x45	; 69
    2512:	6e a5       	ldd	r22, Y+46	; 0x2e
    2514:	7f a5       	ldd	r23, Y+47	; 0x2f
    2516:	88 a9       	ldd	r24, Y+48	; 0x30
    2518:	99 a9       	ldd	r25, Y+49	; 0x31
    251a:	0e 94 82 18 	call	0x3104	; 0x3104 <__mulsf3>
    251e:	69 96       	adiw	r28, 0x19	; 25
    2520:	6c af       	std	Y+60, r22	; 0x3c
    2522:	7d af       	std	Y+61, r23	; 0x3d
    2524:	8e af       	std	Y+62, r24	; 0x3e
    2526:	9f af       	std	Y+63, r25	; 0x3f
    2528:	69 97       	sbiw	r28, 0x19	; 25
    252a:	69 96       	adiw	r28, 0x19	; 25
    252c:	8c ad       	ldd	r24, Y+60	; 0x3c
    252e:	9d ad       	ldd	r25, Y+61	; 0x3d
    2530:	ae ad       	ldd	r26, Y+62	; 0x3e
    2532:	bf ad       	ldd	r27, Y+63	; 0x3f
    2534:	69 97       	sbiw	r28, 0x19	; 25
    2536:	8a ab       	std	Y+50, r24	; 0x32
    2538:	9b ab       	std	Y+51, r25	; 0x33
    253a:	ac ab       	std	Y+52, r26	; 0x34
    253c:	bd ab       	std	Y+53, r27	; 0x35

0000253e <.Loc.635>:
	if (__tmp < 1.0)
    253e:	20 e0       	ldi	r18, 0x00	; 0
    2540:	30 e0       	ldi	r19, 0x00	; 0
    2542:	40 e8       	ldi	r20, 0x80	; 128
    2544:	5f e3       	ldi	r21, 0x3F	; 63
    2546:	6a a9       	ldd	r22, Y+50	; 0x32
    2548:	7b a9       	ldd	r23, Y+51	; 0x33
    254a:	8c a9       	ldd	r24, Y+52	; 0x34
    254c:	9d a9       	ldd	r25, Y+53	; 0x35
    254e:	0e 94 1e 17 	call	0x2e3c	; 0x2e3c <__cmpsf2>
    2552:	88 23       	and	r24, r24
    2554:	2c f4       	brge	.+10     	; 0x2560 <.L245>

00002556 <.Loc.636>:
		__ticks = 1;
    2556:	81 e0       	ldi	r24, 0x01	; 1
    2558:	90 e0       	ldi	r25, 0x00	; 0
    255a:	9f ab       	std	Y+55, r25	; 0x37
    255c:	8e ab       	std	Y+54, r24	; 0x36
    255e:	66 c0       	rjmp	.+204    	; 0x262c <.L208>

00002560 <.L245>:
	else if (__tmp > 65535)
    2560:	20 e0       	ldi	r18, 0x00	; 0
    2562:	3f ef       	ldi	r19, 0xFF	; 255
    2564:	4f e7       	ldi	r20, 0x7F	; 127
    2566:	57 e4       	ldi	r21, 0x47	; 71
    2568:	6a a9       	ldd	r22, Y+50	; 0x32
    256a:	7b a9       	ldd	r23, Y+51	; 0x33
    256c:	8c a9       	ldd	r24, Y+52	; 0x34
    256e:	9d a9       	ldd	r25, Y+53	; 0x35
    2570:	0e 94 7d 18 	call	0x30fa	; 0x30fa <__gesf2>
    2574:	88 23       	and	r24, r24
    2576:	09 f0       	breq	.+2      	; 0x257a <L0^A>

00002578 <L0^A>:
    2578:	0c f4       	brge	.+2      	; 0x257c <.Loc.638>

0000257a <L0^A>:
    257a:	46 c0       	rjmp	.+140    	; 0x2608 <.L246>

0000257c <.Loc.638>:
		__ticks = (uint16_t) (__ms * 10.0);
    257c:	20 e0       	ldi	r18, 0x00	; 0
    257e:	30 e0       	ldi	r19, 0x00	; 0
    2580:	40 e2       	ldi	r20, 0x20	; 32
    2582:	51 e4       	ldi	r21, 0x41	; 65
    2584:	6e a5       	ldd	r22, Y+46	; 0x2e
    2586:	7f a5       	ldd	r23, Y+47	; 0x2f
    2588:	88 a9       	ldd	r24, Y+48	; 0x30
    258a:	99 a9       	ldd	r25, Y+49	; 0x31
    258c:	0e 94 82 18 	call	0x3104	; 0x3104 <__mulsf3>
    2590:	6d 96       	adiw	r28, 0x1d	; 29
    2592:	6c af       	std	Y+60, r22	; 0x3c
    2594:	7d af       	std	Y+61, r23	; 0x3d
    2596:	8e af       	std	Y+62, r24	; 0x3e
    2598:	9f af       	std	Y+63, r25	; 0x3f
    259a:	6d 97       	sbiw	r28, 0x1d	; 29
    259c:	6d 96       	adiw	r28, 0x1d	; 29
    259e:	8c ad       	ldd	r24, Y+60	; 0x3c
    25a0:	9d ad       	ldd	r25, Y+61	; 0x3d
    25a2:	ae ad       	ldd	r26, Y+62	; 0x3e
    25a4:	bf ad       	ldd	r27, Y+63	; 0x3f
    25a6:	6d 97       	sbiw	r28, 0x1d	; 29
    25a8:	29 96       	adiw	r28, 0x09	; 9
    25aa:	8c af       	std	Y+60, r24	; 0x3c
    25ac:	9d af       	std	Y+61, r25	; 0x3d
    25ae:	ae af       	std	Y+62, r26	; 0x3e
    25b0:	bf af       	std	Y+63, r27	; 0x3f
    25b2:	29 97       	sbiw	r28, 0x09	; 9

000025b4 <.Loc.639>:
    25b4:	29 96       	adiw	r28, 0x09	; 9
    25b6:	6c ad       	ldd	r22, Y+60	; 0x3c
    25b8:	7d ad       	ldd	r23, Y+61	; 0x3d
    25ba:	8e ad       	ldd	r24, Y+62	; 0x3e
    25bc:	9f ad       	ldd	r25, Y+63	; 0x3f
    25be:	29 97       	sbiw	r28, 0x09	; 9
    25c0:	0e 94 9c 17 	call	0x2f38	; 0x2f38 <__fixunssfsi>
    25c4:	a1 96       	adiw	r28, 0x21	; 33
    25c6:	6c af       	std	Y+60, r22	; 0x3c
    25c8:	7d af       	std	Y+61, r23	; 0x3d
    25ca:	8e af       	std	Y+62, r24	; 0x3e
    25cc:	9f af       	std	Y+63, r25	; 0x3f
    25ce:	a1 97       	sbiw	r28, 0x21	; 33
    25d0:	6f 96       	adiw	r28, 0x1f	; 31
    25d2:	ae ad       	ldd	r26, Y+62	; 0x3e
    25d4:	bf ad       	ldd	r27, Y+63	; 0x3f
    25d6:	6f 97       	sbiw	r28, 0x1f	; 31
    25d8:	bf ab       	std	Y+55, r27	; 0x37
    25da:	ae ab       	std	Y+54, r26	; 0x36

000025dc <.Loc.640>:
		while(__ticks)
    25dc:	10 c0       	rjmp	.+32     	; 0x25fe <.L211>

000025de <.L212>:
    25de:	80 e9       	ldi	r24, 0x90	; 144
    25e0:	91 e0       	ldi	r25, 0x01	; 1
    25e2:	99 af       	std	Y+57, r25	; 0x39
    25e4:	88 af       	std	Y+56, r24	; 0x38

000025e6 <.LBB168>:
	__asm__ volatile (
    25e6:	88 ad       	ldd	r24, Y+56	; 0x38
    25e8:	99 ad       	ldd	r25, Y+57	; 0x39

000025ea <.L1^B19>:
    25ea:	01 97       	sbiw	r24, 0x01	; 1
    25ec:	f1 f7       	brne	.-4      	; 0x25ea <.L1^B19>
    25ee:	99 af       	std	Y+57, r25	; 0x39
    25f0:	88 af       	std	Y+56, r24	; 0x38

000025f2 <.Loc.642>:
	...

000025f4 <.LBE168>:
			__ticks --;
    25f4:	8e a9       	ldd	r24, Y+54	; 0x36
    25f6:	9f a9       	ldd	r25, Y+55	; 0x37
    25f8:	01 97       	sbiw	r24, 0x01	; 1
    25fa:	9f ab       	std	Y+55, r25	; 0x37
    25fc:	8e ab       	std	Y+54, r24	; 0x36

000025fe <.L211>:
		while(__ticks)
    25fe:	8e a9       	ldd	r24, Y+54	; 0x36
    2600:	9f a9       	ldd	r25, Y+55	; 0x37
    2602:	00 97       	sbiw	r24, 0x00	; 0
    2604:	61 f7       	brne	.-40     	; 0x25de <.L212>

00002606 <.Loc.645>:
		return;
    2606:	58 c0       	rjmp	.+176    	; 0x26b8 <.L203>

00002608 <.L246>:
		__ticks = (uint16_t)__tmp;
    2608:	6a a9       	ldd	r22, Y+50	; 0x32
    260a:	7b a9       	ldd	r23, Y+51	; 0x33
    260c:	8c a9       	ldd	r24, Y+52	; 0x34
    260e:	9d a9       	ldd	r25, Y+53	; 0x35
    2610:	0e 94 9c 17 	call	0x2f38	; 0x2f38 <__fixunssfsi>
    2614:	a5 96       	adiw	r28, 0x25	; 37
    2616:	6c af       	std	Y+60, r22	; 0x3c
    2618:	7d af       	std	Y+61, r23	; 0x3d
    261a:	8e af       	std	Y+62, r24	; 0x3e
    261c:	9f af       	std	Y+63, r25	; 0x3f
    261e:	a5 97       	sbiw	r28, 0x25	; 37
    2620:	a3 96       	adiw	r28, 0x23	; 35
    2622:	ee ad       	ldd	r30, Y+62	; 0x3e
    2624:	ff ad       	ldd	r31, Y+63	; 0x3f
    2626:	a3 97       	sbiw	r28, 0x23	; 35
    2628:	ff ab       	std	Y+55, r31	; 0x37
    262a:	ee ab       	std	Y+54, r30	; 0x36

0000262c <.L208>:
    262c:	8e a9       	ldd	r24, Y+54	; 0x36
    262e:	9f a9       	ldd	r25, Y+55	; 0x37
    2630:	9b af       	std	Y+59, r25	; 0x3b
    2632:	8a af       	std	Y+58, r24	; 0x3a

00002634 <.LBB170>:
    2634:	8a ad       	ldd	r24, Y+58	; 0x3a
    2636:	9b ad       	ldd	r25, Y+59	; 0x3b

00002638 <.L1^B20>:
    2638:	01 97       	sbiw	r24, 0x01	; 1
    263a:	f1 f7       	brne	.-4      	; 0x2638 <.L1^B20>
    263c:	9b af       	std	Y+59, r25	; 0x3b
    263e:	8a af       	std	Y+58, r24	; 0x3a

00002640 <.Loc.648>:
}
    2640:	3b c0       	rjmp	.+118    	; 0x26b8 <.L203>

00002642 <.L244>:
	else if (__tmp > 255)
    2642:	20 e0       	ldi	r18, 0x00	; 0
    2644:	30 e0       	ldi	r19, 0x00	; 0
    2646:	4f e7       	ldi	r20, 0x7F	; 127
    2648:	53 e4       	ldi	r21, 0x43	; 67
    264a:	6d a1       	ldd	r22, Y+37	; 0x25
    264c:	7e a1       	ldd	r23, Y+38	; 0x26
    264e:	8f a1       	ldd	r24, Y+39	; 0x27
    2650:	98 a5       	ldd	r25, Y+40	; 0x28
    2652:	0e 94 7d 18 	call	0x30fa	; 0x30fa <__gesf2>
    2656:	88 23       	and	r24, r24
    2658:	f9 f0       	breq	.+62     	; 0x2698 <.L247>
    265a:	f4 f0       	brlt	.+60     	; 0x2698 <.L247>

0000265c <.LBB172>:
		uint16_t __ticks=(uint16_t)__tmp2;
    265c:	69 a5       	ldd	r22, Y+41	; 0x29
    265e:	7a a5       	ldd	r23, Y+42	; 0x2a
    2660:	8b a5       	ldd	r24, Y+43	; 0x2b
    2662:	9c a5       	ldd	r25, Y+44	; 0x2c
    2664:	0e 94 9c 17 	call	0x2f38	; 0x2f38 <__fixunssfsi>
    2668:	a9 96       	adiw	r28, 0x29	; 41
    266a:	6c af       	std	Y+60, r22	; 0x3c
    266c:	7d af       	std	Y+61, r23	; 0x3d
    266e:	8e af       	std	Y+62, r24	; 0x3e
    2670:	9f af       	std	Y+63, r25	; 0x3f
    2672:	a9 97       	sbiw	r28, 0x29	; 41
    2674:	a7 96       	adiw	r28, 0x27	; 39
    2676:	8e ad       	ldd	r24, Y+62	; 0x3e
    2678:	9f ad       	ldd	r25, Y+63	; 0x3f
    267a:	a7 97       	sbiw	r28, 0x27	; 39
    267c:	9d af       	std	Y+61, r25	; 0x3d
    267e:	8c af       	std	Y+60, r24	; 0x3c
    2680:	8c ad       	ldd	r24, Y+60	; 0x3c
    2682:	9d ad       	ldd	r25, Y+61	; 0x3d
    2684:	9f af       	std	Y+63, r25	; 0x3f
    2686:	8e af       	std	Y+62, r24	; 0x3e

00002688 <.LBB173>:
	__asm__ volatile (
    2688:	8e ad       	ldd	r24, Y+62	; 0x3e
    268a:	9f ad       	ldd	r25, Y+63	; 0x3f

0000268c <.L1^B21>:
    268c:	01 97       	sbiw	r24, 0x01	; 1
    268e:	f1 f7       	brne	.-4      	; 0x268c <.L1^B21>
    2690:	9f af       	std	Y+63, r25	; 0x3f
    2692:	8e af       	std	Y+62, r24	; 0x3e

00002694 <.Loc.652>:
	...

00002696 <.LBE173>:
		return;
    2696:	24 c0       	rjmp	.+72     	; 0x26e0 <.L216>

00002698 <.L247>:
		__ticks = (uint8_t)__tmp;
    2698:	6d a1       	ldd	r22, Y+37	; 0x25
    269a:	7e a1       	ldd	r23, Y+38	; 0x26
    269c:	8f a1       	ldd	r24, Y+39	; 0x27
    269e:	98 a5       	ldd	r25, Y+40	; 0x28
    26a0:	0e 94 9c 17 	call	0x2f38	; 0x2f38 <__fixunssfsi>
    26a4:	ad 96       	adiw	r28, 0x2d	; 45
    26a6:	6c af       	std	Y+60, r22	; 0x3c
    26a8:	7d af       	std	Y+61, r23	; 0x3d
    26aa:	8e af       	std	Y+62, r24	; 0x3e
    26ac:	9f af       	std	Y+63, r25	; 0x3f
    26ae:	ad 97       	sbiw	r28, 0x2d	; 45
    26b0:	aa 96       	adiw	r28, 0x2a	; 42
    26b2:	9f ad       	ldd	r25, Y+63	; 0x3f
    26b4:	aa 97       	sbiw	r28, 0x2a	; 42
    26b6:	9d a7       	std	Y+45, r25	; 0x2d

000026b8 <.L203>:
    26b8:	2d a5       	ldd	r18, Y+45	; 0x2d
    26ba:	ce 01       	movw	r24, r28
    26bc:	80 5c       	subi	r24, 0xC0	; 192
    26be:	9f 4f       	sbci	r25, 0xFF	; 255
    26c0:	dc 01       	movw	r26, r24
    26c2:	2c 93       	st	X, r18

000026c4 <.LBB175>:
	__asm__ volatile (
    26c4:	ce 01       	movw	r24, r28
    26c6:	80 5c       	subi	r24, 0xC0	; 192
    26c8:	9f 4f       	sbci	r25, 0xFF	; 255
    26ca:	fc 01       	movw	r30, r24
    26cc:	80 81       	ld	r24, Z
    26ce:	28 2f       	mov	r18, r24

000026d0 <.L1^B22>:
    26d0:	2a 95       	dec	r18
    26d2:	f1 f7       	brne	.-4      	; 0x26d0 <.L1^B22>
    26d4:	ce 01       	movw	r24, r28
    26d6:	80 5c       	subi	r24, 0xC0	; 192
    26d8:	9f 4f       	sbci	r25, 0xFF	; 255
    26da:	dc 01       	movw	r26, r24
    26dc:	2c 93       	st	X, r18

000026de <.Loc.656>:
	...

000026e0 <.L216>:
    _delay_us(2);
    PORTL |= (1<<PL6);
    26e0:	8b e0       	ldi	r24, 0x0B	; 11
    26e2:	91 e0       	ldi	r25, 0x01	; 1
    26e4:	fc 01       	movw	r30, r24
    26e6:	20 81       	ld	r18, Z
    26e8:	8b e0       	ldi	r24, 0x0B	; 11
    26ea:	91 e0       	ldi	r25, 0x01	; 1

000026ec <.Loc.658>:
    26ec:	20 64       	ori	r18, 0x40	; 64
    26ee:	dc 01       	movw	r26, r24
    26f0:	2c 93       	st	X, r18
    26f2:	80 e0       	ldi	r24, 0x00	; 0
    26f4:	90 e0       	ldi	r25, 0x00	; 0
    26f6:	a0 e2       	ldi	r26, 0x20	; 32
    26f8:	b1 e4       	ldi	r27, 0x41	; 65
    26fa:	89 83       	std	Y+1, r24	; 0x01
    26fc:	9a 83       	std	Y+2, r25	; 0x02
    26fe:	ab 83       	std	Y+3, r26	; 0x03
    2700:	bc 83       	std	Y+4, r27	; 0x04

00002702 <.LBB177>:
	__tmp = ((F_CPU) / 3e6) * __us;
    2702:	2b ea       	ldi	r18, 0xAB	; 171
    2704:	3a ea       	ldi	r19, 0xAA	; 170
    2706:	4a ea       	ldi	r20, 0xAA	; 170
    2708:	50 e4       	ldi	r21, 0x40	; 64
    270a:	69 81       	ldd	r22, Y+1	; 0x01
    270c:	7a 81       	ldd	r23, Y+2	; 0x02
    270e:	8b 81       	ldd	r24, Y+3	; 0x03
    2710:	9c 81       	ldd	r25, Y+4	; 0x04
    2712:	0e 94 82 18 	call	0x3104	; 0x3104 <__mulsf3>
    2716:	e1 96       	adiw	r28, 0x31	; 49
    2718:	6c af       	std	Y+60, r22	; 0x3c
    271a:	7d af       	std	Y+61, r23	; 0x3d
    271c:	8e af       	std	Y+62, r24	; 0x3e
    271e:	9f af       	std	Y+63, r25	; 0x3f
    2720:	e1 97       	sbiw	r28, 0x31	; 49
    2722:	e1 96       	adiw	r28, 0x31	; 49
    2724:	8c ad       	ldd	r24, Y+60	; 0x3c
    2726:	9d ad       	ldd	r25, Y+61	; 0x3d
    2728:	ae ad       	ldd	r26, Y+62	; 0x3e
    272a:	bf ad       	ldd	r27, Y+63	; 0x3f
    272c:	e1 97       	sbiw	r28, 0x31	; 49
    272e:	8d 83       	std	Y+5, r24	; 0x05
    2730:	9e 83       	std	Y+6, r25	; 0x06
    2732:	af 83       	std	Y+7, r26	; 0x07
    2734:	b8 87       	std	Y+8, r27	; 0x08

00002736 <.Loc.660>:
	__tmp2 = ((F_CPU) / 4e6) * __us;
    2736:	20 e0       	ldi	r18, 0x00	; 0
    2738:	30 e0       	ldi	r19, 0x00	; 0
    273a:	40 e8       	ldi	r20, 0x80	; 128
    273c:	50 e4       	ldi	r21, 0x40	; 64
    273e:	69 81       	ldd	r22, Y+1	; 0x01
    2740:	7a 81       	ldd	r23, Y+2	; 0x02
    2742:	8b 81       	ldd	r24, Y+3	; 0x03
    2744:	9c 81       	ldd	r25, Y+4	; 0x04
    2746:	0e 94 82 18 	call	0x3104	; 0x3104 <__mulsf3>
    274a:	e5 96       	adiw	r28, 0x35	; 53
    274c:	6c af       	std	Y+60, r22	; 0x3c
    274e:	7d af       	std	Y+61, r23	; 0x3d
    2750:	8e af       	std	Y+62, r24	; 0x3e
    2752:	9f af       	std	Y+63, r25	; 0x3f
    2754:	e5 97       	sbiw	r28, 0x35	; 53
    2756:	e5 96       	adiw	r28, 0x35	; 53
    2758:	8c ad       	ldd	r24, Y+60	; 0x3c
    275a:	9d ad       	ldd	r25, Y+61	; 0x3d
    275c:	ae ad       	ldd	r26, Y+62	; 0x3e
    275e:	bf ad       	ldd	r27, Y+63	; 0x3f
    2760:	e5 97       	sbiw	r28, 0x35	; 53
    2762:	89 87       	std	Y+9, r24	; 0x09
    2764:	9a 87       	std	Y+10, r25	; 0x0a
    2766:	ab 87       	std	Y+11, r26	; 0x0b
    2768:	bc 87       	std	Y+12, r27	; 0x0c

0000276a <.Loc.661>:
	if (__tmp < 1.0)
    276a:	20 e0       	ldi	r18, 0x00	; 0
    276c:	30 e0       	ldi	r19, 0x00	; 0
    276e:	40 e8       	ldi	r20, 0x80	; 128
    2770:	5f e3       	ldi	r21, 0x3F	; 63
    2772:	6d 81       	ldd	r22, Y+5	; 0x05
    2774:	7e 81       	ldd	r23, Y+6	; 0x06
    2776:	8f 81       	ldd	r24, Y+7	; 0x07
    2778:	98 85       	ldd	r25, Y+8	; 0x08
    277a:	0e 94 1e 17 	call	0x2e3c	; 0x2e3c <__cmpsf2>
    277e:	88 23       	and	r24, r24
    2780:	1c f4       	brge	.+6      	; 0x2788 <.L248>

00002782 <.Loc.662>:
		__ticks = 1;
    2782:	81 e0       	ldi	r24, 0x01	; 1
    2784:	8d 87       	std	Y+13, r24	; 0x0d
    2786:	13 c1       	rjmp	.+550    	; 0x29ae <.L219>

00002788 <.L248>:
	else if (__tmp2 > 65535)
    2788:	20 e0       	ldi	r18, 0x00	; 0
    278a:	3f ef       	ldi	r19, 0xFF	; 255
    278c:	4f e7       	ldi	r20, 0x7F	; 127
    278e:	57 e4       	ldi	r21, 0x47	; 71
    2790:	69 85       	ldd	r22, Y+9	; 0x09
    2792:	7a 85       	ldd	r23, Y+10	; 0x0a
    2794:	8b 85       	ldd	r24, Y+11	; 0x0b
    2796:	9c 85       	ldd	r25, Y+12	; 0x0c
    2798:	0e 94 7d 18 	call	0x30fa	; 0x30fa <__gesf2>
    279c:	88 23       	and	r24, r24
    279e:	09 f0       	breq	.+2      	; 0x27a2 <L0^A>

000027a0 <L0^A>:
    27a0:	0c f4       	brge	.+2      	; 0x27a4 <.Loc.664>

000027a2 <L0^A>:
    27a2:	c2 c0       	rjmp	.+388    	; 0x2928 <.L249>

000027a4 <.Loc.664>:
		_delay_ms(__us / 1000.0);
    27a4:	20 e0       	ldi	r18, 0x00	; 0
    27a6:	30 e0       	ldi	r19, 0x00	; 0
    27a8:	4a e7       	ldi	r20, 0x7A	; 122
    27aa:	54 e4       	ldi	r21, 0x44	; 68
    27ac:	69 81       	ldd	r22, Y+1	; 0x01
    27ae:	7a 81       	ldd	r23, Y+2	; 0x02
    27b0:	8b 81       	ldd	r24, Y+3	; 0x03
    27b2:	9c 81       	ldd	r25, Y+4	; 0x04
    27b4:	0e 94 23 17 	call	0x2e46	; 0x2e46 <__divsf3>
    27b8:	e9 96       	adiw	r28, 0x39	; 57
    27ba:	6c af       	std	Y+60, r22	; 0x3c
    27bc:	7d af       	std	Y+61, r23	; 0x3d
    27be:	8e af       	std	Y+62, r24	; 0x3e
    27c0:	9f af       	std	Y+63, r25	; 0x3f
    27c2:	e9 97       	sbiw	r28, 0x39	; 57
    27c4:	e9 96       	adiw	r28, 0x39	; 57
    27c6:	8c ad       	ldd	r24, Y+60	; 0x3c
    27c8:	9d ad       	ldd	r25, Y+61	; 0x3d
    27ca:	ae ad       	ldd	r26, Y+62	; 0x3e
    27cc:	bf ad       	ldd	r27, Y+63	; 0x3f
    27ce:	e9 97       	sbiw	r28, 0x39	; 57
    27d0:	8e 87       	std	Y+14, r24	; 0x0e
    27d2:	9f 87       	std	Y+15, r25	; 0x0f
    27d4:	a8 8b       	std	Y+16, r26	; 0x10
    27d6:	b9 8b       	std	Y+17, r27	; 0x11

000027d8 <.LBB179>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    27d8:	20 e0       	ldi	r18, 0x00	; 0
    27da:	30 e0       	ldi	r19, 0x00	; 0
    27dc:	4a e7       	ldi	r20, 0x7A	; 122
    27de:	55 e4       	ldi	r21, 0x45	; 69
    27e0:	6e 85       	ldd	r22, Y+14	; 0x0e
    27e2:	7f 85       	ldd	r23, Y+15	; 0x0f
    27e4:	88 89       	ldd	r24, Y+16	; 0x10
    27e6:	99 89       	ldd	r25, Y+17	; 0x11
    27e8:	0e 94 82 18 	call	0x3104	; 0x3104 <__mulsf3>
    27ec:	ed 96       	adiw	r28, 0x3d	; 61
    27ee:	6c af       	std	Y+60, r22	; 0x3c
    27f0:	7d af       	std	Y+61, r23	; 0x3d
    27f2:	8e af       	std	Y+62, r24	; 0x3e
    27f4:	9f af       	std	Y+63, r25	; 0x3f
    27f6:	ed 97       	sbiw	r28, 0x3d	; 61
    27f8:	ed 96       	adiw	r28, 0x3d	; 61
    27fa:	8c ad       	ldd	r24, Y+60	; 0x3c
    27fc:	9d ad       	ldd	r25, Y+61	; 0x3d
    27fe:	ae ad       	ldd	r26, Y+62	; 0x3e
    2800:	bf ad       	ldd	r27, Y+63	; 0x3f
    2802:	ed 97       	sbiw	r28, 0x3d	; 61
    2804:	8a 8b       	std	Y+18, r24	; 0x12
    2806:	9b 8b       	std	Y+19, r25	; 0x13
    2808:	ac 8b       	std	Y+20, r26	; 0x14
    280a:	bd 8b       	std	Y+21, r27	; 0x15

0000280c <.Loc.666>:
	if (__tmp < 1.0)
    280c:	20 e0       	ldi	r18, 0x00	; 0
    280e:	30 e0       	ldi	r19, 0x00	; 0
    2810:	40 e8       	ldi	r20, 0x80	; 128
    2812:	5f e3       	ldi	r21, 0x3F	; 63
    2814:	6a 89       	ldd	r22, Y+18	; 0x12
    2816:	7b 89       	ldd	r23, Y+19	; 0x13
    2818:	8c 89       	ldd	r24, Y+20	; 0x14
    281a:	9d 89       	ldd	r25, Y+21	; 0x15
    281c:	0e 94 1e 17 	call	0x2e3c	; 0x2e3c <__cmpsf2>
    2820:	88 23       	and	r24, r24
    2822:	2c f4       	brge	.+10     	; 0x282e <.L250>

00002824 <.Loc.667>:
		__ticks = 1;
    2824:	81 e0       	ldi	r24, 0x01	; 1
    2826:	90 e0       	ldi	r25, 0x00	; 0
    2828:	9f 8b       	std	Y+23, r25	; 0x17
    282a:	8e 8b       	std	Y+22, r24	; 0x16
    282c:	72 c0       	rjmp	.+228    	; 0x2912 <.L224>

0000282e <.L250>:
	else if (__tmp > 65535)
    282e:	20 e0       	ldi	r18, 0x00	; 0
    2830:	3f ef       	ldi	r19, 0xFF	; 255
    2832:	4f e7       	ldi	r20, 0x7F	; 127
    2834:	57 e4       	ldi	r21, 0x47	; 71
    2836:	6a 89       	ldd	r22, Y+18	; 0x12
    2838:	7b 89       	ldd	r23, Y+19	; 0x13
    283a:	8c 89       	ldd	r24, Y+20	; 0x14
    283c:	9d 89       	ldd	r25, Y+21	; 0x15
    283e:	0e 94 7d 18 	call	0x30fa	; 0x30fa <__gesf2>
    2842:	88 23       	and	r24, r24
    2844:	09 f0       	breq	.+2      	; 0x2848 <L0^A>

00002846 <L0^A>:
    2846:	0c f4       	brge	.+2      	; 0x284a <.Loc.669>

00002848 <L0^A>:
    2848:	4e c0       	rjmp	.+156    	; 0x28e6 <.L251>

0000284a <.Loc.669>:
		__ticks = (uint16_t) (__ms * 10.0);
    284a:	20 e0       	ldi	r18, 0x00	; 0
    284c:	30 e0       	ldi	r19, 0x00	; 0
    284e:	40 e2       	ldi	r20, 0x20	; 32
    2850:	51 e4       	ldi	r21, 0x41	; 65
    2852:	6e 85       	ldd	r22, Y+14	; 0x0e
    2854:	7f 85       	ldd	r23, Y+15	; 0x0f
    2856:	88 89       	ldd	r24, Y+16	; 0x10
    2858:	99 89       	ldd	r25, Y+17	; 0x11
    285a:	0e 94 82 18 	call	0x3104	; 0x3104 <__mulsf3>
    285e:	c3 58       	subi	r28, 0x83	; 131
    2860:	df 4f       	sbci	r29, 0xFF	; 255
    2862:	68 83       	st	Y, r22
    2864:	79 83       	std	Y+1, r23	; 0x01
    2866:	8a 83       	std	Y+2, r24	; 0x02
    2868:	9b 83       	std	Y+3, r25	; 0x03
    286a:	cd 57       	subi	r28, 0x7D	; 125
    286c:	d0 40       	sbci	r29, 0x00	; 0
    286e:	c3 58       	subi	r28, 0x83	; 131
    2870:	df 4f       	sbci	r29, 0xFF	; 255
    2872:	88 81       	ld	r24, Y
    2874:	99 81       	ldd	r25, Y+1	; 0x01
    2876:	aa 81       	ldd	r26, Y+2	; 0x02
    2878:	bb 81       	ldd	r27, Y+3	; 0x03
    287a:	cd 57       	subi	r28, 0x7D	; 125
    287c:	d0 40       	sbci	r29, 0x00	; 0
    287e:	25 96       	adiw	r28, 0x05	; 5
    2880:	8c af       	std	Y+60, r24	; 0x3c
    2882:	9d af       	std	Y+61, r25	; 0x3d
    2884:	ae af       	std	Y+62, r26	; 0x3e
    2886:	bf af       	std	Y+63, r27	; 0x3f
    2888:	25 97       	sbiw	r28, 0x05	; 5

0000288a <.Loc.670>:
    288a:	25 96       	adiw	r28, 0x05	; 5
    288c:	6c ad       	ldd	r22, Y+60	; 0x3c
    288e:	7d ad       	ldd	r23, Y+61	; 0x3d
    2890:	8e ad       	ldd	r24, Y+62	; 0x3e
    2892:	9f ad       	ldd	r25, Y+63	; 0x3f
    2894:	25 97       	sbiw	r28, 0x05	; 5
    2896:	0e 94 9c 17 	call	0x2f38	; 0x2f38 <__fixunssfsi>
    289a:	cf 57       	subi	r28, 0x7F	; 127
    289c:	df 4f       	sbci	r29, 0xFF	; 255
    289e:	68 83       	st	Y, r22
    28a0:	79 83       	std	Y+1, r23	; 0x01
    28a2:	8a 83       	std	Y+2, r24	; 0x02
    28a4:	9b 83       	std	Y+3, r25	; 0x03
    28a6:	c1 58       	subi	r28, 0x81	; 129
    28a8:	d0 40       	sbci	r29, 0x00	; 0
    28aa:	cf 57       	subi	r28, 0x7F	; 127
    28ac:	df 4f       	sbci	r29, 0xFF	; 255
    28ae:	a8 81       	ld	r26, Y
    28b0:	b9 81       	ldd	r27, Y+1	; 0x01
    28b2:	c1 58       	subi	r28, 0x81	; 129
    28b4:	d0 40       	sbci	r29, 0x00	; 0
    28b6:	bf 8b       	std	Y+23, r27	; 0x17
    28b8:	ae 8b       	std	Y+22, r26	; 0x16

000028ba <.Loc.671>:
		while(__ticks)
    28ba:	10 c0       	rjmp	.+32     	; 0x28dc <.L227>

000028bc <.L228>:
    28bc:	80 e9       	ldi	r24, 0x90	; 144
    28be:	91 e0       	ldi	r25, 0x01	; 1
    28c0:	99 8f       	std	Y+25, r25	; 0x19
    28c2:	88 8f       	std	Y+24, r24	; 0x18

000028c4 <.LBB181>:
	__asm__ volatile (
    28c4:	88 8d       	ldd	r24, Y+24	; 0x18
    28c6:	99 8d       	ldd	r25, Y+25	; 0x19

000028c8 <.L1^B23>:
    28c8:	01 97       	sbiw	r24, 0x01	; 1
    28ca:	f1 f7       	brne	.-4      	; 0x28c8 <.L1^B23>
    28cc:	99 8f       	std	Y+25, r25	; 0x19
    28ce:	88 8f       	std	Y+24, r24	; 0x18

000028d0 <.Loc.673>:
	...

000028d2 <.LBE181>:
			__ticks --;
    28d2:	8e 89       	ldd	r24, Y+22	; 0x16
    28d4:	9f 89       	ldd	r25, Y+23	; 0x17
    28d6:	01 97       	sbiw	r24, 0x01	; 1
    28d8:	9f 8b       	std	Y+23, r25	; 0x17
    28da:	8e 8b       	std	Y+22, r24	; 0x16

000028dc <.L227>:
		while(__ticks)
    28dc:	8e 89       	ldd	r24, Y+22	; 0x16
    28de:	9f 89       	ldd	r25, Y+23	; 0x17
    28e0:	00 97       	sbiw	r24, 0x00	; 0
    28e2:	61 f7       	brne	.-40     	; 0x28bc <.L228>

000028e4 <.Loc.676>:
		return;
    28e4:	64 c0       	rjmp	.+200    	; 0x29ae <.L219>

000028e6 <.L251>:
		__ticks = (uint16_t)__tmp;
    28e6:	6a 89       	ldd	r22, Y+18	; 0x12
    28e8:	7b 89       	ldd	r23, Y+19	; 0x13
    28ea:	8c 89       	ldd	r24, Y+20	; 0x14
    28ec:	9d 89       	ldd	r25, Y+21	; 0x15
    28ee:	0e 94 9c 17 	call	0x2f38	; 0x2f38 <__fixunssfsi>
    28f2:	cb 57       	subi	r28, 0x7B	; 123
    28f4:	df 4f       	sbci	r29, 0xFF	; 255
    28f6:	68 83       	st	Y, r22
    28f8:	79 83       	std	Y+1, r23	; 0x01
    28fa:	8a 83       	std	Y+2, r24	; 0x02
    28fc:	9b 83       	std	Y+3, r25	; 0x03
    28fe:	c5 58       	subi	r28, 0x85	; 133
    2900:	d0 40       	sbci	r29, 0x00	; 0
    2902:	cb 57       	subi	r28, 0x7B	; 123
    2904:	df 4f       	sbci	r29, 0xFF	; 255
    2906:	e8 81       	ld	r30, Y
    2908:	f9 81       	ldd	r31, Y+1	; 0x01
    290a:	c5 58       	subi	r28, 0x85	; 133
    290c:	d0 40       	sbci	r29, 0x00	; 0
    290e:	ff 8b       	std	Y+23, r31	; 0x17
    2910:	ee 8b       	std	Y+22, r30	; 0x16

00002912 <.L224>:
    2912:	8e 89       	ldd	r24, Y+22	; 0x16
    2914:	9f 89       	ldd	r25, Y+23	; 0x17
    2916:	9b 8f       	std	Y+27, r25	; 0x1b
    2918:	8a 8f       	std	Y+26, r24	; 0x1a

0000291a <.LBB183>:
    291a:	8a 8d       	ldd	r24, Y+26	; 0x1a
    291c:	9b 8d       	ldd	r25, Y+27	; 0x1b

0000291e <.L1^B24>:
    291e:	01 97       	sbiw	r24, 0x01	; 1
    2920:	f1 f7       	brne	.-4      	; 0x291e <.L1^B24>
    2922:	9b 8f       	std	Y+27, r25	; 0x1b
    2924:	8a 8f       	std	Y+26, r24	; 0x1a

00002926 <.Loc.679>:
}
    2926:	43 c0       	rjmp	.+134    	; 0x29ae <.L219>

00002928 <.L249>:
	else if (__tmp > 255)
    2928:	20 e0       	ldi	r18, 0x00	; 0
    292a:	30 e0       	ldi	r19, 0x00	; 0
    292c:	4f e7       	ldi	r20, 0x7F	; 127
    292e:	53 e4       	ldi	r21, 0x43	; 67
    2930:	6d 81       	ldd	r22, Y+5	; 0x05
    2932:	7e 81       	ldd	r23, Y+6	; 0x06
    2934:	8f 81       	ldd	r24, Y+7	; 0x07
    2936:	98 85       	ldd	r25, Y+8	; 0x08
    2938:	0e 94 7d 18 	call	0x30fa	; 0x30fa <__gesf2>
    293c:	88 23       	and	r24, r24
    293e:	19 f1       	breq	.+70     	; 0x2986 <.L252>
    2940:	14 f1       	brlt	.+68     	; 0x2986 <.L252>

00002942 <.LBB185>:
		uint16_t __ticks=(uint16_t)__tmp2;
    2942:	69 85       	ldd	r22, Y+9	; 0x09
    2944:	7a 85       	ldd	r23, Y+10	; 0x0a
    2946:	8b 85       	ldd	r24, Y+11	; 0x0b
    2948:	9c 85       	ldd	r25, Y+12	; 0x0c
    294a:	0e 94 9c 17 	call	0x2f38	; 0x2f38 <__fixunssfsi>
    294e:	c7 57       	subi	r28, 0x77	; 119
    2950:	df 4f       	sbci	r29, 0xFF	; 255
    2952:	68 83       	st	Y, r22
    2954:	79 83       	std	Y+1, r23	; 0x01
    2956:	8a 83       	std	Y+2, r24	; 0x02
    2958:	9b 83       	std	Y+3, r25	; 0x03
    295a:	c9 58       	subi	r28, 0x89	; 137
    295c:	d0 40       	sbci	r29, 0x00	; 0
    295e:	c7 57       	subi	r28, 0x77	; 119
    2960:	df 4f       	sbci	r29, 0xFF	; 255
    2962:	88 81       	ld	r24, Y
    2964:	99 81       	ldd	r25, Y+1	; 0x01
    2966:	c9 58       	subi	r28, 0x89	; 137
    2968:	d0 40       	sbci	r29, 0x00	; 0
    296a:	9d 8f       	std	Y+29, r25	; 0x1d
    296c:	8c 8f       	std	Y+28, r24	; 0x1c
    296e:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2970:	9d 8d       	ldd	r25, Y+29	; 0x1d
    2972:	9f 8f       	std	Y+31, r25	; 0x1f
    2974:	8e 8f       	std	Y+30, r24	; 0x1e

00002976 <.LBB186>:
	__asm__ volatile (
    2976:	8e 8d       	ldd	r24, Y+30	; 0x1e
    2978:	9f 8d       	ldd	r25, Y+31	; 0x1f

0000297a <.L1^B25>:
    297a:	01 97       	sbiw	r24, 0x01	; 1
    297c:	f1 f7       	brne	.-4      	; 0x297a <.L1^B25>
    297e:	9f 8f       	std	Y+31, r25	; 0x1f
    2980:	8e 8f       	std	Y+30, r24	; 0x1e

00002982 <.Loc.683>:
	...

00002984 <.LBE186>:
		return;
    2984:	1b c0       	rjmp	.+54     	; 0x29bc <.L232>

00002986 <.L252>:
		__ticks = (uint8_t)__tmp;
    2986:	6d 81       	ldd	r22, Y+5	; 0x05
    2988:	7e 81       	ldd	r23, Y+6	; 0x06
    298a:	8f 81       	ldd	r24, Y+7	; 0x07
    298c:	98 85       	ldd	r25, Y+8	; 0x08
    298e:	0e 94 9c 17 	call	0x2f38	; 0x2f38 <__fixunssfsi>
    2992:	c3 57       	subi	r28, 0x73	; 115
    2994:	df 4f       	sbci	r29, 0xFF	; 255
    2996:	68 83       	st	Y, r22
    2998:	79 83       	std	Y+1, r23	; 0x01
    299a:	8a 83       	std	Y+2, r24	; 0x02
    299c:	9b 83       	std	Y+3, r25	; 0x03
    299e:	cd 58       	subi	r28, 0x8D	; 141
    29a0:	d0 40       	sbci	r29, 0x00	; 0
    29a2:	c3 57       	subi	r28, 0x73	; 115
    29a4:	df 4f       	sbci	r29, 0xFF	; 255
    29a6:	98 81       	ld	r25, Y
    29a8:	cd 58       	subi	r28, 0x8D	; 141
    29aa:	d0 40       	sbci	r29, 0x00	; 0
    29ac:	9d 87       	std	Y+13, r25	; 0x0d

000029ae <.L219>:
    29ae:	8d 85       	ldd	r24, Y+13	; 0x0d
    29b0:	88 a3       	std	Y+32, r24	; 0x20

000029b2 <.LBB188>:
	__asm__ volatile (
    29b2:	88 a1       	ldd	r24, Y+32	; 0x20

000029b4 <.L1^B26>:
    29b4:	8a 95       	dec	r24
    29b6:	f1 f7       	brne	.-4      	; 0x29b4 <.L1^B26>
    29b8:	88 a3       	std	Y+32, r24	; 0x20

000029ba <.Loc.687>:
	...

000029bc <.L232>:
    _delay_us(10);
    PORTL &= (~(1<<PL6));
    29bc:	8b e0       	ldi	r24, 0x0B	; 11
    29be:	91 e0       	ldi	r25, 0x01	; 1
    29c0:	dc 01       	movw	r26, r24
    29c2:	2c 91       	ld	r18, X

000029c4 <.Loc.689>:
    29c4:	8b e0       	ldi	r24, 0x0B	; 11
    29c6:	91 e0       	ldi	r25, 0x01	; 1

000029c8 <.Loc.690>:
    29c8:	2f 7b       	andi	r18, 0xBF	; 191
    29ca:	fc 01       	movw	r30, r24
    29cc:	20 83       	st	Z, r18

000029ce <.Loc.691>:
}
    29ce:	00 00       	nop
    29d0:	c0 57       	subi	r28, 0x70	; 112
    29d2:	df 4f       	sbci	r29, 0xFF	; 255
    29d4:	0f b6       	in	r0, 0x3f	; 63
    29d6:	f8 94       	cli
    29d8:	de bf       	out	0x3e, r29	; 62
    29da:	0f be       	out	0x3f, r0	; 63
    29dc:	cd bf       	out	0x3d, r28	; 61
    29de:	df 91       	pop	r29
    29e0:	cf 91       	pop	r28
    29e2:	08 95       	ret

000029e4 <__vector_15>:

ISR(TIMER2_OVF_vect){
    29e4:	1f 92       	push	r1
    29e6:	0f 92       	push	r0
    29e8:	0f b6       	in	r0, 0x3f	; 63
    29ea:	0f 92       	push	r0
    29ec:	11 24       	eor	r1, r1
    29ee:	8f 93       	push	r24
    29f0:	9f 93       	push	r25
    29f2:	cf 93       	push	r28
    29f4:	df 93       	push	r29
    29f6:	cd b7       	in	r28, 0x3d	; 61
    29f8:	de b7       	in	r29, 0x3e	; 62

000029fa <.Loc.693>:
    count++;
    29fa:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <count>
    29fe:	90 91 2f 02 	lds	r25, 0x022F	; 0x80022f <count+0x1>
    2a02:	01 96       	adiw	r24, 0x01	; 1
    2a04:	90 93 2f 02 	sts	0x022F, r25	; 0x80022f <count+0x1>
    2a08:	80 93 2e 02 	sts	0x022E, r24	; 0x80022e <count>

00002a0c <.Loc.694>:
}
    2a0c:	00 00       	nop
    2a0e:	df 91       	pop	r29
    2a10:	cf 91       	pop	r28
    2a12:	9f 91       	pop	r25
    2a14:	8f 91       	pop	r24
    2a16:	0f 90       	pop	r0
    2a18:	0f be       	out	0x3f, r0	; 63
    2a1a:	0f 90       	pop	r0
    2a1c:	1f 90       	pop	r1
    2a1e:	18 95       	reti

00002a20 <init_display_meneer>:
	~0x66, ~0xB6, ~0xBE, ~0xE0,
	~0xFE, ~0xF6, ~0xEE, ~0x3E,
	~0x9C, ~0x7A, ~0x9E, ~0x8E };

void init_display_meneer (void)
{
    2a20:	cf 93       	push	r28
    2a22:	df 93       	push	r29
    2a24:	cd b7       	in	r28, 0x3d	; 61
    2a26:	de b7       	in	r29, 0x3e	; 62

00002a28 <.Loc.696>:
	// Initialiseer de pinnen voor datain, shiftclk en latchclk als output
	DDR_SDI    |= (1 << SDI_BIT);
    2a28:	81 e0       	ldi	r24, 0x01	; 1
    2a2a:	91 e0       	ldi	r25, 0x01	; 1
    2a2c:	fc 01       	movw	r30, r24
    2a2e:	20 81       	ld	r18, Z
    2a30:	81 e0       	ldi	r24, 0x01	; 1
    2a32:	91 e0       	ldi	r25, 0x01	; 1

00002a34 <.Loc.697>:
    2a34:	20 62       	ori	r18, 0x20	; 32
    2a36:	fc 01       	movw	r30, r24
    2a38:	20 83       	st	Z, r18

00002a3a <.Loc.698>:
	DDR_SFTCLK |= (1 << SFTCLK_BIT);
    2a3a:	81 e0       	ldi	r24, 0x01	; 1
    2a3c:	91 e0       	ldi	r25, 0x01	; 1
    2a3e:	fc 01       	movw	r30, r24
    2a40:	20 81       	ld	r18, Z
    2a42:	81 e0       	ldi	r24, 0x01	; 1
    2a44:	91 e0       	ldi	r25, 0x01	; 1

00002a46 <.Loc.699>:
    2a46:	20 61       	ori	r18, 0x10	; 16
    2a48:	fc 01       	movw	r30, r24
    2a4a:	20 83       	st	Z, r18

00002a4c <.Loc.700>:
	DDR_LCHCLK |= (1 << LCHCLK_BIT);
    2a4c:	83 e3       	ldi	r24, 0x33	; 51
    2a4e:	90 e0       	ldi	r25, 0x00	; 0
    2a50:	fc 01       	movw	r30, r24
    2a52:	20 81       	ld	r18, Z
    2a54:	83 e3       	ldi	r24, 0x33	; 51
    2a56:	90 e0       	ldi	r25, 0x00	; 0

00002a58 <.Loc.701>:
    2a58:	20 62       	ori	r18, 0x20	; 32
    2a5a:	fc 01       	movw	r30, r24
    2a5c:	20 83       	st	Z, r18

00002a5e <.Loc.702>:

	// Maak shiftclk en latchclk laag
	PORT_SFTCLK &= ~(1 << SFTCLK_BIT);
    2a5e:	82 e0       	ldi	r24, 0x02	; 2
    2a60:	91 e0       	ldi	r25, 0x01	; 1
    2a62:	fc 01       	movw	r30, r24
    2a64:	20 81       	ld	r18, Z

00002a66 <.Loc.703>:
    2a66:	82 e0       	ldi	r24, 0x02	; 2
    2a68:	91 e0       	ldi	r25, 0x01	; 1

00002a6a <.Loc.704>:
    2a6a:	2f 7e       	andi	r18, 0xEF	; 239
    2a6c:	fc 01       	movw	r30, r24
    2a6e:	20 83       	st	Z, r18

00002a70 <.Loc.705>:
	PORT_LCHCLK &= ~(1 << LCHCLK_BIT);
    2a70:	84 e3       	ldi	r24, 0x34	; 52
    2a72:	90 e0       	ldi	r25, 0x00	; 0
    2a74:	fc 01       	movw	r30, r24
    2a76:	20 81       	ld	r18, Z

00002a78 <.Loc.706>:
    2a78:	84 e3       	ldi	r24, 0x34	; 52
    2a7a:	90 e0       	ldi	r25, 0x00	; 0

00002a7c <.Loc.707>:
    2a7c:	2f 7d       	andi	r18, 0xDF	; 223
    2a7e:	fc 01       	movw	r30, r24
    2a80:	20 83       	st	Z, r18

00002a82 <.Loc.708>:
}
    2a82:	00 00       	nop
    2a84:	df 91       	pop	r29
    2a86:	cf 91       	pop	r28
    2a88:	08 95       	ret

00002a8a <send_data>:

void send_data(char data)
{
    2a8a:	cf 93       	push	r28
    2a8c:	df 93       	push	r29
    2a8e:	00 d0       	rcall	.+0      	; 0x2a90 <L0^A>

00002a90 <L0^A>:
    2a90:	0f 92       	push	r0
    2a92:	0f 92       	push	r0
    2a94:	cd b7       	in	r28, 0x3d	; 61
    2a96:	de b7       	in	r29, 0x3e	; 62
    2a98:	8d 83       	std	Y+5, r24	; 0x05

00002a9a <.LBB190>:
	for (unsigned i = 0; i < 8; i++)
    2a9a:	1a 82       	std	Y+2, r1	; 0x02
    2a9c:	19 82       	std	Y+1, r1	; 0x01

00002a9e <.Loc.711>:
    2a9e:	39 c0       	rjmp	.+114    	; 0x2b12 <.L256>

00002aa0 <.L259>:
	// Herhaal voor alle bits in een char
	{
		// Bepaal de waarde van de bit die je naar het schuifregister
		// wil sturen
		int bit = data & 1;
    2aa0:	8d 81       	ldd	r24, Y+5	; 0x05
    2aa2:	08 2e       	mov	r0, r24
    2aa4:	00 0c       	add	r0, r0
    2aa6:	99 0b       	sbc	r25, r25

00002aa8 <.Loc.713>:
    2aa8:	81 70       	andi	r24, 0x01	; 1
    2aaa:	99 27       	eor	r25, r25
    2aac:	9c 83       	std	Y+4, r25	; 0x04
    2aae:	8b 83       	std	Y+3, r24	; 0x03

00002ab0 <.Loc.714>:
		data >>= 1;
    2ab0:	8d 81       	ldd	r24, Y+5	; 0x05
    2ab2:	85 95       	asr	r24
    2ab4:	8d 83       	std	Y+5, r24	; 0x05

00002ab6 <.Loc.715>:

		// Maak de juiste pin hoog of laag op basis van de bepaalde waarde
		// van het bit
		if (bit)
    2ab6:	8b 81       	ldd	r24, Y+3	; 0x03
    2ab8:	9c 81       	ldd	r25, Y+4	; 0x04
    2aba:	00 97       	sbiw	r24, 0x00	; 0
    2abc:	51 f0       	breq	.+20     	; 0x2ad2 <.L257>

00002abe <.Loc.716>:
		{
			PORT_SDI |= (1 << SDI_BIT);
    2abe:	82 e0       	ldi	r24, 0x02	; 2
    2ac0:	91 e0       	ldi	r25, 0x01	; 1
    2ac2:	fc 01       	movw	r30, r24
    2ac4:	20 81       	ld	r18, Z
    2ac6:	82 e0       	ldi	r24, 0x02	; 2
    2ac8:	91 e0       	ldi	r25, 0x01	; 1

00002aca <.Loc.717>:
    2aca:	20 62       	ori	r18, 0x20	; 32
    2acc:	fc 01       	movw	r30, r24
    2ace:	20 83       	st	Z, r18
    2ad0:	09 c0       	rjmp	.+18     	; 0x2ae4 <.L258>

00002ad2 <.L257>:
		}
		else
		{
			PORT_SDI &= ~(1 << SDI_BIT);
    2ad2:	82 e0       	ldi	r24, 0x02	; 2
    2ad4:	91 e0       	ldi	r25, 0x01	; 1
    2ad6:	fc 01       	movw	r30, r24
    2ad8:	20 81       	ld	r18, Z

00002ada <.Loc.719>:
    2ada:	82 e0       	ldi	r24, 0x02	; 2
    2adc:	91 e0       	ldi	r25, 0x01	; 1

00002ade <.Loc.720>:
    2ade:	2f 7d       	andi	r18, 0xDF	; 223
    2ae0:	fc 01       	movw	r30, r24
    2ae2:	20 83       	st	Z, r18

00002ae4 <.L258>:
		}

		// Toggle shiftclk (hoeveel tijd moest het signaal minimaal hoog zijn?)
		// Puls moet minimaal 13 ns hoog zijn. Een clk cycle op de Arduino duurt
		// 62 ns, dus signaal kan hoog en de volgende cycle weer omlaag
		PORT_SFTCLK |= (1 << SFTCLK_BIT);
    2ae4:	82 e0       	ldi	r24, 0x02	; 2
    2ae6:	91 e0       	ldi	r25, 0x01	; 1
    2ae8:	fc 01       	movw	r30, r24
    2aea:	20 81       	ld	r18, Z
    2aec:	82 e0       	ldi	r24, 0x02	; 2
    2aee:	91 e0       	ldi	r25, 0x01	; 1

00002af0 <.Loc.722>:
    2af0:	20 61       	ori	r18, 0x10	; 16
    2af2:	fc 01       	movw	r30, r24
    2af4:	20 83       	st	Z, r18

00002af6 <.Loc.723>:
		PORT_SFTCLK &= ~(1 << SFTCLK_BIT);
    2af6:	82 e0       	ldi	r24, 0x02	; 2
    2af8:	91 e0       	ldi	r25, 0x01	; 1
    2afa:	fc 01       	movw	r30, r24
    2afc:	20 81       	ld	r18, Z

00002afe <.Loc.724>:
    2afe:	82 e0       	ldi	r24, 0x02	; 2
    2b00:	91 e0       	ldi	r25, 0x01	; 1

00002b02 <.Loc.725>:
    2b02:	2f 7e       	andi	r18, 0xEF	; 239
    2b04:	fc 01       	movw	r30, r24
    2b06:	20 83       	st	Z, r18

00002b08 <.LBE191>:
	for (unsigned i = 0; i < 8; i++)
    2b08:	89 81       	ldd	r24, Y+1	; 0x01
    2b0a:	9a 81       	ldd	r25, Y+2	; 0x02
    2b0c:	01 96       	adiw	r24, 0x01	; 1
    2b0e:	9a 83       	std	Y+2, r25	; 0x02
    2b10:	89 83       	std	Y+1, r24	; 0x01

00002b12 <.L256>:
    2b12:	89 81       	ldd	r24, Y+1	; 0x01
    2b14:	9a 81       	ldd	r25, Y+2	; 0x02
    2b16:	87 30       	cpi	r24, 0x07	; 7
    2b18:	91 05       	cpc	r25, r1
    2b1a:	11 f2       	breq	.-124    	; 0x2aa0 <.L259>
    2b1c:	08 f2       	brcs	.-126    	; 0x2aa0 <.L259>

00002b1e <.LBE190>:
	}
}
    2b1e:	00 00       	nop
    2b20:	00 00       	nop
    2b22:	0f 90       	pop	r0
    2b24:	0f 90       	pop	r0
    2b26:	0f 90       	pop	r0
    2b28:	0f 90       	pop	r0
    2b2a:	0f 90       	pop	r0
    2b2c:	df 91       	pop	r29
    2b2e:	cf 91       	pop	r28
    2b30:	08 95       	ret

00002b32 <send_enable>:

void send_enable(int display_nummer)
{
    2b32:	cf 93       	push	r28
    2b34:	df 93       	push	r29
    2b36:	0f 92       	push	r0
    2b38:	0f 92       	push	r0
    2b3a:	cd b7       	in	r28, 0x3d	; 61
    2b3c:	de b7       	in	r29, 0x3e	; 62
    2b3e:	9a 83       	std	Y+2, r25	; 0x02
    2b40:	89 83       	std	Y+1, r24	; 0x01

00002b42 <.Loc.730>:
	send_data(0x10 << display_nummer);
    2b42:	80 e1       	ldi	r24, 0x10	; 16
    2b44:	90 e0       	ldi	r25, 0x00	; 0
    2b46:	09 80       	ldd	r0, Y+1	; 0x01
    2b48:	02 c0       	rjmp	.+4      	; 0x2b4e <.L2^B1>

00002b4a <.L1^B27>:
    2b4a:	88 0f       	add	r24, r24
    2b4c:	99 1f       	adc	r25, r25

00002b4e <.L2^B1>:
    2b4e:	0a 94       	dec	r0
    2b50:	e2 f7       	brpl	.-8      	; 0x2b4a <.L1^B27>

00002b52 <.Loc.731>:
    2b52:	0e 94 45 15 	call	0x2a8a	; 0x2a8a <send_data>

00002b56 <.Loc.732>:
}
    2b56:	00 00       	nop
    2b58:	0f 90       	pop	r0
    2b5a:	0f 90       	pop	r0
    2b5c:	df 91       	pop	r29
    2b5e:	cf 91       	pop	r28
    2b60:	08 95       	ret

00002b62 <display>:

void display(char data, int display_nummer)
{
    2b62:	cf 93       	push	r28
    2b64:	df 93       	push	r29
    2b66:	00 d0       	rcall	.+0      	; 0x2b68 <L0^A>

00002b68 <L0^A>:
    2b68:	cd b7       	in	r28, 0x3d	; 61
    2b6a:	de b7       	in	r29, 0x3e	; 62
    2b6c:	89 83       	std	Y+1, r24	; 0x01
    2b6e:	7b 83       	std	Y+3, r23	; 0x03
    2b70:	6a 83       	std	Y+2, r22	; 0x02

00002b72 <.Loc.734>:
	send_data(data);
    2b72:	89 81       	ldd	r24, Y+1	; 0x01
    2b74:	0e 94 45 15 	call	0x2a8a	; 0x2a8a <send_data>

00002b78 <.Loc.735>:
	send_enable(display_nummer);
    2b78:	8a 81       	ldd	r24, Y+2	; 0x02
    2b7a:	9b 81       	ldd	r25, Y+3	; 0x03
    2b7c:	0e 94 99 15 	call	0x2b32	; 0x2b32 <send_enable>

00002b80 <.Loc.736>:

	// Toggle latchclk (hoeveel tijd moest het signaal minimaal hoog zijn?)
	// Puls moet minimaal 13 ns hoog zijn. Een clk cycle op de Arduino duurt
	// 62 ns, dus signaal kan hoog en de volgende cycle weer omlaag
	PORT_LCHCLK |= (1 << LCHCLK_BIT);
    2b80:	84 e3       	ldi	r24, 0x34	; 52
    2b82:	90 e0       	ldi	r25, 0x00	; 0
    2b84:	fc 01       	movw	r30, r24
    2b86:	20 81       	ld	r18, Z
    2b88:	84 e3       	ldi	r24, 0x34	; 52
    2b8a:	90 e0       	ldi	r25, 0x00	; 0

00002b8c <.Loc.737>:
    2b8c:	20 62       	ori	r18, 0x20	; 32
    2b8e:	fc 01       	movw	r30, r24
    2b90:	20 83       	st	Z, r18

00002b92 <.Loc.738>:
	PORT_LCHCLK &= ~(1 << LCHCLK_BIT);
    2b92:	84 e3       	ldi	r24, 0x34	; 52
    2b94:	90 e0       	ldi	r25, 0x00	; 0
    2b96:	fc 01       	movw	r30, r24
    2b98:	20 81       	ld	r18, Z

00002b9a <.Loc.739>:
    2b9a:	84 e3       	ldi	r24, 0x34	; 52
    2b9c:	90 e0       	ldi	r25, 0x00	; 0

00002b9e <.Loc.740>:
    2b9e:	2f 7d       	andi	r18, 0xDF	; 223
    2ba0:	fc 01       	movw	r30, r24
    2ba2:	20 83       	st	Z, r18

00002ba4 <.Loc.741>:
}
    2ba4:	00 00       	nop
    2ba6:	0f 90       	pop	r0
    2ba8:	0f 90       	pop	r0
    2baa:	0f 90       	pop	r0
    2bac:	df 91       	pop	r29
    2bae:	cf 91       	pop	r28
    2bb0:	08 95       	ret

00002bb2 <display_getal>:

void display_getal(unsigned int getal)
{
    2bb2:	cf 93       	push	r28
    2bb4:	df 93       	push	r29
    2bb6:	cd b7       	in	r28, 0x3d	; 61
    2bb8:	de b7       	in	r29, 0x3e	; 62
    2bba:	a6 97       	sbiw	r28, 0x26	; 38
    2bbc:	0f b6       	in	r0, 0x3f	; 63
    2bbe:	f8 94       	cli
    2bc0:	de bf       	out	0x3e, r29	; 62
    2bc2:	0f be       	out	0x3f, r0	; 63
    2bc4:	cd bf       	out	0x3d, r28	; 61
    2bc6:	9a 8b       	std	Y+18, r25	; 0x12
    2bc8:	89 8b       	std	Y+17, r24	; 0x11

00002bca <.LBB192>:
	for (int i = 0; i < 4; i++)
    2bca:	1a 82       	std	Y+2, r1	; 0x02
    2bcc:	19 82       	std	Y+1, r1	; 0x01

00002bce <.Loc.744>:
    2bce:	cc c0       	rjmp	.+408    	; 0x2d68 <.L263>

00002bd0 <.L272>:
	{
		display(segmentcodes[getal%10], i);
    2bd0:	49 89       	ldd	r20, Y+17	; 0x11
    2bd2:	5a 89       	ldd	r21, Y+18	; 0x12
    2bd4:	9a 01       	movw	r18, r20
    2bd6:	ad ec       	ldi	r26, 0xCD	; 205
    2bd8:	bc ec       	ldi	r27, 0xCC	; 204
    2bda:	0e 94 ed 16 	call	0x2dda	; 0x2dda <__umulhisi3>
    2bde:	9c 01       	movw	r18, r24
    2be0:	36 95       	lsr	r19
    2be2:	27 95       	ror	r18
    2be4:	36 95       	lsr	r19
    2be6:	27 95       	ror	r18
    2be8:	36 95       	lsr	r19
    2bea:	27 95       	ror	r18
    2bec:	c9 01       	movw	r24, r18
    2bee:	88 0f       	add	r24, r24
    2bf0:	99 1f       	adc	r25, r25
    2bf2:	88 0f       	add	r24, r24
    2bf4:	99 1f       	adc	r25, r25
    2bf6:	82 0f       	add	r24, r18
    2bf8:	93 1f       	adc	r25, r19
    2bfa:	88 0f       	add	r24, r24
    2bfc:	99 1f       	adc	r25, r25
    2bfe:	9a 01       	movw	r18, r20
    2c00:	28 1b       	sub	r18, r24
    2c02:	39 0b       	sbc	r19, r25

00002c04 <.Loc.746>:
    2c04:	c9 01       	movw	r24, r18
    2c06:	88 0f       	add	r24, r24
    2c08:	99 1f       	adc	r25, r25
    2c0a:	80 50       	subi	r24, 0x00	; 0
    2c0c:	9e 4f       	sbci	r25, 0xFE	; 254
    2c0e:	dc 01       	movw	r26, r24
    2c10:	8d 91       	ld	r24, X+
    2c12:	9c 91       	ld	r25, X

00002c14 <.Loc.747>:
    2c14:	28 2f       	mov	r18, r24
    2c16:	89 81       	ldd	r24, Y+1	; 0x01
    2c18:	9a 81       	ldd	r25, Y+2	; 0x02
    2c1a:	bc 01       	movw	r22, r24
    2c1c:	82 2f       	mov	r24, r18
    2c1e:	0e 94 b1 15 	call	0x2b62	; 0x2b62 <display>

00002c22 <.Loc.748>:
		getal /= 10;
    2c22:	89 89       	ldd	r24, Y+17	; 0x11
    2c24:	9a 89       	ldd	r25, Y+18	; 0x12
    2c26:	9c 01       	movw	r18, r24
    2c28:	ad ec       	ldi	r26, 0xCD	; 205
    2c2a:	bc ec       	ldi	r27, 0xCC	; 204
    2c2c:	0e 94 ed 16 	call	0x2dda	; 0x2dda <__umulhisi3>
    2c30:	96 95       	lsr	r25
    2c32:	87 95       	ror	r24
    2c34:	96 95       	lsr	r25
    2c36:	87 95       	ror	r24
    2c38:	96 95       	lsr	r25
    2c3a:	87 95       	ror	r24
    2c3c:	9a 8b       	std	Y+18, r25	; 0x12
    2c3e:	89 8b       	std	Y+17, r24	; 0x11
    2c40:	80 e0       	ldi	r24, 0x00	; 0
    2c42:	90 e0       	ldi	r25, 0x00	; 0
    2c44:	a0 e8       	ldi	r26, 0x80	; 128
    2c46:	bf e3       	ldi	r27, 0x3F	; 63
    2c48:	8b 83       	std	Y+3, r24	; 0x03
    2c4a:	9c 83       	std	Y+4, r25	; 0x04
    2c4c:	ad 83       	std	Y+5, r26	; 0x05
    2c4e:	be 83       	std	Y+6, r27	; 0x06

00002c50 <.LBB193>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    2c50:	20 e0       	ldi	r18, 0x00	; 0
    2c52:	30 e0       	ldi	r19, 0x00	; 0
    2c54:	4a e7       	ldi	r20, 0x7A	; 122
    2c56:	55 e4       	ldi	r21, 0x45	; 69
    2c58:	6b 81       	ldd	r22, Y+3	; 0x03
    2c5a:	7c 81       	ldd	r23, Y+4	; 0x04
    2c5c:	8d 81       	ldd	r24, Y+5	; 0x05
    2c5e:	9e 81       	ldd	r25, Y+6	; 0x06
    2c60:	0e 94 82 18 	call	0x3104	; 0x3104 <__mulsf3>
    2c64:	6f 8b       	std	Y+23, r22	; 0x17
    2c66:	78 8f       	std	Y+24, r23	; 0x18
    2c68:	89 8f       	std	Y+25, r24	; 0x19
    2c6a:	9a 8f       	std	Y+26, r25	; 0x1a
    2c6c:	8f 89       	ldd	r24, Y+23	; 0x17
    2c6e:	98 8d       	ldd	r25, Y+24	; 0x18
    2c70:	a9 8d       	ldd	r26, Y+25	; 0x19
    2c72:	ba 8d       	ldd	r27, Y+26	; 0x1a
    2c74:	8f 83       	std	Y+7, r24	; 0x07
    2c76:	98 87       	std	Y+8, r25	; 0x08
    2c78:	a9 87       	std	Y+9, r26	; 0x09
    2c7a:	ba 87       	std	Y+10, r27	; 0x0a

00002c7c <.Loc.750>:
	if (__tmp < 1.0)
    2c7c:	20 e0       	ldi	r18, 0x00	; 0
    2c7e:	30 e0       	ldi	r19, 0x00	; 0
    2c80:	40 e8       	ldi	r20, 0x80	; 128
    2c82:	5f e3       	ldi	r21, 0x3F	; 63
    2c84:	6f 81       	ldd	r22, Y+7	; 0x07
    2c86:	78 85       	ldd	r23, Y+8	; 0x08
    2c88:	89 85       	ldd	r24, Y+9	; 0x09
    2c8a:	9a 85       	ldd	r25, Y+10	; 0x0a
    2c8c:	0e 94 1e 17 	call	0x2e3c	; 0x2e3c <__cmpsf2>
    2c90:	88 23       	and	r24, r24
    2c92:	2c f4       	brge	.+10     	; 0x2c9e <.L275>

00002c94 <.Loc.751>:
		__ticks = 1;
    2c94:	81 e0       	ldi	r24, 0x01	; 1
    2c96:	90 e0       	ldi	r25, 0x00	; 0
    2c98:	9c 87       	std	Y+12, r25	; 0x0c
    2c9a:	8b 87       	std	Y+11, r24	; 0x0b
    2c9c:	55 c0       	rjmp	.+170    	; 0x2d48 <.L266>

00002c9e <.L275>:
	else if (__tmp > 65535)
    2c9e:	20 e0       	ldi	r18, 0x00	; 0
    2ca0:	3f ef       	ldi	r19, 0xFF	; 255
    2ca2:	4f e7       	ldi	r20, 0x7F	; 127
    2ca4:	57 e4       	ldi	r21, 0x47	; 71
    2ca6:	6f 81       	ldd	r22, Y+7	; 0x07
    2ca8:	78 85       	ldd	r23, Y+8	; 0x08
    2caa:	89 85       	ldd	r24, Y+9	; 0x09
    2cac:	9a 85       	ldd	r25, Y+10	; 0x0a
    2cae:	0e 94 7d 18 	call	0x30fa	; 0x30fa <__gesf2>
    2cb2:	88 23       	and	r24, r24
    2cb4:	d9 f1       	breq	.+118    	; 0x2d2c <.L276>
    2cb6:	d4 f1       	brlt	.+116    	; 0x2d2c <.L276>

00002cb8 <.Loc.753>:
		__ticks = (uint16_t) (__ms * 10.0);
    2cb8:	20 e0       	ldi	r18, 0x00	; 0
    2cba:	30 e0       	ldi	r19, 0x00	; 0
    2cbc:	40 e2       	ldi	r20, 0x20	; 32
    2cbe:	51 e4       	ldi	r21, 0x41	; 65
    2cc0:	6b 81       	ldd	r22, Y+3	; 0x03
    2cc2:	7c 81       	ldd	r23, Y+4	; 0x04
    2cc4:	8d 81       	ldd	r24, Y+5	; 0x05
    2cc6:	9e 81       	ldd	r25, Y+6	; 0x06
    2cc8:	0e 94 82 18 	call	0x3104	; 0x3104 <__mulsf3>
    2ccc:	6b 8f       	std	Y+27, r22	; 0x1b
    2cce:	7c 8f       	std	Y+28, r23	; 0x1c
    2cd0:	8d 8f       	std	Y+29, r24	; 0x1d
    2cd2:	9e 8f       	std	Y+30, r25	; 0x1e
    2cd4:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2cd6:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2cd8:	ad 8d       	ldd	r26, Y+29	; 0x1d
    2cda:	be 8d       	ldd	r27, Y+30	; 0x1e
    2cdc:	8b 8b       	std	Y+19, r24	; 0x13
    2cde:	9c 8b       	std	Y+20, r25	; 0x14
    2ce0:	ad 8b       	std	Y+21, r26	; 0x15
    2ce2:	be 8b       	std	Y+22, r27	; 0x16

00002ce4 <.Loc.754>:
    2ce4:	6b 89       	ldd	r22, Y+19	; 0x13
    2ce6:	7c 89       	ldd	r23, Y+20	; 0x14
    2ce8:	8d 89       	ldd	r24, Y+21	; 0x15
    2cea:	9e 89       	ldd	r25, Y+22	; 0x16
    2cec:	0e 94 9c 17 	call	0x2f38	; 0x2f38 <__fixunssfsi>
    2cf0:	6f 8f       	std	Y+31, r22	; 0x1f
    2cf2:	78 a3       	std	Y+32, r23	; 0x20
    2cf4:	89 a3       	std	Y+33, r24	; 0x21
    2cf6:	9a a3       	std	Y+34, r25	; 0x22
    2cf8:	af 8d       	ldd	r26, Y+31	; 0x1f
    2cfa:	b8 a1       	ldd	r27, Y+32	; 0x20
    2cfc:	bc 87       	std	Y+12, r27	; 0x0c
    2cfe:	ab 87       	std	Y+11, r26	; 0x0b

00002d00 <.Loc.755>:
		while(__ticks)
    2d00:	10 c0       	rjmp	.+32     	; 0x2d22 <.L269>

00002d02 <.L270>:
    2d02:	80 e9       	ldi	r24, 0x90	; 144
    2d04:	91 e0       	ldi	r25, 0x01	; 1
    2d06:	9e 87       	std	Y+14, r25	; 0x0e
    2d08:	8d 87       	std	Y+13, r24	; 0x0d

00002d0a <.LBB195>:
	__asm__ volatile (
    2d0a:	8d 85       	ldd	r24, Y+13	; 0x0d
    2d0c:	9e 85       	ldd	r25, Y+14	; 0x0e

00002d0e <.L1^B28>:
    2d0e:	01 97       	sbiw	r24, 0x01	; 1
    2d10:	f1 f7       	brne	.-4      	; 0x2d0e <.L1^B28>
    2d12:	9e 87       	std	Y+14, r25	; 0x0e
    2d14:	8d 87       	std	Y+13, r24	; 0x0d

00002d16 <.Loc.757>:
	...

00002d18 <.LBE195>:
			__ticks --;
    2d18:	8b 85       	ldd	r24, Y+11	; 0x0b
    2d1a:	9c 85       	ldd	r25, Y+12	; 0x0c
    2d1c:	01 97       	sbiw	r24, 0x01	; 1
    2d1e:	9c 87       	std	Y+12, r25	; 0x0c
    2d20:	8b 87       	std	Y+11, r24	; 0x0b

00002d22 <.L269>:
		while(__ticks)
    2d22:	8b 85       	ldd	r24, Y+11	; 0x0b
    2d24:	9c 85       	ldd	r25, Y+12	; 0x0c
    2d26:	00 97       	sbiw	r24, 0x00	; 0
    2d28:	61 f7       	brne	.-40     	; 0x2d02 <.L270>

00002d2a <.Loc.760>:
		return;
    2d2a:	19 c0       	rjmp	.+50     	; 0x2d5e <.L271>

00002d2c <.L276>:
		__ticks = (uint16_t)__tmp;
    2d2c:	6f 81       	ldd	r22, Y+7	; 0x07
    2d2e:	78 85       	ldd	r23, Y+8	; 0x08
    2d30:	89 85       	ldd	r24, Y+9	; 0x09
    2d32:	9a 85       	ldd	r25, Y+10	; 0x0a
    2d34:	0e 94 9c 17 	call	0x2f38	; 0x2f38 <__fixunssfsi>
    2d38:	6b a3       	std	Y+35, r22	; 0x23
    2d3a:	7c a3       	std	Y+36, r23	; 0x24
    2d3c:	8d a3       	std	Y+37, r24	; 0x25
    2d3e:	9e a3       	std	Y+38, r25	; 0x26
    2d40:	eb a1       	ldd	r30, Y+35	; 0x23
    2d42:	fc a1       	ldd	r31, Y+36	; 0x24
    2d44:	fc 87       	std	Y+12, r31	; 0x0c
    2d46:	eb 87       	std	Y+11, r30	; 0x0b

00002d48 <.L266>:
    2d48:	8b 85       	ldd	r24, Y+11	; 0x0b
    2d4a:	9c 85       	ldd	r25, Y+12	; 0x0c
    2d4c:	98 8b       	std	Y+16, r25	; 0x10
    2d4e:	8f 87       	std	Y+15, r24	; 0x0f

00002d50 <.LBB197>:
    2d50:	8f 85       	ldd	r24, Y+15	; 0x0f
    2d52:	98 89       	ldd	r25, Y+16	; 0x10

00002d54 <.L1^B29>:
    2d54:	01 97       	sbiw	r24, 0x01	; 1
    2d56:	f1 f7       	brne	.-4      	; 0x2d54 <.L1^B29>
    2d58:	98 8b       	std	Y+16, r25	; 0x10
    2d5a:	8f 87       	std	Y+15, r24	; 0x0f

00002d5c <.Loc.763>:
	...

00002d5e <.L271>:
	for (int i = 0; i < 4; i++)
    2d5e:	89 81       	ldd	r24, Y+1	; 0x01
    2d60:	9a 81       	ldd	r25, Y+2	; 0x02
    2d62:	01 96       	adiw	r24, 0x01	; 1
    2d64:	9a 83       	std	Y+2, r25	; 0x02
    2d66:	89 83       	std	Y+1, r24	; 0x01

00002d68 <.L263>:
    2d68:	89 81       	ldd	r24, Y+1	; 0x01
    2d6a:	9a 81       	ldd	r25, Y+2	; 0x02
    2d6c:	83 30       	cpi	r24, 0x03	; 3
    2d6e:	91 05       	cpc	r25, r1
    2d70:	09 f0       	breq	.+2      	; 0x2d74 <L0^A>

00002d72 <L0^A>:
    2d72:	0c f4       	brge	.+2      	; 0x2d76 <.LBE192>

00002d74 <L0^A>:
    2d74:	2d cf       	rjmp	.-422    	; 0x2bd0 <.L272>

00002d76 <.LBE192>:
		_delay_ms(1);   // 1 kHz
	}
}
    2d76:	00 00       	nop
    2d78:	00 00       	nop
    2d7a:	a6 96       	adiw	r28, 0x26	; 38
    2d7c:	0f b6       	in	r0, 0x3f	; 63
    2d7e:	f8 94       	cli
    2d80:	de bf       	out	0x3e, r29	; 62
    2d82:	0f be       	out	0x3f, r0	; 63
    2d84:	cd bf       	out	0x3d, r28	; 61
    2d86:	df 91       	pop	r29
    2d88:	cf 91       	pop	r28
    2d8a:	08 95       	ret

00002d8c <__divmodsi4>:
    2d8c:	05 2e       	mov	r0, r21

00002d8e <.Loc.1>:
    2d8e:	97 fb       	bst	r25, 7

00002d90 <.Loc.2>:
    2d90:	1e f4       	brtc	.+6      	; 0x2d98 <.L^B1>

00002d92 <.Loc.3>:
    2d92:	00 94       	com	r0

00002d94 <.Loc.4>:
    2d94:	0e 94 dd 16 	call	0x2dba	; 0x2dba <__negsi2>

00002d98 <.L^B1>:
    2d98:	57 fd       	sbrc	r21, 7

00002d9a <.Loc.6>:
    2d9a:	07 d0       	rcall	.+14     	; 0x2daa <__divmodsi4_neg2>

00002d9c <.Loc.7>:
    2d9c:	0e 94 fc 16 	call	0x2df8	; 0x2df8 <__udivmodsi4>

00002da0 <.Loc.8>:
    2da0:	07 fc       	sbrc	r0, 7

00002da2 <.Loc.9>:
    2da2:	03 d0       	rcall	.+6      	; 0x2daa <__divmodsi4_neg2>

00002da4 <.Loc.10>:
    2da4:	4e f4       	brtc	.+18     	; 0x2db8 <__divmodsi4_exit>

00002da6 <.Loc.11>:
    2da6:	0c 94 dd 16 	jmp	0x2dba	; 0x2dba <__negsi2>

00002daa <__divmodsi4_neg2>:
    2daa:	50 95       	com	r21

00002dac <.Loc.13>:
    2dac:	40 95       	com	r20

00002dae <.Loc.14>:
    2dae:	30 95       	com	r19

00002db0 <.Loc.15>:
    2db0:	21 95       	neg	r18

00002db2 <.Loc.16>:
    2db2:	3f 4f       	sbci	r19, 0xFF	; 255

00002db4 <.Loc.17>:
    2db4:	4f 4f       	sbci	r20, 0xFF	; 255

00002db6 <.Loc.18>:
    2db6:	5f 4f       	sbci	r21, 0xFF	; 255

00002db8 <__divmodsi4_exit>:
    2db8:	08 95       	ret

00002dba <__negsi2>:
    2dba:	90 95       	com	r25
    2dbc:	80 95       	com	r24
    2dbe:	70 95       	com	r23
    2dc0:	61 95       	neg	r22
    2dc2:	7f 4f       	sbci	r23, 0xFF	; 255
    2dc4:	8f 4f       	sbci	r24, 0xFF	; 255
    2dc6:	9f 4f       	sbci	r25, 0xFF	; 255

00002dc8 <.Loc.1>:
    2dc8:	08 95       	ret

00002dca <__tablejump2__>:
    2dca:	ee 0f       	add	r30, r30

00002dcc <.Loc.1>:
    2dcc:	ff 1f       	adc	r31, r31

00002dce <.Loc.2>:
    2dce:	88 1f       	adc	r24, r24

00002dd0 <.Loc.3>:
    2dd0:	8b bf       	out	0x3b, r24	; 59

00002dd2 <.Loc.4>:
    2dd2:	07 90       	elpm	r0, Z+

00002dd4 <.Loc.5>:
    2dd4:	f6 91       	elpm	r31, Z

00002dd6 <.Loc.6>:
    2dd6:	e0 2d       	mov	r30, r0

00002dd8 <.Loc.7>:
    2dd8:	19 94       	eijmp

00002dda <__umulhisi3>:
    2dda:	a2 9f       	mul	r26, r18

00002ddc <.Loc.1>:
    2ddc:	b0 01       	movw	r22, r0

00002dde <.Loc.2>:
    2dde:	b3 9f       	mul	r27, r19

00002de0 <.Loc.3>:
    2de0:	c0 01       	movw	r24, r0

00002de2 <.Loc.4>:
    2de2:	a3 9f       	mul	r26, r19

00002de4 <.Loc.5>:
    2de4:	70 0d       	add	r23, r0

00002de6 <.Loc.6>:
    2de6:	81 1d       	adc	r24, r1

00002de8 <.Loc.7>:
    2de8:	11 24       	eor	r1, r1

00002dea <.Loc.8>:
    2dea:	91 1d       	adc	r25, r1

00002dec <.Loc.9>:
    2dec:	b2 9f       	mul	r27, r18

00002dee <.Loc.10>:
    2dee:	70 0d       	add	r23, r0

00002df0 <.Loc.11>:
    2df0:	81 1d       	adc	r24, r1

00002df2 <.Loc.12>:
    2df2:	11 24       	eor	r1, r1

00002df4 <.Loc.13>:
    2df4:	91 1d       	adc	r25, r1

00002df6 <.Loc.14>:
    2df6:	08 95       	ret

00002df8 <__udivmodsi4>:
    2df8:	a1 e2       	ldi	r26, 0x21	; 33

00002dfa <.Loc.1>:
    2dfa:	1a 2e       	mov	r1, r26

00002dfc <.Loc.2>:
    2dfc:	aa 1b       	sub	r26, r26

00002dfe <.Loc.3>:
    2dfe:	bb 1b       	sub	r27, r27

00002e00 <.Loc.4>:
    2e00:	fd 01       	movw	r30, r26

00002e02 <.Loc.5>:
    2e02:	0d c0       	rjmp	.+26     	; 0x2e1e <__udivmodsi4_ep>

00002e04 <__udivmodsi4_loop>:
    2e04:	aa 1f       	adc	r26, r26

00002e06 <.Loc.7>:
    2e06:	bb 1f       	adc	r27, r27

00002e08 <.Loc.8>:
    2e08:	ee 1f       	adc	r30, r30

00002e0a <.Loc.9>:
    2e0a:	ff 1f       	adc	r31, r31

00002e0c <.Loc.10>:
    2e0c:	a2 17       	cp	r26, r18

00002e0e <.Loc.11>:
    2e0e:	b3 07       	cpc	r27, r19

00002e10 <.Loc.12>:
    2e10:	e4 07       	cpc	r30, r20

00002e12 <.Loc.13>:
    2e12:	f5 07       	cpc	r31, r21

00002e14 <.Loc.14>:
    2e14:	20 f0       	brcs	.+8      	; 0x2e1e <__udivmodsi4_ep>

00002e16 <.Loc.15>:
    2e16:	a2 1b       	sub	r26, r18

00002e18 <.Loc.16>:
    2e18:	b3 0b       	sbc	r27, r19

00002e1a <.Loc.17>:
    2e1a:	e4 0b       	sbc	r30, r20

00002e1c <.Loc.18>:
    2e1c:	f5 0b       	sbc	r31, r21

00002e1e <__udivmodsi4_ep>:
    2e1e:	66 1f       	adc	r22, r22

00002e20 <.Loc.20>:
    2e20:	77 1f       	adc	r23, r23

00002e22 <.Loc.21>:
    2e22:	88 1f       	adc	r24, r24

00002e24 <.Loc.22>:
    2e24:	99 1f       	adc	r25, r25

00002e26 <.Loc.23>:
    2e26:	1a 94       	dec	r1

00002e28 <.Loc.24>:
    2e28:	69 f7       	brne	.-38     	; 0x2e04 <__udivmodsi4_loop>

00002e2a <.Loc.25>:
    2e2a:	60 95       	com	r22

00002e2c <.Loc.26>:
    2e2c:	70 95       	com	r23

00002e2e <.Loc.27>:
    2e2e:	80 95       	com	r24

00002e30 <.Loc.28>:
    2e30:	90 95       	com	r25

00002e32 <.Loc.29>:
    2e32:	9b 01       	movw	r18, r22

00002e34 <.Loc.30>:
    2e34:	ac 01       	movw	r20, r24

00002e36 <.Loc.31>:
    2e36:	bd 01       	movw	r22, r26

00002e38 <.Loc.32>:
    2e38:	cf 01       	movw	r24, r30

00002e3a <.Loc.33>:
    2e3a:	08 95       	ret

00002e3c <__cmpsf2>:
    2e3c:	0e 94 08 18 	call	0x3010	; 0x3010 <__fp_cmp>
    2e40:	08 f4       	brcc	.+2      	; 0x2e44 <.L1^B1>
    2e42:	81 e0       	ldi	r24, 0x01	; 1

00002e44 <.L1^B1>:
    2e44:	08 95       	ret

00002e46 <__divsf3>:
    2e46:	0e 94 37 17 	call	0x2e6e	; 0x2e6e <__divsf3x>
    2e4a:	0c 94 43 18 	jmp	0x3086	; 0x3086 <__fp_round>

00002e4e <.L^B1>:
    2e4e:	0e 94 3c 18 	call	0x3078	; 0x3078 <__fp_pscB>
    2e52:	58 f0       	brcs	.+22     	; 0x2e6a <.L_nan>
    2e54:	0e 94 35 18 	call	0x306a	; 0x306a <__fp_pscA>
    2e58:	40 f0       	brcs	.+16     	; 0x2e6a <.L_nan>
    2e5a:	29 f4       	brne	.+10     	; 0x2e66 <.L_zr>
    2e5c:	5f 3f       	cpi	r21, 0xFF	; 255
    2e5e:	29 f0       	breq	.+10     	; 0x2e6a <.L_nan>

00002e60 <.L_inf>:
    2e60:	0c 94 2c 18 	jmp	0x3058	; 0x3058 <__fp_inf>

00002e64 <.L1^B1>:
    2e64:	51 11       	cpse	r21, r1

00002e66 <.L_zr>:
    2e66:	0c 94 77 18 	jmp	0x30ee	; 0x30ee <__fp_szero>

00002e6a <.L_nan>:
    2e6a:	0c 94 32 18 	jmp	0x3064	; 0x3064 <__fp_nan>

00002e6e <__divsf3x>:
    2e6e:	0e 94 54 18 	call	0x30a8	; 0x30a8 <__fp_split3>
    2e72:	68 f3       	brcs	.-38     	; 0x2e4e <.L^B1>

00002e74 <__divsf3_pse>:
    2e74:	99 23       	and	r25, r25
    2e76:	b1 f3       	breq	.-20     	; 0x2e64 <.L1^B1>
    2e78:	55 23       	and	r21, r21
    2e7a:	91 f3       	breq	.-28     	; 0x2e60 <.L_inf>
    2e7c:	95 1b       	sub	r25, r21
    2e7e:	55 0b       	sbc	r21, r21
    2e80:	bb 27       	eor	r27, r27
    2e82:	aa 27       	eor	r26, r26

00002e84 <.L2^B1>:
    2e84:	62 17       	cp	r22, r18
    2e86:	73 07       	cpc	r23, r19
    2e88:	84 07       	cpc	r24, r20
    2e8a:	38 f0       	brcs	.+14     	; 0x2e9a <.L3^B1>
    2e8c:	9f 5f       	subi	r25, 0xFF	; 255
    2e8e:	5f 4f       	sbci	r21, 0xFF	; 255
    2e90:	22 0f       	add	r18, r18
    2e92:	33 1f       	adc	r19, r19
    2e94:	44 1f       	adc	r20, r20
    2e96:	aa 1f       	adc	r26, r26
    2e98:	a9 f3       	breq	.-22     	; 0x2e84 <.L2^B1>

00002e9a <.L3^B1>:
    2e9a:	35 d0       	rcall	.+106    	; 0x2f06 <.L_div>
    2e9c:	0e 2e       	mov	r0, r30
    2e9e:	3a f0       	brmi	.+14     	; 0x2eae <.L5^B1>

00002ea0 <.L4^B1>:
    2ea0:	e0 e8       	ldi	r30, 0x80	; 128
    2ea2:	32 d0       	rcall	.+100    	; 0x2f08 <.L_div1>
    2ea4:	91 50       	subi	r25, 0x01	; 1
    2ea6:	50 40       	sbci	r21, 0x00	; 0
    2ea8:	e6 95       	lsr	r30
    2eaa:	00 1c       	adc	r0, r0
    2eac:	ca f7       	brpl	.-14     	; 0x2ea0 <.L4^B1>

00002eae <.L5^B1>:
    2eae:	2b d0       	rcall	.+86     	; 0x2f06 <.L_div>
    2eb0:	fe 2f       	mov	r31, r30
    2eb2:	29 d0       	rcall	.+82     	; 0x2f06 <.L_div>
    2eb4:	66 0f       	add	r22, r22
    2eb6:	77 1f       	adc	r23, r23
    2eb8:	88 1f       	adc	r24, r24
    2eba:	bb 1f       	adc	r27, r27
    2ebc:	26 17       	cp	r18, r22
    2ebe:	37 07       	cpc	r19, r23
    2ec0:	48 07       	cpc	r20, r24
    2ec2:	ab 07       	cpc	r26, r27
    2ec4:	b0 e8       	ldi	r27, 0x80	; 128
    2ec6:	09 f0       	breq	.+2      	; 0x2eca <.L4^B2>
    2ec8:	bb 0b       	sbc	r27, r27

00002eca <.L4^B2>:
    2eca:	80 2d       	mov	r24, r0
    2ecc:	bf 01       	movw	r22, r30
    2ece:	ff 27       	eor	r31, r31
    2ed0:	93 58       	subi	r25, 0x83	; 131
    2ed2:	5f 4f       	sbci	r21, 0xFF	; 255
    2ed4:	3a f0       	brmi	.+14     	; 0x2ee4 <.L13^B1>
    2ed6:	9e 3f       	cpi	r25, 0xFE	; 254
    2ed8:	51 05       	cpc	r21, r1
    2eda:	78 f0       	brcs	.+30     	; 0x2efa <.L15^B1>
    2edc:	0c 94 2c 18 	jmp	0x3058	; 0x3058 <__fp_inf>

00002ee0 <.L12^B1>:
    2ee0:	0c 94 77 18 	jmp	0x30ee	; 0x30ee <__fp_szero>

00002ee4 <.L13^B1>:
    2ee4:	5f 3f       	cpi	r21, 0xFF	; 255
    2ee6:	e4 f3       	brlt	.-8      	; 0x2ee0 <.L12^B1>
    2ee8:	98 3e       	cpi	r25, 0xE8	; 232
    2eea:	d4 f3       	brlt	.-12     	; 0x2ee0 <.L12^B1>

00002eec <.L14^B1>:
    2eec:	86 95       	lsr	r24
    2eee:	77 95       	ror	r23
    2ef0:	67 95       	ror	r22
    2ef2:	b7 95       	ror	r27
    2ef4:	f7 95       	ror	r31
    2ef6:	9f 5f       	subi	r25, 0xFF	; 255
    2ef8:	c9 f7       	brne	.-14     	; 0x2eec <.L14^B1>

00002efa <.L15^B1>:
    2efa:	88 0f       	add	r24, r24
    2efc:	91 1d       	adc	r25, r1
    2efe:	96 95       	lsr	r25
    2f00:	87 95       	ror	r24
    2f02:	97 f9       	bld	r25, 7
    2f04:	08 95       	ret

00002f06 <.L_div>:
    2f06:	e1 e0       	ldi	r30, 0x01	; 1

00002f08 <.L_div1>:
    2f08:	66 0f       	add	r22, r22
    2f0a:	77 1f       	adc	r23, r23
    2f0c:	88 1f       	adc	r24, r24
    2f0e:	bb 1f       	adc	r27, r27
    2f10:	62 17       	cp	r22, r18
    2f12:	73 07       	cpc	r23, r19
    2f14:	84 07       	cpc	r24, r20
    2f16:	ba 07       	cpc	r27, r26
    2f18:	20 f0       	brcs	.+8      	; 0x2f22 <.L2^B2>
    2f1a:	62 1b       	sub	r22, r18
    2f1c:	73 0b       	sbc	r23, r19
    2f1e:	84 0b       	sbc	r24, r20
    2f20:	ba 0b       	sbc	r27, r26

00002f22 <.L2^B2>:
    2f22:	ee 1f       	adc	r30, r30
    2f24:	88 f7       	brcc	.-30     	; 0x2f08 <.L_div1>
    2f26:	e0 95       	com	r30
    2f28:	08 95       	ret

00002f2a <__fixsfsi>:
    2f2a:	0e 94 9c 17 	call	0x2f38	; 0x2f38 <__fixunssfsi>
    2f2e:	68 94       	set
    2f30:	b1 11       	cpse	r27, r1
    2f32:	0c 94 77 18 	jmp	0x30ee	; 0x30ee <__fp_szero>
    2f36:	08 95       	ret

00002f38 <__fixunssfsi>:
    2f38:	0e 94 5c 18 	call	0x30b8	; 0x30b8 <__fp_splitA>
    2f3c:	88 f0       	brcs	.+34     	; 0x2f60 <.L_err>
    2f3e:	9f 57       	subi	r25, 0x7F	; 127
    2f40:	98 f0       	brcs	.+38     	; 0x2f68 <.L_zr>
    2f42:	b9 2f       	mov	r27, r25
    2f44:	99 27       	eor	r25, r25
    2f46:	b7 51       	subi	r27, 0x17	; 23
    2f48:	b0 f0       	brcs	.+44     	; 0x2f76 <.L4^B1>
    2f4a:	e1 f0       	breq	.+56     	; 0x2f84 <.L_sign>

00002f4c <.L1^B1>:
    2f4c:	66 0f       	add	r22, r22
    2f4e:	77 1f       	adc	r23, r23
    2f50:	88 1f       	adc	r24, r24
    2f52:	99 1f       	adc	r25, r25
    2f54:	1a f0       	brmi	.+6      	; 0x2f5c <.L2^B1>
    2f56:	ba 95       	dec	r27
    2f58:	c9 f7       	brne	.-14     	; 0x2f4c <.L1^B1>
    2f5a:	14 c0       	rjmp	.+40     	; 0x2f84 <.L_sign>

00002f5c <.L2^B1>:
    2f5c:	b1 30       	cpi	r27, 0x01	; 1
    2f5e:	91 f0       	breq	.+36     	; 0x2f84 <.L_sign>

00002f60 <.L_err>:
    2f60:	0e 94 76 18 	call	0x30ec	; 0x30ec <__fp_zero>
    2f64:	b1 e0       	ldi	r27, 0x01	; 1
    2f66:	08 95       	ret

00002f68 <.L_zr>:
    2f68:	0c 94 76 18 	jmp	0x30ec	; 0x30ec <__fp_zero>

00002f6c <.L3^B1>:
    2f6c:	67 2f       	mov	r22, r23
    2f6e:	78 2f       	mov	r23, r24
    2f70:	88 27       	eor	r24, r24
    2f72:	b8 5f       	subi	r27, 0xF8	; 248
    2f74:	39 f0       	breq	.+14     	; 0x2f84 <.L_sign>

00002f76 <.L4^B1>:
    2f76:	b9 3f       	cpi	r27, 0xF9	; 249
    2f78:	cc f3       	brlt	.-14     	; 0x2f6c <.L3^B1>

00002f7a <.L5^B1>:
    2f7a:	86 95       	lsr	r24
    2f7c:	77 95       	ror	r23
    2f7e:	67 95       	ror	r22
    2f80:	b3 95       	inc	r27
    2f82:	d9 f7       	brne	.-10     	; 0x2f7a <.L5^B1>

00002f84 <.L_sign>:
    2f84:	3e f4       	brtc	.+14     	; 0x2f94 <.L6^B1>
    2f86:	90 95       	com	r25
    2f88:	80 95       	com	r24
    2f8a:	70 95       	com	r23
    2f8c:	61 95       	neg	r22
    2f8e:	7f 4f       	sbci	r23, 0xFF	; 255
    2f90:	8f 4f       	sbci	r24, 0xFF	; 255
    2f92:	9f 4f       	sbci	r25, 0xFF	; 255

00002f94 <.L6^B1>:
    2f94:	08 95       	ret

00002f96 <__floatunsisf>:
    2f96:	e8 94       	clt
    2f98:	09 c0       	rjmp	.+18     	; 0x2fac <.L1^B1>

00002f9a <__floatsisf>:
    2f9a:	97 fb       	bst	r25, 7
    2f9c:	3e f4       	brtc	.+14     	; 0x2fac <.L1^B1>
    2f9e:	90 95       	com	r25
    2fa0:	80 95       	com	r24
    2fa2:	70 95       	com	r23
    2fa4:	61 95       	neg	r22
    2fa6:	7f 4f       	sbci	r23, 0xFF	; 255
    2fa8:	8f 4f       	sbci	r24, 0xFF	; 255
    2faa:	9f 4f       	sbci	r25, 0xFF	; 255

00002fac <.L1^B1>:
    2fac:	99 23       	and	r25, r25
    2fae:	a9 f0       	breq	.+42     	; 0x2fda <.L4^B1>
    2fb0:	f9 2f       	mov	r31, r25
    2fb2:	96 e9       	ldi	r25, 0x96	; 150
    2fb4:	bb 27       	eor	r27, r27

00002fb6 <.L2^B1>:
    2fb6:	93 95       	inc	r25
    2fb8:	f6 95       	lsr	r31
    2fba:	87 95       	ror	r24
    2fbc:	77 95       	ror	r23
    2fbe:	67 95       	ror	r22
    2fc0:	b7 95       	ror	r27
    2fc2:	f1 11       	cpse	r31, r1
    2fc4:	f8 cf       	rjmp	.-16     	; 0x2fb6 <.L2^B1>
    2fc6:	fa f4       	brpl	.+62     	; 0x3006 <.L_pack>
    2fc8:	bb 0f       	add	r27, r27
    2fca:	11 f4       	brne	.+4      	; 0x2fd0 <.L3^B1>
    2fcc:	60 ff       	sbrs	r22, 0
    2fce:	1b c0       	rjmp	.+54     	; 0x3006 <.L_pack>

00002fd0 <.L3^B1>:
    2fd0:	6f 5f       	subi	r22, 0xFF	; 255
    2fd2:	7f 4f       	sbci	r23, 0xFF	; 255
    2fd4:	8f 4f       	sbci	r24, 0xFF	; 255
    2fd6:	9f 4f       	sbci	r25, 0xFF	; 255
    2fd8:	16 c0       	rjmp	.+44     	; 0x3006 <.L_pack>

00002fda <.L4^B1>:
    2fda:	88 23       	and	r24, r24
    2fdc:	11 f0       	breq	.+4      	; 0x2fe2 <.L5^B1>
    2fde:	96 e9       	ldi	r25, 0x96	; 150
    2fe0:	11 c0       	rjmp	.+34     	; 0x3004 <.L8^B1>

00002fe2 <.L5^B1>:
    2fe2:	77 23       	and	r23, r23
    2fe4:	21 f0       	breq	.+8      	; 0x2fee <.L6^B1>
    2fe6:	9e e8       	ldi	r25, 0x8E	; 142
    2fe8:	87 2f       	mov	r24, r23
    2fea:	76 2f       	mov	r23, r22
    2fec:	05 c0       	rjmp	.+10     	; 0x2ff8 <.L7^B1>

00002fee <.L6^B1>:
    2fee:	66 23       	and	r22, r22
    2ff0:	71 f0       	breq	.+28     	; 0x300e <.L9^B1>
    2ff2:	96 e8       	ldi	r25, 0x86	; 134
    2ff4:	86 2f       	mov	r24, r22
    2ff6:	70 e0       	ldi	r23, 0x00	; 0

00002ff8 <.L7^B1>:
    2ff8:	60 e0       	ldi	r22, 0x00	; 0
    2ffa:	2a f0       	brmi	.+10     	; 0x3006 <.L_pack>

00002ffc <.L10^B1>:
    2ffc:	9a 95       	dec	r25
    2ffe:	66 0f       	add	r22, r22
    3000:	77 1f       	adc	r23, r23
    3002:	88 1f       	adc	r24, r24

00003004 <.L8^B1>:
    3004:	da f7       	brpl	.-10     	; 0x2ffc <.L10^B1>

00003006 <.L_pack>:
    3006:	88 0f       	add	r24, r24
    3008:	96 95       	lsr	r25
    300a:	87 95       	ror	r24
    300c:	97 f9       	bld	r25, 7

0000300e <.L9^B1>:
    300e:	08 95       	ret

00003010 <__fp_cmp>:
    3010:	99 0f       	add	r25, r25
    3012:	00 08       	sbc	r0, r0
    3014:	55 0f       	add	r21, r21
    3016:	aa 0b       	sbc	r26, r26
    3018:	e0 e8       	ldi	r30, 0x80	; 128
    301a:	fe ef       	ldi	r31, 0xFE	; 254
    301c:	16 16       	cp	r1, r22
    301e:	17 06       	cpc	r1, r23
    3020:	e8 07       	cpc	r30, r24
    3022:	f9 07       	cpc	r31, r25
    3024:	c0 f0       	brcs	.+48     	; 0x3056 <.L9^B1>
    3026:	12 16       	cp	r1, r18
    3028:	13 06       	cpc	r1, r19
    302a:	e4 07       	cpc	r30, r20
    302c:	f5 07       	cpc	r31, r21
    302e:	98 f0       	brcs	.+38     	; 0x3056 <.L9^B1>
    3030:	62 1b       	sub	r22, r18
    3032:	73 0b       	sbc	r23, r19
    3034:	84 0b       	sbc	r24, r20
    3036:	95 0b       	sbc	r25, r21
    3038:	39 f4       	brne	.+14     	; 0x3048 <.L1^B1>
    303a:	0a 26       	eor	r0, r26
    303c:	61 f0       	breq	.+24     	; 0x3056 <.L9^B1>
    303e:	23 2b       	or	r18, r19
    3040:	24 2b       	or	r18, r20
    3042:	25 2b       	or	r18, r21
    3044:	21 f4       	brne	.+8      	; 0x304e <.L2^B1>
    3046:	08 95       	ret

00003048 <.L1^B1>:
    3048:	0a 26       	eor	r0, r26
    304a:	09 f4       	brne	.+2      	; 0x304e <.L2^B1>
    304c:	a1 40       	sbci	r26, 0x01	; 1

0000304e <.L2^B1>:
    304e:	a6 95       	lsr	r26
    3050:	8f ef       	ldi	r24, 0xFF	; 255
    3052:	81 1d       	adc	r24, r1
    3054:	81 1d       	adc	r24, r1

00003056 <.L9^B1>:
    3056:	08 95       	ret

00003058 <__fp_inf>:
    3058:	97 f9       	bld	r25, 7
    305a:	9f 67       	ori	r25, 0x7F	; 127
    305c:	80 e8       	ldi	r24, 0x80	; 128
    305e:	70 e0       	ldi	r23, 0x00	; 0
    3060:	60 e0       	ldi	r22, 0x00	; 0
    3062:	08 95       	ret

00003064 <__fp_nan>:
    3064:	9f ef       	ldi	r25, 0xFF	; 255
    3066:	80 ec       	ldi	r24, 0xC0	; 192
    3068:	08 95       	ret

0000306a <__fp_pscA>:
    306a:	00 24       	eor	r0, r0
    306c:	0a 94       	dec	r0
    306e:	16 16       	cp	r1, r22
    3070:	17 06       	cpc	r1, r23
    3072:	18 06       	cpc	r1, r24
    3074:	09 06       	cpc	r0, r25
    3076:	08 95       	ret

00003078 <__fp_pscB>:
    3078:	00 24       	eor	r0, r0
    307a:	0a 94       	dec	r0
    307c:	12 16       	cp	r1, r18
    307e:	13 06       	cpc	r1, r19
    3080:	14 06       	cpc	r1, r20
    3082:	05 06       	cpc	r0, r21
    3084:	08 95       	ret

00003086 <__fp_round>:
    3086:	09 2e       	mov	r0, r25
    3088:	03 94       	inc	r0
    308a:	00 0c       	add	r0, r0
    308c:	11 f4       	brne	.+4      	; 0x3092 <.L1^B1>
    308e:	88 23       	and	r24, r24
    3090:	52 f0       	brmi	.+20     	; 0x30a6 <.L3^B1>

00003092 <.L1^B1>:
    3092:	bb 0f       	add	r27, r27
    3094:	40 f4       	brcc	.+16     	; 0x30a6 <.L3^B1>
    3096:	bf 2b       	or	r27, r31
    3098:	11 f4       	brne	.+4      	; 0x309e <.L2^B1>
    309a:	60 ff       	sbrs	r22, 0
    309c:	04 c0       	rjmp	.+8      	; 0x30a6 <.L3^B1>

0000309e <.L2^B1>:
    309e:	6f 5f       	subi	r22, 0xFF	; 255
    30a0:	7f 4f       	sbci	r23, 0xFF	; 255
    30a2:	8f 4f       	sbci	r24, 0xFF	; 255
    30a4:	9f 4f       	sbci	r25, 0xFF	; 255

000030a6 <.L3^B1>:
    30a6:	08 95       	ret

000030a8 <__fp_split3>:
    30a8:	57 fd       	sbrc	r21, 7
    30aa:	90 58       	subi	r25, 0x80	; 128
    30ac:	44 0f       	add	r20, r20
    30ae:	55 1f       	adc	r21, r21
    30b0:	59 f0       	breq	.+22     	; 0x30c8 <.L4^B1>
    30b2:	5f 3f       	cpi	r21, 0xFF	; 255
    30b4:	71 f0       	breq	.+28     	; 0x30d2 <.L5^B1>

000030b6 <.L1^B1>:
    30b6:	47 95       	ror	r20

000030b8 <__fp_splitA>:
    30b8:	88 0f       	add	r24, r24
    30ba:	97 fb       	bst	r25, 7
    30bc:	99 1f       	adc	r25, r25
    30be:	61 f0       	breq	.+24     	; 0x30d8 <.L6^B1>
    30c0:	9f 3f       	cpi	r25, 0xFF	; 255
    30c2:	79 f0       	breq	.+30     	; 0x30e2 <.L7^B1>

000030c4 <.L3^B1>:
    30c4:	87 95       	ror	r24
    30c6:	08 95       	ret

000030c8 <.L4^B1>:
    30c8:	12 16       	cp	r1, r18
    30ca:	13 06       	cpc	r1, r19
    30cc:	14 06       	cpc	r1, r20
    30ce:	55 1f       	adc	r21, r21
    30d0:	f2 cf       	rjmp	.-28     	; 0x30b6 <.L1^B1>

000030d2 <.L5^B1>:
    30d2:	46 95       	lsr	r20
    30d4:	f1 df       	rcall	.-30     	; 0x30b8 <__fp_splitA>
    30d6:	08 c0       	rjmp	.+16     	; 0x30e8 <.L8^B1>

000030d8 <.L6^B1>:
    30d8:	16 16       	cp	r1, r22
    30da:	17 06       	cpc	r1, r23
    30dc:	18 06       	cpc	r1, r24
    30de:	99 1f       	adc	r25, r25
    30e0:	f1 cf       	rjmp	.-30     	; 0x30c4 <.L3^B1>

000030e2 <.L7^B1>:
    30e2:	86 95       	lsr	r24
    30e4:	71 05       	cpc	r23, r1
    30e6:	61 05       	cpc	r22, r1

000030e8 <.L8^B1>:
    30e8:	08 94       	sec
    30ea:	08 95       	ret

000030ec <__fp_zero>:
    30ec:	e8 94       	clt

000030ee <__fp_szero>:
    30ee:	bb 27       	eor	r27, r27
    30f0:	66 27       	eor	r22, r22
    30f2:	77 27       	eor	r23, r23
    30f4:	cb 01       	movw	r24, r22
    30f6:	97 f9       	bld	r25, 7
    30f8:	08 95       	ret

000030fa <__gesf2>:
    30fa:	0e 94 08 18 	call	0x3010	; 0x3010 <__fp_cmp>
    30fe:	08 f4       	brcc	.+2      	; 0x3102 <.L1^B1>
    3100:	8f ef       	ldi	r24, 0xFF	; 255

00003102 <.L1^B1>:
    3102:	08 95       	ret

00003104 <__mulsf3>:
    3104:	0e 94 95 18 	call	0x312a	; 0x312a <__mulsf3x>
    3108:	0c 94 43 18 	jmp	0x3086	; 0x3086 <__fp_round>

0000310c <.L^B1>:
    310c:	0e 94 35 18 	call	0x306a	; 0x306a <__fp_pscA>
    3110:	38 f0       	brcs	.+14     	; 0x3120 <.L1^B1>
    3112:	0e 94 3c 18 	call	0x3078	; 0x3078 <__fp_pscB>
    3116:	20 f0       	brcs	.+8      	; 0x3120 <.L1^B1>
    3118:	95 23       	and	r25, r21
    311a:	11 f0       	breq	.+4      	; 0x3120 <.L1^B1>
    311c:	0c 94 2c 18 	jmp	0x3058	; 0x3058 <__fp_inf>

00003120 <.L1^B1>:
    3120:	0c 94 32 18 	jmp	0x3064	; 0x3064 <__fp_nan>

00003124 <.L2^B1>:
    3124:	11 24       	eor	r1, r1
    3126:	0c 94 77 18 	jmp	0x30ee	; 0x30ee <__fp_szero>

0000312a <__mulsf3x>:
    312a:	0e 94 54 18 	call	0x30a8	; 0x30a8 <__fp_split3>
    312e:	70 f3       	brcs	.-36     	; 0x310c <.L^B1>

00003130 <__mulsf3_pse>:
    3130:	95 9f       	mul	r25, r21
    3132:	c1 f3       	breq	.-16     	; 0x3124 <.L2^B1>
    3134:	95 0f       	add	r25, r21
    3136:	50 e0       	ldi	r21, 0x00	; 0
    3138:	55 1f       	adc	r21, r21
    313a:	62 9f       	mul	r22, r18
    313c:	f0 01       	movw	r30, r0
    313e:	72 9f       	mul	r23, r18
    3140:	bb 27       	eor	r27, r27
    3142:	f0 0d       	add	r31, r0
    3144:	b1 1d       	adc	r27, r1
    3146:	63 9f       	mul	r22, r19
    3148:	aa 27       	eor	r26, r26
    314a:	f0 0d       	add	r31, r0
    314c:	b1 1d       	adc	r27, r1
    314e:	aa 1f       	adc	r26, r26
    3150:	64 9f       	mul	r22, r20
    3152:	66 27       	eor	r22, r22
    3154:	b0 0d       	add	r27, r0
    3156:	a1 1d       	adc	r26, r1
    3158:	66 1f       	adc	r22, r22
    315a:	82 9f       	mul	r24, r18
    315c:	22 27       	eor	r18, r18
    315e:	b0 0d       	add	r27, r0
    3160:	a1 1d       	adc	r26, r1
    3162:	62 1f       	adc	r22, r18
    3164:	73 9f       	mul	r23, r19
    3166:	b0 0d       	add	r27, r0
    3168:	a1 1d       	adc	r26, r1
    316a:	62 1f       	adc	r22, r18
    316c:	83 9f       	mul	r24, r19
    316e:	a0 0d       	add	r26, r0
    3170:	61 1d       	adc	r22, r1
    3172:	22 1f       	adc	r18, r18
    3174:	74 9f       	mul	r23, r20
    3176:	33 27       	eor	r19, r19
    3178:	a0 0d       	add	r26, r0
    317a:	61 1d       	adc	r22, r1
    317c:	23 1f       	adc	r18, r19
    317e:	84 9f       	mul	r24, r20
    3180:	60 0d       	add	r22, r0
    3182:	21 1d       	adc	r18, r1
    3184:	82 2f       	mov	r24, r18
    3186:	76 2f       	mov	r23, r22
    3188:	6a 2f       	mov	r22, r26
    318a:	11 24       	eor	r1, r1
    318c:	9f 57       	subi	r25, 0x7F	; 127
    318e:	50 40       	sbci	r21, 0x00	; 0
    3190:	9a f0       	brmi	.+38     	; 0x31b8 <.L13^B1>
    3192:	f1 f0       	breq	.+60     	; 0x31d0 <.L15^B1>

00003194 <.L10^B1>:
    3194:	88 23       	and	r24, r24
    3196:	4a f0       	brmi	.+18     	; 0x31aa <.L11^B1>
    3198:	ee 0f       	add	r30, r30
    319a:	ff 1f       	adc	r31, r31
    319c:	bb 1f       	adc	r27, r27
    319e:	66 1f       	adc	r22, r22
    31a0:	77 1f       	adc	r23, r23
    31a2:	88 1f       	adc	r24, r24
    31a4:	91 50       	subi	r25, 0x01	; 1
    31a6:	50 40       	sbci	r21, 0x00	; 0
    31a8:	a9 f7       	brne	.-22     	; 0x3194 <.L10^B1>

000031aa <.L11^B1>:
    31aa:	9e 3f       	cpi	r25, 0xFE	; 254
    31ac:	51 05       	cpc	r21, r1
    31ae:	80 f0       	brcs	.+32     	; 0x31d0 <.L15^B1>
    31b0:	0c 94 2c 18 	jmp	0x3058	; 0x3058 <__fp_inf>

000031b4 <.L12^B1>:
    31b4:	0c 94 77 18 	jmp	0x30ee	; 0x30ee <__fp_szero>

000031b8 <.L13^B1>:
    31b8:	5f 3f       	cpi	r21, 0xFF	; 255
    31ba:	e4 f3       	brlt	.-8      	; 0x31b4 <.L12^B1>
    31bc:	98 3e       	cpi	r25, 0xE8	; 232
    31be:	d4 f3       	brlt	.-12     	; 0x31b4 <.L12^B1>

000031c0 <.L14^B1>:
    31c0:	86 95       	lsr	r24
    31c2:	77 95       	ror	r23
    31c4:	67 95       	ror	r22
    31c6:	b7 95       	ror	r27
    31c8:	f7 95       	ror	r31
    31ca:	e7 95       	ror	r30
    31cc:	9f 5f       	subi	r25, 0xFF	; 255
    31ce:	c1 f7       	brne	.-16     	; 0x31c0 <.L14^B1>

000031d0 <.L15^B1>:
    31d0:	fe 2b       	or	r31, r30
    31d2:	88 0f       	add	r24, r24
    31d4:	91 1d       	adc	r25, r1
    31d6:	96 95       	lsr	r25
    31d8:	87 95       	ror	r24
    31da:	97 f9       	bld	r25, 7
    31dc:	08 95       	ret

000031de <_exit>:
    31de:	f8 94       	cli

000031e0 <__stop_program>:
    31e0:	ff cf       	rjmp	.-2      	; 0x31e0 <__stop_program>

000031e2 <L0^A>:
    31e2:	43 05       	cpc	r20, r3
    31e4:	7a 05       	cpc	r23, r10
    31e6:	b1 05       	cpc	r27, r1
    31e8:	e2 05       	cpc	r30, r2
    31ea:	20 06       	cpc	r2, r16
    31ec:	56 06       	cpc	r5, r22
    31ee:	85 06       	cpc	r8, r21
    31f0:	b4 06       	cpc	r11, r20
    31f2:	79 07       	cpc	r23, r25
    31f4:	86 07       	cpc	r24, r22
    31f6:	16 08       	sbc	r1, r6
    31f8:	44 0b       	sbc	r20, r20
    31fa:	54 04       	cpc	r5, r4
    31fc:	54 04       	cpc	r5, r4
    31fe:	54 04       	cpc	r5, r4
    3200:	54 04       	cpc	r5, r4
    3202:	54 04       	cpc	r5, r4
    3204:	54 04       	cpc	r5, r4
    3206:	54 04       	cpc	r5, r4
    3208:	54 04       	cpc	r5, r4
    320a:	54 04       	cpc	r5, r4
    320c:	54 04       	cpc	r5, r4
    320e:	54 04       	cpc	r5, r4
    3210:	54 04       	cpc	r5, r4
    3212:	54 04       	cpc	r5, r4
    3214:	54 04       	cpc	r5, r4
    3216:	54 04       	cpc	r5, r4
    3218:	54 04       	cpc	r5, r4
    321a:	54 04       	cpc	r5, r4
    321c:	54 04       	cpc	r5, r4
    321e:	54 04       	cpc	r5, r4
    3220:	54 04       	cpc	r5, r4
    3222:	54 04       	cpc	r5, r4
    3224:	ce 07       	cpc	r28, r30
    3226:	54 04       	cpc	r5, r4
    3228:	54 04       	cpc	r5, r4
    322a:	54 04       	cpc	r5, r4
    322c:	54 04       	cpc	r5, r4
    322e:	54 04       	cpc	r5, r4
    3230:	54 04       	cpc	r5, r4
    3232:	54 04       	cpc	r5, r4
    3234:	54 04       	cpc	r5, r4
    3236:	54 04       	cpc	r5, r4
    3238:	54 04       	cpc	r5, r4
    323a:	54 04       	cpc	r5, r4
    323c:	54 04       	cpc	r5, r4
    323e:	54 04       	cpc	r5, r4
    3240:	54 04       	cpc	r5, r4
    3242:	54 04       	cpc	r5, r4
    3244:	54 04       	cpc	r5, r4
    3246:	54 04       	cpc	r5, r4
    3248:	54 04       	cpc	r5, r4
    324a:	54 04       	cpc	r5, r4
    324c:	54 04       	cpc	r5, r4
    324e:	54 04       	cpc	r5, r4
    3250:	54 04       	cpc	r5, r4
    3252:	54 04       	cpc	r5, r4
    3254:	54 04       	cpc	r5, r4
    3256:	54 04       	cpc	r5, r4
    3258:	54 04       	cpc	r5, r4
    325a:	54 04       	cpc	r5, r4
    325c:	54 04       	cpc	r5, r4
    325e:	54 04       	cpc	r5, r4
    3260:	54 04       	cpc	r5, r4
    3262:	54 04       	cpc	r5, r4
    3264:	54 04       	cpc	r5, r4
    3266:	54 04       	cpc	r5, r4
    3268:	54 04       	cpc	r5, r4
    326a:	54 04       	cpc	r5, r4
    326c:	54 04       	cpc	r5, r4
    326e:	54 04       	cpc	r5, r4
    3270:	54 04       	cpc	r5, r4
    3272:	54 04       	cpc	r5, r4
    3274:	54 04       	cpc	r5, r4
    3276:	54 04       	cpc	r5, r4
    3278:	54 04       	cpc	r5, r4
    327a:	54 04       	cpc	r5, r4
    327c:	54 04       	cpc	r5, r4
    327e:	54 04       	cpc	r5, r4
    3280:	54 04       	cpc	r5, r4
    3282:	54 04       	cpc	r5, r4
    3284:	54 04       	cpc	r5, r4
    3286:	54 04       	cpc	r5, r4
    3288:	54 04       	cpc	r5, r4
    328a:	54 04       	cpc	r5, r4
    328c:	54 04       	cpc	r5, r4
    328e:	54 04       	cpc	r5, r4
    3290:	54 04       	cpc	r5, r4
    3292:	54 04       	cpc	r5, r4
    3294:	54 04       	cpc	r5, r4
    3296:	54 04       	cpc	r5, r4
    3298:	54 04       	cpc	r5, r4
    329a:	54 04       	cpc	r5, r4
    329c:	54 04       	cpc	r5, r4
    329e:	54 04       	cpc	r5, r4
    32a0:	54 04       	cpc	r5, r4
    32a2:	54 04       	cpc	r5, r4
    32a4:	54 04       	cpc	r5, r4
    32a6:	54 04       	cpc	r5, r4
    32a8:	de 04       	cpc	r13, r14
