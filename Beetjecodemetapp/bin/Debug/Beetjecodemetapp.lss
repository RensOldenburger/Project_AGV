
bin\Debug\Beetjecodemetapp.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000020  00800200  00002082  00002136  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002082  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000010  00800220  00800220  00002156  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  00002156  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      00000012  00000000  00000000  00002159  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000216c  2**2
                  CONTENTS, READONLY, OCTETS
  6 .debug_aranges 00000178  00000000  00000000  000021b0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_info   00001717  00000000  00000000  00002328  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_abbrev 000010b5  00000000  00000000  00003a3f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line   00001a36  00000000  00000000  00004af4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_frame  00000488  00000000  00000000  0000652c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_str    00000746  00000000  00000000  000069b4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_line_str 000001c0  00000000  00000000  000070fa  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__ctors_end>
       4:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
       8:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
       c:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      10:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      14:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      18:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      1c:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      20:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      24:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      28:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      2c:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      30:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      34:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      38:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      3c:	0c 94 38 0c 	jmp	0x1870	; 0x1870 <__vector_15>
      40:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      44:	0c 94 32 03 	jmp	0x664	; 0x664 <__vector_17>
      48:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      4c:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      50:	0c 94 07 03 	jmp	0x60e	; 0x60e <__vector_20>
      54:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      58:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      5c:	0c 94 ad 03 	jmp	0x75a	; 0x75a <__vector_23>
      60:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      64:	0c 94 a9 00 	jmp	0x152	; 0x152 <__vector_25>
      68:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      6c:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      70:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      74:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      78:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      7c:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      80:	0c 94 85 03 	jmp	0x70a	; 0x70a <__vector_32>
      84:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      88:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      8c:	0c 94 5a 03 	jmp	0x6b4	; 0x6b4 <__vector_35>
      90:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      94:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      98:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      9c:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      a0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      a4:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      a8:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      ac:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      b0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      b4:	0c 94 cb 03 	jmp	0x796	; 0x796 <__vector_45>
      b8:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      bc:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      c0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      c4:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      c8:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      cc:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      d0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      d4:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      d8:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      dc:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      e0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>

000000e4 <__trampolines_start>:
      e4:	0c 94 8d 05 	jmp	0xb1a	; 0xb1a <.L18>
      e8:	0c 94 01 06 	jmp	0xc02	; 0xc02 <.L16>
      ec:	0c 94 37 05 	jmp	0xa6e	; 0xa6e <.L20>
      f0:	0c 94 1a 07 	jmp	0xe34	; 0xe34 <.L13>
      f4:	0c 94 65 05 	jmp	0xaca	; 0xaca <.L19>
      f8:	0c 94 cb 05 	jmp	0xb96	; 0xb96 <.L17>
      fc:	0c 94 27 07 	jmp	0xe4e	; 0xe4e <.L11>
     100:	0c 94 30 06 	jmp	0xc60	; 0xc60 <.L15>
     104:	0c 94 6a 06 	jmp	0xcd4	; 0xcd4 <.L14>
     108:	0c 94 09 05 	jmp	0xa12	; 0xa12 <.L21>

0000010c <__ctors_end>:
     10c:	11 24       	eor	r1, r1
     10e:	1f be       	out	0x3f, r1	; 63
     110:	cf ef       	ldi	r28, 0xFF	; 255
     112:	d1 e2       	ldi	r29, 0x21	; 33
     114:	de bf       	out	0x3e, r29	; 62
     116:	cd bf       	out	0x3d, r28	; 61
     118:	00 e0       	ldi	r16, 0x00	; 0
     11a:	0c bf       	out	0x3c, r16	; 60

0000011c <__do_copy_data>:
     11c:	12 e0       	ldi	r17, 0x02	; 2

0000011e <.Loc.1>:
     11e:	a0 e0       	ldi	r26, 0x00	; 0

00000120 <.Loc.2>:
     120:	b2 e0       	ldi	r27, 0x02	; 2

00000122 <.Loc.3>:
     122:	e2 e8       	ldi	r30, 0x82	; 130

00000124 <.Loc.4>:
     124:	f0 e2       	ldi	r31, 0x20	; 32

00000126 <.Loc.5>:
     126:	00 e0       	ldi	r16, 0x00	; 0

00000128 <.Loc.6>:
     128:	0b bf       	out	0x3b, r16	; 59

0000012a <.Loc.7>:
     12a:	02 c0       	rjmp	.+4      	; 0x130 <.L__do_copy_data_start>

0000012c <.L__do_copy_data_loop>:
     12c:	07 90       	elpm	r0, Z+

0000012e <.Loc.9>:
     12e:	0d 92       	st	X+, r0

00000130 <.L__do_copy_data_start>:
     130:	a0 32       	cpi	r26, 0x20	; 32

00000132 <.Loc.11>:
     132:	b1 07       	cpc	r27, r17

00000134 <.Loc.12>:
     134:	d9 f7       	brne	.-10     	; 0x12c <.L__do_copy_data_loop>

00000136 <__do_clear_bss>:
     136:	22 e0       	ldi	r18, 0x02	; 2

00000138 <.Loc.1>:
     138:	a0 e2       	ldi	r26, 0x20	; 32

0000013a <.Loc.2>:
     13a:	b2 e0       	ldi	r27, 0x02	; 2

0000013c <.Loc.3>:
     13c:	01 c0       	rjmp	.+2      	; 0x140 <.Loc.5>

0000013e <.Loc.4>:
     13e:	1d 92       	st	X+, r1

00000140 <.Loc.5>:
     140:	a0 33       	cpi	r26, 0x30	; 48

00000142 <.Loc.6>:
     142:	b2 07       	cpc	r27, r18

00000144 <.Loc.7>:
     144:	e1 f7       	brne	.-8      	; 0x13e <.Loc.4>

00000146 <L0^A>:
     146:	0e 94 05 04 	call	0x80a	; 0x80a <main>
     14a:	0c 94 35 10 	jmp	0x206a	; 0x206a <_exit>

0000014e <__bad_interrupt>:
     14e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000152 <__vector_25>:
int Bluetooth_Getal = 0;//BLUETOOTH GETAL
int verandergetal = 0;//ONNODIG
int veranderandergetal = 0;//ONNODIG

ISR(USART0_RX_vect)
{
     152:	1f 92       	push	r1
     154:	0f 92       	push	r0
     156:	0f b6       	in	r0, 0x3f	; 63
     158:	0f 92       	push	r0
     15a:	11 24       	eor	r1, r1
     15c:	0b b6       	in	r0, 0x3b	; 59
     15e:	0f 92       	push	r0
     160:	8f 93       	push	r24
     162:	9f 93       	push	r25
     164:	ef 93       	push	r30
     166:	ff 93       	push	r31
     168:	cf 93       	push	r28
     16a:	df 93       	push	r29
     16c:	cd b7       	in	r28, 0x3d	; 61
     16e:	de b7       	in	r29, 0x3e	; 62

00000170 <.Loc.1>:
    Bluetooth_Getal = UDR0;
     170:	86 ec       	ldi	r24, 0xC6	; 198
     172:	90 e0       	ldi	r25, 0x00	; 0
     174:	fc 01       	movw	r30, r24
     176:	80 81       	ld	r24, Z
     178:	88 2f       	mov	r24, r24
     17a:	90 e0       	ldi	r25, 0x00	; 0

0000017c <.Loc.2>:
     17c:	90 93 21 02 	sts	0x0221, r25	; 0x800221 <Bluetooth_Getal+0x1>
     180:	80 93 20 02 	sts	0x0220, r24	; 0x800220 <Bluetooth_Getal>

00000184 <.Loc.3>:
    if (verandergetal == 0)//ONNODIG
     184:	80 91 22 02 	lds	r24, 0x0222	; 0x800222 <verandergetal>
     188:	90 91 23 02 	lds	r25, 0x0223	; 0x800223 <verandergetal+0x1>

0000018c <.Loc.4>:
     18c:	00 97       	sbiw	r24, 0x00	; 0
     18e:	51 f4       	brne	.+20     	; 0x1a4 <.L2>

00000190 <.Loc.5>:
    {//ONNODIG
        verandergetal++;//ONNODIG
     190:	80 91 22 02 	lds	r24, 0x0222	; 0x800222 <verandergetal>
     194:	90 91 23 02 	lds	r25, 0x0223	; 0x800223 <verandergetal+0x1>
     198:	01 96       	adiw	r24, 0x01	; 1
     19a:	90 93 23 02 	sts	0x0223, r25	; 0x800223 <verandergetal+0x1>
     19e:	80 93 22 02 	sts	0x0222, r24	; 0x800222 <verandergetal>

000001a2 <.Loc.6>:
    }//ONNODIG
    else//ONNODIG
    {//ONNODIG
        verandergetal = 0;//ONNODIG
    }//ONNODIG
}
     1a2:	04 c0       	rjmp	.+8      	; 0x1ac <.L4>

000001a4 <.L2>:
        verandergetal = 0;//ONNODIG
     1a4:	10 92 23 02 	sts	0x0223, r1	; 0x800223 <verandergetal+0x1>
     1a8:	10 92 22 02 	sts	0x0222, r1	; 0x800222 <verandergetal>

000001ac <.L4>:
}
     1ac:	00 00       	nop
     1ae:	df 91       	pop	r29
     1b0:	cf 91       	pop	r28
     1b2:	ff 91       	pop	r31
     1b4:	ef 91       	pop	r30
     1b6:	9f 91       	pop	r25
     1b8:	8f 91       	pop	r24
     1ba:	0f 90       	pop	r0
     1bc:	0b be       	out	0x3b, r0	; 59
     1be:	0f 90       	pop	r0
     1c0:	0f be       	out	0x3f, r0	; 63
     1c2:	0f 90       	pop	r0
     1c4:	1f 90       	pop	r1
     1c6:	18 95       	reti

000001c8 <initBluetooth>:

void initBluetooth(void)
{
     1c8:	cf 93       	push	r28
     1ca:	df 93       	push	r29
     1cc:	cd b7       	in	r28, 0x3d	; 61
     1ce:	de b7       	in	r29, 0x3e	; 62

000001d0 <.Loc.10>:
    //Bluetooth
    UBRR0H = (BRC >> 8);
     1d0:	85 ec       	ldi	r24, 0xC5	; 197
     1d2:	90 e0       	ldi	r25, 0x00	; 0

000001d4 <.Loc.11>:
     1d4:	fc 01       	movw	r30, r24
     1d6:	10 82       	st	Z, r1

000001d8 <.Loc.12>:
    UBRR0L = BRC;
     1d8:	84 ec       	ldi	r24, 0xC4	; 196
     1da:	90 e0       	ldi	r25, 0x00	; 0

000001dc <.Loc.13>:
     1dc:	27 e6       	ldi	r18, 0x67	; 103
     1de:	fc 01       	movw	r30, r24
     1e0:	20 83       	st	Z, r18

000001e2 <.Loc.14>:

    UCSR0B = (1 << RXEN0) |(1 << RXCIE0) |(1 << TXEN0) | (1 << TXCIE0);
     1e2:	81 ec       	ldi	r24, 0xC1	; 193
     1e4:	90 e0       	ldi	r25, 0x00	; 0

000001e6 <.Loc.15>:
     1e6:	28 ed       	ldi	r18, 0xD8	; 216
     1e8:	fc 01       	movw	r30, r24
     1ea:	20 83       	st	Z, r18

000001ec <.Loc.16>:
    UCSR0C = (1 << UCSZ01) | (1 << UCSZ00);
     1ec:	82 ec       	ldi	r24, 0xC2	; 194
     1ee:	90 e0       	ldi	r25, 0x00	; 0

000001f0 <.Loc.17>:
     1f0:	26 e0       	ldi	r18, 0x06	; 6
     1f2:	fc 01       	movw	r30, r24
     1f4:	20 83       	st	Z, r18

000001f6 <.Loc.18>:

    sei();
     1f6:	78 94       	sei

000001f8 <.Loc.19>:
}
     1f8:	00 00       	nop
     1fa:	df 91       	pop	r29
     1fc:	cf 91       	pop	r28
     1fe:	08 95       	ret

00000200 <rechtdoorrijden>:
volatile int timerteller = 0;
volatile int timertellerbak = 0;
volatile int bakvar = 0;

void rechtdoorrijden()
{
     200:	cf 93       	push	r28
     202:	df 93       	push	r29
     204:	cd b7       	in	r28, 0x3d	; 61
     206:	de b7       	in	r29, 0x3e	; 62

00000208 <.Loc.1>:
    PORT &= ~(1 << PIN11);
     208:	82 e2       	ldi	r24, 0x22	; 34
     20a:	90 e0       	ldi	r25, 0x00	; 0
     20c:	fc 01       	movw	r30, r24
     20e:	20 81       	ld	r18, Z

00000210 <.Loc.2>:
     210:	82 e2       	ldi	r24, 0x22	; 34
     212:	90 e0       	ldi	r25, 0x00	; 0

00000214 <.Loc.3>:
     214:	2f 7b       	andi	r18, 0xBF	; 191
     216:	fc 01       	movw	r30, r24
     218:	20 83       	st	Z, r18

0000021a <.Loc.4>:
    PORT |= (1 << PIN12);
     21a:	82 e2       	ldi	r24, 0x22	; 34
     21c:	90 e0       	ldi	r25, 0x00	; 0
     21e:	fc 01       	movw	r30, r24
     220:	20 81       	ld	r18, Z
     222:	82 e2       	ldi	r24, 0x22	; 34
     224:	90 e0       	ldi	r25, 0x00	; 0

00000226 <.Loc.5>:
     226:	20 62       	ori	r18, 0x20	; 32
     228:	fc 01       	movw	r30, r24
     22a:	20 83       	st	Z, r18

0000022c <.Loc.6>:
    PORT |= (1 << PIN21);
     22c:	82 e2       	ldi	r24, 0x22	; 34
     22e:	90 e0       	ldi	r25, 0x00	; 0
     230:	fc 01       	movw	r30, r24
     232:	20 81       	ld	r18, Z
     234:	82 e2       	ldi	r24, 0x22	; 34
     236:	90 e0       	ldi	r25, 0x00	; 0

00000238 <.Loc.7>:
     238:	20 61       	ori	r18, 0x10	; 16
     23a:	fc 01       	movw	r30, r24
     23c:	20 83       	st	Z, r18

0000023e <.Loc.8>:
    PORT &= ~(1 << PIN22);
     23e:	82 e2       	ldi	r24, 0x22	; 34
     240:	90 e0       	ldi	r25, 0x00	; 0
     242:	fc 01       	movw	r30, r24
     244:	20 81       	ld	r18, Z

00000246 <.Loc.9>:
     246:	82 e2       	ldi	r24, 0x22	; 34
     248:	90 e0       	ldi	r25, 0x00	; 0

0000024a <.Loc.10>:
     24a:	27 7f       	andi	r18, 0xF7	; 247
     24c:	fc 01       	movw	r30, r24
     24e:	20 83       	st	Z, r18

00000250 <.Loc.11>:
}
     250:	00 00       	nop
     252:	df 91       	pop	r29
     254:	cf 91       	pop	r28
     256:	08 95       	ret

00000258 <achteruitrijden>:

void achteruitrijden()
{
     258:	cf 93       	push	r28
     25a:	df 93       	push	r29
     25c:	cd b7       	in	r28, 0x3d	; 61
     25e:	de b7       	in	r29, 0x3e	; 62

00000260 <.Loc.13>:
    PORT |= (1 << PIN11);
     260:	82 e2       	ldi	r24, 0x22	; 34
     262:	90 e0       	ldi	r25, 0x00	; 0
     264:	fc 01       	movw	r30, r24
     266:	20 81       	ld	r18, Z
     268:	82 e2       	ldi	r24, 0x22	; 34
     26a:	90 e0       	ldi	r25, 0x00	; 0

0000026c <.Loc.14>:
     26c:	20 64       	ori	r18, 0x40	; 64
     26e:	fc 01       	movw	r30, r24
     270:	20 83       	st	Z, r18

00000272 <.Loc.15>:
    PORT &= ~(1 << PIN12);
     272:	82 e2       	ldi	r24, 0x22	; 34
     274:	90 e0       	ldi	r25, 0x00	; 0
     276:	fc 01       	movw	r30, r24
     278:	20 81       	ld	r18, Z

0000027a <.Loc.16>:
     27a:	82 e2       	ldi	r24, 0x22	; 34
     27c:	90 e0       	ldi	r25, 0x00	; 0

0000027e <.Loc.17>:
     27e:	2f 7d       	andi	r18, 0xDF	; 223
     280:	fc 01       	movw	r30, r24
     282:	20 83       	st	Z, r18

00000284 <.Loc.18>:
    PORT &= ~(1 << PIN21);
     284:	82 e2       	ldi	r24, 0x22	; 34
     286:	90 e0       	ldi	r25, 0x00	; 0
     288:	fc 01       	movw	r30, r24
     28a:	20 81       	ld	r18, Z

0000028c <.Loc.19>:
     28c:	82 e2       	ldi	r24, 0x22	; 34
     28e:	90 e0       	ldi	r25, 0x00	; 0

00000290 <.Loc.20>:
     290:	2f 7e       	andi	r18, 0xEF	; 239
     292:	fc 01       	movw	r30, r24
     294:	20 83       	st	Z, r18

00000296 <.Loc.21>:
    PORT |= (1 << PIN22);
     296:	82 e2       	ldi	r24, 0x22	; 34
     298:	90 e0       	ldi	r25, 0x00	; 0
     29a:	fc 01       	movw	r30, r24
     29c:	20 81       	ld	r18, Z
     29e:	82 e2       	ldi	r24, 0x22	; 34
     2a0:	90 e0       	ldi	r25, 0x00	; 0

000002a2 <.Loc.22>:
     2a2:	28 60       	ori	r18, 0x08	; 8
     2a4:	fc 01       	movw	r30, r24
     2a6:	20 83       	st	Z, r18

000002a8 <.Loc.23>:
}
     2a8:	00 00       	nop
     2aa:	df 91       	pop	r29
     2ac:	cf 91       	pop	r28
     2ae:	08 95       	ret

000002b0 <naarrechtsrijden>:

void naarrechtsrijden()
{
     2b0:	cf 93       	push	r28
     2b2:	df 93       	push	r29
     2b4:	cd b7       	in	r28, 0x3d	; 61
     2b6:	de b7       	in	r29, 0x3e	; 62

000002b8 <.Loc.25>:
    PORT &= ~(1 << PIN12);
     2b8:	82 e2       	ldi	r24, 0x22	; 34
     2ba:	90 e0       	ldi	r25, 0x00	; 0
     2bc:	fc 01       	movw	r30, r24
     2be:	20 81       	ld	r18, Z

000002c0 <.Loc.26>:
     2c0:	82 e2       	ldi	r24, 0x22	; 34
     2c2:	90 e0       	ldi	r25, 0x00	; 0

000002c4 <.Loc.27>:
     2c4:	2f 7d       	andi	r18, 0xDF	; 223
     2c6:	fc 01       	movw	r30, r24
     2c8:	20 83       	st	Z, r18

000002ca <.Loc.28>:
    PORT |= (1 << PIN11);
     2ca:	82 e2       	ldi	r24, 0x22	; 34
     2cc:	90 e0       	ldi	r25, 0x00	; 0
     2ce:	fc 01       	movw	r30, r24
     2d0:	20 81       	ld	r18, Z
     2d2:	82 e2       	ldi	r24, 0x22	; 34
     2d4:	90 e0       	ldi	r25, 0x00	; 0

000002d6 <.Loc.29>:
     2d6:	20 64       	ori	r18, 0x40	; 64
     2d8:	fc 01       	movw	r30, r24
     2da:	20 83       	st	Z, r18

000002dc <.Loc.30>:
    PORT &= ~(1 << PIN22);
     2dc:	82 e2       	ldi	r24, 0x22	; 34
     2de:	90 e0       	ldi	r25, 0x00	; 0
     2e0:	fc 01       	movw	r30, r24
     2e2:	20 81       	ld	r18, Z

000002e4 <.Loc.31>:
     2e4:	82 e2       	ldi	r24, 0x22	; 34
     2e6:	90 e0       	ldi	r25, 0x00	; 0

000002e8 <.Loc.32>:
     2e8:	27 7f       	andi	r18, 0xF7	; 247
     2ea:	fc 01       	movw	r30, r24
     2ec:	20 83       	st	Z, r18

000002ee <.Loc.33>:
    PORT |= (1 << PIN21);
     2ee:	82 e2       	ldi	r24, 0x22	; 34
     2f0:	90 e0       	ldi	r25, 0x00	; 0
     2f2:	fc 01       	movw	r30, r24
     2f4:	20 81       	ld	r18, Z
     2f6:	82 e2       	ldi	r24, 0x22	; 34
     2f8:	90 e0       	ldi	r25, 0x00	; 0

000002fa <.Loc.34>:
     2fa:	20 61       	ori	r18, 0x10	; 16
     2fc:	fc 01       	movw	r30, r24
     2fe:	20 83       	st	Z, r18

00000300 <.Loc.35>:
}
     300:	00 00       	nop
     302:	df 91       	pop	r29
     304:	cf 91       	pop	r28
     306:	08 95       	ret

00000308 <naarlinkssrijden>:

void naarlinkssrijden()
{
     308:	cf 93       	push	r28
     30a:	df 93       	push	r29
     30c:	cd b7       	in	r28, 0x3d	; 61
     30e:	de b7       	in	r29, 0x3e	; 62

00000310 <.Loc.37>:
    PORT |= (1 << PIN12);
     310:	82 e2       	ldi	r24, 0x22	; 34
     312:	90 e0       	ldi	r25, 0x00	; 0
     314:	fc 01       	movw	r30, r24
     316:	20 81       	ld	r18, Z
     318:	82 e2       	ldi	r24, 0x22	; 34
     31a:	90 e0       	ldi	r25, 0x00	; 0

0000031c <.Loc.38>:
     31c:	20 62       	ori	r18, 0x20	; 32
     31e:	fc 01       	movw	r30, r24
     320:	20 83       	st	Z, r18

00000322 <.Loc.39>:
    PORT &= ~(1 << PIN11);
     322:	82 e2       	ldi	r24, 0x22	; 34
     324:	90 e0       	ldi	r25, 0x00	; 0
     326:	fc 01       	movw	r30, r24
     328:	20 81       	ld	r18, Z

0000032a <.Loc.40>:
     32a:	82 e2       	ldi	r24, 0x22	; 34
     32c:	90 e0       	ldi	r25, 0x00	; 0

0000032e <.Loc.41>:
     32e:	2f 7b       	andi	r18, 0xBF	; 191
     330:	fc 01       	movw	r30, r24
     332:	20 83       	st	Z, r18

00000334 <.Loc.42>:
    PORT |= (1 << PIN22);
     334:	82 e2       	ldi	r24, 0x22	; 34
     336:	90 e0       	ldi	r25, 0x00	; 0
     338:	fc 01       	movw	r30, r24
     33a:	20 81       	ld	r18, Z
     33c:	82 e2       	ldi	r24, 0x22	; 34
     33e:	90 e0       	ldi	r25, 0x00	; 0

00000340 <.Loc.43>:
     340:	28 60       	ori	r18, 0x08	; 8
     342:	fc 01       	movw	r30, r24
     344:	20 83       	st	Z, r18

00000346 <.Loc.44>:
    PORT &= ~(1 << PIN21);
     346:	82 e2       	ldi	r24, 0x22	; 34
     348:	90 e0       	ldi	r25, 0x00	; 0
     34a:	fc 01       	movw	r30, r24
     34c:	20 81       	ld	r18, Z

0000034e <.Loc.45>:
     34e:	82 e2       	ldi	r24, 0x22	; 34
     350:	90 e0       	ldi	r25, 0x00	; 0

00000352 <.Loc.46>:
     352:	2f 7e       	andi	r18, 0xEF	; 239
     354:	fc 01       	movw	r30, r24
     356:	20 83       	st	Z, r18

00000358 <.Loc.47>:
}
     358:	00 00       	nop
     35a:	df 91       	pop	r29
     35c:	cf 91       	pop	r28
     35e:	08 95       	ret

00000360 <signaal_geven>:

void signaal_geven()
{
     360:	cf 93       	push	r28
     362:	df 93       	push	r29
     364:	cd b7       	in	r28, 0x3d	; 61
     366:	de b7       	in	r29, 0x3e	; 62
     368:	a2 97       	sbiw	r28, 0x22	; 34
     36a:	0f b6       	in	r0, 0x3f	; 63
     36c:	f8 94       	cli
     36e:	de bf       	out	0x3e, r29	; 62
     370:	0f be       	out	0x3f, r0	; 63
     372:	cd bf       	out	0x3d, r28	; 61

00000374 <.Loc.49>:
    PORT_LED |= (1<<LED_1);         // LED 1 aan
     374:	82 e0       	ldi	r24, 0x02	; 2
     376:	91 e0       	ldi	r25, 0x01	; 1
     378:	dc 01       	movw	r26, r24
     37a:	2c 91       	ld	r18, X
     37c:	82 e0       	ldi	r24, 0x02	; 2
     37e:	91 e0       	ldi	r25, 0x01	; 1

00000380 <.Loc.50>:
     380:	20 61       	ori	r18, 0x10	; 16
     382:	fc 01       	movw	r30, r24
     384:	20 83       	st	Z, r18

00000386 <.Loc.51>:
    PORT_LED &= ~(1<<LED_2);        // LED 2 uit
     386:	82 e0       	ldi	r24, 0x02	; 2
     388:	91 e0       	ldi	r25, 0x01	; 1
     38a:	dc 01       	movw	r26, r24
     38c:	2c 91       	ld	r18, X

0000038e <.Loc.52>:
     38e:	82 e0       	ldi	r24, 0x02	; 2
     390:	91 e0       	ldi	r25, 0x01	; 1

00000392 <.Loc.53>:
     392:	2f 7d       	andi	r18, 0xDF	; 223
     394:	fc 01       	movw	r30, r24
     396:	20 83       	st	Z, r18

00000398 <.Loc.54>:
    PORT_buzzer |= (1<<buzzer);     // buzzer aan
     398:	82 e0       	ldi	r24, 0x02	; 2
     39a:	91 e0       	ldi	r25, 0x01	; 1
     39c:	dc 01       	movw	r26, r24
     39e:	2c 91       	ld	r18, X
     3a0:	82 e0       	ldi	r24, 0x02	; 2
     3a2:	91 e0       	ldi	r25, 0x01	; 1

000003a4 <.Loc.55>:
     3a4:	28 60       	ori	r18, 0x08	; 8
     3a6:	fc 01       	movw	r30, r24
     3a8:	20 83       	st	Z, r18
     3aa:	80 e0       	ldi	r24, 0x00	; 0
     3ac:	90 e0       	ldi	r25, 0x00	; 0
     3ae:	aa ef       	ldi	r26, 0xFA	; 250
     3b0:	b3 e4       	ldi	r27, 0x43	; 67
     3b2:	89 83       	std	Y+1, r24	; 0x01
     3b4:	9a 83       	std	Y+2, r25	; 0x02
     3b6:	ab 83       	std	Y+3, r26	; 0x03
     3b8:	bc 83       	std	Y+4, r27	; 0x04

000003ba <.LBB12>:

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     3ba:	20 e0       	ldi	r18, 0x00	; 0
     3bc:	30 e0       	ldi	r19, 0x00	; 0
     3be:	4a e7       	ldi	r20, 0x7A	; 122
     3c0:	55 e4       	ldi	r21, 0x45	; 69
     3c2:	69 81       	ldd	r22, Y+1	; 0x01
     3c4:	7a 81       	ldd	r23, Y+2	; 0x02
     3c6:	8b 81       	ldd	r24, Y+3	; 0x03
     3c8:	9c 81       	ldd	r25, Y+4	; 0x04
     3ca:	0e 94 c8 0f 	call	0x1f90	; 0x1f90 <__mulsf3>
     3ce:	6b 8b       	std	Y+19, r22	; 0x13
     3d0:	7c 8b       	std	Y+20, r23	; 0x14
     3d2:	8d 8b       	std	Y+21, r24	; 0x15
     3d4:	9e 8b       	std	Y+22, r25	; 0x16
     3d6:	8b 89       	ldd	r24, Y+19	; 0x13
     3d8:	9c 89       	ldd	r25, Y+20	; 0x14
     3da:	ad 89       	ldd	r26, Y+21	; 0x15
     3dc:	be 89       	ldd	r27, Y+22	; 0x16
     3de:	8d 83       	std	Y+5, r24	; 0x05
     3e0:	9e 83       	std	Y+6, r25	; 0x06
     3e2:	af 83       	std	Y+7, r26	; 0x07
     3e4:	b8 87       	std	Y+8, r27	; 0x08

000003e6 <.Loc.57>:
	if (__tmp < 1.0)
     3e6:	20 e0       	ldi	r18, 0x00	; 0
     3e8:	30 e0       	ldi	r19, 0x00	; 0
     3ea:	40 e8       	ldi	r20, 0x80	; 128
     3ec:	5f e3       	ldi	r21, 0x3F	; 63
     3ee:	6d 81       	ldd	r22, Y+5	; 0x05
     3f0:	7e 81       	ldd	r23, Y+6	; 0x06
     3f2:	8f 81       	ldd	r24, Y+7	; 0x07
     3f4:	98 85       	ldd	r25, Y+8	; 0x08
     3f6:	0e 94 64 0e 	call	0x1cc8	; 0x1cc8 <__cmpsf2>
     3fa:	88 23       	and	r24, r24
     3fc:	2c f4       	brge	.+10     	; 0x408 <.L16>

000003fe <.Loc.58>:
		__ticks = 1;
     3fe:	81 e0       	ldi	r24, 0x01	; 1
     400:	90 e0       	ldi	r25, 0x00	; 0
     402:	9a 87       	std	Y+10, r25	; 0x0a
     404:	89 87       	std	Y+9, r24	; 0x09
     406:	55 c0       	rjmp	.+170    	; 0x4b2 <.L8>

00000408 <.L16>:
	else if (__tmp > 65535)
     408:	20 e0       	ldi	r18, 0x00	; 0
     40a:	3f ef       	ldi	r19, 0xFF	; 255
     40c:	4f e7       	ldi	r20, 0x7F	; 127
     40e:	57 e4       	ldi	r21, 0x47	; 71
     410:	6d 81       	ldd	r22, Y+5	; 0x05
     412:	7e 81       	ldd	r23, Y+6	; 0x06
     414:	8f 81       	ldd	r24, Y+7	; 0x07
     416:	98 85       	ldd	r25, Y+8	; 0x08
     418:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <__gesf2>
     41c:	88 23       	and	r24, r24
     41e:	d9 f1       	breq	.+118    	; 0x496 <.L17>
     420:	d4 f1       	brlt	.+116    	; 0x496 <.L17>

00000422 <.Loc.60>:
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     422:	20 e0       	ldi	r18, 0x00	; 0
     424:	30 e0       	ldi	r19, 0x00	; 0
     426:	40 e2       	ldi	r20, 0x20	; 32
     428:	51 e4       	ldi	r21, 0x41	; 65
     42a:	69 81       	ldd	r22, Y+1	; 0x01
     42c:	7a 81       	ldd	r23, Y+2	; 0x02
     42e:	8b 81       	ldd	r24, Y+3	; 0x03
     430:	9c 81       	ldd	r25, Y+4	; 0x04
     432:	0e 94 c8 0f 	call	0x1f90	; 0x1f90 <__mulsf3>
     436:	6f 8b       	std	Y+23, r22	; 0x17
     438:	78 8f       	std	Y+24, r23	; 0x18
     43a:	89 8f       	std	Y+25, r24	; 0x19
     43c:	9a 8f       	std	Y+26, r25	; 0x1a
     43e:	8f 89       	ldd	r24, Y+23	; 0x17
     440:	98 8d       	ldd	r25, Y+24	; 0x18
     442:	a9 8d       	ldd	r26, Y+25	; 0x19
     444:	ba 8d       	ldd	r27, Y+26	; 0x1a
     446:	8f 87       	std	Y+15, r24	; 0x0f
     448:	98 8b       	std	Y+16, r25	; 0x10
     44a:	a9 8b       	std	Y+17, r26	; 0x11
     44c:	ba 8b       	std	Y+18, r27	; 0x12

0000044e <.Loc.61>:
     44e:	6f 85       	ldd	r22, Y+15	; 0x0f
     450:	78 89       	ldd	r23, Y+16	; 0x10
     452:	89 89       	ldd	r24, Y+17	; 0x11
     454:	9a 89       	ldd	r25, Y+18	; 0x12
     456:	0e 94 e2 0e 	call	0x1dc4	; 0x1dc4 <__fixunssfsi>
     45a:	6b 8f       	std	Y+27, r22	; 0x1b
     45c:	7c 8f       	std	Y+28, r23	; 0x1c
     45e:	8d 8f       	std	Y+29, r24	; 0x1d
     460:	9e 8f       	std	Y+30, r25	; 0x1e
     462:	ab 8d       	ldd	r26, Y+27	; 0x1b
     464:	bc 8d       	ldd	r27, Y+28	; 0x1c
     466:	ba 87       	std	Y+10, r27	; 0x0a
     468:	a9 87       	std	Y+9, r26	; 0x09

0000046a <.Loc.62>:
		while(__ticks)
     46a:	10 c0       	rjmp	.+32     	; 0x48c <.L11>

0000046c <.L12>:
     46c:	80 e9       	ldi	r24, 0x90	; 144
     46e:	91 e0       	ldi	r25, 0x01	; 1
     470:	9c 87       	std	Y+12, r25	; 0x0c
     472:	8b 87       	std	Y+11, r24	; 0x0b

00000474 <.LBB14>:
		"sbc %B0,__zero_reg__"    "\n\t"
		"brne 1b"
		: "+d" (__count)
	);
#else
	__asm__ volatile (
     474:	8b 85       	ldd	r24, Y+11	; 0x0b
     476:	9c 85       	ldd	r25, Y+12	; 0x0c

00000478 <.L1^B1>:
     478:	01 97       	sbiw	r24, 0x01	; 1
     47a:	f1 f7       	brne	.-4      	; 0x478 <.L1^B1>
     47c:	9c 87       	std	Y+12, r25	; 0x0c
     47e:	8b 87       	std	Y+11, r24	; 0x0b

00000480 <.Loc.64>:
	...

00000482 <.LBE14>:
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     482:	89 85       	ldd	r24, Y+9	; 0x09
     484:	9a 85       	ldd	r25, Y+10	; 0x0a
     486:	01 97       	sbiw	r24, 0x01	; 1
     488:	9a 87       	std	Y+10, r25	; 0x0a
     48a:	89 87       	std	Y+9, r24	; 0x09

0000048c <.L11>:
		while(__ticks)
     48c:	89 85       	ldd	r24, Y+9	; 0x09
     48e:	9a 85       	ldd	r25, Y+10	; 0x0a
     490:	00 97       	sbiw	r24, 0x00	; 0
     492:	61 f7       	brne	.-40     	; 0x46c <.L12>

00000494 <.Loc.67>:
		}
		return;
     494:	19 c0       	rjmp	.+50     	; 0x4c8 <.L13>

00000496 <.L17>:
	}
	else
		__ticks = (uint16_t)__tmp;
     496:	6d 81       	ldd	r22, Y+5	; 0x05
     498:	7e 81       	ldd	r23, Y+6	; 0x06
     49a:	8f 81       	ldd	r24, Y+7	; 0x07
     49c:	98 85       	ldd	r25, Y+8	; 0x08
     49e:	0e 94 e2 0e 	call	0x1dc4	; 0x1dc4 <__fixunssfsi>
     4a2:	6f 8f       	std	Y+31, r22	; 0x1f
     4a4:	78 a3       	std	Y+32, r23	; 0x20
     4a6:	89 a3       	std	Y+33, r24	; 0x21
     4a8:	9a a3       	std	Y+34, r25	; 0x22
     4aa:	ef 8d       	ldd	r30, Y+31	; 0x1f
     4ac:	f8 a1       	ldd	r31, Y+32	; 0x20
     4ae:	fa 87       	std	Y+10, r31	; 0x0a
     4b0:	e9 87       	std	Y+9, r30	; 0x09

000004b2 <.L8>:
     4b2:	89 85       	ldd	r24, Y+9	; 0x09
     4b4:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b6:	9e 87       	std	Y+14, r25	; 0x0e
     4b8:	8d 87       	std	Y+13, r24	; 0x0d

000004ba <.LBB16>:
     4ba:	8d 85       	ldd	r24, Y+13	; 0x0d
     4bc:	9e 85       	ldd	r25, Y+14	; 0x0e

000004be <.L1^B2>:
     4be:	01 97       	sbiw	r24, 0x01	; 1
     4c0:	f1 f7       	brne	.-4      	; 0x4be <.L1^B2>
     4c2:	9e 87       	std	Y+14, r25	; 0x0e
     4c4:	8d 87       	std	Y+13, r24	; 0x0d

000004c6 <.Loc.70>:
	...

000004c8 <.L13>:
    _delay_ms(500);
    PORT_LED |= (1<<LED_2);         // LED 2 aan
     4c8:	82 e0       	ldi	r24, 0x02	; 2
     4ca:	91 e0       	ldi	r25, 0x01	; 1
     4cc:	dc 01       	movw	r26, r24
     4ce:	2c 91       	ld	r18, X
     4d0:	82 e0       	ldi	r24, 0x02	; 2
     4d2:	91 e0       	ldi	r25, 0x01	; 1

000004d4 <.Loc.72>:
     4d4:	20 62       	ori	r18, 0x20	; 32
     4d6:	fc 01       	movw	r30, r24
     4d8:	20 83       	st	Z, r18

000004da <.Loc.73>:
    PORT_LED &= ~(1<<LED_1);        // LED 1 uit
     4da:	82 e0       	ldi	r24, 0x02	; 2
     4dc:	91 e0       	ldi	r25, 0x01	; 1
     4de:	dc 01       	movw	r26, r24
     4e0:	2c 91       	ld	r18, X

000004e2 <.Loc.74>:
     4e2:	82 e0       	ldi	r24, 0x02	; 2
     4e4:	91 e0       	ldi	r25, 0x01	; 1

000004e6 <.Loc.75>:
     4e6:	2f 7e       	andi	r18, 0xEF	; 239
     4e8:	fc 01       	movw	r30, r24
     4ea:	20 83       	st	Z, r18

000004ec <.Loc.76>:
    PORT_buzzer &= ~(1<<buzzer);    // buzzer uit
     4ec:	82 e0       	ldi	r24, 0x02	; 2
     4ee:	91 e0       	ldi	r25, 0x01	; 1
     4f0:	dc 01       	movw	r26, r24
     4f2:	2c 91       	ld	r18, X

000004f4 <.Loc.77>:
     4f4:	82 e0       	ldi	r24, 0x02	; 2
     4f6:	91 e0       	ldi	r25, 0x01	; 1

000004f8 <.Loc.78>:
     4f8:	27 7f       	andi	r18, 0xF7	; 247
     4fa:	fc 01       	movw	r30, r24
     4fc:	20 83       	st	Z, r18

000004fe <.Loc.79>:
}
     4fe:	00 00       	nop
     500:	a2 96       	adiw	r28, 0x22	; 34
     502:	0f b6       	in	r0, 0x3f	; 63
     504:	f8 94       	cli
     506:	de bf       	out	0x3e, r29	; 62
     508:	0f be       	out	0x3f, r0	; 63
     50a:	cd bf       	out	0x3d, r28	; 61
     50c:	df 91       	pop	r29
     50e:	cf 91       	pop	r28
     510:	08 95       	ret

00000512 <h_bridgeR_set_percentage>:

void h_bridgeR_set_percentage(signed char percentage)
{
     512:	0f 93       	push	r16
     514:	1f 93       	push	r17
     516:	cf 93       	push	r28
     518:	df 93       	push	r29
     51a:	00 d0       	rcall	.+0      	; 0x51c <L0^A>

0000051c <L0^A>:
     51c:	0f 92       	push	r0
     51e:	0f 92       	push	r0
     520:	cd b7       	in	r28, 0x3d	; 61
     522:	de b7       	in	r29, 0x3e	; 62
     524:	89 83       	std	Y+1, r24	; 0x01

00000526 <.Loc.81>:
	if (percentage >= 0 && percentage <= 100)
     526:	89 81       	ldd	r24, Y+1	; 0x01
     528:	88 23       	and	r24, r24
     52a:	3c f1       	brlt	.+78     	; 0x57a <.L20>

0000052c <.Loc.82>:
     52c:	89 81       	ldd	r24, Y+1	; 0x01
     52e:	84 36       	cpi	r24, 0x64	; 100
     530:	09 f0       	breq	.+2      	; 0x534 <.Loc.83>

00000532 <L0^A>:
     532:	1c f5       	brge	.+70     	; 0x57a <.L20>

00000534 <.Loc.83>:
	{
			OCR1A = (65536*percentage)/100;
     534:	89 81       	ldd	r24, Y+1	; 0x01
     536:	08 2e       	mov	r0, r24
     538:	00 0c       	add	r0, r0
     53a:	99 0b       	sbc	r25, r25
     53c:	aa 0b       	sbc	r26, r26
     53e:	bb 0b       	sbc	r27, r27
     540:	ac 01       	movw	r20, r24
     542:	33 27       	eor	r19, r19
     544:	22 27       	eor	r18, r18
     546:	2a 83       	std	Y+2, r18	; 0x02
     548:	3b 83       	std	Y+3, r19	; 0x03
     54a:	4c 83       	std	Y+4, r20	; 0x04
     54c:	5d 83       	std	Y+5, r21	; 0x05

0000054e <.Loc.84>:
     54e:	04 e6       	ldi	r16, 0x64	; 100
     550:	10 e0       	ldi	r17, 0x00	; 0
     552:	20 e0       	ldi	r18, 0x00	; 0
     554:	30 e0       	ldi	r19, 0x00	; 0
     556:	6a 81       	ldd	r22, Y+2	; 0x02
     558:	7b 81       	ldd	r23, Y+3	; 0x03
     55a:	8c 81       	ldd	r24, Y+4	; 0x04
     55c:	9d 81       	ldd	r25, Y+5	; 0x05
     55e:	a9 01       	movw	r20, r18
     560:	98 01       	movw	r18, r16
     562:	0e 94 0c 0e 	call	0x1c18	; 0x1c18 <__divmodsi4>
     566:	da 01       	movw	r26, r20
     568:	c9 01       	movw	r24, r18
     56a:	ac 01       	movw	r20, r24
     56c:	bd 01       	movw	r22, r26

0000056e <.Loc.85>:
     56e:	88 e8       	ldi	r24, 0x88	; 136
     570:	90 e0       	ldi	r25, 0x00	; 0

00000572 <.Loc.86>:
     572:	9a 01       	movw	r18, r20
     574:	fc 01       	movw	r30, r24
     576:	31 83       	std	Z+1, r19	; 0x01
     578:	20 83       	st	Z, r18

0000057a <.L20>:
	}
}
     57a:	00 00       	nop
     57c:	0f 90       	pop	r0
     57e:	0f 90       	pop	r0
     580:	0f 90       	pop	r0
     582:	0f 90       	pop	r0
     584:	0f 90       	pop	r0
     586:	df 91       	pop	r29
     588:	cf 91       	pop	r28
     58a:	1f 91       	pop	r17
     58c:	0f 91       	pop	r16
     58e:	08 95       	ret

00000590 <h_bridgeL_set_percentage>:

void h_bridgeL_set_percentage(signed char percentage)
{
     590:	0f 93       	push	r16
     592:	1f 93       	push	r17
     594:	cf 93       	push	r28
     596:	df 93       	push	r29
     598:	00 d0       	rcall	.+0      	; 0x59a <L0^A>

0000059a <L0^A>:
     59a:	0f 92       	push	r0
     59c:	0f 92       	push	r0
     59e:	cd b7       	in	r28, 0x3d	; 61
     5a0:	de b7       	in	r29, 0x3e	; 62
     5a2:	89 83       	std	Y+1, r24	; 0x01

000005a4 <.Loc.89>:
	if (percentage >= 0 && percentage <= 100)
     5a4:	89 81       	ldd	r24, Y+1	; 0x01
     5a6:	88 23       	and	r24, r24
     5a8:	3c f1       	brlt	.+78     	; 0x5f8 <.L23>

000005aa <.Loc.90>:
     5aa:	89 81       	ldd	r24, Y+1	; 0x01
     5ac:	84 36       	cpi	r24, 0x64	; 100
     5ae:	09 f0       	breq	.+2      	; 0x5b2 <.Loc.91>

000005b0 <L0^A>:
     5b0:	1c f5       	brge	.+70     	; 0x5f8 <.L23>

000005b2 <.Loc.91>:
	{
			OCR3A = (65536*percentage)/100;
     5b2:	89 81       	ldd	r24, Y+1	; 0x01
     5b4:	08 2e       	mov	r0, r24
     5b6:	00 0c       	add	r0, r0
     5b8:	99 0b       	sbc	r25, r25
     5ba:	aa 0b       	sbc	r26, r26
     5bc:	bb 0b       	sbc	r27, r27
     5be:	ac 01       	movw	r20, r24
     5c0:	33 27       	eor	r19, r19
     5c2:	22 27       	eor	r18, r18
     5c4:	2a 83       	std	Y+2, r18	; 0x02
     5c6:	3b 83       	std	Y+3, r19	; 0x03
     5c8:	4c 83       	std	Y+4, r20	; 0x04
     5ca:	5d 83       	std	Y+5, r21	; 0x05

000005cc <.Loc.92>:
     5cc:	04 e6       	ldi	r16, 0x64	; 100
     5ce:	10 e0       	ldi	r17, 0x00	; 0
     5d0:	20 e0       	ldi	r18, 0x00	; 0
     5d2:	30 e0       	ldi	r19, 0x00	; 0
     5d4:	6a 81       	ldd	r22, Y+2	; 0x02
     5d6:	7b 81       	ldd	r23, Y+3	; 0x03
     5d8:	8c 81       	ldd	r24, Y+4	; 0x04
     5da:	9d 81       	ldd	r25, Y+5	; 0x05
     5dc:	a9 01       	movw	r20, r18
     5de:	98 01       	movw	r18, r16
     5e0:	0e 94 0c 0e 	call	0x1c18	; 0x1c18 <__divmodsi4>
     5e4:	da 01       	movw	r26, r20
     5e6:	c9 01       	movw	r24, r18
     5e8:	ac 01       	movw	r20, r24
     5ea:	bd 01       	movw	r22, r26

000005ec <.Loc.93>:
     5ec:	88 e9       	ldi	r24, 0x98	; 152
     5ee:	90 e0       	ldi	r25, 0x00	; 0

000005f0 <.Loc.94>:
     5f0:	9a 01       	movw	r18, r20
     5f2:	fc 01       	movw	r30, r24
     5f4:	31 83       	std	Z+1, r19	; 0x01
     5f6:	20 83       	st	Z, r18

000005f8 <.L23>:
	}
}
     5f8:	00 00       	nop
     5fa:	0f 90       	pop	r0
     5fc:	0f 90       	pop	r0
     5fe:	0f 90       	pop	r0
     600:	0f 90       	pop	r0
     602:	0f 90       	pop	r0
     604:	df 91       	pop	r29
     606:	cf 91       	pop	r28
     608:	1f 91       	pop	r17
     60a:	0f 91       	pop	r16
     60c:	08 95       	ret

0000060e <__vector_20>:

//H-brug PWMR
ISR(TIMER1_OVF_vect)
{
     60e:	1f 92       	push	r1
     610:	0f 92       	push	r0
     612:	0f b6       	in	r0, 0x3f	; 63
     614:	0f 92       	push	r0
     616:	11 24       	eor	r1, r1
     618:	0b b6       	in	r0, 0x3b	; 59
     61a:	0f 92       	push	r0
     61c:	2f 93       	push	r18
     61e:	3f 93       	push	r19
     620:	8f 93       	push	r24
     622:	9f 93       	push	r25
     624:	ef 93       	push	r30
     626:	ff 93       	push	r31
     628:	cf 93       	push	r28
     62a:	df 93       	push	r29
     62c:	cd b7       	in	r28, 0x3d	; 61
     62e:	de b7       	in	r29, 0x3e	; 62

00000630 <.Loc.97>:
    PORT ^= (1 << PEN1);
     630:	82 e2       	ldi	r24, 0x22	; 34
     632:	90 e0       	ldi	r25, 0x00	; 0
     634:	fc 01       	movw	r30, r24
     636:	30 81       	ld	r19, Z
     638:	82 e2       	ldi	r24, 0x22	; 34
     63a:	90 e0       	ldi	r25, 0x00	; 0

0000063c <.Loc.98>:
     63c:	20 e8       	ldi	r18, 0x80	; 128
     63e:	23 27       	eor	r18, r19
     640:	fc 01       	movw	r30, r24
     642:	20 83       	st	Z, r18

00000644 <.Loc.99>:
}
     644:	00 00       	nop
     646:	df 91       	pop	r29
     648:	cf 91       	pop	r28
     64a:	ff 91       	pop	r31
     64c:	ef 91       	pop	r30
     64e:	9f 91       	pop	r25
     650:	8f 91       	pop	r24
     652:	3f 91       	pop	r19
     654:	2f 91       	pop	r18
     656:	0f 90       	pop	r0
     658:	0b be       	out	0x3b, r0	; 59
     65a:	0f 90       	pop	r0
     65c:	0f be       	out	0x3f, r0	; 63
     65e:	0f 90       	pop	r0
     660:	1f 90       	pop	r1
     662:	18 95       	reti

00000664 <__vector_17>:
//H-brug PWMR
ISR(TIMER1_COMPA_vect)
{
     664:	1f 92       	push	r1
     666:	0f 92       	push	r0
     668:	0f b6       	in	r0, 0x3f	; 63
     66a:	0f 92       	push	r0
     66c:	11 24       	eor	r1, r1
     66e:	0b b6       	in	r0, 0x3b	; 59
     670:	0f 92       	push	r0
     672:	2f 93       	push	r18
     674:	8f 93       	push	r24
     676:	9f 93       	push	r25
     678:	ef 93       	push	r30
     67a:	ff 93       	push	r31
     67c:	cf 93       	push	r28
     67e:	df 93       	push	r29
     680:	cd b7       	in	r28, 0x3d	; 61
     682:	de b7       	in	r29, 0x3e	; 62

00000684 <.Loc.101>:
    PORT |= (1 << PEN1);
     684:	82 e2       	ldi	r24, 0x22	; 34
     686:	90 e0       	ldi	r25, 0x00	; 0
     688:	fc 01       	movw	r30, r24
     68a:	20 81       	ld	r18, Z
     68c:	82 e2       	ldi	r24, 0x22	; 34
     68e:	90 e0       	ldi	r25, 0x00	; 0

00000690 <.Loc.102>:
     690:	20 68       	ori	r18, 0x80	; 128
     692:	fc 01       	movw	r30, r24
     694:	20 83       	st	Z, r18

00000696 <.Loc.103>:
}
     696:	00 00       	nop
     698:	df 91       	pop	r29
     69a:	cf 91       	pop	r28
     69c:	ff 91       	pop	r31
     69e:	ef 91       	pop	r30
     6a0:	9f 91       	pop	r25
     6a2:	8f 91       	pop	r24
     6a4:	2f 91       	pop	r18
     6a6:	0f 90       	pop	r0
     6a8:	0b be       	out	0x3b, r0	; 59
     6aa:	0f 90       	pop	r0
     6ac:	0f be       	out	0x3f, r0	; 63
     6ae:	0f 90       	pop	r0
     6b0:	1f 90       	pop	r1
     6b2:	18 95       	reti

000006b4 <__vector_35>:

//H-brug PWML
ISR(TIMER3_OVF_vect)
{
     6b4:	1f 92       	push	r1
     6b6:	0f 92       	push	r0
     6b8:	0f b6       	in	r0, 0x3f	; 63
     6ba:	0f 92       	push	r0
     6bc:	11 24       	eor	r1, r1
     6be:	0b b6       	in	r0, 0x3b	; 59
     6c0:	0f 92       	push	r0
     6c2:	2f 93       	push	r18
     6c4:	3f 93       	push	r19
     6c6:	8f 93       	push	r24
     6c8:	9f 93       	push	r25
     6ca:	ef 93       	push	r30
     6cc:	ff 93       	push	r31
     6ce:	cf 93       	push	r28
     6d0:	df 93       	push	r29
     6d2:	cd b7       	in	r28, 0x3d	; 61
     6d4:	de b7       	in	r29, 0x3e	; 62

000006d6 <.Loc.105>:
    PORT ^= (1 << PEN2);
     6d6:	82 e2       	ldi	r24, 0x22	; 34
     6d8:	90 e0       	ldi	r25, 0x00	; 0
     6da:	fc 01       	movw	r30, r24
     6dc:	30 81       	ld	r19, Z
     6de:	82 e2       	ldi	r24, 0x22	; 34
     6e0:	90 e0       	ldi	r25, 0x00	; 0

000006e2 <.Loc.106>:
     6e2:	24 e0       	ldi	r18, 0x04	; 4
     6e4:	23 27       	eor	r18, r19
     6e6:	fc 01       	movw	r30, r24
     6e8:	20 83       	st	Z, r18

000006ea <.Loc.107>:
}
     6ea:	00 00       	nop
     6ec:	df 91       	pop	r29
     6ee:	cf 91       	pop	r28
     6f0:	ff 91       	pop	r31
     6f2:	ef 91       	pop	r30
     6f4:	9f 91       	pop	r25
     6f6:	8f 91       	pop	r24
     6f8:	3f 91       	pop	r19
     6fa:	2f 91       	pop	r18
     6fc:	0f 90       	pop	r0
     6fe:	0b be       	out	0x3b, r0	; 59
     700:	0f 90       	pop	r0
     702:	0f be       	out	0x3f, r0	; 63
     704:	0f 90       	pop	r0
     706:	1f 90       	pop	r1
     708:	18 95       	reti

0000070a <__vector_32>:
//H-brug PWML
ISR(TIMER3_COMPA_vect)
{
     70a:	1f 92       	push	r1
     70c:	0f 92       	push	r0
     70e:	0f b6       	in	r0, 0x3f	; 63
     710:	0f 92       	push	r0
     712:	11 24       	eor	r1, r1
     714:	0b b6       	in	r0, 0x3b	; 59
     716:	0f 92       	push	r0
     718:	2f 93       	push	r18
     71a:	8f 93       	push	r24
     71c:	9f 93       	push	r25
     71e:	ef 93       	push	r30
     720:	ff 93       	push	r31
     722:	cf 93       	push	r28
     724:	df 93       	push	r29
     726:	cd b7       	in	r28, 0x3d	; 61
     728:	de b7       	in	r29, 0x3e	; 62

0000072a <.Loc.109>:
    PORT |= (1 << PEN2);
     72a:	82 e2       	ldi	r24, 0x22	; 34
     72c:	90 e0       	ldi	r25, 0x00	; 0
     72e:	fc 01       	movw	r30, r24
     730:	20 81       	ld	r18, Z
     732:	82 e2       	ldi	r24, 0x22	; 34
     734:	90 e0       	ldi	r25, 0x00	; 0

00000736 <.Loc.110>:
     736:	24 60       	ori	r18, 0x04	; 4
     738:	fc 01       	movw	r30, r24
     73a:	20 83       	st	Z, r18

0000073c <.Loc.111>:
}
     73c:	00 00       	nop
     73e:	df 91       	pop	r29
     740:	cf 91       	pop	r28
     742:	ff 91       	pop	r31
     744:	ef 91       	pop	r30
     746:	9f 91       	pop	r25
     748:	8f 91       	pop	r24
     74a:	2f 91       	pop	r18
     74c:	0f 90       	pop	r0
     74e:	0b be       	out	0x3b, r0	; 59
     750:	0f 90       	pop	r0
     752:	0f be       	out	0x3f, r0	; 63
     754:	0f 90       	pop	r0
     756:	1f 90       	pop	r1
     758:	18 95       	reti

0000075a <__vector_23>:

//Timer Noodtoestand
ISR(TIMER0_OVF_vect)
{
     75a:	1f 92       	push	r1
     75c:	0f 92       	push	r0
     75e:	0f b6       	in	r0, 0x3f	; 63
     760:	0f 92       	push	r0
     762:	11 24       	eor	r1, r1
     764:	8f 93       	push	r24
     766:	9f 93       	push	r25
     768:	cf 93       	push	r28
     76a:	df 93       	push	r29
     76c:	cd b7       	in	r28, 0x3d	; 61
     76e:	de b7       	in	r29, 0x3e	; 62

00000770 <.Loc.113>:
    timerteller ++;
     770:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <timerteller>
     774:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <timerteller+0x1>
     778:	01 96       	adiw	r24, 0x01	; 1
     77a:	90 93 27 02 	sts	0x0227, r25	; 0x800227 <timerteller+0x1>
     77e:	80 93 26 02 	sts	0x0226, r24	; 0x800226 <timerteller>

00000782 <.Loc.114>:
}
     782:	00 00       	nop
     784:	df 91       	pop	r29
     786:	cf 91       	pop	r28
     788:	9f 91       	pop	r25
     78a:	8f 91       	pop	r24
     78c:	0f 90       	pop	r0
     78e:	0f be       	out	0x3f, r0	; 63
     790:	0f 90       	pop	r0
     792:	1f 90       	pop	r1
     794:	18 95       	reti

00000796 <__vector_45>:

//Timer Bak detectie
ISR(TIMER4_OVF_vect)
{
     796:	1f 92       	push	r1
     798:	0f 92       	push	r0
     79a:	0f b6       	in	r0, 0x3f	; 63
     79c:	0f 92       	push	r0
     79e:	11 24       	eor	r1, r1
     7a0:	0b b6       	in	r0, 0x3b	; 59
     7a2:	0f 92       	push	r0
     7a4:	8f 93       	push	r24
     7a6:	9f 93       	push	r25
     7a8:	ef 93       	push	r30
     7aa:	ff 93       	push	r31
     7ac:	cf 93       	push	r28
     7ae:	df 93       	push	r29
     7b0:	cd b7       	in	r28, 0x3d	; 61
     7b2:	de b7       	in	r29, 0x3e	; 62

000007b4 <.Loc.116>:
    if(timertellerbak >= 2)
     7b4:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <timertellerbak>
     7b8:	90 91 29 02 	lds	r25, 0x0229	; 0x800229 <timertellerbak+0x1>

000007bc <.Loc.117>:
     7bc:	81 30       	cpi	r24, 0x01	; 1
     7be:	91 05       	cpc	r25, r1
     7c0:	69 f0       	breq	.+26     	; 0x7dc <.L30>
     7c2:	64 f0       	brlt	.+24     	; 0x7dc <.L30>

000007c4 <.Loc.118>:
    {
        timertellerbak = 0;
     7c4:	10 92 29 02 	sts	0x0229, r1	; 0x800229 <timertellerbak+0x1>
     7c8:	10 92 28 02 	sts	0x0228, r1	; 0x800228 <timertellerbak>

000007cc <.Loc.119>:
        bakvar = 0;
     7cc:	10 92 2b 02 	sts	0x022B, r1	; 0x80022b <bakvar+0x1>
     7d0:	10 92 2a 02 	sts	0x022A, r1	; 0x80022a <bakvar>

000007d4 <.Loc.120>:
        TCCR4B = 0;
     7d4:	81 ea       	ldi	r24, 0xA1	; 161
     7d6:	90 e0       	ldi	r25, 0x00	; 0

000007d8 <.Loc.121>:
     7d8:	fc 01       	movw	r30, r24
     7da:	10 82       	st	Z, r1

000007dc <.L30>:
    }
    timertellerbak ++;
     7dc:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <timertellerbak>
     7e0:	90 91 29 02 	lds	r25, 0x0229	; 0x800229 <timertellerbak+0x1>
     7e4:	01 96       	adiw	r24, 0x01	; 1
     7e6:	90 93 29 02 	sts	0x0229, r25	; 0x800229 <timertellerbak+0x1>
     7ea:	80 93 28 02 	sts	0x0228, r24	; 0x800228 <timertellerbak>

000007ee <.Loc.123>:
}
     7ee:	00 00       	nop
     7f0:	df 91       	pop	r29
     7f2:	cf 91       	pop	r28
     7f4:	ff 91       	pop	r31
     7f6:	ef 91       	pop	r30
     7f8:	9f 91       	pop	r25
     7fa:	8f 91       	pop	r24
     7fc:	0f 90       	pop	r0
     7fe:	0b be       	out	0x3b, r0	; 59
     800:	0f 90       	pop	r0
     802:	0f be       	out	0x3f, r0	; 63
     804:	0f 90       	pop	r0
     806:	1f 90       	pop	r1
     808:	18 95       	reti

0000080a <main>:
7: Noodknop ingedrukt
8: Noodknop uitgedrukt
*/

int main(void)
{
     80a:	cf 93       	push	r28
     80c:	df 93       	push	r29
     80e:	cd b7       	in	r28, 0x3d	; 61
     810:	de b7       	in	r29, 0x3e	; 62
     812:	a6 97       	sbiw	r28, 0x26	; 38
     814:	0f b6       	in	r0, 0x3f	; 63
     816:	f8 94       	cli
     818:	de bf       	out	0x3e, r29	; 62
     81a:	0f be       	out	0x3f, r0	; 63
     81c:	cd bf       	out	0x3d, r28	; 61

0000081e <.Loc.1>:
    init();
     81e:	0e 94 82 07 	call	0xf04	; 0xf04 <init>

00000822 <.Loc.2>:
    init_display_meneer();
     822:	0e 94 56 0c 	call	0x18ac	; 0x18ac <init_display_meneer>

00000826 <.Loc.3>:
    initTimer();
     826:	0e 94 89 08 	call	0x1112	; 0x1112 <initTimer>

0000082a <.Loc.4>:
    int waarde;

    int toestand = 0;
     82a:	1a 82       	std	Y+2, r1	; 0x02
     82c:	19 82       	std	Y+1, r1	; 0x01

0000082e <.L46>:

    while(1)
    {
        waarde = GetDistance();
     82e:	0e 94 be 08 	call	0x117c	; 0x117c <GetDistance>
     832:	9c 83       	std	Y+4, r25	; 0x04
     834:	8b 83       	std	Y+3, r24	; 0x03

00000836 <.Loc.6>:
        //display_getal(waarde);

        if(Bluetooth_Getal == 2)//Bluetooth verbroken
     836:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <Bluetooth_Getal>
     83a:	90 91 21 02 	lds	r25, 0x0221	; 0x800221 <Bluetooth_Getal+0x1>

0000083e <.Loc.7>:
     83e:	82 30       	cpi	r24, 0x02	; 2
     840:	91 05       	cpc	r25, r1
     842:	11 f4       	brne	.+4      	; 0x848 <.L2>

00000844 <.Loc.8>:
        {
            toestand = 0;
     844:	1a 82       	std	Y+2, r1	; 0x02
     846:	19 82       	std	Y+1, r1	; 0x01

00000848 <.L2>:
        }
        if(Bluetooth_Getal == 6)//Uitknop ingedrukt
     848:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <Bluetooth_Getal>
     84c:	90 91 21 02 	lds	r25, 0x0221	; 0x800221 <Bluetooth_Getal+0x1>

00000850 <.Loc.10>:
     850:	86 30       	cpi	r24, 0x06	; 6
     852:	91 05       	cpc	r25, r1
     854:	21 f4       	brne	.+8      	; 0x85e <.L3>

00000856 <.Loc.11>:
        {
            toestand = 1;
     856:	81 e0       	ldi	r24, 0x01	; 1
     858:	90 e0       	ldi	r25, 0x00	; 0
     85a:	9a 83       	std	Y+2, r25	; 0x02
     85c:	89 83       	std	Y+1, r24	; 0x01

0000085e <.L3>:
        }
        if(Bluetooth_Getal == 7)// || (Noodknopport & (1<<Noodknoppin)) == 0))
     85e:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <Bluetooth_Getal>
     862:	90 91 21 02 	lds	r25, 0x0221	; 0x800221 <Bluetooth_Getal+0x1>

00000866 <.Loc.13>:
     866:	87 30       	cpi	r24, 0x07	; 7
     868:	91 05       	cpc	r25, r1
     86a:	21 f4       	brne	.+8      	; 0x874 <.L4>

0000086c <.Loc.14>:
        {
            toestand = 99;
     86c:	83 e6       	ldi	r24, 0x63	; 99
     86e:	90 e0       	ldi	r25, 0x00	; 0
     870:	9a 83       	std	Y+2, r25	; 0x02
     872:	89 83       	std	Y+1, r24	; 0x01

00000874 <.L4>:
        }
        if((toestand >= 3) && (((IRregister & (1 << IRbaklinks)) == 0) || ((IRregister & (1 << IRbakrechts)) == 0)))//Plantenbak gedetecteerd
     874:	89 81       	ldd	r24, Y+1	; 0x01
     876:	9a 81       	ldd	r25, Y+2	; 0x02
     878:	82 30       	cpi	r24, 0x02	; 2
     87a:	91 05       	cpc	r25, r1
     87c:	81 f1       	breq	.+96     	; 0x8de <.L5>
     87e:	7c f1       	brlt	.+94     	; 0x8de <.L5>

00000880 <.Loc.16>:
     880:	86 e2       	ldi	r24, 0x26	; 38
     882:	90 e0       	ldi	r25, 0x00	; 0
     884:	dc 01       	movw	r26, r24
     886:	8c 91       	ld	r24, X

00000888 <.Loc.17>:
     888:	88 2f       	mov	r24, r24
     88a:	90 e0       	ldi	r25, 0x00	; 0
     88c:	80 72       	andi	r24, 0x20	; 32
     88e:	99 27       	eor	r25, r25

00000890 <.Loc.18>:
     890:	00 97       	sbiw	r24, 0x00	; 0
     892:	51 f0       	breq	.+20     	; 0x8a8 <.L6>

00000894 <.Loc.19>:
     894:	86 e2       	ldi	r24, 0x26	; 38
     896:	90 e0       	ldi	r25, 0x00	; 0
     898:	fc 01       	movw	r30, r24
     89a:	80 81       	ld	r24, Z

0000089c <.Loc.20>:
     89c:	88 2f       	mov	r24, r24
     89e:	90 e0       	ldi	r25, 0x00	; 0
     8a0:	80 71       	andi	r24, 0x10	; 16
     8a2:	99 27       	eor	r25, r25

000008a4 <.Loc.21>:
     8a4:	00 97       	sbiw	r24, 0x00	; 0
     8a6:	d9 f4       	brne	.+54     	; 0x8de <.L5>

000008a8 <.L6>:
        {
            if(bakvar != 1)
     8a8:	80 91 2a 02 	lds	r24, 0x022A	; 0x80022a <bakvar>
     8ac:	90 91 2b 02 	lds	r25, 0x022B	; 0x80022b <bakvar+0x1>

000008b0 <.Loc.23>:
     8b0:	81 30       	cpi	r24, 0x01	; 1
     8b2:	91 05       	cpc	r25, r1
     8b4:	81 f0       	breq	.+32     	; 0x8d6 <.L7>

000008b6 <.Loc.24>:
            {
                bakvar = 1;
     8b6:	81 e0       	ldi	r24, 0x01	; 1
     8b8:	90 e0       	ldi	r25, 0x00	; 0
     8ba:	90 93 2b 02 	sts	0x022B, r25	; 0x80022b <bakvar+0x1>
     8be:	80 93 2a 02 	sts	0x022A, r24	; 0x80022a <bakvar>

000008c2 <.Loc.25>:
                TCCR4B = (1 << CS42) | (0 << CS41) | (0 << CS40);
     8c2:	81 ea       	ldi	r24, 0xA1	; 161
     8c4:	90 e0       	ldi	r25, 0x00	; 0

000008c6 <.Loc.26>:
     8c6:	24 e0       	ldi	r18, 0x04	; 4
     8c8:	dc 01       	movw	r26, r24
     8ca:	2c 93       	st	X, r18

000008cc <.Loc.27>:
                toestand = 8;
     8cc:	88 e0       	ldi	r24, 0x08	; 8
     8ce:	90 e0       	ldi	r25, 0x00	; 0
     8d0:	9a 83       	std	Y+2, r25	; 0x02
     8d2:	89 83       	std	Y+1, r24	; 0x01
     8d4:	04 c0       	rjmp	.+8      	; 0x8de <.L5>

000008d6 <.L7>:
            }
            else
            {
                toestand = 4;
     8d6:	84 e0       	ldi	r24, 0x04	; 4
     8d8:	90 e0       	ldi	r25, 0x00	; 0
     8da:	9a 83       	std	Y+2, r25	; 0x02
     8dc:	89 83       	std	Y+1, r24	; 0x01

000008de <.L5>:
            }
        }
        if((toestand >= 3) && (waarde <= 100))//Voorultrasoon ziet object
     8de:	89 81       	ldd	r24, Y+1	; 0x01
     8e0:	9a 81       	ldd	r25, Y+2	; 0x02
     8e2:	82 30       	cpi	r24, 0x02	; 2
     8e4:	91 05       	cpc	r25, r1
     8e6:	59 f0       	breq	.+22     	; 0x8fe <.L8>
     8e8:	54 f0       	brlt	.+20     	; 0x8fe <.L8>

000008ea <.Loc.30>:
     8ea:	8b 81       	ldd	r24, Y+3	; 0x03
     8ec:	9c 81       	ldd	r25, Y+4	; 0x04
     8ee:	84 36       	cpi	r24, 0x64	; 100
     8f0:	91 05       	cpc	r25, r1
     8f2:	09 f0       	breq	.+2      	; 0x8f6 <.Loc.31>

000008f4 <L0^A>:
     8f4:	24 f4       	brge	.+8      	; 0x8fe <.L8>

000008f6 <.Loc.31>:
        {
            toestand = 9;
     8f6:	89 e0       	ldi	r24, 0x09	; 9
     8f8:	90 e0       	ldi	r25, 0x00	; 0
     8fa:	9a 83       	std	Y+2, r25	; 0x02
     8fc:	89 83       	std	Y+1, r24	; 0x01

000008fe <.L8>:
        }
        switch(toestand)
     8fe:	89 81       	ldd	r24, Y+1	; 0x01
     900:	9a 81       	ldd	r25, Y+2	; 0x02
     902:	89 30       	cpi	r24, 0x09	; 9
     904:	91 05       	cpc	r25, r1
     906:	09 f0       	breq	.+2      	; 0x90a <L0^A+0x2>

00000908 <L0^A>:
     908:	cc f4       	brge	.+50     	; 0x93c <.L9>
     90a:	89 81       	ldd	r24, Y+1	; 0x01
     90c:	9a 81       	ldd	r25, Y+2	; 0x02
     90e:	99 23       	and	r25, r25
     910:	0c f4       	brge	.+2      	; 0x914 <L0^A+0x2>

00000912 <L0^A>:
     912:	8d cf       	rjmp	.-230    	; 0x82e <.L46>
     914:	89 81       	ldd	r24, Y+1	; 0x01
     916:	9a 81       	ldd	r25, Y+2	; 0x02
     918:	09 2e       	mov	r0, r25
     91a:	00 0c       	add	r0, r0
     91c:	aa 0b       	sbc	r26, r26
     91e:	bb 0b       	sbc	r27, r27
     920:	89 30       	cpi	r24, 0x09	; 9
     922:	91 05       	cpc	r25, r1
     924:	a1 05       	cpc	r26, r1
     926:	b1 05       	cpc	r27, r1
     928:	11 f0       	breq	.+4      	; 0x92e <L0^A+0x2>

0000092a <L0^A>:
     92a:	08 f0       	brcs	.+2      	; 0x92e <L0^A+0x2>

0000092c <L0^A>:
     92c:	80 cf       	rjmp	.-256    	; 0x82e <.L46>
     92e:	fc 01       	movw	r30, r24
     930:	88 27       	eor	r24, r24
     932:	e9 5c       	subi	r30, 0xC9	; 201
     934:	ff 4e       	sbci	r31, 0xEF	; 239
     936:	8f 4f       	sbci	r24, 0xFF	; 255
     938:	0c 94 2b 0e 	jmp	0x1c56	; 0x1c56 <__tablejump2__>

0000093c <.L9>:
     93c:	89 81       	ldd	r24, Y+1	; 0x01
     93e:	9a 81       	ldd	r25, Y+2	; 0x02
     940:	83 36       	cpi	r24, 0x63	; 99
     942:	91 05       	cpc	r25, r1
     944:	09 f0       	breq	.+2      	; 0x948 <.Loc.33>

00000946 <L0^A>:
     946:	73 cf       	rjmp	.-282    	; 0x82e <.L46>

00000948 <.Loc.33>:
        {
        case 99://Noodtoestand
            h_bridgeR_set_percentage(snelheiduit);//motoren uit
     948:	83 e6       	ldi	r24, 0x63	; 99
     94a:	0e 94 89 02 	call	0x512	; 0x512 <h_bridgeR_set_percentage>

0000094e <.Loc.34>:
            h_bridgeL_set_percentage(snelheiduit);
     94e:	83 e6       	ldi	r24, 0x63	; 99
     950:	0e 94 c8 02 	call	0x590	; 0x590 <h_bridgeL_set_percentage>

00000954 <.Loc.35>:
            if(timerteller <= 30)
     954:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <timerteller>
     958:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <timerteller+0x1>

0000095c <.Loc.36>:
     95c:	8e 31       	cpi	r24, 0x1E	; 30
     95e:	91 05       	cpc	r25, r1
     960:	09 f0       	breq	.+2      	; 0x964 <.Loc.37>

00000962 <L0^A>:
     962:	dc f4       	brge	.+54     	; 0x99a <.L22>

00000964 <.Loc.37>:
            {
                PORT_buzzer &= ~(1<<buzzer);//buzzer
     964:	82 e0       	ldi	r24, 0x02	; 2
     966:	91 e0       	ldi	r25, 0x01	; 1
     968:	fc 01       	movw	r30, r24
     96a:	20 81       	ld	r18, Z

0000096c <.Loc.38>:
     96c:	82 e0       	ldi	r24, 0x02	; 2
     96e:	91 e0       	ldi	r25, 0x01	; 1

00000970 <.Loc.39>:
     970:	27 7f       	andi	r18, 0xF7	; 247
     972:	dc 01       	movw	r26, r24
     974:	2c 93       	st	X, r18

00000976 <.Loc.40>:
                PORT_LED &= ~(1<<LED_1);//LED
     976:	82 e0       	ldi	r24, 0x02	; 2
     978:	91 e0       	ldi	r25, 0x01	; 1
     97a:	fc 01       	movw	r30, r24
     97c:	20 81       	ld	r18, Z

0000097e <.Loc.41>:
     97e:	82 e0       	ldi	r24, 0x02	; 2
     980:	91 e0       	ldi	r25, 0x01	; 1

00000982 <.Loc.42>:
     982:	2f 7e       	andi	r18, 0xEF	; 239
     984:	dc 01       	movw	r26, r24
     986:	2c 93       	st	X, r18

00000988 <.Loc.43>:
                PORT_LED &= ~(1<<LED_2);//LED
     988:	82 e0       	ldi	r24, 0x02	; 2
     98a:	91 e0       	ldi	r25, 0x01	; 1
     98c:	fc 01       	movw	r30, r24
     98e:	20 81       	ld	r18, Z

00000990 <.Loc.44>:
     990:	82 e0       	ldi	r24, 0x02	; 2
     992:	91 e0       	ldi	r25, 0x01	; 1

00000994 <.Loc.45>:
     994:	2f 7d       	andi	r18, 0xDF	; 223
     996:	dc 01       	movw	r26, r24
     998:	2c 93       	st	X, r18

0000099a <.L22>:
            }
            if(timerteller >= 30)
     99a:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <timerteller>
     99e:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <timerteller+0x1>

000009a2 <.Loc.47>:
     9a2:	8d 31       	cpi	r24, 0x1D	; 29
     9a4:	91 05       	cpc	r25, r1
     9a6:	41 f1       	breq	.+80     	; 0x9f8 <.L23>
     9a8:	3c f1       	brlt	.+78     	; 0x9f8 <.L23>

000009aa <.Loc.48>:
            {
                PORT_buzzer |= (1<<buzzer);//buzzer
     9aa:	82 e0       	ldi	r24, 0x02	; 2
     9ac:	91 e0       	ldi	r25, 0x01	; 1
     9ae:	fc 01       	movw	r30, r24
     9b0:	20 81       	ld	r18, Z
     9b2:	82 e0       	ldi	r24, 0x02	; 2
     9b4:	91 e0       	ldi	r25, 0x01	; 1

000009b6 <.Loc.49>:
     9b6:	28 60       	ori	r18, 0x08	; 8
     9b8:	dc 01       	movw	r26, r24
     9ba:	2c 93       	st	X, r18

000009bc <.Loc.50>:
                PORT_LED |= (1<<LED_1);//LED
     9bc:	82 e0       	ldi	r24, 0x02	; 2
     9be:	91 e0       	ldi	r25, 0x01	; 1
     9c0:	fc 01       	movw	r30, r24
     9c2:	20 81       	ld	r18, Z
     9c4:	82 e0       	ldi	r24, 0x02	; 2
     9c6:	91 e0       	ldi	r25, 0x01	; 1

000009c8 <.Loc.51>:
     9c8:	20 61       	ori	r18, 0x10	; 16
     9ca:	dc 01       	movw	r26, r24
     9cc:	2c 93       	st	X, r18

000009ce <.Loc.52>:
                PORT_LED |= (1<<LED_2);//LED
     9ce:	82 e0       	ldi	r24, 0x02	; 2
     9d0:	91 e0       	ldi	r25, 0x01	; 1
     9d2:	fc 01       	movw	r30, r24
     9d4:	20 81       	ld	r18, Z
     9d6:	82 e0       	ldi	r24, 0x02	; 2
     9d8:	91 e0       	ldi	r25, 0x01	; 1

000009da <.Loc.53>:
     9da:	20 62       	ori	r18, 0x20	; 32
     9dc:	dc 01       	movw	r26, r24
     9de:	2c 93       	st	X, r18

000009e0 <.Loc.54>:
                if(timerteller >= 60)
     9e0:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <timerteller>
     9e4:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <timerteller+0x1>

000009e8 <.Loc.55>:
     9e8:	8b 33       	cpi	r24, 0x3B	; 59
     9ea:	91 05       	cpc	r25, r1
     9ec:	29 f0       	breq	.+10     	; 0x9f8 <.L23>
     9ee:	24 f0       	brlt	.+8      	; 0x9f8 <.L23>

000009f0 <.Loc.56>:
                {
                    timerteller = 0;
     9f0:	10 92 27 02 	sts	0x0227, r1	; 0x800227 <timerteller+0x1>
     9f4:	10 92 26 02 	sts	0x0226, r1	; 0x800226 <timerteller>

000009f8 <.L23>:
                }
            }
            if((Bluetooth_Getal == 8))// && ((Noodknopport & (1<<Noodknoppin)) != 0))
     9f8:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <Bluetooth_Getal>
     9fc:	90 91 21 02 	lds	r25, 0x0221	; 0x800221 <Bluetooth_Getal+0x1>

00000a00 <.Loc.58>:
     a00:	88 30       	cpi	r24, 0x08	; 8
     a02:	91 05       	cpc	r25, r1
     a04:	09 f0       	breq	.+2      	; 0xa08 <.Loc.59>

00000a06 <L0^A>:
     a06:	6a c2       	rjmp	.+1236   	; 0xedc <.L51>

00000a08 <.Loc.59>:
            {
                toestand = 2;
     a08:	82 e0       	ldi	r24, 0x02	; 2
     a0a:	90 e0       	ldi	r25, 0x00	; 0
     a0c:	9a 83       	std	Y+2, r25	; 0x02
     a0e:	89 83       	std	Y+1, r24	; 0x01

00000a10 <.Loc.60>:
            }
            break;
     a10:	65 c2       	rjmp	.+1226   	; 0xedc <.L51>

00000a12 <.L21>:
        case 0:
            PORT_LED |= (1<<LED_2);
     a12:	82 e0       	ldi	r24, 0x02	; 2
     a14:	91 e0       	ldi	r25, 0x01	; 1
     a16:	fc 01       	movw	r30, r24
     a18:	20 81       	ld	r18, Z
     a1a:	82 e0       	ldi	r24, 0x02	; 2
     a1c:	91 e0       	ldi	r25, 0x01	; 1

00000a1e <.Loc.62>:
     a1e:	20 62       	ori	r18, 0x20	; 32
     a20:	dc 01       	movw	r26, r24
     a22:	2c 93       	st	X, r18

00000a24 <.Loc.63>:
            PORT_LED &= ~(1<<LED_1);
     a24:	82 e0       	ldi	r24, 0x02	; 2
     a26:	91 e0       	ldi	r25, 0x01	; 1
     a28:	fc 01       	movw	r30, r24
     a2a:	20 81       	ld	r18, Z

00000a2c <.Loc.64>:
     a2c:	82 e0       	ldi	r24, 0x02	; 2
     a2e:	91 e0       	ldi	r25, 0x01	; 1

00000a30 <.Loc.65>:
     a30:	2f 7e       	andi	r18, 0xEF	; 239
     a32:	dc 01       	movw	r26, r24
     a34:	2c 93       	st	X, r18

00000a36 <.Loc.66>:
            PORT_buzzer &= ~(1<<buzzer);
     a36:	82 e0       	ldi	r24, 0x02	; 2
     a38:	91 e0       	ldi	r25, 0x01	; 1
     a3a:	fc 01       	movw	r30, r24
     a3c:	20 81       	ld	r18, Z

00000a3e <.Loc.67>:
     a3e:	82 e0       	ldi	r24, 0x02	; 2
     a40:	91 e0       	ldi	r25, 0x01	; 1

00000a42 <.Loc.68>:
     a42:	27 7f       	andi	r18, 0xF7	; 247
     a44:	dc 01       	movw	r26, r24
     a46:	2c 93       	st	X, r18

00000a48 <.Loc.69>:
            h_bridgeL_set_percentage(snelheiduit);//motoren uit
     a48:	83 e6       	ldi	r24, 0x63	; 99
     a4a:	0e 94 c8 02 	call	0x590	; 0x590 <h_bridgeL_set_percentage>

00000a4e <.Loc.70>:
            h_bridgeR_set_percentage(snelheiduit);
     a4e:	83 e6       	ldi	r24, 0x63	; 99
     a50:	0e 94 89 02 	call	0x512	; 0x512 <h_bridgeR_set_percentage>

00000a54 <.Loc.71>:
            if(Bluetooth_Getal == 1)//Bluetooth verbonden
     a54:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <Bluetooth_Getal>
     a58:	90 91 21 02 	lds	r25, 0x0221	; 0x800221 <Bluetooth_Getal+0x1>

00000a5c <.Loc.72>:
     a5c:	81 30       	cpi	r24, 0x01	; 1
     a5e:	91 05       	cpc	r25, r1
     a60:	09 f0       	breq	.+2      	; 0xa64 <.Loc.73>

00000a62 <L0^A>:
     a62:	3e c2       	rjmp	.+1148   	; 0xee0 <.L52>

00000a64 <.Loc.73>:
            {
                toestand = 1;
     a64:	81 e0       	ldi	r24, 0x01	; 1
     a66:	90 e0       	ldi	r25, 0x00	; 0
     a68:	9a 83       	std	Y+2, r25	; 0x02
     a6a:	89 83       	std	Y+1, r24	; 0x01

00000a6c <.Loc.74>:
            }
            break;
     a6c:	39 c2       	rjmp	.+1138   	; 0xee0 <.L52>

00000a6e <.L20>:
        case 1://wachten op aan knop
            PORT_LED |= (1<<LED_2);
     a6e:	82 e0       	ldi	r24, 0x02	; 2
     a70:	91 e0       	ldi	r25, 0x01	; 1
     a72:	fc 01       	movw	r30, r24
     a74:	20 81       	ld	r18, Z
     a76:	82 e0       	ldi	r24, 0x02	; 2
     a78:	91 e0       	ldi	r25, 0x01	; 1

00000a7a <.Loc.76>:
     a7a:	20 62       	ori	r18, 0x20	; 32
     a7c:	dc 01       	movw	r26, r24
     a7e:	2c 93       	st	X, r18

00000a80 <.Loc.77>:
            PORT_LED |= (1<<LED_1);
     a80:	82 e0       	ldi	r24, 0x02	; 2
     a82:	91 e0       	ldi	r25, 0x01	; 1
     a84:	fc 01       	movw	r30, r24
     a86:	20 81       	ld	r18, Z
     a88:	82 e0       	ldi	r24, 0x02	; 2
     a8a:	91 e0       	ldi	r25, 0x01	; 1

00000a8c <.Loc.78>:
     a8c:	20 61       	ori	r18, 0x10	; 16
     a8e:	dc 01       	movw	r26, r24
     a90:	2c 93       	st	X, r18

00000a92 <.Loc.79>:
            PORT_buzzer &= ~(1<<buzzer);
     a92:	82 e0       	ldi	r24, 0x02	; 2
     a94:	91 e0       	ldi	r25, 0x01	; 1
     a96:	fc 01       	movw	r30, r24
     a98:	20 81       	ld	r18, Z

00000a9a <.Loc.80>:
     a9a:	82 e0       	ldi	r24, 0x02	; 2
     a9c:	91 e0       	ldi	r25, 0x01	; 1

00000a9e <.Loc.81>:
     a9e:	27 7f       	andi	r18, 0xF7	; 247
     aa0:	dc 01       	movw	r26, r24
     aa2:	2c 93       	st	X, r18

00000aa4 <.Loc.82>:
            h_bridgeL_set_percentage(snelheiduit);//motoren uit
     aa4:	83 e6       	ldi	r24, 0x63	; 99
     aa6:	0e 94 c8 02 	call	0x590	; 0x590 <h_bridgeL_set_percentage>

00000aaa <.Loc.83>:
            h_bridgeR_set_percentage(snelheiduit);
     aaa:	83 e6       	ldi	r24, 0x63	; 99
     aac:	0e 94 89 02 	call	0x512	; 0x512 <h_bridgeR_set_percentage>

00000ab0 <.Loc.84>:
            if(Bluetooth_Getal == 3)//Aanknop
     ab0:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <Bluetooth_Getal>
     ab4:	90 91 21 02 	lds	r25, 0x0221	; 0x800221 <Bluetooth_Getal+0x1>

00000ab8 <.Loc.85>:
     ab8:	83 30       	cpi	r24, 0x03	; 3
     aba:	91 05       	cpc	r25, r1
     abc:	09 f0       	breq	.+2      	; 0xac0 <.Loc.86>

00000abe <L0^A>:
     abe:	12 c2       	rjmp	.+1060   	; 0xee4 <.L53>

00000ac0 <.Loc.86>:
            {
                toestand = 2;
     ac0:	82 e0       	ldi	r24, 0x02	; 2
     ac2:	90 e0       	ldi	r25, 0x00	; 0
     ac4:	9a 83       	std	Y+2, r25	; 0x02
     ac6:	89 83       	std	Y+1, r24	; 0x01

00000ac8 <.Loc.87>:
            }
            break;
     ac8:	0d c2       	rjmp	.+1050   	; 0xee4 <.L53>

00000aca <.L19>:
        case 2://toestand keuze case
            PORT_LED &= ~(1<<LED_2);
     aca:	82 e0       	ldi	r24, 0x02	; 2
     acc:	91 e0       	ldi	r25, 0x01	; 1
     ace:	fc 01       	movw	r30, r24
     ad0:	20 81       	ld	r18, Z

00000ad2 <.Loc.89>:
     ad2:	82 e0       	ldi	r24, 0x02	; 2
     ad4:	91 e0       	ldi	r25, 0x01	; 1

00000ad6 <.Loc.90>:
     ad6:	2f 7d       	andi	r18, 0xDF	; 223
     ad8:	dc 01       	movw	r26, r24
     ada:	2c 93       	st	X, r18

00000adc <.Loc.91>:
            PORT_LED |= (1<<LED_1);
     adc:	82 e0       	ldi	r24, 0x02	; 2
     ade:	91 e0       	ldi	r25, 0x01	; 1
     ae0:	fc 01       	movw	r30, r24
     ae2:	20 81       	ld	r18, Z
     ae4:	82 e0       	ldi	r24, 0x02	; 2
     ae6:	91 e0       	ldi	r25, 0x01	; 1

00000ae8 <.Loc.92>:
     ae8:	20 61       	ori	r18, 0x10	; 16
     aea:	dc 01       	movw	r26, r24
     aec:	2c 93       	st	X, r18

00000aee <.Loc.93>:
            PORT_buzzer &= ~(1<<buzzer);
     aee:	82 e0       	ldi	r24, 0x02	; 2
     af0:	91 e0       	ldi	r25, 0x01	; 1
     af2:	fc 01       	movw	r30, r24
     af4:	20 81       	ld	r18, Z

00000af6 <.Loc.94>:
     af6:	82 e0       	ldi	r24, 0x02	; 2
     af8:	91 e0       	ldi	r25, 0x01	; 1

00000afa <.Loc.95>:
     afa:	27 7f       	andi	r18, 0xF7	; 247
     afc:	dc 01       	movw	r26, r24
     afe:	2c 93       	st	X, r18

00000b00 <.Loc.96>:
            if(Bluetooth_Getal == 4)//Autonoomknop
     b00:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <Bluetooth_Getal>
     b04:	90 91 21 02 	lds	r25, 0x0221	; 0x800221 <Bluetooth_Getal+0x1>

00000b08 <.Loc.97>:
     b08:	84 30       	cpi	r24, 0x04	; 4
     b0a:	91 05       	cpc	r25, r1
     b0c:	09 f0       	breq	.+2      	; 0xb10 <.Loc.98>

00000b0e <L0^A>:
     b0e:	ec c1       	rjmp	.+984    	; 0xee8 <.L54>

00000b10 <.Loc.98>:
            {
                toestand = 3;
     b10:	83 e0       	ldi	r24, 0x03	; 3
     b12:	90 e0       	ldi	r25, 0x00	; 0
     b14:	9a 83       	std	Y+2, r25	; 0x02
     b16:	89 83       	std	Y+1, r24	; 0x01

00000b18 <.Loc.99>:
            }
            break;
     b18:	e7 c1       	rjmp	.+974    	; 0xee8 <.L54>

00000b1a <.L18>:
        case 3://rijstrook inrijden
            PORT_LED &= ~(1<<LED_2);
     b1a:	82 e0       	ldi	r24, 0x02	; 2
     b1c:	91 e0       	ldi	r25, 0x01	; 1
     b1e:	fc 01       	movw	r30, r24
     b20:	20 81       	ld	r18, Z

00000b22 <.Loc.101>:
     b22:	82 e0       	ldi	r24, 0x02	; 2
     b24:	91 e0       	ldi	r25, 0x01	; 1

00000b26 <.Loc.102>:
     b26:	2f 7d       	andi	r18, 0xDF	; 223
     b28:	dc 01       	movw	r26, r24
     b2a:	2c 93       	st	X, r18

00000b2c <.Loc.103>:
            PORT_LED &= ~(1<<LED_1);
     b2c:	82 e0       	ldi	r24, 0x02	; 2
     b2e:	91 e0       	ldi	r25, 0x01	; 1
     b30:	fc 01       	movw	r30, r24
     b32:	20 81       	ld	r18, Z

00000b34 <.Loc.104>:
     b34:	82 e0       	ldi	r24, 0x02	; 2
     b36:	91 e0       	ldi	r25, 0x01	; 1

00000b38 <.Loc.105>:
     b38:	2f 7e       	andi	r18, 0xEF	; 239
     b3a:	dc 01       	movw	r26, r24
     b3c:	2c 93       	st	X, r18

00000b3e <.Loc.106>:
            PORT_buzzer &= ~(1<<buzzer);
     b3e:	82 e0       	ldi	r24, 0x02	; 2
     b40:	91 e0       	ldi	r25, 0x01	; 1
     b42:	fc 01       	movw	r30, r24
     b44:	20 81       	ld	r18, Z

00000b46 <.Loc.107>:
     b46:	82 e0       	ldi	r24, 0x02	; 2
     b48:	91 e0       	ldi	r25, 0x01	; 1

00000b4a <.Loc.108>:
     b4a:	27 7f       	andi	r18, 0xF7	; 247
     b4c:	dc 01       	movw	r26, r24
     b4e:	2c 93       	st	X, r18

00000b50 <.Loc.109>:
            h_bridgeR_set_percentage(snelheidrechtdoor);
     b50:	83 e2       	ldi	r24, 0x23	; 35
     b52:	0e 94 89 02 	call	0x512	; 0x512 <h_bridgeR_set_percentage>

00000b56 <.Loc.110>:
            h_bridgeL_set_percentage(snelheidrechtdoor);
     b56:	83 e2       	ldi	r24, 0x23	; 35
     b58:	0e 94 c8 02 	call	0x590	; 0x590 <h_bridgeL_set_percentage>

00000b5c <.Loc.111>:
            rechtdoorrijden();
     b5c:	0e 94 00 01 	call	0x200	; 0x200 <rechtdoorrijden>

00000b60 <.Loc.112>:
            if(((IRregister & (1 << IRonderrechts)) == 0) && ((IRregister & (1 << IRonderlinks)) == 0))
     b60:	86 e2       	ldi	r24, 0x26	; 38
     b62:	90 e0       	ldi	r25, 0x00	; 0
     b64:	fc 01       	movw	r30, r24
     b66:	80 81       	ld	r24, Z

00000b68 <.Loc.113>:
     b68:	88 2f       	mov	r24, r24
     b6a:	90 e0       	ldi	r25, 0x00	; 0
     b6c:	84 70       	andi	r24, 0x04	; 4
     b6e:	99 27       	eor	r25, r25

00000b70 <.Loc.114>:
     b70:	00 97       	sbiw	r24, 0x00	; 0
     b72:	09 f0       	breq	.+2      	; 0xb76 <.Loc.115>

00000b74 <L0^A>:
     b74:	bb c1       	rjmp	.+886    	; 0xeec <.L55>

00000b76 <.Loc.115>:
     b76:	86 e2       	ldi	r24, 0x26	; 38
     b78:	90 e0       	ldi	r25, 0x00	; 0
     b7a:	dc 01       	movw	r26, r24
     b7c:	8c 91       	ld	r24, X

00000b7e <.Loc.116>:
     b7e:	88 2f       	mov	r24, r24
     b80:	90 e0       	ldi	r25, 0x00	; 0
     b82:	88 70       	andi	r24, 0x08	; 8
     b84:	99 27       	eor	r25, r25

00000b86 <.Loc.117>:
     b86:	00 97       	sbiw	r24, 0x00	; 0
     b88:	09 f0       	breq	.+2      	; 0xb8c <.Loc.118>

00000b8a <L0^A>:
     b8a:	b0 c1       	rjmp	.+864    	; 0xeec <.L55>

00000b8c <.Loc.118>:
            {
                toestand = 4;
     b8c:	84 e0       	ldi	r24, 0x04	; 4
     b8e:	90 e0       	ldi	r25, 0x00	; 0
     b90:	9a 83       	std	Y+2, r25	; 0x02
     b92:	89 83       	std	Y+1, r24	; 0x01

00000b94 <.Loc.119>:
            }
            break;
     b94:	ab c1       	rjmp	.+854    	; 0xeec <.L55>

00000b96 <.L17>:
        case 4://Tussen de balken rechtdoor
            //Motoren naar rechtdoor
            rechtdoorrijden();
     b96:	0e 94 00 01 	call	0x200	; 0x200 <rechtdoorrijden>

00000b9a <.Loc.121>:
            h_bridgeR_set_percentage(snelheidrechtdoor);
     b9a:	83 e2       	ldi	r24, 0x23	; 35
     b9c:	0e 94 89 02 	call	0x512	; 0x512 <h_bridgeR_set_percentage>

00000ba0 <.Loc.122>:
            h_bridgeL_set_percentage(snelheidrechtdoor);
     ba0:	83 e2       	ldi	r24, 0x23	; 35
     ba2:	0e 94 c8 02 	call	0x590	; 0x590 <h_bridgeL_set_percentage>

00000ba6 <.Loc.123>:
            if(IRregister & (1 << IRonderrechts))
     ba6:	86 e2       	ldi	r24, 0x26	; 38
     ba8:	90 e0       	ldi	r25, 0x00	; 0
     baa:	fc 01       	movw	r30, r24
     bac:	80 81       	ld	r24, Z

00000bae <.Loc.124>:
     bae:	88 2f       	mov	r24, r24
     bb0:	90 e0       	ldi	r25, 0x00	; 0
     bb2:	84 70       	andi	r24, 0x04	; 4
     bb4:	99 27       	eor	r25, r25

00000bb6 <.Loc.125>:
     bb6:	00 97       	sbiw	r24, 0x00	; 0
     bb8:	29 f0       	breq	.+10     	; 0xbc4 <.L29>

00000bba <.Loc.126>:
            {
                toestand = 5;
     bba:	85 e0       	ldi	r24, 0x05	; 5
     bbc:	90 e0       	ldi	r25, 0x00	; 0
     bbe:	9a 83       	std	Y+2, r25	; 0x02
     bc0:	89 83       	std	Y+1, r24	; 0x01

00000bc2 <.Loc.127>:
            }
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
            {
                //toestand = 7;
            }
            break;
     bc2:	96 c1       	rjmp	.+812    	; 0xef0 <.L56>

00000bc4 <.L29>:
            else if(IRregister & (1 << IRonderlinks))
     bc4:	86 e2       	ldi	r24, 0x26	; 38
     bc6:	90 e0       	ldi	r25, 0x00	; 0
     bc8:	dc 01       	movw	r26, r24
     bca:	8c 91       	ld	r24, X

00000bcc <.Loc.129>:
     bcc:	88 2f       	mov	r24, r24
     bce:	90 e0       	ldi	r25, 0x00	; 0
     bd0:	88 70       	andi	r24, 0x08	; 8
     bd2:	99 27       	eor	r25, r25

00000bd4 <.Loc.130>:
     bd4:	00 97       	sbiw	r24, 0x00	; 0
     bd6:	29 f0       	breq	.+10     	; 0xbe2 <.L31>

00000bd8 <.Loc.131>:
                toestand = 6;
     bd8:	86 e0       	ldi	r24, 0x06	; 6
     bda:	90 e0       	ldi	r25, 0x00	; 0
     bdc:	9a 83       	std	Y+2, r25	; 0x02
     bde:	89 83       	std	Y+1, r24	; 0x01

00000be0 <.Loc.132>:
            break;
     be0:	87 c1       	rjmp	.+782    	; 0xef0 <.L56>

00000be2 <.L31>:
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
     be2:	86 e2       	ldi	r24, 0x26	; 38
     be4:	90 e0       	ldi	r25, 0x00	; 0
     be6:	fc 01       	movw	r30, r24
     be8:	80 81       	ld	r24, Z

00000bea <.Loc.134>:
     bea:	88 2f       	mov	r24, r24
     bec:	90 e0       	ldi	r25, 0x00	; 0
     bee:	84 70       	andi	r24, 0x04	; 4
     bf0:	99 27       	eor	r25, r25

00000bf2 <.Loc.135>:
     bf2:	00 97       	sbiw	r24, 0x00	; 0
     bf4:	09 f4       	brne	.+2      	; 0xbf8 <.Loc.136>

00000bf6 <L0^A>:
     bf6:	7c c1       	rjmp	.+760    	; 0xef0 <.L56>

00000bf8 <.Loc.136>:
     bf8:	86 e2       	ldi	r24, 0x26	; 38
     bfa:	90 e0       	ldi	r25, 0x00	; 0
     bfc:	dc 01       	movw	r26, r24
     bfe:	8c 91       	ld	r24, X

00000c00 <.Loc.137>:
            break;
     c00:	77 c1       	rjmp	.+750    	; 0xef0 <.L56>

00000c02 <.L16>:
        case 5:
            //Motoren naar rechts
            h_bridgeR_set_percentage(snelheidhard);
     c02:	8e e1       	ldi	r24, 0x1E	; 30
     c04:	0e 94 89 02 	call	0x512	; 0x512 <h_bridgeR_set_percentage>

00000c08 <.Loc.139>:
            h_bridgeL_set_percentage(snelheidzacht);
     c08:	88 e2       	ldi	r24, 0x28	; 40
     c0a:	0e 94 c8 02 	call	0x590	; 0x590 <h_bridgeL_set_percentage>

00000c0e <.Loc.140>:
            if(((IRregister & (1 << IRonderrechts)) == 0) && ((IRregister & (1 << IRonderlinks)) == 0))
     c0e:	86 e2       	ldi	r24, 0x26	; 38
     c10:	90 e0       	ldi	r25, 0x00	; 0
     c12:	fc 01       	movw	r30, r24
     c14:	80 81       	ld	r24, Z

00000c16 <.Loc.141>:
     c16:	88 2f       	mov	r24, r24
     c18:	90 e0       	ldi	r25, 0x00	; 0
     c1a:	84 70       	andi	r24, 0x04	; 4
     c1c:	99 27       	eor	r25, r25

00000c1e <.Loc.142>:
     c1e:	00 97       	sbiw	r24, 0x00	; 0
     c20:	79 f4       	brne	.+30     	; 0xc40 <.L32>

00000c22 <.Loc.143>:
     c22:	86 e2       	ldi	r24, 0x26	; 38
     c24:	90 e0       	ldi	r25, 0x00	; 0
     c26:	dc 01       	movw	r26, r24
     c28:	8c 91       	ld	r24, X

00000c2a <.Loc.144>:
     c2a:	88 2f       	mov	r24, r24
     c2c:	90 e0       	ldi	r25, 0x00	; 0
     c2e:	88 70       	andi	r24, 0x08	; 8
     c30:	99 27       	eor	r25, r25

00000c32 <.Loc.145>:
     c32:	00 97       	sbiw	r24, 0x00	; 0
     c34:	29 f4       	brne	.+10     	; 0xc40 <.L32>

00000c36 <.Loc.146>:
            {
                toestand = 4;
     c36:	84 e0       	ldi	r24, 0x04	; 4
     c38:	90 e0       	ldi	r25, 0x00	; 0
     c3a:	9a 83       	std	Y+2, r25	; 0x02
     c3c:	89 83       	std	Y+1, r24	; 0x01

00000c3e <.Loc.147>:
            }
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
            {
                //toestand = 7;
            }
            break;
     c3e:	5a c1       	rjmp	.+692    	; 0xef4 <.L57>

00000c40 <.L32>:
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
     c40:	86 e2       	ldi	r24, 0x26	; 38
     c42:	90 e0       	ldi	r25, 0x00	; 0
     c44:	fc 01       	movw	r30, r24
     c46:	80 81       	ld	r24, Z

00000c48 <.Loc.149>:
     c48:	88 2f       	mov	r24, r24
     c4a:	90 e0       	ldi	r25, 0x00	; 0
     c4c:	84 70       	andi	r24, 0x04	; 4
     c4e:	99 27       	eor	r25, r25

00000c50 <.Loc.150>:
     c50:	00 97       	sbiw	r24, 0x00	; 0
     c52:	09 f4       	brne	.+2      	; 0xc56 <.Loc.151>

00000c54 <L0^A>:
     c54:	4f c1       	rjmp	.+670    	; 0xef4 <.L57>

00000c56 <.Loc.151>:
     c56:	86 e2       	ldi	r24, 0x26	; 38
     c58:	90 e0       	ldi	r25, 0x00	; 0
     c5a:	dc 01       	movw	r26, r24
     c5c:	8c 91       	ld	r24, X

00000c5e <.Loc.152>:
            break;
     c5e:	4a c1       	rjmp	.+660    	; 0xef4 <.L57>

00000c60 <.L15>:
        case 6:
            //Motoren naar links
            h_bridgeR_set_percentage(snelheidzacht);
     c60:	88 e2       	ldi	r24, 0x28	; 40
     c62:	0e 94 89 02 	call	0x512	; 0x512 <h_bridgeR_set_percentage>

00000c66 <.Loc.154>:
            h_bridgeL_set_percentage(snelheidhard);
     c66:	8e e1       	ldi	r24, 0x1E	; 30
     c68:	0e 94 c8 02 	call	0x590	; 0x590 <h_bridgeL_set_percentage>

00000c6c <.Loc.155>:
            if(((IRregister & (1 << IRonderrechts)) == 0) && ((IRregister & (1 << IRonderlinks)) == 0))
     c6c:	86 e2       	ldi	r24, 0x26	; 38
     c6e:	90 e0       	ldi	r25, 0x00	; 0
     c70:	fc 01       	movw	r30, r24
     c72:	80 81       	ld	r24, Z

00000c74 <.Loc.156>:
     c74:	88 2f       	mov	r24, r24
     c76:	90 e0       	ldi	r25, 0x00	; 0
     c78:	84 70       	andi	r24, 0x04	; 4
     c7a:	99 27       	eor	r25, r25

00000c7c <.Loc.157>:
     c7c:	00 97       	sbiw	r24, 0x00	; 0
     c7e:	79 f4       	brne	.+30     	; 0xc9e <.L34>

00000c80 <.Loc.158>:
     c80:	86 e2       	ldi	r24, 0x26	; 38
     c82:	90 e0       	ldi	r25, 0x00	; 0
     c84:	dc 01       	movw	r26, r24
     c86:	8c 91       	ld	r24, X

00000c88 <.Loc.159>:
     c88:	88 2f       	mov	r24, r24
     c8a:	90 e0       	ldi	r25, 0x00	; 0
     c8c:	88 70       	andi	r24, 0x08	; 8
     c8e:	99 27       	eor	r25, r25

00000c90 <.Loc.160>:
     c90:	00 97       	sbiw	r24, 0x00	; 0
     c92:	29 f4       	brne	.+10     	; 0xc9e <.L34>

00000c94 <.Loc.161>:
            {
                toestand = 4;
     c94:	84 e0       	ldi	r24, 0x04	; 4
     c96:	90 e0       	ldi	r25, 0x00	; 0
     c98:	9a 83       	std	Y+2, r25	; 0x02
     c9a:	89 83       	std	Y+1, r24	; 0x01

00000c9c <.Loc.162>:
            }
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
            {
                toestand = 7;
            }
            break;
     c9c:	2d c1       	rjmp	.+602    	; 0xef8 <.L58>

00000c9e <.L34>:
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
     c9e:	86 e2       	ldi	r24, 0x26	; 38
     ca0:	90 e0       	ldi	r25, 0x00	; 0
     ca2:	fc 01       	movw	r30, r24
     ca4:	80 81       	ld	r24, Z

00000ca6 <.Loc.164>:
     ca6:	88 2f       	mov	r24, r24
     ca8:	90 e0       	ldi	r25, 0x00	; 0
     caa:	84 70       	andi	r24, 0x04	; 4
     cac:	99 27       	eor	r25, r25

00000cae <.Loc.165>:
     cae:	00 97       	sbiw	r24, 0x00	; 0
     cb0:	09 f4       	brne	.+2      	; 0xcb4 <.Loc.166>

00000cb2 <L0^A>:
     cb2:	22 c1       	rjmp	.+580    	; 0xef8 <.L58>

00000cb4 <.Loc.166>:
     cb4:	86 e2       	ldi	r24, 0x26	; 38
     cb6:	90 e0       	ldi	r25, 0x00	; 0
     cb8:	dc 01       	movw	r26, r24
     cba:	8c 91       	ld	r24, X

00000cbc <.Loc.167>:
     cbc:	88 2f       	mov	r24, r24
     cbe:	90 e0       	ldi	r25, 0x00	; 0
     cc0:	88 70       	andi	r24, 0x08	; 8
     cc2:	99 27       	eor	r25, r25

00000cc4 <.Loc.168>:
     cc4:	00 97       	sbiw	r24, 0x00	; 0
     cc6:	09 f4       	brne	.+2      	; 0xcca <.Loc.169>

00000cc8 <L0^A>:
     cc8:	17 c1       	rjmp	.+558    	; 0xef8 <.L58>

00000cca <.Loc.169>:
                toestand = 7;
     cca:	87 e0       	ldi	r24, 0x07	; 7
     ccc:	90 e0       	ldi	r25, 0x00	; 0
     cce:	9a 83       	std	Y+2, r25	; 0x02
     cd0:	89 83       	std	Y+1, r24	; 0x01

00000cd2 <.Loc.170>:
            break;
     cd2:	12 c1       	rjmp	.+548    	; 0xef8 <.L58>

00000cd4 <.L14>:
     cd4:	80 e0       	ldi	r24, 0x00	; 0
     cd6:	90 e0       	ldi	r25, 0x00	; 0
     cd8:	aa ef       	ldi	r26, 0xFA	; 250
     cda:	b4 e4       	ldi	r27, 0x44	; 68
     cdc:	8d 83       	std	Y+5, r24	; 0x05
     cde:	9e 83       	std	Y+6, r25	; 0x06
     ce0:	af 83       	std	Y+7, r26	; 0x07
     ce2:	b8 87       	std	Y+8, r27	; 0x08

00000ce4 <.LBB58>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     ce4:	20 e0       	ldi	r18, 0x00	; 0
     ce6:	30 e0       	ldi	r19, 0x00	; 0
     ce8:	4a e7       	ldi	r20, 0x7A	; 122
     cea:	55 e4       	ldi	r21, 0x45	; 69
     cec:	6d 81       	ldd	r22, Y+5	; 0x05
     cee:	7e 81       	ldd	r23, Y+6	; 0x06
     cf0:	8f 81       	ldd	r24, Y+7	; 0x07
     cf2:	98 85       	ldd	r25, Y+8	; 0x08
     cf4:	0e 94 c8 0f 	call	0x1f90	; 0x1f90 <__mulsf3>
     cf8:	6f 8b       	std	Y+23, r22	; 0x17
     cfa:	78 8f       	std	Y+24, r23	; 0x18
     cfc:	89 8f       	std	Y+25, r24	; 0x19
     cfe:	9a 8f       	std	Y+26, r25	; 0x1a
     d00:	8f 89       	ldd	r24, Y+23	; 0x17
     d02:	98 8d       	ldd	r25, Y+24	; 0x18
     d04:	a9 8d       	ldd	r26, Y+25	; 0x19
     d06:	ba 8d       	ldd	r27, Y+26	; 0x1a
     d08:	89 87       	std	Y+9, r24	; 0x09
     d0a:	9a 87       	std	Y+10, r25	; 0x0a
     d0c:	ab 87       	std	Y+11, r26	; 0x0b
     d0e:	bc 87       	std	Y+12, r27	; 0x0c

00000d10 <.Loc.172>:
	if (__tmp < 1.0)
     d10:	20 e0       	ldi	r18, 0x00	; 0
     d12:	30 e0       	ldi	r19, 0x00	; 0
     d14:	40 e8       	ldi	r20, 0x80	; 128
     d16:	5f e3       	ldi	r21, 0x3F	; 63
     d18:	69 85       	ldd	r22, Y+9	; 0x09
     d1a:	7a 85       	ldd	r23, Y+10	; 0x0a
     d1c:	8b 85       	ldd	r24, Y+11	; 0x0b
     d1e:	9c 85       	ldd	r25, Y+12	; 0x0c
     d20:	0e 94 64 0e 	call	0x1cc8	; 0x1cc8 <__cmpsf2>
     d24:	88 23       	and	r24, r24
     d26:	2c f4       	brge	.+10     	; 0xd32 <.L49>

00000d28 <.Loc.173>:
		__ticks = 1;
     d28:	81 e0       	ldi	r24, 0x01	; 1
     d2a:	90 e0       	ldi	r25, 0x00	; 0
     d2c:	9e 87       	std	Y+14, r25	; 0x0e
     d2e:	8d 87       	std	Y+13, r24	; 0x0d
     d30:	55 c0       	rjmp	.+170    	; 0xddc <.L38>

00000d32 <.L49>:
	else if (__tmp > 65535)
     d32:	20 e0       	ldi	r18, 0x00	; 0
     d34:	3f ef       	ldi	r19, 0xFF	; 255
     d36:	4f e7       	ldi	r20, 0x7F	; 127
     d38:	57 e4       	ldi	r21, 0x47	; 71
     d3a:	69 85       	ldd	r22, Y+9	; 0x09
     d3c:	7a 85       	ldd	r23, Y+10	; 0x0a
     d3e:	8b 85       	ldd	r24, Y+11	; 0x0b
     d40:	9c 85       	ldd	r25, Y+12	; 0x0c
     d42:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <__gesf2>
     d46:	88 23       	and	r24, r24
     d48:	d9 f1       	breq	.+118    	; 0xdc0 <.L50>
     d4a:	d4 f1       	brlt	.+116    	; 0xdc0 <.L50>

00000d4c <.Loc.175>:
		__ticks = (uint16_t) (__ms * 10.0);
     d4c:	20 e0       	ldi	r18, 0x00	; 0
     d4e:	30 e0       	ldi	r19, 0x00	; 0
     d50:	40 e2       	ldi	r20, 0x20	; 32
     d52:	51 e4       	ldi	r21, 0x41	; 65
     d54:	6d 81       	ldd	r22, Y+5	; 0x05
     d56:	7e 81       	ldd	r23, Y+6	; 0x06
     d58:	8f 81       	ldd	r24, Y+7	; 0x07
     d5a:	98 85       	ldd	r25, Y+8	; 0x08
     d5c:	0e 94 c8 0f 	call	0x1f90	; 0x1f90 <__mulsf3>
     d60:	6b 8f       	std	Y+27, r22	; 0x1b
     d62:	7c 8f       	std	Y+28, r23	; 0x1c
     d64:	8d 8f       	std	Y+29, r24	; 0x1d
     d66:	9e 8f       	std	Y+30, r25	; 0x1e
     d68:	8b 8d       	ldd	r24, Y+27	; 0x1b
     d6a:	9c 8d       	ldd	r25, Y+28	; 0x1c
     d6c:	ad 8d       	ldd	r26, Y+29	; 0x1d
     d6e:	be 8d       	ldd	r27, Y+30	; 0x1e
     d70:	8b 8b       	std	Y+19, r24	; 0x13
     d72:	9c 8b       	std	Y+20, r25	; 0x14
     d74:	ad 8b       	std	Y+21, r26	; 0x15
     d76:	be 8b       	std	Y+22, r27	; 0x16

00000d78 <.Loc.176>:
     d78:	6b 89       	ldd	r22, Y+19	; 0x13
     d7a:	7c 89       	ldd	r23, Y+20	; 0x14
     d7c:	8d 89       	ldd	r24, Y+21	; 0x15
     d7e:	9e 89       	ldd	r25, Y+22	; 0x16
     d80:	0e 94 e2 0e 	call	0x1dc4	; 0x1dc4 <__fixunssfsi>
     d84:	6f 8f       	std	Y+31, r22	; 0x1f
     d86:	78 a3       	std	Y+32, r23	; 0x20
     d88:	89 a3       	std	Y+33, r24	; 0x21
     d8a:	9a a3       	std	Y+34, r25	; 0x22
     d8c:	af 8d       	ldd	r26, Y+31	; 0x1f
     d8e:	b8 a1       	ldd	r27, Y+32	; 0x20
     d90:	be 87       	std	Y+14, r27	; 0x0e
     d92:	ad 87       	std	Y+13, r26	; 0x0d

00000d94 <.Loc.177>:
		while(__ticks)
     d94:	10 c0       	rjmp	.+32     	; 0xdb6 <.L41>

00000d96 <.L42>:
     d96:	80 e9       	ldi	r24, 0x90	; 144
     d98:	91 e0       	ldi	r25, 0x01	; 1
     d9a:	98 8b       	std	Y+16, r25	; 0x10
     d9c:	8f 87       	std	Y+15, r24	; 0x0f

00000d9e <.LBB60>:
     d9e:	8f 85       	ldd	r24, Y+15	; 0x0f
     da0:	98 89       	ldd	r25, Y+16	; 0x10

00000da2 <.L1^B1>:
     da2:	01 97       	sbiw	r24, 0x01	; 1
     da4:	f1 f7       	brne	.-4      	; 0xda2 <.L1^B1>
     da6:	98 8b       	std	Y+16, r25	; 0x10
     da8:	8f 87       	std	Y+15, r24	; 0x0f

00000daa <.Loc.179>:
	...

00000dac <.LBE60>:
			__ticks --;
     dac:	8d 85       	ldd	r24, Y+13	; 0x0d
     dae:	9e 85       	ldd	r25, Y+14	; 0x0e
     db0:	01 97       	sbiw	r24, 0x01	; 1
     db2:	9e 87       	std	Y+14, r25	; 0x0e
     db4:	8d 87       	std	Y+13, r24	; 0x0d

00000db6 <.L41>:
		while(__ticks)
     db6:	8d 85       	ldd	r24, Y+13	; 0x0d
     db8:	9e 85       	ldd	r25, Y+14	; 0x0e
     dba:	00 97       	sbiw	r24, 0x00	; 0
     dbc:	61 f7       	brne	.-40     	; 0xd96 <.L42>

00000dbe <.Loc.182>:
		return;
     dbe:	19 c0       	rjmp	.+50     	; 0xdf2 <.L43>

00000dc0 <.L50>:
		__ticks = (uint16_t)__tmp;
     dc0:	69 85       	ldd	r22, Y+9	; 0x09
     dc2:	7a 85       	ldd	r23, Y+10	; 0x0a
     dc4:	8b 85       	ldd	r24, Y+11	; 0x0b
     dc6:	9c 85       	ldd	r25, Y+12	; 0x0c
     dc8:	0e 94 e2 0e 	call	0x1dc4	; 0x1dc4 <__fixunssfsi>
     dcc:	6b a3       	std	Y+35, r22	; 0x23
     dce:	7c a3       	std	Y+36, r23	; 0x24
     dd0:	8d a3       	std	Y+37, r24	; 0x25
     dd2:	9e a3       	std	Y+38, r25	; 0x26
     dd4:	eb a1       	ldd	r30, Y+35	; 0x23
     dd6:	fc a1       	ldd	r31, Y+36	; 0x24
     dd8:	fe 87       	std	Y+14, r31	; 0x0e
     dda:	ed 87       	std	Y+13, r30	; 0x0d

00000ddc <.L38>:
     ddc:	8d 85       	ldd	r24, Y+13	; 0x0d
     dde:	9e 85       	ldd	r25, Y+14	; 0x0e
     de0:	9a 8b       	std	Y+18, r25	; 0x12
     de2:	89 8b       	std	Y+17, r24	; 0x11

00000de4 <.LBB62>:
     de4:	89 89       	ldd	r24, Y+17	; 0x11
     de6:	9a 89       	ldd	r25, Y+18	; 0x12

00000de8 <.L1^B2>:
     de8:	01 97       	sbiw	r24, 0x01	; 1
     dea:	f1 f7       	brne	.-4      	; 0xde8 <.L1^B2>
     dec:	9a 8b       	std	Y+18, r25	; 0x12
     dee:	89 8b       	std	Y+17, r24	; 0x11

00000df0 <.Loc.185>:
	...

00000df2 <.L43>:
        case 7://Balken niet meer in zicht en bocht maken
            _delay_ms(2000);
            h_bridgeR_set_percentage(snelheidhard);
     df2:	8e e1       	ldi	r24, 0x1E	; 30
     df4:	0e 94 89 02 	call	0x512	; 0x512 <h_bridgeR_set_percentage>

00000df8 <.Loc.187>:
            h_bridgeL_set_percentage(snelheidzacht);
     df8:	88 e2       	ldi	r24, 0x28	; 40
     dfa:	0e 94 c8 02 	call	0x590	; 0x590 <h_bridgeL_set_percentage>

00000dfe <.Loc.188>:
            if(((IRregister & (1 << IRonderlinks)) == 0) && ((IRregister & (1 << IRonderrechts)) == 0))
     dfe:	86 e2       	ldi	r24, 0x26	; 38
     e00:	90 e0       	ldi	r25, 0x00	; 0
     e02:	dc 01       	movw	r26, r24
     e04:	8c 91       	ld	r24, X

00000e06 <.Loc.189>:
     e06:	88 2f       	mov	r24, r24
     e08:	90 e0       	ldi	r25, 0x00	; 0
     e0a:	88 70       	andi	r24, 0x08	; 8
     e0c:	99 27       	eor	r25, r25

00000e0e <.Loc.190>:
     e0e:	00 97       	sbiw	r24, 0x00	; 0
     e10:	09 f0       	breq	.+2      	; 0xe14 <.Loc.191>

00000e12 <L0^A>:
     e12:	74 c0       	rjmp	.+232    	; 0xefc <.L59>

00000e14 <.Loc.191>:
     e14:	86 e2       	ldi	r24, 0x26	; 38
     e16:	90 e0       	ldi	r25, 0x00	; 0
     e18:	fc 01       	movw	r30, r24
     e1a:	80 81       	ld	r24, Z

00000e1c <.Loc.192>:
     e1c:	88 2f       	mov	r24, r24
     e1e:	90 e0       	ldi	r25, 0x00	; 0
     e20:	84 70       	andi	r24, 0x04	; 4
     e22:	99 27       	eor	r25, r25

00000e24 <.Loc.193>:
     e24:	00 97       	sbiw	r24, 0x00	; 0
     e26:	09 f0       	breq	.+2      	; 0xe2a <.Loc.194>

00000e28 <L0^A>:
     e28:	69 c0       	rjmp	.+210    	; 0xefc <.L59>

00000e2a <.Loc.194>:
            {
                toestand = 4;
     e2a:	84 e0       	ldi	r24, 0x04	; 4
     e2c:	90 e0       	ldi	r25, 0x00	; 0
     e2e:	9a 83       	std	Y+2, r25	; 0x02
     e30:	89 83       	std	Y+1, r24	; 0x01

00000e32 <.Loc.195>:
            }
            break;
     e32:	64 c0       	rjmp	.+200    	; 0xefc <.L59>

00000e34 <.L13>:
        case 8://signaleren
            h_bridgeR_set_percentage(snelheiduit);
     e34:	83 e6       	ldi	r24, 0x63	; 99
     e36:	0e 94 89 02 	call	0x512	; 0x512 <h_bridgeR_set_percentage>

00000e3a <.Loc.197>:
            h_bridgeL_set_percentage(snelheiduit);
     e3a:	83 e6       	ldi	r24, 0x63	; 99
     e3c:	0e 94 c8 02 	call	0x590	; 0x590 <h_bridgeL_set_percentage>

00000e40 <.Loc.198>:
            signaal_geven();
     e40:	0e 94 b0 01 	call	0x360	; 0x360 <signaal_geven>

00000e44 <.Loc.199>:
            toestand = 4;
     e44:	84 e0       	ldi	r24, 0x04	; 4
     e46:	90 e0       	ldi	r25, 0x00	; 0
     e48:	9a 83       	std	Y+2, r25	; 0x02
     e4a:	89 83       	std	Y+1, r24	; 0x01

00000e4c <.Loc.200>:
            break;
     e4c:	5a c0       	rjmp	.+180    	; 0xf02 <.L10>

00000e4e <.L11>:
        case 9://Voorultrasoon ziet iets
            h_bridgeR_set_percentage(snelheiduit);
     e4e:	83 e6       	ldi	r24, 0x63	; 99
     e50:	0e 94 89 02 	call	0x512	; 0x512 <h_bridgeR_set_percentage>

00000e54 <.Loc.202>:
            h_bridgeL_set_percentage(snelheiduit);
     e54:	83 e6       	ldi	r24, 0x63	; 99
     e56:	0e 94 c8 02 	call	0x590	; 0x590 <h_bridgeL_set_percentage>

00000e5a <.Loc.203>:
            PORT_LED |= (1<<LED_1);
     e5a:	82 e0       	ldi	r24, 0x02	; 2
     e5c:	91 e0       	ldi	r25, 0x01	; 1
     e5e:	dc 01       	movw	r26, r24
     e60:	2c 91       	ld	r18, X
     e62:	82 e0       	ldi	r24, 0x02	; 2
     e64:	91 e0       	ldi	r25, 0x01	; 1

00000e66 <.Loc.204>:
     e66:	20 61       	ori	r18, 0x10	; 16
     e68:	fc 01       	movw	r30, r24
     e6a:	20 83       	st	Z, r18

00000e6c <.Loc.205>:
            PORT_LED |= (1<<LED_2);
     e6c:	82 e0       	ldi	r24, 0x02	; 2
     e6e:	91 e0       	ldi	r25, 0x01	; 1
     e70:	dc 01       	movw	r26, r24
     e72:	2c 91       	ld	r18, X
     e74:	82 e0       	ldi	r24, 0x02	; 2
     e76:	91 e0       	ldi	r25, 0x01	; 1

00000e78 <.Loc.206>:
     e78:	20 62       	ori	r18, 0x20	; 32
     e7a:	fc 01       	movw	r30, r24
     e7c:	20 83       	st	Z, r18

00000e7e <.Loc.207>:
            PORT_buzzer |= (1<<buzzer);
     e7e:	82 e0       	ldi	r24, 0x02	; 2
     e80:	91 e0       	ldi	r25, 0x01	; 1
     e82:	dc 01       	movw	r26, r24
     e84:	2c 91       	ld	r18, X
     e86:	82 e0       	ldi	r24, 0x02	; 2
     e88:	91 e0       	ldi	r25, 0x01	; 1

00000e8a <.Loc.208>:
     e8a:	28 60       	ori	r18, 0x08	; 8
     e8c:	fc 01       	movw	r30, r24
     e8e:	20 83       	st	Z, r18

00000e90 <.Loc.209>:
            if(waarde > 60)
     e90:	8b 81       	ldd	r24, Y+3	; 0x03
     e92:	9c 81       	ldd	r25, Y+4	; 0x04
     e94:	8c 33       	cpi	r24, 0x3C	; 60
     e96:	91 05       	cpc	r25, r1
     e98:	99 f1       	breq	.+102    	; 0xf00 <.L60>
     e9a:	94 f1       	brlt	.+100    	; 0xf00 <.L60>

00000e9c <.Loc.210>:
            {
                PORT_LED &= ~(1<<LED_2);         // LED 2 aan
     e9c:	82 e0       	ldi	r24, 0x02	; 2
     e9e:	91 e0       	ldi	r25, 0x01	; 1
     ea0:	dc 01       	movw	r26, r24
     ea2:	2c 91       	ld	r18, X

00000ea4 <.Loc.211>:
     ea4:	82 e0       	ldi	r24, 0x02	; 2
     ea6:	91 e0       	ldi	r25, 0x01	; 1

00000ea8 <.Loc.212>:
     ea8:	2f 7d       	andi	r18, 0xDF	; 223
     eaa:	fc 01       	movw	r30, r24
     eac:	20 83       	st	Z, r18

00000eae <.Loc.213>:
                PORT_LED &= ~(1<<LED_1);        // LED 1 uit
     eae:	82 e0       	ldi	r24, 0x02	; 2
     eb0:	91 e0       	ldi	r25, 0x01	; 1
     eb2:	dc 01       	movw	r26, r24
     eb4:	2c 91       	ld	r18, X

00000eb6 <.Loc.214>:
     eb6:	82 e0       	ldi	r24, 0x02	; 2
     eb8:	91 e0       	ldi	r25, 0x01	; 1

00000eba <.Loc.215>:
     eba:	2f 7e       	andi	r18, 0xEF	; 239
     ebc:	fc 01       	movw	r30, r24
     ebe:	20 83       	st	Z, r18

00000ec0 <.Loc.216>:
                PORT_buzzer &= ~(1<<buzzer);    // buzzer uit
     ec0:	82 e0       	ldi	r24, 0x02	; 2
     ec2:	91 e0       	ldi	r25, 0x01	; 1
     ec4:	dc 01       	movw	r26, r24
     ec6:	2c 91       	ld	r18, X

00000ec8 <.Loc.217>:
     ec8:	82 e0       	ldi	r24, 0x02	; 2
     eca:	91 e0       	ldi	r25, 0x01	; 1

00000ecc <.Loc.218>:
     ecc:	27 7f       	andi	r18, 0xF7	; 247
     ece:	fc 01       	movw	r30, r24
     ed0:	20 83       	st	Z, r18

00000ed2 <.Loc.219>:
                toestand = 4;
     ed2:	84 e0       	ldi	r24, 0x04	; 4
     ed4:	90 e0       	ldi	r25, 0x00	; 0
     ed6:	9a 83       	std	Y+2, r25	; 0x02
     ed8:	89 83       	std	Y+1, r24	; 0x01

00000eda <.Loc.220>:
            }
            break;
     eda:	12 c0       	rjmp	.+36     	; 0xf00 <.L60>

00000edc <.L51>:
            break;
     edc:	00 00       	nop
     ede:	a7 cc       	rjmp	.-1714   	; 0x82e <.L46>

00000ee0 <.L52>:
            break;
     ee0:	00 00       	nop
     ee2:	a5 cc       	rjmp	.-1718   	; 0x82e <.L46>

00000ee4 <.L53>:
            break;
     ee4:	00 00       	nop
     ee6:	a3 cc       	rjmp	.-1722   	; 0x82e <.L46>

00000ee8 <.L54>:
            break;
     ee8:	00 00       	nop
     eea:	a1 cc       	rjmp	.-1726   	; 0x82e <.L46>

00000eec <.L55>:
            break;
     eec:	00 00       	nop
     eee:	9f cc       	rjmp	.-1730   	; 0x82e <.L46>

00000ef0 <.L56>:
            break;
     ef0:	00 00       	nop
     ef2:	9d cc       	rjmp	.-1734   	; 0x82e <.L46>

00000ef4 <.L57>:
            break;
     ef4:	00 00       	nop
     ef6:	9b cc       	rjmp	.-1738   	; 0x82e <.L46>

00000ef8 <.L58>:
            break;
     ef8:	00 00       	nop
     efa:	99 cc       	rjmp	.-1742   	; 0x82e <.L46>

00000efc <.L59>:
            break;
     efc:	00 00       	nop
     efe:	97 cc       	rjmp	.-1746   	; 0x82e <.L46>

00000f00 <.L60>:
	...

00000f02 <.L10>:
    {
     f02:	95 cc       	rjmp	.-1750   	; 0x82e <.L46>

00000f04 <init>:

    return 0;
}

void init()
{
     f04:	cf 93       	push	r28
     f06:	df 93       	push	r29
     f08:	cd b7       	in	r28, 0x3d	; 61
     f0a:	de b7       	in	r29, 0x3e	; 62

00000f0c <.Loc.233>:
    initBluetooth();
     f0c:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <initBluetooth>

00000f10 <.Loc.234>:
    sei();
     f10:	78 94       	sei

00000f12 <.Loc.235>:

    //timer PWM motorenR
    TCCR1B = (0 << CS12) | (0 << CS11) | (1 << CS10);
     f12:	81 e8       	ldi	r24, 0x81	; 129
     f14:	90 e0       	ldi	r25, 0x00	; 0

00000f16 <.Loc.236>:
     f16:	21 e0       	ldi	r18, 0x01	; 1
     f18:	fc 01       	movw	r30, r24
     f1a:	20 83       	st	Z, r18

00000f1c <.Loc.237>:
    TIMSK1 = (1 << OCIE1A) | (1 << TOIE1);
     f1c:	8f e6       	ldi	r24, 0x6F	; 111
     f1e:	90 e0       	ldi	r25, 0x00	; 0

00000f20 <.Loc.238>:
     f20:	23 e0       	ldi	r18, 0x03	; 3
     f22:	fc 01       	movw	r30, r24
     f24:	20 83       	st	Z, r18

00000f26 <.Loc.239>:

    OCR1A = 0;
     f26:	88 e8       	ldi	r24, 0x88	; 136
     f28:	90 e0       	ldi	r25, 0x00	; 0

00000f2a <.Loc.240>:
     f2a:	fc 01       	movw	r30, r24
     f2c:	11 82       	std	Z+1, r1	; 0x01
     f2e:	10 82       	st	Z, r1

00000f30 <.Loc.241>:
    //timer PWM motorenL
    TCCR3B = (0 << CS32) | (0 << CS31) | (1 << CS30);
     f30:	81 e9       	ldi	r24, 0x91	; 145
     f32:	90 e0       	ldi	r25, 0x00	; 0

00000f34 <.Loc.242>:
     f34:	21 e0       	ldi	r18, 0x01	; 1
     f36:	fc 01       	movw	r30, r24
     f38:	20 83       	st	Z, r18

00000f3a <.Loc.243>:
    TIMSK3 = (1 << OCIE3A) | (1 << TOIE3);
     f3a:	81 e7       	ldi	r24, 0x71	; 113
     f3c:	90 e0       	ldi	r25, 0x00	; 0

00000f3e <.Loc.244>:
     f3e:	23 e0       	ldi	r18, 0x03	; 3
     f40:	fc 01       	movw	r30, r24
     f42:	20 83       	st	Z, r18

00000f44 <.Loc.245>:

    OCR3A = 0;
     f44:	88 e9       	ldi	r24, 0x98	; 152
     f46:	90 e0       	ldi	r25, 0x00	; 0

00000f48 <.Loc.246>:
     f48:	fc 01       	movw	r30, r24
     f4a:	11 82       	std	Z+1, r1	; 0x01
     f4c:	10 82       	st	Z, r1

00000f4e <.Loc.247>:

    //timer noodtoestand
    TCCR0B = (1 << CS02) | (1 << CS00);
     f4e:	85 e4       	ldi	r24, 0x45	; 69
     f50:	90 e0       	ldi	r25, 0x00	; 0

00000f52 <.Loc.248>:
     f52:	25 e0       	ldi	r18, 0x05	; 5
     f54:	fc 01       	movw	r30, r24
     f56:	20 83       	st	Z, r18

00000f58 <.Loc.249>:
    TIMSK0 |= (1 << TOIE0);
     f58:	8e e6       	ldi	r24, 0x6E	; 110
     f5a:	90 e0       	ldi	r25, 0x00	; 0
     f5c:	fc 01       	movw	r30, r24
     f5e:	20 81       	ld	r18, Z
     f60:	8e e6       	ldi	r24, 0x6E	; 110
     f62:	90 e0       	ldi	r25, 0x00	; 0

00000f64 <.Loc.250>:
     f64:	21 60       	ori	r18, 0x01	; 1
     f66:	fc 01       	movw	r30, r24
     f68:	20 83       	st	Z, r18

00000f6a <.Loc.251>:

    //timer noodtoestand
    //TCCR4B = (1 << CS42) | (1 << CS40);
    TIMSK4 |= (1 << TOIE4);
     f6a:	82 e7       	ldi	r24, 0x72	; 114
     f6c:	90 e0       	ldi	r25, 0x00	; 0
     f6e:	fc 01       	movw	r30, r24
     f70:	20 81       	ld	r18, Z
     f72:	82 e7       	ldi	r24, 0x72	; 114
     f74:	90 e0       	ldi	r25, 0x00	; 0

00000f76 <.Loc.252>:
     f76:	21 60       	ori	r18, 0x01	; 1
     f78:	fc 01       	movw	r30, r24
     f7a:	20 83       	st	Z, r18

00000f7c <.Loc.253>:

    //pinout h-brug
    DDR |= (1 << PEN1);
     f7c:	81 e2       	ldi	r24, 0x21	; 33
     f7e:	90 e0       	ldi	r25, 0x00	; 0
     f80:	fc 01       	movw	r30, r24
     f82:	20 81       	ld	r18, Z
     f84:	81 e2       	ldi	r24, 0x21	; 33
     f86:	90 e0       	ldi	r25, 0x00	; 0

00000f88 <.Loc.254>:
     f88:	20 68       	ori	r18, 0x80	; 128
     f8a:	fc 01       	movw	r30, r24
     f8c:	20 83       	st	Z, r18

00000f8e <.Loc.255>:
    DDR |= (1 << PIN11);
     f8e:	81 e2       	ldi	r24, 0x21	; 33
     f90:	90 e0       	ldi	r25, 0x00	; 0
     f92:	fc 01       	movw	r30, r24
     f94:	20 81       	ld	r18, Z
     f96:	81 e2       	ldi	r24, 0x21	; 33
     f98:	90 e0       	ldi	r25, 0x00	; 0

00000f9a <.Loc.256>:
     f9a:	20 64       	ori	r18, 0x40	; 64
     f9c:	fc 01       	movw	r30, r24
     f9e:	20 83       	st	Z, r18

00000fa0 <.Loc.257>:
    DDR |= (1 << PIN12);
     fa0:	81 e2       	ldi	r24, 0x21	; 33
     fa2:	90 e0       	ldi	r25, 0x00	; 0
     fa4:	fc 01       	movw	r30, r24
     fa6:	20 81       	ld	r18, Z
     fa8:	81 e2       	ldi	r24, 0x21	; 33
     faa:	90 e0       	ldi	r25, 0x00	; 0

00000fac <.Loc.258>:
     fac:	20 62       	ori	r18, 0x20	; 32
     fae:	fc 01       	movw	r30, r24
     fb0:	20 83       	st	Z, r18

00000fb2 <.Loc.259>:
    DDR |= (1 << PIN21);
     fb2:	81 e2       	ldi	r24, 0x21	; 33
     fb4:	90 e0       	ldi	r25, 0x00	; 0
     fb6:	fc 01       	movw	r30, r24
     fb8:	20 81       	ld	r18, Z
     fba:	81 e2       	ldi	r24, 0x21	; 33
     fbc:	90 e0       	ldi	r25, 0x00	; 0

00000fbe <.Loc.260>:
     fbe:	20 61       	ori	r18, 0x10	; 16
     fc0:	fc 01       	movw	r30, r24
     fc2:	20 83       	st	Z, r18

00000fc4 <.Loc.261>:
    DDR |= (1 << PIN22);
     fc4:	81 e2       	ldi	r24, 0x21	; 33
     fc6:	90 e0       	ldi	r25, 0x00	; 0
     fc8:	fc 01       	movw	r30, r24
     fca:	20 81       	ld	r18, Z
     fcc:	81 e2       	ldi	r24, 0x21	; 33
     fce:	90 e0       	ldi	r25, 0x00	; 0

00000fd0 <.Loc.262>:
     fd0:	28 60       	ori	r18, 0x08	; 8
     fd2:	fc 01       	movw	r30, r24
     fd4:	20 83       	st	Z, r18

00000fd6 <.Loc.263>:
    DDR |= (1 << PEN2);
     fd6:	81 e2       	ldi	r24, 0x21	; 33
     fd8:	90 e0       	ldi	r25, 0x00	; 0
     fda:	fc 01       	movw	r30, r24
     fdc:	20 81       	ld	r18, Z
     fde:	81 e2       	ldi	r24, 0x21	; 33
     fe0:	90 e0       	ldi	r25, 0x00	; 0

00000fe2 <.Loc.264>:
     fe2:	24 60       	ori	r18, 0x04	; 4
     fe4:	fc 01       	movw	r30, r24
     fe6:	20 83       	st	Z, r18

00000fe8 <.Loc.265>:

    //H-brug pinnen LOW
    PORT &= ~(1 << PEN1);
     fe8:	82 e2       	ldi	r24, 0x22	; 34
     fea:	90 e0       	ldi	r25, 0x00	; 0
     fec:	fc 01       	movw	r30, r24
     fee:	20 81       	ld	r18, Z

00000ff0 <.Loc.266>:
     ff0:	82 e2       	ldi	r24, 0x22	; 34
     ff2:	90 e0       	ldi	r25, 0x00	; 0

00000ff4 <.Loc.267>:
     ff4:	2f 77       	andi	r18, 0x7F	; 127
     ff6:	fc 01       	movw	r30, r24
     ff8:	20 83       	st	Z, r18

00000ffa <.Loc.268>:
	PORT &= ~(1 << PIN11);
     ffa:	82 e2       	ldi	r24, 0x22	; 34
     ffc:	90 e0       	ldi	r25, 0x00	; 0
     ffe:	fc 01       	movw	r30, r24
    1000:	20 81       	ld	r18, Z

00001002 <.Loc.269>:
    1002:	82 e2       	ldi	r24, 0x22	; 34
    1004:	90 e0       	ldi	r25, 0x00	; 0

00001006 <.Loc.270>:
    1006:	2f 7b       	andi	r18, 0xBF	; 191
    1008:	fc 01       	movw	r30, r24
    100a:	20 83       	st	Z, r18

0000100c <.Loc.271>:
	PORT &= ~(1 << PIN12);
    100c:	82 e2       	ldi	r24, 0x22	; 34
    100e:	90 e0       	ldi	r25, 0x00	; 0
    1010:	fc 01       	movw	r30, r24
    1012:	20 81       	ld	r18, Z

00001014 <.Loc.272>:
    1014:	82 e2       	ldi	r24, 0x22	; 34
    1016:	90 e0       	ldi	r25, 0x00	; 0

00001018 <.Loc.273>:
    1018:	2f 7d       	andi	r18, 0xDF	; 223
    101a:	fc 01       	movw	r30, r24
    101c:	20 83       	st	Z, r18

0000101e <.Loc.274>:
	PORT &= ~(1 << PIN21);
    101e:	82 e2       	ldi	r24, 0x22	; 34
    1020:	90 e0       	ldi	r25, 0x00	; 0
    1022:	fc 01       	movw	r30, r24
    1024:	20 81       	ld	r18, Z

00001026 <.Loc.275>:
    1026:	82 e2       	ldi	r24, 0x22	; 34
    1028:	90 e0       	ldi	r25, 0x00	; 0

0000102a <.Loc.276>:
    102a:	2f 7e       	andi	r18, 0xEF	; 239
    102c:	fc 01       	movw	r30, r24
    102e:	20 83       	st	Z, r18

00001030 <.Loc.277>:
	PORT &= ~(1 << PIN22);
    1030:	82 e2       	ldi	r24, 0x22	; 34
    1032:	90 e0       	ldi	r25, 0x00	; 0
    1034:	fc 01       	movw	r30, r24
    1036:	20 81       	ld	r18, Z

00001038 <.Loc.278>:
    1038:	82 e2       	ldi	r24, 0x22	; 34
    103a:	90 e0       	ldi	r25, 0x00	; 0

0000103c <.Loc.279>:
    103c:	27 7f       	andi	r18, 0xF7	; 247
    103e:	fc 01       	movw	r30, r24
    1040:	20 83       	st	Z, r18

00001042 <.Loc.280>:
	PORT &= ~(1 << PEN2);
    1042:	82 e2       	ldi	r24, 0x22	; 34
    1044:	90 e0       	ldi	r25, 0x00	; 0
    1046:	fc 01       	movw	r30, r24
    1048:	20 81       	ld	r18, Z

0000104a <.Loc.281>:
    104a:	82 e2       	ldi	r24, 0x22	; 34
    104c:	90 e0       	ldi	r25, 0x00	; 0

0000104e <.Loc.282>:
    104e:	2b 7f       	andi	r18, 0xFB	; 251
    1050:	fc 01       	movw	r30, r24
    1052:	20 83       	st	Z, r18

00001054 <.Loc.283>:

	//LEDS
    DDR_LED |= (1<<LED_1) | (1<<LED_2);     // enable pins as output
    1054:	81 e0       	ldi	r24, 0x01	; 1
    1056:	91 e0       	ldi	r25, 0x01	; 1
    1058:	fc 01       	movw	r30, r24
    105a:	20 81       	ld	r18, Z
    105c:	81 e0       	ldi	r24, 0x01	; 1
    105e:	91 e0       	ldi	r25, 0x01	; 1

00001060 <.Loc.284>:
    1060:	20 63       	ori	r18, 0x30	; 48
    1062:	fc 01       	movw	r30, r24
    1064:	20 83       	st	Z, r18

00001066 <.Loc.285>:
    PORT_LED &= ~(1<<LED_1) & ~(1<<LED_2);  // put pins low
    1066:	82 e0       	ldi	r24, 0x02	; 2
    1068:	91 e0       	ldi	r25, 0x01	; 1
    106a:	fc 01       	movw	r30, r24
    106c:	20 81       	ld	r18, Z

0000106e <.Loc.286>:
    106e:	82 e0       	ldi	r24, 0x02	; 2
    1070:	91 e0       	ldi	r25, 0x01	; 1

00001072 <.Loc.287>:
    1072:	2f 7c       	andi	r18, 0xCF	; 207
    1074:	fc 01       	movw	r30, r24
    1076:	20 83       	st	Z, r18

00001078 <.Loc.288>:
    DDRB |= (1 << PB7);
    1078:	84 e2       	ldi	r24, 0x24	; 36
    107a:	90 e0       	ldi	r25, 0x00	; 0
    107c:	fc 01       	movw	r30, r24
    107e:	20 81       	ld	r18, Z
    1080:	84 e2       	ldi	r24, 0x24	; 36
    1082:	90 e0       	ldi	r25, 0x00	; 0

00001084 <.Loc.289>:
    1084:	20 68       	ori	r18, 0x80	; 128
    1086:	fc 01       	movw	r30, r24
    1088:	20 83       	st	Z, r18

0000108a <.Loc.290>:
    PORTB |= ~(1 << PB7);
    108a:	85 e2       	ldi	r24, 0x25	; 37
    108c:	90 e0       	ldi	r25, 0x00	; 0
    108e:	fc 01       	movw	r30, r24
    1090:	80 81       	ld	r24, Z

00001092 <.Loc.291>:
    1092:	28 2f       	mov	r18, r24
    1094:	2f 67       	ori	r18, 0x7F	; 127

00001096 <.Loc.292>:
    1096:	85 e2       	ldi	r24, 0x25	; 37
    1098:	90 e0       	ldi	r25, 0x00	; 0

0000109a <.Loc.293>:
    109a:	fc 01       	movw	r30, r24
    109c:	20 83       	st	Z, r18

0000109e <.Loc.294>:
    //PORT_LED |= (1<<LED_2);

    //Buzzer
    DDR_buzzer |= (1<<buzzer);              // enable pins as output
    109e:	81 e0       	ldi	r24, 0x01	; 1
    10a0:	91 e0       	ldi	r25, 0x01	; 1
    10a2:	fc 01       	movw	r30, r24
    10a4:	20 81       	ld	r18, Z
    10a6:	81 e0       	ldi	r24, 0x01	; 1
    10a8:	91 e0       	ldi	r25, 0x01	; 1

000010aa <.Loc.295>:
    10aa:	28 60       	ori	r18, 0x08	; 8
    10ac:	fc 01       	movw	r30, r24
    10ae:	20 83       	st	Z, r18

000010b0 <.Loc.296>:
    PORT_buzzer &= ~(1<<buzzer);            // put pins low
    10b0:	82 e0       	ldi	r24, 0x02	; 2
    10b2:	91 e0       	ldi	r25, 0x01	; 1
    10b4:	fc 01       	movw	r30, r24
    10b6:	20 81       	ld	r18, Z

000010b8 <.Loc.297>:
    10b8:	82 e0       	ldi	r24, 0x02	; 2
    10ba:	91 e0       	ldi	r25, 0x01	; 1

000010bc <.Loc.298>:
    10bc:	27 7f       	andi	r18, 0xF7	; 247
    10be:	fc 01       	movw	r30, r24
    10c0:	20 83       	st	Z, r18

000010c2 <.Loc.299>:

    //knoppen
	DDRF &= ~(1<<Noodknoppin);
    10c2:	80 e3       	ldi	r24, 0x30	; 48
    10c4:	90 e0       	ldi	r25, 0x00	; 0
    10c6:	fc 01       	movw	r30, r24
    10c8:	20 81       	ld	r18, Z

000010ca <.Loc.300>:
    10ca:	80 e3       	ldi	r24, 0x30	; 48
    10cc:	90 e0       	ldi	r25, 0x00	; 0

000010ce <.Loc.301>:
    10ce:	2d 7f       	andi	r18, 0xFD	; 253
    10d0:	fc 01       	movw	r30, r24
    10d2:	20 83       	st	Z, r18

000010d4 <.Loc.302>:
	PORTF |= (1<<Noodknoppin);   		// enAble alle knoppen voor input
    10d4:	81 e3       	ldi	r24, 0x31	; 49
    10d6:	90 e0       	ldi	r25, 0x00	; 0
    10d8:	fc 01       	movw	r30, r24
    10da:	20 81       	ld	r18, Z
    10dc:	81 e3       	ldi	r24, 0x31	; 49
    10de:	90 e0       	ldi	r25, 0x00	; 0

000010e0 <.Loc.303>:
    10e0:	22 60       	ori	r18, 0x02	; 2
    10e2:	fc 01       	movw	r30, r24
    10e4:	20 83       	st	Z, r18

000010e6 <.Loc.304>:

	//trigger ultra voor
    Ultraregister |= (1<<Voorultrasoontrig);
    10e6:	83 e2       	ldi	r24, 0x23	; 35
    10e8:	90 e0       	ldi	r25, 0x00	; 0
    10ea:	fc 01       	movw	r30, r24
    10ec:	20 81       	ld	r18, Z
    10ee:	83 e2       	ldi	r24, 0x23	; 35
    10f0:	90 e0       	ldi	r25, 0x00	; 0

000010f2 <.Loc.305>:
    10f2:	20 62       	ori	r18, 0x20	; 32
    10f4:	fc 01       	movw	r30, r24
    10f6:	20 83       	st	Z, r18

000010f8 <.Loc.306>:
    UltraPort &= ~(1<<Voorultrasoontrig);
    10f8:	85 e2       	ldi	r24, 0x25	; 37
    10fa:	90 e0       	ldi	r25, 0x00	; 0
    10fc:	fc 01       	movw	r30, r24
    10fe:	20 81       	ld	r18, Z

00001100 <.Loc.307>:
    1100:	85 e2       	ldi	r24, 0x25	; 37
    1102:	90 e0       	ldi	r25, 0x00	; 0

00001104 <.Loc.308>:
    1104:	2f 7d       	andi	r18, 0xDF	; 223
    1106:	fc 01       	movw	r30, r24
    1108:	20 83       	st	Z, r18

0000110a <.Loc.309>:
}
    110a:	00 00       	nop
    110c:	df 91       	pop	r29
    110e:	cf 91       	pop	r28
    1110:	08 95       	ret

00001112 <initTimer>:

void initTimer(void){
    1112:	cf 93       	push	r28
    1114:	df 93       	push	r29
    1116:	cd b7       	in	r28, 0x3d	; 61
    1118:	de b7       	in	r29, 0x3e	; 62

0000111a <.Loc.311>:
    TCCR2A = 0;
    111a:	80 eb       	ldi	r24, 0xB0	; 176
    111c:	90 e0       	ldi	r25, 0x00	; 0

0000111e <.Loc.312>:
    111e:	fc 01       	movw	r30, r24
    1120:	10 82       	st	Z, r1

00001122 <.Loc.313>:
    TCCR2B |= (1<<CS20);
    1122:	81 eb       	ldi	r24, 0xB1	; 177
    1124:	90 e0       	ldi	r25, 0x00	; 0
    1126:	fc 01       	movw	r30, r24
    1128:	20 81       	ld	r18, Z
    112a:	81 eb       	ldi	r24, 0xB1	; 177
    112c:	90 e0       	ldi	r25, 0x00	; 0

0000112e <.Loc.314>:
    112e:	21 60       	ori	r18, 0x01	; 1
    1130:	fc 01       	movw	r30, r24
    1132:	20 83       	st	Z, r18

00001134 <.Loc.315>:
    //16000000 / 256 = 62,500
    //1 / 62500 = 0.000016s
    //62500x/sec
    TIMSK2 = (1<<TOIE2);
    1134:	80 e7       	ldi	r24, 0x70	; 112
    1136:	90 e0       	ldi	r25, 0x00	; 0

00001138 <.Loc.316>:
    1138:	21 e0       	ldi	r18, 0x01	; 1
    113a:	fc 01       	movw	r30, r24
    113c:	20 83       	st	Z, r18

0000113e <.Loc.317>:

    DDRF &= ~(1<<PF7);
    113e:	80 e3       	ldi	r24, 0x30	; 48
    1140:	90 e0       	ldi	r25, 0x00	; 0
    1142:	fc 01       	movw	r30, r24
    1144:	20 81       	ld	r18, Z

00001146 <.Loc.318>:
    1146:	80 e3       	ldi	r24, 0x30	; 48
    1148:	90 e0       	ldi	r25, 0x00	; 0

0000114a <.Loc.319>:
    114a:	2f 77       	andi	r18, 0x7F	; 127
    114c:	fc 01       	movw	r30, r24
    114e:	20 83       	st	Z, r18

00001150 <.Loc.320>:
//    DDRB |= (1<<PB7) | (1<<PB6) | (1<<PB5) | (1<<PB4);
//    PORTB |= (1<<PB7) | (1<<PB6) | (1<<PB5) | (1<<PB4);
    DDRL |= (1<<PL6);
    1150:	8a e0       	ldi	r24, 0x0A	; 10
    1152:	91 e0       	ldi	r25, 0x01	; 1
    1154:	fc 01       	movw	r30, r24
    1156:	20 81       	ld	r18, Z
    1158:	8a e0       	ldi	r24, 0x0A	; 10
    115a:	91 e0       	ldi	r25, 0x01	; 1

0000115c <.Loc.321>:
    115c:	20 64       	ori	r18, 0x40	; 64
    115e:	fc 01       	movw	r30, r24
    1160:	20 83       	st	Z, r18

00001162 <.Loc.322>:
    PORTL &= ~(1<<PL6);
    1162:	8b e0       	ldi	r24, 0x0B	; 11
    1164:	91 e0       	ldi	r25, 0x01	; 1
    1166:	fc 01       	movw	r30, r24
    1168:	20 81       	ld	r18, Z

0000116a <.Loc.323>:
    116a:	8b e0       	ldi	r24, 0x0B	; 11
    116c:	91 e0       	ldi	r25, 0x01	; 1

0000116e <.Loc.324>:
    116e:	2f 7b       	andi	r18, 0xBF	; 191
    1170:	fc 01       	movw	r30, r24
    1172:	20 83       	st	Z, r18

00001174 <.Loc.325>:
}
    1174:	00 00       	nop
    1176:	df 91       	pop	r29
    1178:	cf 91       	pop	r28
    117a:	08 95       	ret

0000117c <GetDistance>:

int GetDistance(void){
    117c:	cf 93       	push	r28
    117e:	df 93       	push	r29
    1180:	cd b7       	in	r28, 0x3d	; 61
    1182:	de b7       	in	r29, 0x3e	; 62
    1184:	6e 97       	sbiw	r28, 0x1e	; 30
    1186:	0f b6       	in	r0, 0x3f	; 63
    1188:	f8 94       	cli
    118a:	de bf       	out	0x3e, r29	; 62
    118c:	0f be       	out	0x3f, r0	; 63
    118e:	cd bf       	out	0x3d, r28	; 61

00001190 <.Loc.327>:

    int Distance;

    TriggerPulse();
    1190:	0e 94 44 09 	call	0x1288	; 0x1288 <TriggerPulse>

00001194 <.Loc.328>:
	...

00001196 <.L64>:

    while ((PINF & (1<<PF7)) == 0){
    1196:	8f e2       	ldi	r24, 0x2F	; 47
    1198:	90 e0       	ldi	r25, 0x00	; 0
    119a:	dc 01       	movw	r26, r24
    119c:	8c 91       	ld	r24, X

0000119e <.Loc.330>:
    119e:	88 23       	and	r24, r24
    11a0:	d4 f7       	brge	.-12     	; 0x1196 <.L64>

000011a2 <.Loc.331>:

    }
    TCNT2 = 0;
    11a2:	82 eb       	ldi	r24, 0xB2	; 178
    11a4:	90 e0       	ldi	r25, 0x00	; 0

000011a6 <.Loc.332>:
    11a6:	fc 01       	movw	r30, r24
    11a8:	10 82       	st	Z, r1

000011aa <.Loc.333>:
    TIFR2 = 1<<TOV2;
    11aa:	87 e3       	ldi	r24, 0x37	; 55
    11ac:	90 e0       	ldi	r25, 0x00	; 0

000011ae <.Loc.334>:
    11ae:	21 e0       	ldi	r18, 0x01	; 1
    11b0:	dc 01       	movw	r26, r24
    11b2:	2c 93       	st	X, r18

000011b4 <.Loc.335>:
    count = 0;
    11b4:	10 92 2f 02 	sts	0x022F, r1	; 0x80022f <count+0x1>
    11b8:	10 92 2e 02 	sts	0x022E, r1	; 0x80022e <count>

000011bc <.Loc.336>:
	...

000011be <.L65>:

    while ((PINF & (1<<PF7)) != 0){
    11be:	8f e2       	ldi	r24, 0x2F	; 47
    11c0:	90 e0       	ldi	r25, 0x00	; 0
    11c2:	fc 01       	movw	r30, r24
    11c4:	80 81       	ld	r24, Z

000011c6 <.Loc.338>:
    11c6:	88 23       	and	r24, r24
    11c8:	d4 f3       	brlt	.-12     	; 0x11be <.L65>

000011ca <.Loc.339>:

    }
    Distance = count;
    11ca:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <count>
    11ce:	90 91 2f 02 	lds	r25, 0x022F	; 0x80022f <count+0x1>
    11d2:	9a 83       	std	Y+2, r25	; 0x02
    11d4:	89 83       	std	Y+1, r24	; 0x01

000011d6 <.Loc.340>:

    Distance = Distance * 0.008 * 343;
    11d6:	89 81       	ldd	r24, Y+1	; 0x01
    11d8:	9a 81       	ldd	r25, Y+2	; 0x02
    11da:	9c 01       	movw	r18, r24
    11dc:	99 0f       	add	r25, r25
    11de:	44 0b       	sbc	r20, r20
    11e0:	55 0b       	sbc	r21, r21
    11e2:	2f 87       	std	Y+15, r18	; 0x0f
    11e4:	38 8b       	std	Y+16, r19	; 0x10
    11e6:	49 8b       	std	Y+17, r20	; 0x11
    11e8:	5a 8b       	std	Y+18, r21	; 0x12
    11ea:	6f 85       	ldd	r22, Y+15	; 0x0f
    11ec:	78 89       	ldd	r23, Y+16	; 0x10
    11ee:	89 89       	ldd	r24, Y+17	; 0x11
    11f0:	9a 89       	ldd	r25, Y+18	; 0x12
    11f2:	0e 94 13 0f 	call	0x1e26	; 0x1e26 <__floatsisf>
    11f6:	6b 83       	std	Y+3, r22	; 0x03
    11f8:	7c 83       	std	Y+4, r23	; 0x04
    11fa:	8d 83       	std	Y+5, r24	; 0x05
    11fc:	9e 83       	std	Y+6, r25	; 0x06
    11fe:	2f e6       	ldi	r18, 0x6F	; 111
    1200:	32 e1       	ldi	r19, 0x12	; 18
    1202:	43 e0       	ldi	r20, 0x03	; 3
    1204:	5c e3       	ldi	r21, 0x3C	; 60
    1206:	6b 81       	ldd	r22, Y+3	; 0x03
    1208:	7c 81       	ldd	r23, Y+4	; 0x04
    120a:	8d 81       	ldd	r24, Y+5	; 0x05
    120c:	9e 81       	ldd	r25, Y+6	; 0x06
    120e:	0e 94 c8 0f 	call	0x1f90	; 0x1f90 <__mulsf3>
    1212:	6b 8b       	std	Y+19, r22	; 0x13
    1214:	7c 8b       	std	Y+20, r23	; 0x14
    1216:	8d 8b       	std	Y+21, r24	; 0x15
    1218:	9e 8b       	std	Y+22, r25	; 0x16
    121a:	8b 89       	ldd	r24, Y+19	; 0x13
    121c:	9c 89       	ldd	r25, Y+20	; 0x14
    121e:	ad 89       	ldd	r26, Y+21	; 0x15
    1220:	be 89       	ldd	r27, Y+22	; 0x16
    1222:	8f 83       	std	Y+7, r24	; 0x07
    1224:	98 87       	std	Y+8, r25	; 0x08
    1226:	a9 87       	std	Y+9, r26	; 0x09
    1228:	ba 87       	std	Y+10, r27	; 0x0a

0000122a <.Loc.341>:
    122a:	20 e0       	ldi	r18, 0x00	; 0
    122c:	30 e8       	ldi	r19, 0x80	; 128
    122e:	4b ea       	ldi	r20, 0xAB	; 171
    1230:	53 e4       	ldi	r21, 0x43	; 67
    1232:	6f 81       	ldd	r22, Y+7	; 0x07
    1234:	78 85       	ldd	r23, Y+8	; 0x08
    1236:	89 85       	ldd	r24, Y+9	; 0x09
    1238:	9a 85       	ldd	r25, Y+10	; 0x0a
    123a:	0e 94 c8 0f 	call	0x1f90	; 0x1f90 <__mulsf3>
    123e:	6f 8b       	std	Y+23, r22	; 0x17
    1240:	78 8f       	std	Y+24, r23	; 0x18
    1242:	89 8f       	std	Y+25, r24	; 0x19
    1244:	9a 8f       	std	Y+26, r25	; 0x1a
    1246:	2f 89       	ldd	r18, Y+23	; 0x17
    1248:	38 8d       	ldd	r19, Y+24	; 0x18
    124a:	49 8d       	ldd	r20, Y+25	; 0x19
    124c:	5a 8d       	ldd	r21, Y+26	; 0x1a
    124e:	2b 87       	std	Y+11, r18	; 0x0b
    1250:	3c 87       	std	Y+12, r19	; 0x0c
    1252:	4d 87       	std	Y+13, r20	; 0x0d
    1254:	5e 87       	std	Y+14, r21	; 0x0e

00001256 <.Loc.342>:
    1256:	6b 85       	ldd	r22, Y+11	; 0x0b
    1258:	7c 85       	ldd	r23, Y+12	; 0x0c
    125a:	8d 85       	ldd	r24, Y+13	; 0x0d
    125c:	9e 85       	ldd	r25, Y+14	; 0x0e
    125e:	0e 94 db 0e 	call	0x1db6	; 0x1db6 <__fixsfsi>
    1262:	6b 8f       	std	Y+27, r22	; 0x1b
    1264:	7c 8f       	std	Y+28, r23	; 0x1c
    1266:	8d 8f       	std	Y+29, r24	; 0x1d
    1268:	9e 8f       	std	Y+30, r25	; 0x1e
    126a:	4b 8d       	ldd	r20, Y+27	; 0x1b
    126c:	5c 8d       	ldd	r21, Y+28	; 0x1c
    126e:	5a 83       	std	Y+2, r21	; 0x02
    1270:	49 83       	std	Y+1, r20	; 0x01

00001272 <.Loc.343>:
    //34 cm / ms
    //340   mm / ms
    //0.34  mm / us
    //5.44 * count geeft distance in mm

    return Distance;
    1272:	89 81       	ldd	r24, Y+1	; 0x01
    1274:	9a 81       	ldd	r25, Y+2	; 0x02

00001276 <.Loc.344>:
}
    1276:	6e 96       	adiw	r28, 0x1e	; 30
    1278:	0f b6       	in	r0, 0x3f	; 63
    127a:	f8 94       	cli
    127c:	de bf       	out	0x3e, r29	; 62
    127e:	0f be       	out	0x3f, r0	; 63
    1280:	cd bf       	out	0x3d, r28	; 61
    1282:	df 91       	pop	r29
    1284:	cf 91       	pop	r28
    1286:	08 95       	ret

00001288 <TriggerPulse>:
void TriggerPulse (void){
    1288:	cf 93       	push	r28
    128a:	df 93       	push	r29
    128c:	cd b7       	in	r28, 0x3d	; 61
    128e:	de b7       	in	r29, 0x3e	; 62
    1290:	c0 59       	subi	r28, 0x90	; 144
    1292:	d1 09       	sbc	r29, r1
    1294:	0f b6       	in	r0, 0x3f	; 63
    1296:	f8 94       	cli
    1298:	de bf       	out	0x3e, r29	; 62
    129a:	0f be       	out	0x3f, r0	; 63
    129c:	cd bf       	out	0x3d, r28	; 61

0000129e <.Loc.346>:
    PORTL &= (~(1<<PL6));
    129e:	8b e0       	ldi	r24, 0x0B	; 11
    12a0:	91 e0       	ldi	r25, 0x01	; 1
    12a2:	dc 01       	movw	r26, r24
    12a4:	2c 91       	ld	r18, X

000012a6 <.Loc.347>:
    12a6:	8b e0       	ldi	r24, 0x0B	; 11
    12a8:	91 e0       	ldi	r25, 0x01	; 1

000012aa <.Loc.348>:
    12aa:	2f 7b       	andi	r18, 0xBF	; 191
    12ac:	fc 01       	movw	r30, r24
    12ae:	20 83       	st	Z, r18
    12b0:	80 e0       	ldi	r24, 0x00	; 0
    12b2:	90 e0       	ldi	r25, 0x00	; 0
    12b4:	a0 e0       	ldi	r26, 0x00	; 0
    12b6:	b0 e4       	ldi	r27, 0x40	; 64
    12b8:	89 a3       	std	Y+33, r24	; 0x21
    12ba:	9a a3       	std	Y+34, r25	; 0x22
    12bc:	ab a3       	std	Y+35, r26	; 0x23
    12be:	bc a3       	std	Y+36, r27	; 0x24

000012c0 <.LBB64>:
	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint8_t __ticks;
	double __tmp2 ;
	__tmp = ((F_CPU) / 3e6) * __us;
    12c0:	2b ea       	ldi	r18, 0xAB	; 171
    12c2:	3a ea       	ldi	r19, 0xAA	; 170
    12c4:	4a ea       	ldi	r20, 0xAA	; 170
    12c6:	50 e4       	ldi	r21, 0x40	; 64
    12c8:	69 a1       	ldd	r22, Y+33	; 0x21
    12ca:	7a a1       	ldd	r23, Y+34	; 0x22
    12cc:	8b a1       	ldd	r24, Y+35	; 0x23
    12ce:	9c a1       	ldd	r25, Y+36	; 0x24
    12d0:	0e 94 c8 0f 	call	0x1f90	; 0x1f90 <__mulsf3>
    12d4:	2d 96       	adiw	r28, 0x0d	; 13
    12d6:	6c af       	std	Y+60, r22	; 0x3c
    12d8:	7d af       	std	Y+61, r23	; 0x3d
    12da:	8e af       	std	Y+62, r24	; 0x3e
    12dc:	9f af       	std	Y+63, r25	; 0x3f
    12de:	2d 97       	sbiw	r28, 0x0d	; 13
    12e0:	2d 96       	adiw	r28, 0x0d	; 13
    12e2:	8c ad       	ldd	r24, Y+60	; 0x3c
    12e4:	9d ad       	ldd	r25, Y+61	; 0x3d
    12e6:	ae ad       	ldd	r26, Y+62	; 0x3e
    12e8:	bf ad       	ldd	r27, Y+63	; 0x3f
    12ea:	2d 97       	sbiw	r28, 0x0d	; 13
    12ec:	8d a3       	std	Y+37, r24	; 0x25
    12ee:	9e a3       	std	Y+38, r25	; 0x26
    12f0:	af a3       	std	Y+39, r26	; 0x27
    12f2:	b8 a7       	std	Y+40, r27	; 0x28

000012f4 <.Loc.350>:
	__tmp2 = ((F_CPU) / 4e6) * __us;
    12f4:	20 e0       	ldi	r18, 0x00	; 0
    12f6:	30 e0       	ldi	r19, 0x00	; 0
    12f8:	40 e8       	ldi	r20, 0x80	; 128
    12fa:	50 e4       	ldi	r21, 0x40	; 64
    12fc:	69 a1       	ldd	r22, Y+33	; 0x21
    12fe:	7a a1       	ldd	r23, Y+34	; 0x22
    1300:	8b a1       	ldd	r24, Y+35	; 0x23
    1302:	9c a1       	ldd	r25, Y+36	; 0x24
    1304:	0e 94 c8 0f 	call	0x1f90	; 0x1f90 <__mulsf3>
    1308:	61 96       	adiw	r28, 0x11	; 17
    130a:	6c af       	std	Y+60, r22	; 0x3c
    130c:	7d af       	std	Y+61, r23	; 0x3d
    130e:	8e af       	std	Y+62, r24	; 0x3e
    1310:	9f af       	std	Y+63, r25	; 0x3f
    1312:	61 97       	sbiw	r28, 0x11	; 17
    1314:	61 96       	adiw	r28, 0x11	; 17
    1316:	8c ad       	ldd	r24, Y+60	; 0x3c
    1318:	9d ad       	ldd	r25, Y+61	; 0x3d
    131a:	ae ad       	ldd	r26, Y+62	; 0x3e
    131c:	bf ad       	ldd	r27, Y+63	; 0x3f
    131e:	61 97       	sbiw	r28, 0x11	; 17
    1320:	89 a7       	std	Y+41, r24	; 0x29
    1322:	9a a7       	std	Y+42, r25	; 0x2a
    1324:	ab a7       	std	Y+43, r26	; 0x2b
    1326:	bc a7       	std	Y+44, r27	; 0x2c

00001328 <.Loc.351>:
	if (__tmp < 1.0)
    1328:	20 e0       	ldi	r18, 0x00	; 0
    132a:	30 e0       	ldi	r19, 0x00	; 0
    132c:	40 e8       	ldi	r20, 0x80	; 128
    132e:	5f e3       	ldi	r21, 0x3F	; 63
    1330:	6d a1       	ldd	r22, Y+37	; 0x25
    1332:	7e a1       	ldd	r23, Y+38	; 0x26
    1334:	8f a1       	ldd	r24, Y+39	; 0x27
    1336:	98 a5       	ldd	r25, Y+40	; 0x28
    1338:	0e 94 64 0e 	call	0x1cc8	; 0x1cc8 <__cmpsf2>
    133c:	88 23       	and	r24, r24
    133e:	1c f4       	brge	.+6      	; 0x1346 <.L110>

00001340 <.Loc.352>:
		__ticks = 1;
    1340:	81 e0       	ldi	r24, 0x01	; 1
    1342:	8d a7       	std	Y+45, r24	; 0x2d
    1344:	ff c0       	rjmp	.+510    	; 0x1544 <.L70>

00001346 <.L110>:
	else if (__tmp2 > 65535)
    1346:	20 e0       	ldi	r18, 0x00	; 0
    1348:	3f ef       	ldi	r19, 0xFF	; 255
    134a:	4f e7       	ldi	r20, 0x7F	; 127
    134c:	57 e4       	ldi	r21, 0x47	; 71
    134e:	69 a5       	ldd	r22, Y+41	; 0x29
    1350:	7a a5       	ldd	r23, Y+42	; 0x2a
    1352:	8b a5       	ldd	r24, Y+43	; 0x2b
    1354:	9c a5       	ldd	r25, Y+44	; 0x2c
    1356:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <__gesf2>
    135a:	88 23       	and	r24, r24
    135c:	09 f0       	breq	.+2      	; 0x1360 <L0^A>

0000135e <L0^A>:
    135e:	0c f4       	brge	.+2      	; 0x1362 <.Loc.354>

00001360 <L0^A>:
    1360:	b6 c0       	rjmp	.+364    	; 0x14ce <.L111>

00001362 <.Loc.354>:
	{
		_delay_ms(__us / 1000.0);
    1362:	20 e0       	ldi	r18, 0x00	; 0
    1364:	30 e0       	ldi	r19, 0x00	; 0
    1366:	4a e7       	ldi	r20, 0x7A	; 122
    1368:	54 e4       	ldi	r21, 0x44	; 68
    136a:	69 a1       	ldd	r22, Y+33	; 0x21
    136c:	7a a1       	ldd	r23, Y+34	; 0x22
    136e:	8b a1       	ldd	r24, Y+35	; 0x23
    1370:	9c a1       	ldd	r25, Y+36	; 0x24
    1372:	0e 94 69 0e 	call	0x1cd2	; 0x1cd2 <__divsf3>
    1376:	65 96       	adiw	r28, 0x15	; 21
    1378:	6c af       	std	Y+60, r22	; 0x3c
    137a:	7d af       	std	Y+61, r23	; 0x3d
    137c:	8e af       	std	Y+62, r24	; 0x3e
    137e:	9f af       	std	Y+63, r25	; 0x3f
    1380:	65 97       	sbiw	r28, 0x15	; 21
    1382:	65 96       	adiw	r28, 0x15	; 21
    1384:	8c ad       	ldd	r24, Y+60	; 0x3c
    1386:	9d ad       	ldd	r25, Y+61	; 0x3d
    1388:	ae ad       	ldd	r26, Y+62	; 0x3e
    138a:	bf ad       	ldd	r27, Y+63	; 0x3f
    138c:	65 97       	sbiw	r28, 0x15	; 21
    138e:	8e a7       	std	Y+46, r24	; 0x2e
    1390:	9f a7       	std	Y+47, r25	; 0x2f
    1392:	a8 ab       	std	Y+48, r26	; 0x30
    1394:	b9 ab       	std	Y+49, r27	; 0x31

00001396 <.LBB66>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    1396:	20 e0       	ldi	r18, 0x00	; 0
    1398:	30 e0       	ldi	r19, 0x00	; 0
    139a:	4a e7       	ldi	r20, 0x7A	; 122
    139c:	55 e4       	ldi	r21, 0x45	; 69
    139e:	6e a5       	ldd	r22, Y+46	; 0x2e
    13a0:	7f a5       	ldd	r23, Y+47	; 0x2f
    13a2:	88 a9       	ldd	r24, Y+48	; 0x30
    13a4:	99 a9       	ldd	r25, Y+49	; 0x31
    13a6:	0e 94 c8 0f 	call	0x1f90	; 0x1f90 <__mulsf3>
    13aa:	69 96       	adiw	r28, 0x19	; 25
    13ac:	6c af       	std	Y+60, r22	; 0x3c
    13ae:	7d af       	std	Y+61, r23	; 0x3d
    13b0:	8e af       	std	Y+62, r24	; 0x3e
    13b2:	9f af       	std	Y+63, r25	; 0x3f
    13b4:	69 97       	sbiw	r28, 0x19	; 25
    13b6:	69 96       	adiw	r28, 0x19	; 25
    13b8:	8c ad       	ldd	r24, Y+60	; 0x3c
    13ba:	9d ad       	ldd	r25, Y+61	; 0x3d
    13bc:	ae ad       	ldd	r26, Y+62	; 0x3e
    13be:	bf ad       	ldd	r27, Y+63	; 0x3f
    13c0:	69 97       	sbiw	r28, 0x19	; 25
    13c2:	8a ab       	std	Y+50, r24	; 0x32
    13c4:	9b ab       	std	Y+51, r25	; 0x33
    13c6:	ac ab       	std	Y+52, r26	; 0x34
    13c8:	bd ab       	std	Y+53, r27	; 0x35

000013ca <.Loc.356>:
	if (__tmp < 1.0)
    13ca:	20 e0       	ldi	r18, 0x00	; 0
    13cc:	30 e0       	ldi	r19, 0x00	; 0
    13ce:	40 e8       	ldi	r20, 0x80	; 128
    13d0:	5f e3       	ldi	r21, 0x3F	; 63
    13d2:	6a a9       	ldd	r22, Y+50	; 0x32
    13d4:	7b a9       	ldd	r23, Y+51	; 0x33
    13d6:	8c a9       	ldd	r24, Y+52	; 0x34
    13d8:	9d a9       	ldd	r25, Y+53	; 0x35
    13da:	0e 94 64 0e 	call	0x1cc8	; 0x1cc8 <__cmpsf2>
    13de:	88 23       	and	r24, r24
    13e0:	2c f4       	brge	.+10     	; 0x13ec <.L112>

000013e2 <.Loc.357>:
		__ticks = 1;
    13e2:	81 e0       	ldi	r24, 0x01	; 1
    13e4:	90 e0       	ldi	r25, 0x00	; 0
    13e6:	9f ab       	std	Y+55, r25	; 0x37
    13e8:	8e ab       	std	Y+54, r24	; 0x36
    13ea:	66 c0       	rjmp	.+204    	; 0x14b8 <.L75>

000013ec <.L112>:
	else if (__tmp > 65535)
    13ec:	20 e0       	ldi	r18, 0x00	; 0
    13ee:	3f ef       	ldi	r19, 0xFF	; 255
    13f0:	4f e7       	ldi	r20, 0x7F	; 127
    13f2:	57 e4       	ldi	r21, 0x47	; 71
    13f4:	6a a9       	ldd	r22, Y+50	; 0x32
    13f6:	7b a9       	ldd	r23, Y+51	; 0x33
    13f8:	8c a9       	ldd	r24, Y+52	; 0x34
    13fa:	9d a9       	ldd	r25, Y+53	; 0x35
    13fc:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <__gesf2>
    1400:	88 23       	and	r24, r24
    1402:	09 f0       	breq	.+2      	; 0x1406 <L0^A>

00001404 <L0^A>:
    1404:	0c f4       	brge	.+2      	; 0x1408 <.Loc.359>

00001406 <L0^A>:
    1406:	46 c0       	rjmp	.+140    	; 0x1494 <.L113>

00001408 <.Loc.359>:
		__ticks = (uint16_t) (__ms * 10.0);
    1408:	20 e0       	ldi	r18, 0x00	; 0
    140a:	30 e0       	ldi	r19, 0x00	; 0
    140c:	40 e2       	ldi	r20, 0x20	; 32
    140e:	51 e4       	ldi	r21, 0x41	; 65
    1410:	6e a5       	ldd	r22, Y+46	; 0x2e
    1412:	7f a5       	ldd	r23, Y+47	; 0x2f
    1414:	88 a9       	ldd	r24, Y+48	; 0x30
    1416:	99 a9       	ldd	r25, Y+49	; 0x31
    1418:	0e 94 c8 0f 	call	0x1f90	; 0x1f90 <__mulsf3>
    141c:	6d 96       	adiw	r28, 0x1d	; 29
    141e:	6c af       	std	Y+60, r22	; 0x3c
    1420:	7d af       	std	Y+61, r23	; 0x3d
    1422:	8e af       	std	Y+62, r24	; 0x3e
    1424:	9f af       	std	Y+63, r25	; 0x3f
    1426:	6d 97       	sbiw	r28, 0x1d	; 29
    1428:	6d 96       	adiw	r28, 0x1d	; 29
    142a:	8c ad       	ldd	r24, Y+60	; 0x3c
    142c:	9d ad       	ldd	r25, Y+61	; 0x3d
    142e:	ae ad       	ldd	r26, Y+62	; 0x3e
    1430:	bf ad       	ldd	r27, Y+63	; 0x3f
    1432:	6d 97       	sbiw	r28, 0x1d	; 29
    1434:	29 96       	adiw	r28, 0x09	; 9
    1436:	8c af       	std	Y+60, r24	; 0x3c
    1438:	9d af       	std	Y+61, r25	; 0x3d
    143a:	ae af       	std	Y+62, r26	; 0x3e
    143c:	bf af       	std	Y+63, r27	; 0x3f
    143e:	29 97       	sbiw	r28, 0x09	; 9

00001440 <.Loc.360>:
    1440:	29 96       	adiw	r28, 0x09	; 9
    1442:	6c ad       	ldd	r22, Y+60	; 0x3c
    1444:	7d ad       	ldd	r23, Y+61	; 0x3d
    1446:	8e ad       	ldd	r24, Y+62	; 0x3e
    1448:	9f ad       	ldd	r25, Y+63	; 0x3f
    144a:	29 97       	sbiw	r28, 0x09	; 9
    144c:	0e 94 e2 0e 	call	0x1dc4	; 0x1dc4 <__fixunssfsi>
    1450:	a1 96       	adiw	r28, 0x21	; 33
    1452:	6c af       	std	Y+60, r22	; 0x3c
    1454:	7d af       	std	Y+61, r23	; 0x3d
    1456:	8e af       	std	Y+62, r24	; 0x3e
    1458:	9f af       	std	Y+63, r25	; 0x3f
    145a:	a1 97       	sbiw	r28, 0x21	; 33
    145c:	6f 96       	adiw	r28, 0x1f	; 31
    145e:	ae ad       	ldd	r26, Y+62	; 0x3e
    1460:	bf ad       	ldd	r27, Y+63	; 0x3f
    1462:	6f 97       	sbiw	r28, 0x1f	; 31
    1464:	bf ab       	std	Y+55, r27	; 0x37
    1466:	ae ab       	std	Y+54, r26	; 0x36

00001468 <.Loc.361>:
		while(__ticks)
    1468:	10 c0       	rjmp	.+32     	; 0x148a <.L78>

0000146a <.L79>:
    146a:	80 e9       	ldi	r24, 0x90	; 144
    146c:	91 e0       	ldi	r25, 0x01	; 1
    146e:	99 af       	std	Y+57, r25	; 0x39
    1470:	88 af       	std	Y+56, r24	; 0x38

00001472 <.LBB68>:
    1472:	88 ad       	ldd	r24, Y+56	; 0x38
    1474:	99 ad       	ldd	r25, Y+57	; 0x39

00001476 <.L1^B3>:
    1476:	01 97       	sbiw	r24, 0x01	; 1
    1478:	f1 f7       	brne	.-4      	; 0x1476 <.L1^B3>
    147a:	99 af       	std	Y+57, r25	; 0x39
    147c:	88 af       	std	Y+56, r24	; 0x38

0000147e <.Loc.363>:
	...

00001480 <.LBE68>:
			__ticks --;
    1480:	8e a9       	ldd	r24, Y+54	; 0x36
    1482:	9f a9       	ldd	r25, Y+55	; 0x37
    1484:	01 97       	sbiw	r24, 0x01	; 1
    1486:	9f ab       	std	Y+55, r25	; 0x37
    1488:	8e ab       	std	Y+54, r24	; 0x36

0000148a <.L78>:
		while(__ticks)
    148a:	8e a9       	ldd	r24, Y+54	; 0x36
    148c:	9f a9       	ldd	r25, Y+55	; 0x37
    148e:	00 97       	sbiw	r24, 0x00	; 0
    1490:	61 f7       	brne	.-40     	; 0x146a <.L79>

00001492 <.Loc.366>:
		return;
    1492:	58 c0       	rjmp	.+176    	; 0x1544 <.L70>

00001494 <.L113>:
		__ticks = (uint16_t)__tmp;
    1494:	6a a9       	ldd	r22, Y+50	; 0x32
    1496:	7b a9       	ldd	r23, Y+51	; 0x33
    1498:	8c a9       	ldd	r24, Y+52	; 0x34
    149a:	9d a9       	ldd	r25, Y+53	; 0x35
    149c:	0e 94 e2 0e 	call	0x1dc4	; 0x1dc4 <__fixunssfsi>
    14a0:	a5 96       	adiw	r28, 0x25	; 37
    14a2:	6c af       	std	Y+60, r22	; 0x3c
    14a4:	7d af       	std	Y+61, r23	; 0x3d
    14a6:	8e af       	std	Y+62, r24	; 0x3e
    14a8:	9f af       	std	Y+63, r25	; 0x3f
    14aa:	a5 97       	sbiw	r28, 0x25	; 37
    14ac:	a3 96       	adiw	r28, 0x23	; 35
    14ae:	ee ad       	ldd	r30, Y+62	; 0x3e
    14b0:	ff ad       	ldd	r31, Y+63	; 0x3f
    14b2:	a3 97       	sbiw	r28, 0x23	; 35
    14b4:	ff ab       	std	Y+55, r31	; 0x37
    14b6:	ee ab       	std	Y+54, r30	; 0x36

000014b8 <.L75>:
    14b8:	8e a9       	ldd	r24, Y+54	; 0x36
    14ba:	9f a9       	ldd	r25, Y+55	; 0x37
    14bc:	9b af       	std	Y+59, r25	; 0x3b
    14be:	8a af       	std	Y+58, r24	; 0x3a

000014c0 <.LBB70>:
    14c0:	8a ad       	ldd	r24, Y+58	; 0x3a
    14c2:	9b ad       	ldd	r25, Y+59	; 0x3b

000014c4 <.L1^B4>:
    14c4:	01 97       	sbiw	r24, 0x01	; 1
    14c6:	f1 f7       	brne	.-4      	; 0x14c4 <.L1^B4>
    14c8:	9b af       	std	Y+59, r25	; 0x3b
    14ca:	8a af       	std	Y+58, r24	; 0x3a

000014cc <.Loc.369>:
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
#endif /* __AVR_TINY__ */
}
    14cc:	3b c0       	rjmp	.+118    	; 0x1544 <.L70>

000014ce <.L111>:
	}
	else if (__tmp > 255)
    14ce:	20 e0       	ldi	r18, 0x00	; 0
    14d0:	30 e0       	ldi	r19, 0x00	; 0
    14d2:	4f e7       	ldi	r20, 0x7F	; 127
    14d4:	53 e4       	ldi	r21, 0x43	; 67
    14d6:	6d a1       	ldd	r22, Y+37	; 0x25
    14d8:	7e a1       	ldd	r23, Y+38	; 0x26
    14da:	8f a1       	ldd	r24, Y+39	; 0x27
    14dc:	98 a5       	ldd	r25, Y+40	; 0x28
    14de:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <__gesf2>
    14e2:	88 23       	and	r24, r24
    14e4:	f9 f0       	breq	.+62     	; 0x1524 <.L114>
    14e6:	f4 f0       	brlt	.+60     	; 0x1524 <.L114>

000014e8 <.LBB72>:
	{
		uint16_t __ticks=(uint16_t)__tmp2;
    14e8:	69 a5       	ldd	r22, Y+41	; 0x29
    14ea:	7a a5       	ldd	r23, Y+42	; 0x2a
    14ec:	8b a5       	ldd	r24, Y+43	; 0x2b
    14ee:	9c a5       	ldd	r25, Y+44	; 0x2c
    14f0:	0e 94 e2 0e 	call	0x1dc4	; 0x1dc4 <__fixunssfsi>
    14f4:	a9 96       	adiw	r28, 0x29	; 41
    14f6:	6c af       	std	Y+60, r22	; 0x3c
    14f8:	7d af       	std	Y+61, r23	; 0x3d
    14fa:	8e af       	std	Y+62, r24	; 0x3e
    14fc:	9f af       	std	Y+63, r25	; 0x3f
    14fe:	a9 97       	sbiw	r28, 0x29	; 41
    1500:	a7 96       	adiw	r28, 0x27	; 39
    1502:	8e ad       	ldd	r24, Y+62	; 0x3e
    1504:	9f ad       	ldd	r25, Y+63	; 0x3f
    1506:	a7 97       	sbiw	r28, 0x27	; 39
    1508:	9d af       	std	Y+61, r25	; 0x3d
    150a:	8c af       	std	Y+60, r24	; 0x3c
    150c:	8c ad       	ldd	r24, Y+60	; 0x3c
    150e:	9d ad       	ldd	r25, Y+61	; 0x3d
    1510:	9f af       	std	Y+63, r25	; 0x3f
    1512:	8e af       	std	Y+62, r24	; 0x3e

00001514 <.LBB73>:
	__asm__ volatile (
    1514:	8e ad       	ldd	r24, Y+62	; 0x3e
    1516:	9f ad       	ldd	r25, Y+63	; 0x3f

00001518 <.L1^B5>:
    1518:	01 97       	sbiw	r24, 0x01	; 1
    151a:	f1 f7       	brne	.-4      	; 0x1518 <.L1^B5>
    151c:	9f af       	std	Y+63, r25	; 0x3f
    151e:	8e af       	std	Y+62, r24	; 0x3e

00001520 <.Loc.373>:
	...

00001522 <.LBE73>:
		_delay_loop_2(__ticks);
		return;
    1522:	24 c0       	rjmp	.+72     	; 0x156c <.L83>

00001524 <.L114>:
	}
	else
		__ticks = (uint8_t)__tmp;
    1524:	6d a1       	ldd	r22, Y+37	; 0x25
    1526:	7e a1       	ldd	r23, Y+38	; 0x26
    1528:	8f a1       	ldd	r24, Y+39	; 0x27
    152a:	98 a5       	ldd	r25, Y+40	; 0x28
    152c:	0e 94 e2 0e 	call	0x1dc4	; 0x1dc4 <__fixunssfsi>
    1530:	ad 96       	adiw	r28, 0x2d	; 45
    1532:	6c af       	std	Y+60, r22	; 0x3c
    1534:	7d af       	std	Y+61, r23	; 0x3d
    1536:	8e af       	std	Y+62, r24	; 0x3e
    1538:	9f af       	std	Y+63, r25	; 0x3f
    153a:	ad 97       	sbiw	r28, 0x2d	; 45
    153c:	aa 96       	adiw	r28, 0x2a	; 42
    153e:	9f ad       	ldd	r25, Y+63	; 0x3f
    1540:	aa 97       	sbiw	r28, 0x2a	; 42
    1542:	9d a7       	std	Y+45, r25	; 0x2d

00001544 <.L70>:
    1544:	2d a5       	ldd	r18, Y+45	; 0x2d
    1546:	ce 01       	movw	r24, r28
    1548:	80 5c       	subi	r24, 0xC0	; 192
    154a:	9f 4f       	sbci	r25, 0xFF	; 255
    154c:	dc 01       	movw	r26, r24
    154e:	2c 93       	st	X, r18

00001550 <.LBB75>:
	__asm__ volatile (
    1550:	ce 01       	movw	r24, r28
    1552:	80 5c       	subi	r24, 0xC0	; 192
    1554:	9f 4f       	sbci	r25, 0xFF	; 255
    1556:	fc 01       	movw	r30, r24
    1558:	80 81       	ld	r24, Z
    155a:	28 2f       	mov	r18, r24

0000155c <.L1^B6>:
    155c:	2a 95       	dec	r18
    155e:	f1 f7       	brne	.-4      	; 0x155c <.L1^B6>
    1560:	ce 01       	movw	r24, r28
    1562:	80 5c       	subi	r24, 0xC0	; 192
    1564:	9f 4f       	sbci	r25, 0xFF	; 255
    1566:	dc 01       	movw	r26, r24
    1568:	2c 93       	st	X, r18

0000156a <.Loc.377>:
	...

0000156c <.L83>:
    _delay_us(2);
    PORTL |= (1<<PL6);
    156c:	8b e0       	ldi	r24, 0x0B	; 11
    156e:	91 e0       	ldi	r25, 0x01	; 1
    1570:	fc 01       	movw	r30, r24
    1572:	20 81       	ld	r18, Z
    1574:	8b e0       	ldi	r24, 0x0B	; 11
    1576:	91 e0       	ldi	r25, 0x01	; 1

00001578 <.Loc.379>:
    1578:	20 64       	ori	r18, 0x40	; 64
    157a:	dc 01       	movw	r26, r24
    157c:	2c 93       	st	X, r18
    157e:	80 e0       	ldi	r24, 0x00	; 0
    1580:	90 e0       	ldi	r25, 0x00	; 0
    1582:	a0 e2       	ldi	r26, 0x20	; 32
    1584:	b1 e4       	ldi	r27, 0x41	; 65
    1586:	89 83       	std	Y+1, r24	; 0x01
    1588:	9a 83       	std	Y+2, r25	; 0x02
    158a:	ab 83       	std	Y+3, r26	; 0x03
    158c:	bc 83       	std	Y+4, r27	; 0x04

0000158e <.LBB77>:
	__tmp = ((F_CPU) / 3e6) * __us;
    158e:	2b ea       	ldi	r18, 0xAB	; 171
    1590:	3a ea       	ldi	r19, 0xAA	; 170
    1592:	4a ea       	ldi	r20, 0xAA	; 170
    1594:	50 e4       	ldi	r21, 0x40	; 64
    1596:	69 81       	ldd	r22, Y+1	; 0x01
    1598:	7a 81       	ldd	r23, Y+2	; 0x02
    159a:	8b 81       	ldd	r24, Y+3	; 0x03
    159c:	9c 81       	ldd	r25, Y+4	; 0x04
    159e:	0e 94 c8 0f 	call	0x1f90	; 0x1f90 <__mulsf3>
    15a2:	e1 96       	adiw	r28, 0x31	; 49
    15a4:	6c af       	std	Y+60, r22	; 0x3c
    15a6:	7d af       	std	Y+61, r23	; 0x3d
    15a8:	8e af       	std	Y+62, r24	; 0x3e
    15aa:	9f af       	std	Y+63, r25	; 0x3f
    15ac:	e1 97       	sbiw	r28, 0x31	; 49
    15ae:	e1 96       	adiw	r28, 0x31	; 49
    15b0:	8c ad       	ldd	r24, Y+60	; 0x3c
    15b2:	9d ad       	ldd	r25, Y+61	; 0x3d
    15b4:	ae ad       	ldd	r26, Y+62	; 0x3e
    15b6:	bf ad       	ldd	r27, Y+63	; 0x3f
    15b8:	e1 97       	sbiw	r28, 0x31	; 49
    15ba:	8d 83       	std	Y+5, r24	; 0x05
    15bc:	9e 83       	std	Y+6, r25	; 0x06
    15be:	af 83       	std	Y+7, r26	; 0x07
    15c0:	b8 87       	std	Y+8, r27	; 0x08

000015c2 <.Loc.381>:
	__tmp2 = ((F_CPU) / 4e6) * __us;
    15c2:	20 e0       	ldi	r18, 0x00	; 0
    15c4:	30 e0       	ldi	r19, 0x00	; 0
    15c6:	40 e8       	ldi	r20, 0x80	; 128
    15c8:	50 e4       	ldi	r21, 0x40	; 64
    15ca:	69 81       	ldd	r22, Y+1	; 0x01
    15cc:	7a 81       	ldd	r23, Y+2	; 0x02
    15ce:	8b 81       	ldd	r24, Y+3	; 0x03
    15d0:	9c 81       	ldd	r25, Y+4	; 0x04
    15d2:	0e 94 c8 0f 	call	0x1f90	; 0x1f90 <__mulsf3>
    15d6:	e5 96       	adiw	r28, 0x35	; 53
    15d8:	6c af       	std	Y+60, r22	; 0x3c
    15da:	7d af       	std	Y+61, r23	; 0x3d
    15dc:	8e af       	std	Y+62, r24	; 0x3e
    15de:	9f af       	std	Y+63, r25	; 0x3f
    15e0:	e5 97       	sbiw	r28, 0x35	; 53
    15e2:	e5 96       	adiw	r28, 0x35	; 53
    15e4:	8c ad       	ldd	r24, Y+60	; 0x3c
    15e6:	9d ad       	ldd	r25, Y+61	; 0x3d
    15e8:	ae ad       	ldd	r26, Y+62	; 0x3e
    15ea:	bf ad       	ldd	r27, Y+63	; 0x3f
    15ec:	e5 97       	sbiw	r28, 0x35	; 53
    15ee:	89 87       	std	Y+9, r24	; 0x09
    15f0:	9a 87       	std	Y+10, r25	; 0x0a
    15f2:	ab 87       	std	Y+11, r26	; 0x0b
    15f4:	bc 87       	std	Y+12, r27	; 0x0c

000015f6 <.Loc.382>:
	if (__tmp < 1.0)
    15f6:	20 e0       	ldi	r18, 0x00	; 0
    15f8:	30 e0       	ldi	r19, 0x00	; 0
    15fa:	40 e8       	ldi	r20, 0x80	; 128
    15fc:	5f e3       	ldi	r21, 0x3F	; 63
    15fe:	6d 81       	ldd	r22, Y+5	; 0x05
    1600:	7e 81       	ldd	r23, Y+6	; 0x06
    1602:	8f 81       	ldd	r24, Y+7	; 0x07
    1604:	98 85       	ldd	r25, Y+8	; 0x08
    1606:	0e 94 64 0e 	call	0x1cc8	; 0x1cc8 <__cmpsf2>
    160a:	88 23       	and	r24, r24
    160c:	1c f4       	brge	.+6      	; 0x1614 <.L115>

0000160e <.Loc.383>:
		__ticks = 1;
    160e:	81 e0       	ldi	r24, 0x01	; 1
    1610:	8d 87       	std	Y+13, r24	; 0x0d
    1612:	13 c1       	rjmp	.+550    	; 0x183a <.L86>

00001614 <.L115>:
	else if (__tmp2 > 65535)
    1614:	20 e0       	ldi	r18, 0x00	; 0
    1616:	3f ef       	ldi	r19, 0xFF	; 255
    1618:	4f e7       	ldi	r20, 0x7F	; 127
    161a:	57 e4       	ldi	r21, 0x47	; 71
    161c:	69 85       	ldd	r22, Y+9	; 0x09
    161e:	7a 85       	ldd	r23, Y+10	; 0x0a
    1620:	8b 85       	ldd	r24, Y+11	; 0x0b
    1622:	9c 85       	ldd	r25, Y+12	; 0x0c
    1624:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <__gesf2>
    1628:	88 23       	and	r24, r24
    162a:	09 f0       	breq	.+2      	; 0x162e <L0^A>

0000162c <L0^A>:
    162c:	0c f4       	brge	.+2      	; 0x1630 <.Loc.385>

0000162e <L0^A>:
    162e:	c2 c0       	rjmp	.+388    	; 0x17b4 <.L116>

00001630 <.Loc.385>:
		_delay_ms(__us / 1000.0);
    1630:	20 e0       	ldi	r18, 0x00	; 0
    1632:	30 e0       	ldi	r19, 0x00	; 0
    1634:	4a e7       	ldi	r20, 0x7A	; 122
    1636:	54 e4       	ldi	r21, 0x44	; 68
    1638:	69 81       	ldd	r22, Y+1	; 0x01
    163a:	7a 81       	ldd	r23, Y+2	; 0x02
    163c:	8b 81       	ldd	r24, Y+3	; 0x03
    163e:	9c 81       	ldd	r25, Y+4	; 0x04
    1640:	0e 94 69 0e 	call	0x1cd2	; 0x1cd2 <__divsf3>
    1644:	e9 96       	adiw	r28, 0x39	; 57
    1646:	6c af       	std	Y+60, r22	; 0x3c
    1648:	7d af       	std	Y+61, r23	; 0x3d
    164a:	8e af       	std	Y+62, r24	; 0x3e
    164c:	9f af       	std	Y+63, r25	; 0x3f
    164e:	e9 97       	sbiw	r28, 0x39	; 57
    1650:	e9 96       	adiw	r28, 0x39	; 57
    1652:	8c ad       	ldd	r24, Y+60	; 0x3c
    1654:	9d ad       	ldd	r25, Y+61	; 0x3d
    1656:	ae ad       	ldd	r26, Y+62	; 0x3e
    1658:	bf ad       	ldd	r27, Y+63	; 0x3f
    165a:	e9 97       	sbiw	r28, 0x39	; 57
    165c:	8e 87       	std	Y+14, r24	; 0x0e
    165e:	9f 87       	std	Y+15, r25	; 0x0f
    1660:	a8 8b       	std	Y+16, r26	; 0x10
    1662:	b9 8b       	std	Y+17, r27	; 0x11

00001664 <.LBB79>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    1664:	20 e0       	ldi	r18, 0x00	; 0
    1666:	30 e0       	ldi	r19, 0x00	; 0
    1668:	4a e7       	ldi	r20, 0x7A	; 122
    166a:	55 e4       	ldi	r21, 0x45	; 69
    166c:	6e 85       	ldd	r22, Y+14	; 0x0e
    166e:	7f 85       	ldd	r23, Y+15	; 0x0f
    1670:	88 89       	ldd	r24, Y+16	; 0x10
    1672:	99 89       	ldd	r25, Y+17	; 0x11
    1674:	0e 94 c8 0f 	call	0x1f90	; 0x1f90 <__mulsf3>
    1678:	ed 96       	adiw	r28, 0x3d	; 61
    167a:	6c af       	std	Y+60, r22	; 0x3c
    167c:	7d af       	std	Y+61, r23	; 0x3d
    167e:	8e af       	std	Y+62, r24	; 0x3e
    1680:	9f af       	std	Y+63, r25	; 0x3f
    1682:	ed 97       	sbiw	r28, 0x3d	; 61
    1684:	ed 96       	adiw	r28, 0x3d	; 61
    1686:	8c ad       	ldd	r24, Y+60	; 0x3c
    1688:	9d ad       	ldd	r25, Y+61	; 0x3d
    168a:	ae ad       	ldd	r26, Y+62	; 0x3e
    168c:	bf ad       	ldd	r27, Y+63	; 0x3f
    168e:	ed 97       	sbiw	r28, 0x3d	; 61
    1690:	8a 8b       	std	Y+18, r24	; 0x12
    1692:	9b 8b       	std	Y+19, r25	; 0x13
    1694:	ac 8b       	std	Y+20, r26	; 0x14
    1696:	bd 8b       	std	Y+21, r27	; 0x15

00001698 <.Loc.387>:
	if (__tmp < 1.0)
    1698:	20 e0       	ldi	r18, 0x00	; 0
    169a:	30 e0       	ldi	r19, 0x00	; 0
    169c:	40 e8       	ldi	r20, 0x80	; 128
    169e:	5f e3       	ldi	r21, 0x3F	; 63
    16a0:	6a 89       	ldd	r22, Y+18	; 0x12
    16a2:	7b 89       	ldd	r23, Y+19	; 0x13
    16a4:	8c 89       	ldd	r24, Y+20	; 0x14
    16a6:	9d 89       	ldd	r25, Y+21	; 0x15
    16a8:	0e 94 64 0e 	call	0x1cc8	; 0x1cc8 <__cmpsf2>
    16ac:	88 23       	and	r24, r24
    16ae:	2c f4       	brge	.+10     	; 0x16ba <.L117>

000016b0 <.Loc.388>:
		__ticks = 1;
    16b0:	81 e0       	ldi	r24, 0x01	; 1
    16b2:	90 e0       	ldi	r25, 0x00	; 0
    16b4:	9f 8b       	std	Y+23, r25	; 0x17
    16b6:	8e 8b       	std	Y+22, r24	; 0x16
    16b8:	72 c0       	rjmp	.+228    	; 0x179e <.L91>

000016ba <.L117>:
	else if (__tmp > 65535)
    16ba:	20 e0       	ldi	r18, 0x00	; 0
    16bc:	3f ef       	ldi	r19, 0xFF	; 255
    16be:	4f e7       	ldi	r20, 0x7F	; 127
    16c0:	57 e4       	ldi	r21, 0x47	; 71
    16c2:	6a 89       	ldd	r22, Y+18	; 0x12
    16c4:	7b 89       	ldd	r23, Y+19	; 0x13
    16c6:	8c 89       	ldd	r24, Y+20	; 0x14
    16c8:	9d 89       	ldd	r25, Y+21	; 0x15
    16ca:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <__gesf2>
    16ce:	88 23       	and	r24, r24
    16d0:	09 f0       	breq	.+2      	; 0x16d4 <L0^A>

000016d2 <L0^A>:
    16d2:	0c f4       	brge	.+2      	; 0x16d6 <.Loc.390>

000016d4 <L0^A>:
    16d4:	4e c0       	rjmp	.+156    	; 0x1772 <.L118>

000016d6 <.Loc.390>:
		__ticks = (uint16_t) (__ms * 10.0);
    16d6:	20 e0       	ldi	r18, 0x00	; 0
    16d8:	30 e0       	ldi	r19, 0x00	; 0
    16da:	40 e2       	ldi	r20, 0x20	; 32
    16dc:	51 e4       	ldi	r21, 0x41	; 65
    16de:	6e 85       	ldd	r22, Y+14	; 0x0e
    16e0:	7f 85       	ldd	r23, Y+15	; 0x0f
    16e2:	88 89       	ldd	r24, Y+16	; 0x10
    16e4:	99 89       	ldd	r25, Y+17	; 0x11
    16e6:	0e 94 c8 0f 	call	0x1f90	; 0x1f90 <__mulsf3>
    16ea:	c3 58       	subi	r28, 0x83	; 131
    16ec:	df 4f       	sbci	r29, 0xFF	; 255
    16ee:	68 83       	st	Y, r22
    16f0:	79 83       	std	Y+1, r23	; 0x01
    16f2:	8a 83       	std	Y+2, r24	; 0x02
    16f4:	9b 83       	std	Y+3, r25	; 0x03
    16f6:	cd 57       	subi	r28, 0x7D	; 125
    16f8:	d0 40       	sbci	r29, 0x00	; 0
    16fa:	c3 58       	subi	r28, 0x83	; 131
    16fc:	df 4f       	sbci	r29, 0xFF	; 255
    16fe:	88 81       	ld	r24, Y
    1700:	99 81       	ldd	r25, Y+1	; 0x01
    1702:	aa 81       	ldd	r26, Y+2	; 0x02
    1704:	bb 81       	ldd	r27, Y+3	; 0x03
    1706:	cd 57       	subi	r28, 0x7D	; 125
    1708:	d0 40       	sbci	r29, 0x00	; 0
    170a:	25 96       	adiw	r28, 0x05	; 5
    170c:	8c af       	std	Y+60, r24	; 0x3c
    170e:	9d af       	std	Y+61, r25	; 0x3d
    1710:	ae af       	std	Y+62, r26	; 0x3e
    1712:	bf af       	std	Y+63, r27	; 0x3f
    1714:	25 97       	sbiw	r28, 0x05	; 5

00001716 <.Loc.391>:
    1716:	25 96       	adiw	r28, 0x05	; 5
    1718:	6c ad       	ldd	r22, Y+60	; 0x3c
    171a:	7d ad       	ldd	r23, Y+61	; 0x3d
    171c:	8e ad       	ldd	r24, Y+62	; 0x3e
    171e:	9f ad       	ldd	r25, Y+63	; 0x3f
    1720:	25 97       	sbiw	r28, 0x05	; 5
    1722:	0e 94 e2 0e 	call	0x1dc4	; 0x1dc4 <__fixunssfsi>
    1726:	cf 57       	subi	r28, 0x7F	; 127
    1728:	df 4f       	sbci	r29, 0xFF	; 255
    172a:	68 83       	st	Y, r22
    172c:	79 83       	std	Y+1, r23	; 0x01
    172e:	8a 83       	std	Y+2, r24	; 0x02
    1730:	9b 83       	std	Y+3, r25	; 0x03
    1732:	c1 58       	subi	r28, 0x81	; 129
    1734:	d0 40       	sbci	r29, 0x00	; 0
    1736:	cf 57       	subi	r28, 0x7F	; 127
    1738:	df 4f       	sbci	r29, 0xFF	; 255
    173a:	a8 81       	ld	r26, Y
    173c:	b9 81       	ldd	r27, Y+1	; 0x01
    173e:	c1 58       	subi	r28, 0x81	; 129
    1740:	d0 40       	sbci	r29, 0x00	; 0
    1742:	bf 8b       	std	Y+23, r27	; 0x17
    1744:	ae 8b       	std	Y+22, r26	; 0x16

00001746 <.Loc.392>:
		while(__ticks)
    1746:	10 c0       	rjmp	.+32     	; 0x1768 <.L94>

00001748 <.L95>:
    1748:	80 e9       	ldi	r24, 0x90	; 144
    174a:	91 e0       	ldi	r25, 0x01	; 1
    174c:	99 8f       	std	Y+25, r25	; 0x19
    174e:	88 8f       	std	Y+24, r24	; 0x18

00001750 <.LBB81>:
	__asm__ volatile (
    1750:	88 8d       	ldd	r24, Y+24	; 0x18
    1752:	99 8d       	ldd	r25, Y+25	; 0x19

00001754 <.L1^B7>:
    1754:	01 97       	sbiw	r24, 0x01	; 1
    1756:	f1 f7       	brne	.-4      	; 0x1754 <.L1^B7>
    1758:	99 8f       	std	Y+25, r25	; 0x19
    175a:	88 8f       	std	Y+24, r24	; 0x18

0000175c <.Loc.394>:
	...

0000175e <.LBE81>:
			__ticks --;
    175e:	8e 89       	ldd	r24, Y+22	; 0x16
    1760:	9f 89       	ldd	r25, Y+23	; 0x17
    1762:	01 97       	sbiw	r24, 0x01	; 1
    1764:	9f 8b       	std	Y+23, r25	; 0x17
    1766:	8e 8b       	std	Y+22, r24	; 0x16

00001768 <.L94>:
		while(__ticks)
    1768:	8e 89       	ldd	r24, Y+22	; 0x16
    176a:	9f 89       	ldd	r25, Y+23	; 0x17
    176c:	00 97       	sbiw	r24, 0x00	; 0
    176e:	61 f7       	brne	.-40     	; 0x1748 <.L95>

00001770 <.Loc.397>:
		return;
    1770:	64 c0       	rjmp	.+200    	; 0x183a <.L86>

00001772 <.L118>:
		__ticks = (uint16_t)__tmp;
    1772:	6a 89       	ldd	r22, Y+18	; 0x12
    1774:	7b 89       	ldd	r23, Y+19	; 0x13
    1776:	8c 89       	ldd	r24, Y+20	; 0x14
    1778:	9d 89       	ldd	r25, Y+21	; 0x15
    177a:	0e 94 e2 0e 	call	0x1dc4	; 0x1dc4 <__fixunssfsi>
    177e:	cb 57       	subi	r28, 0x7B	; 123
    1780:	df 4f       	sbci	r29, 0xFF	; 255
    1782:	68 83       	st	Y, r22
    1784:	79 83       	std	Y+1, r23	; 0x01
    1786:	8a 83       	std	Y+2, r24	; 0x02
    1788:	9b 83       	std	Y+3, r25	; 0x03
    178a:	c5 58       	subi	r28, 0x85	; 133
    178c:	d0 40       	sbci	r29, 0x00	; 0
    178e:	cb 57       	subi	r28, 0x7B	; 123
    1790:	df 4f       	sbci	r29, 0xFF	; 255
    1792:	e8 81       	ld	r30, Y
    1794:	f9 81       	ldd	r31, Y+1	; 0x01
    1796:	c5 58       	subi	r28, 0x85	; 133
    1798:	d0 40       	sbci	r29, 0x00	; 0
    179a:	ff 8b       	std	Y+23, r31	; 0x17
    179c:	ee 8b       	std	Y+22, r30	; 0x16

0000179e <.L91>:
    179e:	8e 89       	ldd	r24, Y+22	; 0x16
    17a0:	9f 89       	ldd	r25, Y+23	; 0x17
    17a2:	9b 8f       	std	Y+27, r25	; 0x1b
    17a4:	8a 8f       	std	Y+26, r24	; 0x1a

000017a6 <.LBB83>:
    17a6:	8a 8d       	ldd	r24, Y+26	; 0x1a
    17a8:	9b 8d       	ldd	r25, Y+27	; 0x1b

000017aa <.L1^B8>:
    17aa:	01 97       	sbiw	r24, 0x01	; 1
    17ac:	f1 f7       	brne	.-4      	; 0x17aa <.L1^B8>
    17ae:	9b 8f       	std	Y+27, r25	; 0x1b
    17b0:	8a 8f       	std	Y+26, r24	; 0x1a

000017b2 <.Loc.400>:
}
    17b2:	43 c0       	rjmp	.+134    	; 0x183a <.L86>

000017b4 <.L116>:
	else if (__tmp > 255)
    17b4:	20 e0       	ldi	r18, 0x00	; 0
    17b6:	30 e0       	ldi	r19, 0x00	; 0
    17b8:	4f e7       	ldi	r20, 0x7F	; 127
    17ba:	53 e4       	ldi	r21, 0x43	; 67
    17bc:	6d 81       	ldd	r22, Y+5	; 0x05
    17be:	7e 81       	ldd	r23, Y+6	; 0x06
    17c0:	8f 81       	ldd	r24, Y+7	; 0x07
    17c2:	98 85       	ldd	r25, Y+8	; 0x08
    17c4:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <__gesf2>
    17c8:	88 23       	and	r24, r24
    17ca:	19 f1       	breq	.+70     	; 0x1812 <.L119>
    17cc:	14 f1       	brlt	.+68     	; 0x1812 <.L119>

000017ce <.LBB85>:
		uint16_t __ticks=(uint16_t)__tmp2;
    17ce:	69 85       	ldd	r22, Y+9	; 0x09
    17d0:	7a 85       	ldd	r23, Y+10	; 0x0a
    17d2:	8b 85       	ldd	r24, Y+11	; 0x0b
    17d4:	9c 85       	ldd	r25, Y+12	; 0x0c
    17d6:	0e 94 e2 0e 	call	0x1dc4	; 0x1dc4 <__fixunssfsi>
    17da:	c7 57       	subi	r28, 0x77	; 119
    17dc:	df 4f       	sbci	r29, 0xFF	; 255
    17de:	68 83       	st	Y, r22
    17e0:	79 83       	std	Y+1, r23	; 0x01
    17e2:	8a 83       	std	Y+2, r24	; 0x02
    17e4:	9b 83       	std	Y+3, r25	; 0x03
    17e6:	c9 58       	subi	r28, 0x89	; 137
    17e8:	d0 40       	sbci	r29, 0x00	; 0
    17ea:	c7 57       	subi	r28, 0x77	; 119
    17ec:	df 4f       	sbci	r29, 0xFF	; 255
    17ee:	88 81       	ld	r24, Y
    17f0:	99 81       	ldd	r25, Y+1	; 0x01
    17f2:	c9 58       	subi	r28, 0x89	; 137
    17f4:	d0 40       	sbci	r29, 0x00	; 0
    17f6:	9d 8f       	std	Y+29, r25	; 0x1d
    17f8:	8c 8f       	std	Y+28, r24	; 0x1c
    17fa:	8c 8d       	ldd	r24, Y+28	; 0x1c
    17fc:	9d 8d       	ldd	r25, Y+29	; 0x1d
    17fe:	9f 8f       	std	Y+31, r25	; 0x1f
    1800:	8e 8f       	std	Y+30, r24	; 0x1e

00001802 <.LBB86>:
	__asm__ volatile (
    1802:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1804:	9f 8d       	ldd	r25, Y+31	; 0x1f

00001806 <.L1^B9>:
    1806:	01 97       	sbiw	r24, 0x01	; 1
    1808:	f1 f7       	brne	.-4      	; 0x1806 <.L1^B9>
    180a:	9f 8f       	std	Y+31, r25	; 0x1f
    180c:	8e 8f       	std	Y+30, r24	; 0x1e

0000180e <.Loc.404>:
	...

00001810 <.LBE86>:
		return;
    1810:	1b c0       	rjmp	.+54     	; 0x1848 <.L99>

00001812 <.L119>:
		__ticks = (uint8_t)__tmp;
    1812:	6d 81       	ldd	r22, Y+5	; 0x05
    1814:	7e 81       	ldd	r23, Y+6	; 0x06
    1816:	8f 81       	ldd	r24, Y+7	; 0x07
    1818:	98 85       	ldd	r25, Y+8	; 0x08
    181a:	0e 94 e2 0e 	call	0x1dc4	; 0x1dc4 <__fixunssfsi>
    181e:	c3 57       	subi	r28, 0x73	; 115
    1820:	df 4f       	sbci	r29, 0xFF	; 255
    1822:	68 83       	st	Y, r22
    1824:	79 83       	std	Y+1, r23	; 0x01
    1826:	8a 83       	std	Y+2, r24	; 0x02
    1828:	9b 83       	std	Y+3, r25	; 0x03
    182a:	cd 58       	subi	r28, 0x8D	; 141
    182c:	d0 40       	sbci	r29, 0x00	; 0
    182e:	c3 57       	subi	r28, 0x73	; 115
    1830:	df 4f       	sbci	r29, 0xFF	; 255
    1832:	98 81       	ld	r25, Y
    1834:	cd 58       	subi	r28, 0x8D	; 141
    1836:	d0 40       	sbci	r29, 0x00	; 0
    1838:	9d 87       	std	Y+13, r25	; 0x0d

0000183a <.L86>:
    183a:	8d 85       	ldd	r24, Y+13	; 0x0d
    183c:	88 a3       	std	Y+32, r24	; 0x20

0000183e <.LBB88>:
	__asm__ volatile (
    183e:	88 a1       	ldd	r24, Y+32	; 0x20

00001840 <.L1^B10>:
    1840:	8a 95       	dec	r24
    1842:	f1 f7       	brne	.-4      	; 0x1840 <.L1^B10>
    1844:	88 a3       	std	Y+32, r24	; 0x20

00001846 <.Loc.408>:
	...

00001848 <.L99>:
    _delay_us(10);
    PORTL &= (~(1<<PL6));
    1848:	8b e0       	ldi	r24, 0x0B	; 11
    184a:	91 e0       	ldi	r25, 0x01	; 1
    184c:	dc 01       	movw	r26, r24
    184e:	2c 91       	ld	r18, X

00001850 <.Loc.410>:
    1850:	8b e0       	ldi	r24, 0x0B	; 11
    1852:	91 e0       	ldi	r25, 0x01	; 1

00001854 <.Loc.411>:
    1854:	2f 7b       	andi	r18, 0xBF	; 191
    1856:	fc 01       	movw	r30, r24
    1858:	20 83       	st	Z, r18

0000185a <.Loc.412>:
}
    185a:	00 00       	nop
    185c:	c0 57       	subi	r28, 0x70	; 112
    185e:	df 4f       	sbci	r29, 0xFF	; 255
    1860:	0f b6       	in	r0, 0x3f	; 63
    1862:	f8 94       	cli
    1864:	de bf       	out	0x3e, r29	; 62
    1866:	0f be       	out	0x3f, r0	; 63
    1868:	cd bf       	out	0x3d, r28	; 61
    186a:	df 91       	pop	r29
    186c:	cf 91       	pop	r28
    186e:	08 95       	ret

00001870 <__vector_15>:
ISR(TIMER2_OVF_vect){
    1870:	1f 92       	push	r1
    1872:	0f 92       	push	r0
    1874:	0f b6       	in	r0, 0x3f	; 63
    1876:	0f 92       	push	r0
    1878:	11 24       	eor	r1, r1
    187a:	8f 93       	push	r24
    187c:	9f 93       	push	r25
    187e:	cf 93       	push	r28
    1880:	df 93       	push	r29
    1882:	cd b7       	in	r28, 0x3d	; 61
    1884:	de b7       	in	r29, 0x3e	; 62

00001886 <.Loc.414>:
    count++;
    1886:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <count>
    188a:	90 91 2f 02 	lds	r25, 0x022F	; 0x80022f <count+0x1>
    188e:	01 96       	adiw	r24, 0x01	; 1
    1890:	90 93 2f 02 	sts	0x022F, r25	; 0x80022f <count+0x1>
    1894:	80 93 2e 02 	sts	0x022E, r24	; 0x80022e <count>

00001898 <.Loc.415>:
}
    1898:	00 00       	nop
    189a:	df 91       	pop	r29
    189c:	cf 91       	pop	r28
    189e:	9f 91       	pop	r25
    18a0:	8f 91       	pop	r24
    18a2:	0f 90       	pop	r0
    18a4:	0f be       	out	0x3f, r0	; 63
    18a6:	0f 90       	pop	r0
    18a8:	1f 90       	pop	r1
    18aa:	18 95       	reti

000018ac <init_display_meneer>:
	~0x66, ~0xB6, ~0xBE, ~0xE0,
	~0xFE, ~0xF6, ~0xEE, ~0x3E,
	~0x9C, ~0x7A, ~0x9E, ~0x8E };

void init_display_meneer (void)
{
    18ac:	cf 93       	push	r28
    18ae:	df 93       	push	r29
    18b0:	cd b7       	in	r28, 0x3d	; 61
    18b2:	de b7       	in	r29, 0x3e	; 62

000018b4 <.Loc.417>:
	// Initialiseer de pinnen voor datain, shiftclk en latchclk als output
	DDR_SDI    |= (1 << SDI_BIT);
    18b4:	81 e0       	ldi	r24, 0x01	; 1
    18b6:	91 e0       	ldi	r25, 0x01	; 1
    18b8:	fc 01       	movw	r30, r24
    18ba:	20 81       	ld	r18, Z
    18bc:	81 e0       	ldi	r24, 0x01	; 1
    18be:	91 e0       	ldi	r25, 0x01	; 1

000018c0 <.Loc.418>:
    18c0:	20 62       	ori	r18, 0x20	; 32
    18c2:	fc 01       	movw	r30, r24
    18c4:	20 83       	st	Z, r18

000018c6 <.Loc.419>:
	DDR_SFTCLK |= (1 << SFTCLK_BIT);
    18c6:	81 e0       	ldi	r24, 0x01	; 1
    18c8:	91 e0       	ldi	r25, 0x01	; 1
    18ca:	fc 01       	movw	r30, r24
    18cc:	20 81       	ld	r18, Z
    18ce:	81 e0       	ldi	r24, 0x01	; 1
    18d0:	91 e0       	ldi	r25, 0x01	; 1

000018d2 <.Loc.420>:
    18d2:	20 61       	ori	r18, 0x10	; 16
    18d4:	fc 01       	movw	r30, r24
    18d6:	20 83       	st	Z, r18

000018d8 <.Loc.421>:
	DDR_LCHCLK |= (1 << LCHCLK_BIT);
    18d8:	83 e3       	ldi	r24, 0x33	; 51
    18da:	90 e0       	ldi	r25, 0x00	; 0
    18dc:	fc 01       	movw	r30, r24
    18de:	20 81       	ld	r18, Z
    18e0:	83 e3       	ldi	r24, 0x33	; 51
    18e2:	90 e0       	ldi	r25, 0x00	; 0

000018e4 <.Loc.422>:
    18e4:	20 62       	ori	r18, 0x20	; 32
    18e6:	fc 01       	movw	r30, r24
    18e8:	20 83       	st	Z, r18

000018ea <.Loc.423>:

	// Maak shiftclk en latchclk laag
	PORT_SFTCLK &= ~(1 << SFTCLK_BIT);
    18ea:	82 e0       	ldi	r24, 0x02	; 2
    18ec:	91 e0       	ldi	r25, 0x01	; 1
    18ee:	fc 01       	movw	r30, r24
    18f0:	20 81       	ld	r18, Z

000018f2 <.Loc.424>:
    18f2:	82 e0       	ldi	r24, 0x02	; 2
    18f4:	91 e0       	ldi	r25, 0x01	; 1

000018f6 <.Loc.425>:
    18f6:	2f 7e       	andi	r18, 0xEF	; 239
    18f8:	fc 01       	movw	r30, r24
    18fa:	20 83       	st	Z, r18

000018fc <.Loc.426>:
	PORT_LCHCLK &= ~(1 << LCHCLK_BIT);
    18fc:	84 e3       	ldi	r24, 0x34	; 52
    18fe:	90 e0       	ldi	r25, 0x00	; 0
    1900:	fc 01       	movw	r30, r24
    1902:	20 81       	ld	r18, Z

00001904 <.Loc.427>:
    1904:	84 e3       	ldi	r24, 0x34	; 52
    1906:	90 e0       	ldi	r25, 0x00	; 0

00001908 <.Loc.428>:
    1908:	2f 7d       	andi	r18, 0xDF	; 223
    190a:	fc 01       	movw	r30, r24
    190c:	20 83       	st	Z, r18

0000190e <.Loc.429>:
}
    190e:	00 00       	nop
    1910:	df 91       	pop	r29
    1912:	cf 91       	pop	r28
    1914:	08 95       	ret

00001916 <send_data>:

void send_data(char data)
{
    1916:	cf 93       	push	r28
    1918:	df 93       	push	r29
    191a:	00 d0       	rcall	.+0      	; 0x191c <L0^A>

0000191c <L0^A>:
    191c:	0f 92       	push	r0
    191e:	0f 92       	push	r0
    1920:	cd b7       	in	r28, 0x3d	; 61
    1922:	de b7       	in	r29, 0x3e	; 62
    1924:	8d 83       	std	Y+5, r24	; 0x05

00001926 <.LBB90>:
	for (unsigned i = 0; i < 8; i++)
    1926:	1a 82       	std	Y+2, r1	; 0x02
    1928:	19 82       	std	Y+1, r1	; 0x01

0000192a <.Loc.432>:
    192a:	39 c0       	rjmp	.+114    	; 0x199e <.L123>

0000192c <.L126>:
	// Herhaal voor alle bits in een char
	{
		// Bepaal de waarde van de bit die je naar het schuifregister
		// wil sturen
		int bit = data & 1;
    192c:	8d 81       	ldd	r24, Y+5	; 0x05
    192e:	08 2e       	mov	r0, r24
    1930:	00 0c       	add	r0, r0
    1932:	99 0b       	sbc	r25, r25

00001934 <.Loc.434>:
    1934:	81 70       	andi	r24, 0x01	; 1
    1936:	99 27       	eor	r25, r25
    1938:	9c 83       	std	Y+4, r25	; 0x04
    193a:	8b 83       	std	Y+3, r24	; 0x03

0000193c <.Loc.435>:
		data >>= 1;
    193c:	8d 81       	ldd	r24, Y+5	; 0x05
    193e:	85 95       	asr	r24
    1940:	8d 83       	std	Y+5, r24	; 0x05

00001942 <.Loc.436>:

		// Maak de juiste pin hoog of laag op basis van de bepaalde waarde
		// van het bit
		if (bit)
    1942:	8b 81       	ldd	r24, Y+3	; 0x03
    1944:	9c 81       	ldd	r25, Y+4	; 0x04
    1946:	00 97       	sbiw	r24, 0x00	; 0
    1948:	51 f0       	breq	.+20     	; 0x195e <.L124>

0000194a <.Loc.437>:
		{
			PORT_SDI |= (1 << SDI_BIT);
    194a:	82 e0       	ldi	r24, 0x02	; 2
    194c:	91 e0       	ldi	r25, 0x01	; 1
    194e:	fc 01       	movw	r30, r24
    1950:	20 81       	ld	r18, Z
    1952:	82 e0       	ldi	r24, 0x02	; 2
    1954:	91 e0       	ldi	r25, 0x01	; 1

00001956 <.Loc.438>:
    1956:	20 62       	ori	r18, 0x20	; 32
    1958:	fc 01       	movw	r30, r24
    195a:	20 83       	st	Z, r18
    195c:	09 c0       	rjmp	.+18     	; 0x1970 <.L125>

0000195e <.L124>:
		}
		else
		{
			PORT_SDI &= ~(1 << SDI_BIT);
    195e:	82 e0       	ldi	r24, 0x02	; 2
    1960:	91 e0       	ldi	r25, 0x01	; 1
    1962:	fc 01       	movw	r30, r24
    1964:	20 81       	ld	r18, Z

00001966 <.Loc.440>:
    1966:	82 e0       	ldi	r24, 0x02	; 2
    1968:	91 e0       	ldi	r25, 0x01	; 1

0000196a <.Loc.441>:
    196a:	2f 7d       	andi	r18, 0xDF	; 223
    196c:	fc 01       	movw	r30, r24
    196e:	20 83       	st	Z, r18

00001970 <.L125>:
		}

		// Toggle shiftclk (hoeveel tijd moest het signaal minimaal hoog zijn?)
		// Puls moet minimaal 13 ns hoog zijn. Een clk cycle op de Arduino duurt
		// 62 ns, dus signaal kan hoog en de volgende cycle weer omlaag
		PORT_SFTCLK |= (1 << SFTCLK_BIT);
    1970:	82 e0       	ldi	r24, 0x02	; 2
    1972:	91 e0       	ldi	r25, 0x01	; 1
    1974:	fc 01       	movw	r30, r24
    1976:	20 81       	ld	r18, Z
    1978:	82 e0       	ldi	r24, 0x02	; 2
    197a:	91 e0       	ldi	r25, 0x01	; 1

0000197c <.Loc.443>:
    197c:	20 61       	ori	r18, 0x10	; 16
    197e:	fc 01       	movw	r30, r24
    1980:	20 83       	st	Z, r18

00001982 <.Loc.444>:
		PORT_SFTCLK &= ~(1 << SFTCLK_BIT);
    1982:	82 e0       	ldi	r24, 0x02	; 2
    1984:	91 e0       	ldi	r25, 0x01	; 1
    1986:	fc 01       	movw	r30, r24
    1988:	20 81       	ld	r18, Z

0000198a <.Loc.445>:
    198a:	82 e0       	ldi	r24, 0x02	; 2
    198c:	91 e0       	ldi	r25, 0x01	; 1

0000198e <.Loc.446>:
    198e:	2f 7e       	andi	r18, 0xEF	; 239
    1990:	fc 01       	movw	r30, r24
    1992:	20 83       	st	Z, r18

00001994 <.LBE91>:
	for (unsigned i = 0; i < 8; i++)
    1994:	89 81       	ldd	r24, Y+1	; 0x01
    1996:	9a 81       	ldd	r25, Y+2	; 0x02
    1998:	01 96       	adiw	r24, 0x01	; 1
    199a:	9a 83       	std	Y+2, r25	; 0x02
    199c:	89 83       	std	Y+1, r24	; 0x01

0000199e <.L123>:
    199e:	89 81       	ldd	r24, Y+1	; 0x01
    19a0:	9a 81       	ldd	r25, Y+2	; 0x02
    19a2:	87 30       	cpi	r24, 0x07	; 7
    19a4:	91 05       	cpc	r25, r1
    19a6:	11 f2       	breq	.-124    	; 0x192c <.L126>
    19a8:	08 f2       	brcs	.-126    	; 0x192c <.L126>

000019aa <.LBE90>:
	}
}
    19aa:	00 00       	nop
    19ac:	00 00       	nop
    19ae:	0f 90       	pop	r0
    19b0:	0f 90       	pop	r0
    19b2:	0f 90       	pop	r0
    19b4:	0f 90       	pop	r0
    19b6:	0f 90       	pop	r0
    19b8:	df 91       	pop	r29
    19ba:	cf 91       	pop	r28
    19bc:	08 95       	ret

000019be <send_enable>:

void send_enable(int display_nummer)
{
    19be:	cf 93       	push	r28
    19c0:	df 93       	push	r29
    19c2:	0f 92       	push	r0
    19c4:	0f 92       	push	r0
    19c6:	cd b7       	in	r28, 0x3d	; 61
    19c8:	de b7       	in	r29, 0x3e	; 62
    19ca:	9a 83       	std	Y+2, r25	; 0x02
    19cc:	89 83       	std	Y+1, r24	; 0x01

000019ce <.Loc.451>:
	send_data(0x10 << display_nummer);
    19ce:	80 e1       	ldi	r24, 0x10	; 16
    19d0:	90 e0       	ldi	r25, 0x00	; 0
    19d2:	09 80       	ldd	r0, Y+1	; 0x01
    19d4:	02 c0       	rjmp	.+4      	; 0x19da <.L2^B1>

000019d6 <.L1^B11>:
    19d6:	88 0f       	add	r24, r24
    19d8:	99 1f       	adc	r25, r25

000019da <.L2^B1>:
    19da:	0a 94       	dec	r0
    19dc:	e2 f7       	brpl	.-8      	; 0x19d6 <.L1^B11>

000019de <.Loc.452>:
    19de:	0e 94 8b 0c 	call	0x1916	; 0x1916 <send_data>

000019e2 <.Loc.453>:
}
    19e2:	00 00       	nop
    19e4:	0f 90       	pop	r0
    19e6:	0f 90       	pop	r0
    19e8:	df 91       	pop	r29
    19ea:	cf 91       	pop	r28
    19ec:	08 95       	ret

000019ee <display>:

void display(char data, int display_nummer)
{
    19ee:	cf 93       	push	r28
    19f0:	df 93       	push	r29
    19f2:	00 d0       	rcall	.+0      	; 0x19f4 <L0^A>

000019f4 <L0^A>:
    19f4:	cd b7       	in	r28, 0x3d	; 61
    19f6:	de b7       	in	r29, 0x3e	; 62
    19f8:	89 83       	std	Y+1, r24	; 0x01
    19fa:	7b 83       	std	Y+3, r23	; 0x03
    19fc:	6a 83       	std	Y+2, r22	; 0x02

000019fe <.Loc.455>:
	send_data(data);
    19fe:	89 81       	ldd	r24, Y+1	; 0x01
    1a00:	0e 94 8b 0c 	call	0x1916	; 0x1916 <send_data>

00001a04 <.Loc.456>:
	send_enable(display_nummer);
    1a04:	8a 81       	ldd	r24, Y+2	; 0x02
    1a06:	9b 81       	ldd	r25, Y+3	; 0x03
    1a08:	0e 94 df 0c 	call	0x19be	; 0x19be <send_enable>

00001a0c <.Loc.457>:

	// Toggle latchclk (hoeveel tijd moest het signaal minimaal hoog zijn?)
	// Puls moet minimaal 13 ns hoog zijn. Een clk cycle op de Arduino duurt
	// 62 ns, dus signaal kan hoog en de volgende cycle weer omlaag
	PORT_LCHCLK |= (1 << LCHCLK_BIT);
    1a0c:	84 e3       	ldi	r24, 0x34	; 52
    1a0e:	90 e0       	ldi	r25, 0x00	; 0
    1a10:	fc 01       	movw	r30, r24
    1a12:	20 81       	ld	r18, Z
    1a14:	84 e3       	ldi	r24, 0x34	; 52
    1a16:	90 e0       	ldi	r25, 0x00	; 0

00001a18 <.Loc.458>:
    1a18:	20 62       	ori	r18, 0x20	; 32
    1a1a:	fc 01       	movw	r30, r24
    1a1c:	20 83       	st	Z, r18

00001a1e <.Loc.459>:
	PORT_LCHCLK &= ~(1 << LCHCLK_BIT);
    1a1e:	84 e3       	ldi	r24, 0x34	; 52
    1a20:	90 e0       	ldi	r25, 0x00	; 0
    1a22:	fc 01       	movw	r30, r24
    1a24:	20 81       	ld	r18, Z

00001a26 <.Loc.460>:
    1a26:	84 e3       	ldi	r24, 0x34	; 52
    1a28:	90 e0       	ldi	r25, 0x00	; 0

00001a2a <.Loc.461>:
    1a2a:	2f 7d       	andi	r18, 0xDF	; 223
    1a2c:	fc 01       	movw	r30, r24
    1a2e:	20 83       	st	Z, r18

00001a30 <.Loc.462>:
}
    1a30:	00 00       	nop
    1a32:	0f 90       	pop	r0
    1a34:	0f 90       	pop	r0
    1a36:	0f 90       	pop	r0
    1a38:	df 91       	pop	r29
    1a3a:	cf 91       	pop	r28
    1a3c:	08 95       	ret

00001a3e <display_getal>:

void display_getal(unsigned int getal)
{
    1a3e:	cf 93       	push	r28
    1a40:	df 93       	push	r29
    1a42:	cd b7       	in	r28, 0x3d	; 61
    1a44:	de b7       	in	r29, 0x3e	; 62
    1a46:	a6 97       	sbiw	r28, 0x26	; 38
    1a48:	0f b6       	in	r0, 0x3f	; 63
    1a4a:	f8 94       	cli
    1a4c:	de bf       	out	0x3e, r29	; 62
    1a4e:	0f be       	out	0x3f, r0	; 63
    1a50:	cd bf       	out	0x3d, r28	; 61
    1a52:	9a 8b       	std	Y+18, r25	; 0x12
    1a54:	89 8b       	std	Y+17, r24	; 0x11

00001a56 <.LBB92>:
	for (int i = 0; i < 4; i++)
    1a56:	1a 82       	std	Y+2, r1	; 0x02
    1a58:	19 82       	std	Y+1, r1	; 0x01

00001a5a <.Loc.465>:
    1a5a:	cc c0       	rjmp	.+408    	; 0x1bf4 <.L130>

00001a5c <.L139>:
	{
		display(segmentcodes[getal%10], i);
    1a5c:	49 89       	ldd	r20, Y+17	; 0x11
    1a5e:	5a 89       	ldd	r21, Y+18	; 0x12
    1a60:	9a 01       	movw	r18, r20
    1a62:	ad ec       	ldi	r26, 0xCD	; 205
    1a64:	bc ec       	ldi	r27, 0xCC	; 204
    1a66:	0e 94 33 0e 	call	0x1c66	; 0x1c66 <__umulhisi3>
    1a6a:	9c 01       	movw	r18, r24
    1a6c:	36 95       	lsr	r19
    1a6e:	27 95       	ror	r18
    1a70:	36 95       	lsr	r19
    1a72:	27 95       	ror	r18
    1a74:	36 95       	lsr	r19
    1a76:	27 95       	ror	r18
    1a78:	c9 01       	movw	r24, r18
    1a7a:	88 0f       	add	r24, r24
    1a7c:	99 1f       	adc	r25, r25
    1a7e:	88 0f       	add	r24, r24
    1a80:	99 1f       	adc	r25, r25
    1a82:	82 0f       	add	r24, r18
    1a84:	93 1f       	adc	r25, r19
    1a86:	88 0f       	add	r24, r24
    1a88:	99 1f       	adc	r25, r25
    1a8a:	9a 01       	movw	r18, r20
    1a8c:	28 1b       	sub	r18, r24
    1a8e:	39 0b       	sbc	r19, r25

00001a90 <.Loc.467>:
    1a90:	c9 01       	movw	r24, r18
    1a92:	88 0f       	add	r24, r24
    1a94:	99 1f       	adc	r25, r25
    1a96:	80 50       	subi	r24, 0x00	; 0
    1a98:	9e 4f       	sbci	r25, 0xFE	; 254
    1a9a:	dc 01       	movw	r26, r24
    1a9c:	8d 91       	ld	r24, X+
    1a9e:	9c 91       	ld	r25, X

00001aa0 <.Loc.468>:
    1aa0:	28 2f       	mov	r18, r24
    1aa2:	89 81       	ldd	r24, Y+1	; 0x01
    1aa4:	9a 81       	ldd	r25, Y+2	; 0x02
    1aa6:	bc 01       	movw	r22, r24
    1aa8:	82 2f       	mov	r24, r18
    1aaa:	0e 94 f7 0c 	call	0x19ee	; 0x19ee <display>

00001aae <.Loc.469>:
		getal /= 10;
    1aae:	89 89       	ldd	r24, Y+17	; 0x11
    1ab0:	9a 89       	ldd	r25, Y+18	; 0x12
    1ab2:	9c 01       	movw	r18, r24
    1ab4:	ad ec       	ldi	r26, 0xCD	; 205
    1ab6:	bc ec       	ldi	r27, 0xCC	; 204
    1ab8:	0e 94 33 0e 	call	0x1c66	; 0x1c66 <__umulhisi3>
    1abc:	96 95       	lsr	r25
    1abe:	87 95       	ror	r24
    1ac0:	96 95       	lsr	r25
    1ac2:	87 95       	ror	r24
    1ac4:	96 95       	lsr	r25
    1ac6:	87 95       	ror	r24
    1ac8:	9a 8b       	std	Y+18, r25	; 0x12
    1aca:	89 8b       	std	Y+17, r24	; 0x11
    1acc:	80 e0       	ldi	r24, 0x00	; 0
    1ace:	90 e0       	ldi	r25, 0x00	; 0
    1ad0:	a0 e8       	ldi	r26, 0x80	; 128
    1ad2:	bf e3       	ldi	r27, 0x3F	; 63
    1ad4:	8b 83       	std	Y+3, r24	; 0x03
    1ad6:	9c 83       	std	Y+4, r25	; 0x04
    1ad8:	ad 83       	std	Y+5, r26	; 0x05
    1ada:	be 83       	std	Y+6, r27	; 0x06

00001adc <.LBB93>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    1adc:	20 e0       	ldi	r18, 0x00	; 0
    1ade:	30 e0       	ldi	r19, 0x00	; 0
    1ae0:	4a e7       	ldi	r20, 0x7A	; 122
    1ae2:	55 e4       	ldi	r21, 0x45	; 69
    1ae4:	6b 81       	ldd	r22, Y+3	; 0x03
    1ae6:	7c 81       	ldd	r23, Y+4	; 0x04
    1ae8:	8d 81       	ldd	r24, Y+5	; 0x05
    1aea:	9e 81       	ldd	r25, Y+6	; 0x06
    1aec:	0e 94 c8 0f 	call	0x1f90	; 0x1f90 <__mulsf3>
    1af0:	6f 8b       	std	Y+23, r22	; 0x17
    1af2:	78 8f       	std	Y+24, r23	; 0x18
    1af4:	89 8f       	std	Y+25, r24	; 0x19
    1af6:	9a 8f       	std	Y+26, r25	; 0x1a
    1af8:	8f 89       	ldd	r24, Y+23	; 0x17
    1afa:	98 8d       	ldd	r25, Y+24	; 0x18
    1afc:	a9 8d       	ldd	r26, Y+25	; 0x19
    1afe:	ba 8d       	ldd	r27, Y+26	; 0x1a
    1b00:	8f 83       	std	Y+7, r24	; 0x07
    1b02:	98 87       	std	Y+8, r25	; 0x08
    1b04:	a9 87       	std	Y+9, r26	; 0x09
    1b06:	ba 87       	std	Y+10, r27	; 0x0a

00001b08 <.Loc.471>:
	if (__tmp < 1.0)
    1b08:	20 e0       	ldi	r18, 0x00	; 0
    1b0a:	30 e0       	ldi	r19, 0x00	; 0
    1b0c:	40 e8       	ldi	r20, 0x80	; 128
    1b0e:	5f e3       	ldi	r21, 0x3F	; 63
    1b10:	6f 81       	ldd	r22, Y+7	; 0x07
    1b12:	78 85       	ldd	r23, Y+8	; 0x08
    1b14:	89 85       	ldd	r24, Y+9	; 0x09
    1b16:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b18:	0e 94 64 0e 	call	0x1cc8	; 0x1cc8 <__cmpsf2>
    1b1c:	88 23       	and	r24, r24
    1b1e:	2c f4       	brge	.+10     	; 0x1b2a <.L142>

00001b20 <.Loc.472>:
		__ticks = 1;
    1b20:	81 e0       	ldi	r24, 0x01	; 1
    1b22:	90 e0       	ldi	r25, 0x00	; 0
    1b24:	9c 87       	std	Y+12, r25	; 0x0c
    1b26:	8b 87       	std	Y+11, r24	; 0x0b
    1b28:	55 c0       	rjmp	.+170    	; 0x1bd4 <.L133>

00001b2a <.L142>:
	else if (__tmp > 65535)
    1b2a:	20 e0       	ldi	r18, 0x00	; 0
    1b2c:	3f ef       	ldi	r19, 0xFF	; 255
    1b2e:	4f e7       	ldi	r20, 0x7F	; 127
    1b30:	57 e4       	ldi	r21, 0x47	; 71
    1b32:	6f 81       	ldd	r22, Y+7	; 0x07
    1b34:	78 85       	ldd	r23, Y+8	; 0x08
    1b36:	89 85       	ldd	r24, Y+9	; 0x09
    1b38:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b3a:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <__gesf2>
    1b3e:	88 23       	and	r24, r24
    1b40:	d9 f1       	breq	.+118    	; 0x1bb8 <.L143>
    1b42:	d4 f1       	brlt	.+116    	; 0x1bb8 <.L143>

00001b44 <.Loc.474>:
		__ticks = (uint16_t) (__ms * 10.0);
    1b44:	20 e0       	ldi	r18, 0x00	; 0
    1b46:	30 e0       	ldi	r19, 0x00	; 0
    1b48:	40 e2       	ldi	r20, 0x20	; 32
    1b4a:	51 e4       	ldi	r21, 0x41	; 65
    1b4c:	6b 81       	ldd	r22, Y+3	; 0x03
    1b4e:	7c 81       	ldd	r23, Y+4	; 0x04
    1b50:	8d 81       	ldd	r24, Y+5	; 0x05
    1b52:	9e 81       	ldd	r25, Y+6	; 0x06
    1b54:	0e 94 c8 0f 	call	0x1f90	; 0x1f90 <__mulsf3>
    1b58:	6b 8f       	std	Y+27, r22	; 0x1b
    1b5a:	7c 8f       	std	Y+28, r23	; 0x1c
    1b5c:	8d 8f       	std	Y+29, r24	; 0x1d
    1b5e:	9e 8f       	std	Y+30, r25	; 0x1e
    1b60:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1b62:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1b64:	ad 8d       	ldd	r26, Y+29	; 0x1d
    1b66:	be 8d       	ldd	r27, Y+30	; 0x1e
    1b68:	8b 8b       	std	Y+19, r24	; 0x13
    1b6a:	9c 8b       	std	Y+20, r25	; 0x14
    1b6c:	ad 8b       	std	Y+21, r26	; 0x15
    1b6e:	be 8b       	std	Y+22, r27	; 0x16

00001b70 <.Loc.475>:
    1b70:	6b 89       	ldd	r22, Y+19	; 0x13
    1b72:	7c 89       	ldd	r23, Y+20	; 0x14
    1b74:	8d 89       	ldd	r24, Y+21	; 0x15
    1b76:	9e 89       	ldd	r25, Y+22	; 0x16
    1b78:	0e 94 e2 0e 	call	0x1dc4	; 0x1dc4 <__fixunssfsi>
    1b7c:	6f 8f       	std	Y+31, r22	; 0x1f
    1b7e:	78 a3       	std	Y+32, r23	; 0x20
    1b80:	89 a3       	std	Y+33, r24	; 0x21
    1b82:	9a a3       	std	Y+34, r25	; 0x22
    1b84:	af 8d       	ldd	r26, Y+31	; 0x1f
    1b86:	b8 a1       	ldd	r27, Y+32	; 0x20
    1b88:	bc 87       	std	Y+12, r27	; 0x0c
    1b8a:	ab 87       	std	Y+11, r26	; 0x0b

00001b8c <.Loc.476>:
		while(__ticks)
    1b8c:	10 c0       	rjmp	.+32     	; 0x1bae <.L136>

00001b8e <.L137>:
    1b8e:	80 e9       	ldi	r24, 0x90	; 144
    1b90:	91 e0       	ldi	r25, 0x01	; 1
    1b92:	9e 87       	std	Y+14, r25	; 0x0e
    1b94:	8d 87       	std	Y+13, r24	; 0x0d

00001b96 <.LBB95>:
	__asm__ volatile (
    1b96:	8d 85       	ldd	r24, Y+13	; 0x0d
    1b98:	9e 85       	ldd	r25, Y+14	; 0x0e

00001b9a <.L1^B12>:
    1b9a:	01 97       	sbiw	r24, 0x01	; 1
    1b9c:	f1 f7       	brne	.-4      	; 0x1b9a <.L1^B12>
    1b9e:	9e 87       	std	Y+14, r25	; 0x0e
    1ba0:	8d 87       	std	Y+13, r24	; 0x0d

00001ba2 <.Loc.478>:
	...

00001ba4 <.LBE95>:
			__ticks --;
    1ba4:	8b 85       	ldd	r24, Y+11	; 0x0b
    1ba6:	9c 85       	ldd	r25, Y+12	; 0x0c
    1ba8:	01 97       	sbiw	r24, 0x01	; 1
    1baa:	9c 87       	std	Y+12, r25	; 0x0c
    1bac:	8b 87       	std	Y+11, r24	; 0x0b

00001bae <.L136>:
		while(__ticks)
    1bae:	8b 85       	ldd	r24, Y+11	; 0x0b
    1bb0:	9c 85       	ldd	r25, Y+12	; 0x0c
    1bb2:	00 97       	sbiw	r24, 0x00	; 0
    1bb4:	61 f7       	brne	.-40     	; 0x1b8e <.L137>

00001bb6 <.Loc.481>:
		return;
    1bb6:	19 c0       	rjmp	.+50     	; 0x1bea <.L138>

00001bb8 <.L143>:
		__ticks = (uint16_t)__tmp;
    1bb8:	6f 81       	ldd	r22, Y+7	; 0x07
    1bba:	78 85       	ldd	r23, Y+8	; 0x08
    1bbc:	89 85       	ldd	r24, Y+9	; 0x09
    1bbe:	9a 85       	ldd	r25, Y+10	; 0x0a
    1bc0:	0e 94 e2 0e 	call	0x1dc4	; 0x1dc4 <__fixunssfsi>
    1bc4:	6b a3       	std	Y+35, r22	; 0x23
    1bc6:	7c a3       	std	Y+36, r23	; 0x24
    1bc8:	8d a3       	std	Y+37, r24	; 0x25
    1bca:	9e a3       	std	Y+38, r25	; 0x26
    1bcc:	eb a1       	ldd	r30, Y+35	; 0x23
    1bce:	fc a1       	ldd	r31, Y+36	; 0x24
    1bd0:	fc 87       	std	Y+12, r31	; 0x0c
    1bd2:	eb 87       	std	Y+11, r30	; 0x0b

00001bd4 <.L133>:
    1bd4:	8b 85       	ldd	r24, Y+11	; 0x0b
    1bd6:	9c 85       	ldd	r25, Y+12	; 0x0c
    1bd8:	98 8b       	std	Y+16, r25	; 0x10
    1bda:	8f 87       	std	Y+15, r24	; 0x0f

00001bdc <.LBB97>:
    1bdc:	8f 85       	ldd	r24, Y+15	; 0x0f
    1bde:	98 89       	ldd	r25, Y+16	; 0x10

00001be0 <.L1^B13>:
    1be0:	01 97       	sbiw	r24, 0x01	; 1
    1be2:	f1 f7       	brne	.-4      	; 0x1be0 <.L1^B13>
    1be4:	98 8b       	std	Y+16, r25	; 0x10
    1be6:	8f 87       	std	Y+15, r24	; 0x0f

00001be8 <.Loc.484>:
	...

00001bea <.L138>:
	for (int i = 0; i < 4; i++)
    1bea:	89 81       	ldd	r24, Y+1	; 0x01
    1bec:	9a 81       	ldd	r25, Y+2	; 0x02
    1bee:	01 96       	adiw	r24, 0x01	; 1
    1bf0:	9a 83       	std	Y+2, r25	; 0x02
    1bf2:	89 83       	std	Y+1, r24	; 0x01

00001bf4 <.L130>:
    1bf4:	89 81       	ldd	r24, Y+1	; 0x01
    1bf6:	9a 81       	ldd	r25, Y+2	; 0x02
    1bf8:	83 30       	cpi	r24, 0x03	; 3
    1bfa:	91 05       	cpc	r25, r1
    1bfc:	09 f0       	breq	.+2      	; 0x1c00 <L0^A>

00001bfe <L0^A>:
    1bfe:	0c f4       	brge	.+2      	; 0x1c02 <.LBE92>

00001c00 <L0^A>:
    1c00:	2d cf       	rjmp	.-422    	; 0x1a5c <.L139>

00001c02 <.LBE92>:
		_delay_ms(1);   // 1 kHz
	}
}
    1c02:	00 00       	nop
    1c04:	00 00       	nop
    1c06:	a6 96       	adiw	r28, 0x26	; 38
    1c08:	0f b6       	in	r0, 0x3f	; 63
    1c0a:	f8 94       	cli
    1c0c:	de bf       	out	0x3e, r29	; 62
    1c0e:	0f be       	out	0x3f, r0	; 63
    1c10:	cd bf       	out	0x3d, r28	; 61
    1c12:	df 91       	pop	r29
    1c14:	cf 91       	pop	r28
    1c16:	08 95       	ret

00001c18 <__divmodsi4>:
    1c18:	05 2e       	mov	r0, r21

00001c1a <.Loc.1>:
    1c1a:	97 fb       	bst	r25, 7

00001c1c <.Loc.2>:
    1c1c:	1e f4       	brtc	.+6      	; 0x1c24 <.L^B1>

00001c1e <.Loc.3>:
    1c1e:	00 94       	com	r0

00001c20 <.Loc.4>:
    1c20:	0e 94 23 0e 	call	0x1c46	; 0x1c46 <__negsi2>

00001c24 <.L^B1>:
    1c24:	57 fd       	sbrc	r21, 7

00001c26 <.Loc.6>:
    1c26:	07 d0       	rcall	.+14     	; 0x1c36 <__divmodsi4_neg2>

00001c28 <.Loc.7>:
    1c28:	0e 94 42 0e 	call	0x1c84	; 0x1c84 <__udivmodsi4>

00001c2c <.Loc.8>:
    1c2c:	07 fc       	sbrc	r0, 7

00001c2e <.Loc.9>:
    1c2e:	03 d0       	rcall	.+6      	; 0x1c36 <__divmodsi4_neg2>

00001c30 <.Loc.10>:
    1c30:	4e f4       	brtc	.+18     	; 0x1c44 <__divmodsi4_exit>

00001c32 <.Loc.11>:
    1c32:	0c 94 23 0e 	jmp	0x1c46	; 0x1c46 <__negsi2>

00001c36 <__divmodsi4_neg2>:
    1c36:	50 95       	com	r21

00001c38 <.Loc.13>:
    1c38:	40 95       	com	r20

00001c3a <.Loc.14>:
    1c3a:	30 95       	com	r19

00001c3c <.Loc.15>:
    1c3c:	21 95       	neg	r18

00001c3e <.Loc.16>:
    1c3e:	3f 4f       	sbci	r19, 0xFF	; 255

00001c40 <.Loc.17>:
    1c40:	4f 4f       	sbci	r20, 0xFF	; 255

00001c42 <.Loc.18>:
    1c42:	5f 4f       	sbci	r21, 0xFF	; 255

00001c44 <__divmodsi4_exit>:
    1c44:	08 95       	ret

00001c46 <__negsi2>:
    1c46:	90 95       	com	r25
    1c48:	80 95       	com	r24
    1c4a:	70 95       	com	r23
    1c4c:	61 95       	neg	r22
    1c4e:	7f 4f       	sbci	r23, 0xFF	; 255
    1c50:	8f 4f       	sbci	r24, 0xFF	; 255
    1c52:	9f 4f       	sbci	r25, 0xFF	; 255

00001c54 <.Loc.1>:
    1c54:	08 95       	ret

00001c56 <__tablejump2__>:
    1c56:	ee 0f       	add	r30, r30

00001c58 <.Loc.1>:
    1c58:	ff 1f       	adc	r31, r31

00001c5a <.Loc.2>:
    1c5a:	88 1f       	adc	r24, r24

00001c5c <.Loc.3>:
    1c5c:	8b bf       	out	0x3b, r24	; 59

00001c5e <.Loc.4>:
    1c5e:	07 90       	elpm	r0, Z+

00001c60 <.Loc.5>:
    1c60:	f6 91       	elpm	r31, Z

00001c62 <.Loc.6>:
    1c62:	e0 2d       	mov	r30, r0

00001c64 <.Loc.7>:
    1c64:	19 94       	eijmp

00001c66 <__umulhisi3>:
    1c66:	a2 9f       	mul	r26, r18

00001c68 <.Loc.1>:
    1c68:	b0 01       	movw	r22, r0

00001c6a <.Loc.2>:
    1c6a:	b3 9f       	mul	r27, r19

00001c6c <.Loc.3>:
    1c6c:	c0 01       	movw	r24, r0

00001c6e <.Loc.4>:
    1c6e:	a3 9f       	mul	r26, r19

00001c70 <.Loc.5>:
    1c70:	70 0d       	add	r23, r0

00001c72 <.Loc.6>:
    1c72:	81 1d       	adc	r24, r1

00001c74 <.Loc.7>:
    1c74:	11 24       	eor	r1, r1

00001c76 <.Loc.8>:
    1c76:	91 1d       	adc	r25, r1

00001c78 <.Loc.9>:
    1c78:	b2 9f       	mul	r27, r18

00001c7a <.Loc.10>:
    1c7a:	70 0d       	add	r23, r0

00001c7c <.Loc.11>:
    1c7c:	81 1d       	adc	r24, r1

00001c7e <.Loc.12>:
    1c7e:	11 24       	eor	r1, r1

00001c80 <.Loc.13>:
    1c80:	91 1d       	adc	r25, r1

00001c82 <.Loc.14>:
    1c82:	08 95       	ret

00001c84 <__udivmodsi4>:
    1c84:	a1 e2       	ldi	r26, 0x21	; 33

00001c86 <.Loc.1>:
    1c86:	1a 2e       	mov	r1, r26

00001c88 <.Loc.2>:
    1c88:	aa 1b       	sub	r26, r26

00001c8a <.Loc.3>:
    1c8a:	bb 1b       	sub	r27, r27

00001c8c <.Loc.4>:
    1c8c:	fd 01       	movw	r30, r26

00001c8e <.Loc.5>:
    1c8e:	0d c0       	rjmp	.+26     	; 0x1caa <__udivmodsi4_ep>

00001c90 <__udivmodsi4_loop>:
    1c90:	aa 1f       	adc	r26, r26

00001c92 <.Loc.7>:
    1c92:	bb 1f       	adc	r27, r27

00001c94 <.Loc.8>:
    1c94:	ee 1f       	adc	r30, r30

00001c96 <.Loc.9>:
    1c96:	ff 1f       	adc	r31, r31

00001c98 <.Loc.10>:
    1c98:	a2 17       	cp	r26, r18

00001c9a <.Loc.11>:
    1c9a:	b3 07       	cpc	r27, r19

00001c9c <.Loc.12>:
    1c9c:	e4 07       	cpc	r30, r20

00001c9e <.Loc.13>:
    1c9e:	f5 07       	cpc	r31, r21

00001ca0 <.Loc.14>:
    1ca0:	20 f0       	brcs	.+8      	; 0x1caa <__udivmodsi4_ep>

00001ca2 <.Loc.15>:
    1ca2:	a2 1b       	sub	r26, r18

00001ca4 <.Loc.16>:
    1ca4:	b3 0b       	sbc	r27, r19

00001ca6 <.Loc.17>:
    1ca6:	e4 0b       	sbc	r30, r20

00001ca8 <.Loc.18>:
    1ca8:	f5 0b       	sbc	r31, r21

00001caa <__udivmodsi4_ep>:
    1caa:	66 1f       	adc	r22, r22

00001cac <.Loc.20>:
    1cac:	77 1f       	adc	r23, r23

00001cae <.Loc.21>:
    1cae:	88 1f       	adc	r24, r24

00001cb0 <.Loc.22>:
    1cb0:	99 1f       	adc	r25, r25

00001cb2 <.Loc.23>:
    1cb2:	1a 94       	dec	r1

00001cb4 <.Loc.24>:
    1cb4:	69 f7       	brne	.-38     	; 0x1c90 <__udivmodsi4_loop>

00001cb6 <.Loc.25>:
    1cb6:	60 95       	com	r22

00001cb8 <.Loc.26>:
    1cb8:	70 95       	com	r23

00001cba <.Loc.27>:
    1cba:	80 95       	com	r24

00001cbc <.Loc.28>:
    1cbc:	90 95       	com	r25

00001cbe <.Loc.29>:
    1cbe:	9b 01       	movw	r18, r22

00001cc0 <.Loc.30>:
    1cc0:	ac 01       	movw	r20, r24

00001cc2 <.Loc.31>:
    1cc2:	bd 01       	movw	r22, r26

00001cc4 <.Loc.32>:
    1cc4:	cf 01       	movw	r24, r30

00001cc6 <.Loc.33>:
    1cc6:	08 95       	ret

00001cc8 <__cmpsf2>:
    1cc8:	0e 94 4e 0f 	call	0x1e9c	; 0x1e9c <__fp_cmp>
    1ccc:	08 f4       	brcc	.+2      	; 0x1cd0 <.L1^B1>
    1cce:	81 e0       	ldi	r24, 0x01	; 1

00001cd0 <.L1^B1>:
    1cd0:	08 95       	ret

00001cd2 <__divsf3>:
    1cd2:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <__divsf3x>
    1cd6:	0c 94 89 0f 	jmp	0x1f12	; 0x1f12 <__fp_round>

00001cda <.L^B1>:
    1cda:	0e 94 82 0f 	call	0x1f04	; 0x1f04 <__fp_pscB>
    1cde:	58 f0       	brcs	.+22     	; 0x1cf6 <.L_nan>
    1ce0:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__fp_pscA>
    1ce4:	40 f0       	brcs	.+16     	; 0x1cf6 <.L_nan>
    1ce6:	29 f4       	brne	.+10     	; 0x1cf2 <.L_zr>
    1ce8:	5f 3f       	cpi	r21, 0xFF	; 255
    1cea:	29 f0       	breq	.+10     	; 0x1cf6 <.L_nan>

00001cec <.L_inf>:
    1cec:	0c 94 72 0f 	jmp	0x1ee4	; 0x1ee4 <__fp_inf>

00001cf0 <.L1^B1>:
    1cf0:	51 11       	cpse	r21, r1

00001cf2 <.L_zr>:
    1cf2:	0c 94 bd 0f 	jmp	0x1f7a	; 0x1f7a <__fp_szero>

00001cf6 <.L_nan>:
    1cf6:	0c 94 78 0f 	jmp	0x1ef0	; 0x1ef0 <__fp_nan>

00001cfa <__divsf3x>:
    1cfa:	0e 94 9a 0f 	call	0x1f34	; 0x1f34 <__fp_split3>
    1cfe:	68 f3       	brcs	.-38     	; 0x1cda <.L^B1>

00001d00 <__divsf3_pse>:
    1d00:	99 23       	and	r25, r25
    1d02:	b1 f3       	breq	.-20     	; 0x1cf0 <.L1^B1>
    1d04:	55 23       	and	r21, r21
    1d06:	91 f3       	breq	.-28     	; 0x1cec <.L_inf>
    1d08:	95 1b       	sub	r25, r21
    1d0a:	55 0b       	sbc	r21, r21
    1d0c:	bb 27       	eor	r27, r27
    1d0e:	aa 27       	eor	r26, r26

00001d10 <.L2^B1>:
    1d10:	62 17       	cp	r22, r18
    1d12:	73 07       	cpc	r23, r19
    1d14:	84 07       	cpc	r24, r20
    1d16:	38 f0       	brcs	.+14     	; 0x1d26 <.L3^B1>
    1d18:	9f 5f       	subi	r25, 0xFF	; 255
    1d1a:	5f 4f       	sbci	r21, 0xFF	; 255
    1d1c:	22 0f       	add	r18, r18
    1d1e:	33 1f       	adc	r19, r19
    1d20:	44 1f       	adc	r20, r20
    1d22:	aa 1f       	adc	r26, r26
    1d24:	a9 f3       	breq	.-22     	; 0x1d10 <.L2^B1>

00001d26 <.L3^B1>:
    1d26:	35 d0       	rcall	.+106    	; 0x1d92 <.L_div>
    1d28:	0e 2e       	mov	r0, r30
    1d2a:	3a f0       	brmi	.+14     	; 0x1d3a <.L5^B1>

00001d2c <.L4^B1>:
    1d2c:	e0 e8       	ldi	r30, 0x80	; 128
    1d2e:	32 d0       	rcall	.+100    	; 0x1d94 <.L_div1>
    1d30:	91 50       	subi	r25, 0x01	; 1
    1d32:	50 40       	sbci	r21, 0x00	; 0
    1d34:	e6 95       	lsr	r30
    1d36:	00 1c       	adc	r0, r0
    1d38:	ca f7       	brpl	.-14     	; 0x1d2c <.L4^B1>

00001d3a <.L5^B1>:
    1d3a:	2b d0       	rcall	.+86     	; 0x1d92 <.L_div>
    1d3c:	fe 2f       	mov	r31, r30
    1d3e:	29 d0       	rcall	.+82     	; 0x1d92 <.L_div>
    1d40:	66 0f       	add	r22, r22
    1d42:	77 1f       	adc	r23, r23
    1d44:	88 1f       	adc	r24, r24
    1d46:	bb 1f       	adc	r27, r27
    1d48:	26 17       	cp	r18, r22
    1d4a:	37 07       	cpc	r19, r23
    1d4c:	48 07       	cpc	r20, r24
    1d4e:	ab 07       	cpc	r26, r27
    1d50:	b0 e8       	ldi	r27, 0x80	; 128
    1d52:	09 f0       	breq	.+2      	; 0x1d56 <.L4^B2>
    1d54:	bb 0b       	sbc	r27, r27

00001d56 <.L4^B2>:
    1d56:	80 2d       	mov	r24, r0
    1d58:	bf 01       	movw	r22, r30
    1d5a:	ff 27       	eor	r31, r31
    1d5c:	93 58       	subi	r25, 0x83	; 131
    1d5e:	5f 4f       	sbci	r21, 0xFF	; 255
    1d60:	3a f0       	brmi	.+14     	; 0x1d70 <.L13^B1>
    1d62:	9e 3f       	cpi	r25, 0xFE	; 254
    1d64:	51 05       	cpc	r21, r1
    1d66:	78 f0       	brcs	.+30     	; 0x1d86 <.L15^B1>
    1d68:	0c 94 72 0f 	jmp	0x1ee4	; 0x1ee4 <__fp_inf>

00001d6c <.L12^B1>:
    1d6c:	0c 94 bd 0f 	jmp	0x1f7a	; 0x1f7a <__fp_szero>

00001d70 <.L13^B1>:
    1d70:	5f 3f       	cpi	r21, 0xFF	; 255
    1d72:	e4 f3       	brlt	.-8      	; 0x1d6c <.L12^B1>
    1d74:	98 3e       	cpi	r25, 0xE8	; 232
    1d76:	d4 f3       	brlt	.-12     	; 0x1d6c <.L12^B1>

00001d78 <.L14^B1>:
    1d78:	86 95       	lsr	r24
    1d7a:	77 95       	ror	r23
    1d7c:	67 95       	ror	r22
    1d7e:	b7 95       	ror	r27
    1d80:	f7 95       	ror	r31
    1d82:	9f 5f       	subi	r25, 0xFF	; 255
    1d84:	c9 f7       	brne	.-14     	; 0x1d78 <.L14^B1>

00001d86 <.L15^B1>:
    1d86:	88 0f       	add	r24, r24
    1d88:	91 1d       	adc	r25, r1
    1d8a:	96 95       	lsr	r25
    1d8c:	87 95       	ror	r24
    1d8e:	97 f9       	bld	r25, 7
    1d90:	08 95       	ret

00001d92 <.L_div>:
    1d92:	e1 e0       	ldi	r30, 0x01	; 1

00001d94 <.L_div1>:
    1d94:	66 0f       	add	r22, r22
    1d96:	77 1f       	adc	r23, r23
    1d98:	88 1f       	adc	r24, r24
    1d9a:	bb 1f       	adc	r27, r27
    1d9c:	62 17       	cp	r22, r18
    1d9e:	73 07       	cpc	r23, r19
    1da0:	84 07       	cpc	r24, r20
    1da2:	ba 07       	cpc	r27, r26
    1da4:	20 f0       	brcs	.+8      	; 0x1dae <.L2^B2>
    1da6:	62 1b       	sub	r22, r18
    1da8:	73 0b       	sbc	r23, r19
    1daa:	84 0b       	sbc	r24, r20
    1dac:	ba 0b       	sbc	r27, r26

00001dae <.L2^B2>:
    1dae:	ee 1f       	adc	r30, r30
    1db0:	88 f7       	brcc	.-30     	; 0x1d94 <.L_div1>
    1db2:	e0 95       	com	r30
    1db4:	08 95       	ret

00001db6 <__fixsfsi>:
    1db6:	0e 94 e2 0e 	call	0x1dc4	; 0x1dc4 <__fixunssfsi>
    1dba:	68 94       	set
    1dbc:	b1 11       	cpse	r27, r1
    1dbe:	0c 94 bd 0f 	jmp	0x1f7a	; 0x1f7a <__fp_szero>
    1dc2:	08 95       	ret

00001dc4 <__fixunssfsi>:
    1dc4:	0e 94 a2 0f 	call	0x1f44	; 0x1f44 <__fp_splitA>
    1dc8:	88 f0       	brcs	.+34     	; 0x1dec <.L_err>
    1dca:	9f 57       	subi	r25, 0x7F	; 127
    1dcc:	98 f0       	brcs	.+38     	; 0x1df4 <.L_zr>
    1dce:	b9 2f       	mov	r27, r25
    1dd0:	99 27       	eor	r25, r25
    1dd2:	b7 51       	subi	r27, 0x17	; 23
    1dd4:	b0 f0       	brcs	.+44     	; 0x1e02 <.L4^B1>
    1dd6:	e1 f0       	breq	.+56     	; 0x1e10 <.L_sign>

00001dd8 <.L1^B1>:
    1dd8:	66 0f       	add	r22, r22
    1dda:	77 1f       	adc	r23, r23
    1ddc:	88 1f       	adc	r24, r24
    1dde:	99 1f       	adc	r25, r25
    1de0:	1a f0       	brmi	.+6      	; 0x1de8 <.L2^B1>
    1de2:	ba 95       	dec	r27
    1de4:	c9 f7       	brne	.-14     	; 0x1dd8 <.L1^B1>
    1de6:	14 c0       	rjmp	.+40     	; 0x1e10 <.L_sign>

00001de8 <.L2^B1>:
    1de8:	b1 30       	cpi	r27, 0x01	; 1
    1dea:	91 f0       	breq	.+36     	; 0x1e10 <.L_sign>

00001dec <.L_err>:
    1dec:	0e 94 bc 0f 	call	0x1f78	; 0x1f78 <__fp_zero>
    1df0:	b1 e0       	ldi	r27, 0x01	; 1
    1df2:	08 95       	ret

00001df4 <.L_zr>:
    1df4:	0c 94 bc 0f 	jmp	0x1f78	; 0x1f78 <__fp_zero>

00001df8 <.L3^B1>:
    1df8:	67 2f       	mov	r22, r23
    1dfa:	78 2f       	mov	r23, r24
    1dfc:	88 27       	eor	r24, r24
    1dfe:	b8 5f       	subi	r27, 0xF8	; 248
    1e00:	39 f0       	breq	.+14     	; 0x1e10 <.L_sign>

00001e02 <.L4^B1>:
    1e02:	b9 3f       	cpi	r27, 0xF9	; 249
    1e04:	cc f3       	brlt	.-14     	; 0x1df8 <.L3^B1>

00001e06 <.L5^B1>:
    1e06:	86 95       	lsr	r24
    1e08:	77 95       	ror	r23
    1e0a:	67 95       	ror	r22
    1e0c:	b3 95       	inc	r27
    1e0e:	d9 f7       	brne	.-10     	; 0x1e06 <.L5^B1>

00001e10 <.L_sign>:
    1e10:	3e f4       	brtc	.+14     	; 0x1e20 <.L6^B1>
    1e12:	90 95       	com	r25
    1e14:	80 95       	com	r24
    1e16:	70 95       	com	r23
    1e18:	61 95       	neg	r22
    1e1a:	7f 4f       	sbci	r23, 0xFF	; 255
    1e1c:	8f 4f       	sbci	r24, 0xFF	; 255
    1e1e:	9f 4f       	sbci	r25, 0xFF	; 255

00001e20 <.L6^B1>:
    1e20:	08 95       	ret

00001e22 <__floatunsisf>:
    1e22:	e8 94       	clt
    1e24:	09 c0       	rjmp	.+18     	; 0x1e38 <.L1^B1>

00001e26 <__floatsisf>:
    1e26:	97 fb       	bst	r25, 7
    1e28:	3e f4       	brtc	.+14     	; 0x1e38 <.L1^B1>
    1e2a:	90 95       	com	r25
    1e2c:	80 95       	com	r24
    1e2e:	70 95       	com	r23
    1e30:	61 95       	neg	r22
    1e32:	7f 4f       	sbci	r23, 0xFF	; 255
    1e34:	8f 4f       	sbci	r24, 0xFF	; 255
    1e36:	9f 4f       	sbci	r25, 0xFF	; 255

00001e38 <.L1^B1>:
    1e38:	99 23       	and	r25, r25
    1e3a:	a9 f0       	breq	.+42     	; 0x1e66 <.L4^B1>
    1e3c:	f9 2f       	mov	r31, r25
    1e3e:	96 e9       	ldi	r25, 0x96	; 150
    1e40:	bb 27       	eor	r27, r27

00001e42 <.L2^B1>:
    1e42:	93 95       	inc	r25
    1e44:	f6 95       	lsr	r31
    1e46:	87 95       	ror	r24
    1e48:	77 95       	ror	r23
    1e4a:	67 95       	ror	r22
    1e4c:	b7 95       	ror	r27
    1e4e:	f1 11       	cpse	r31, r1
    1e50:	f8 cf       	rjmp	.-16     	; 0x1e42 <.L2^B1>
    1e52:	fa f4       	brpl	.+62     	; 0x1e92 <.L_pack>
    1e54:	bb 0f       	add	r27, r27
    1e56:	11 f4       	brne	.+4      	; 0x1e5c <.L3^B1>
    1e58:	60 ff       	sbrs	r22, 0
    1e5a:	1b c0       	rjmp	.+54     	; 0x1e92 <.L_pack>

00001e5c <.L3^B1>:
    1e5c:	6f 5f       	subi	r22, 0xFF	; 255
    1e5e:	7f 4f       	sbci	r23, 0xFF	; 255
    1e60:	8f 4f       	sbci	r24, 0xFF	; 255
    1e62:	9f 4f       	sbci	r25, 0xFF	; 255
    1e64:	16 c0       	rjmp	.+44     	; 0x1e92 <.L_pack>

00001e66 <.L4^B1>:
    1e66:	88 23       	and	r24, r24
    1e68:	11 f0       	breq	.+4      	; 0x1e6e <.L5^B1>
    1e6a:	96 e9       	ldi	r25, 0x96	; 150
    1e6c:	11 c0       	rjmp	.+34     	; 0x1e90 <.L8^B1>

00001e6e <.L5^B1>:
    1e6e:	77 23       	and	r23, r23
    1e70:	21 f0       	breq	.+8      	; 0x1e7a <.L6^B1>
    1e72:	9e e8       	ldi	r25, 0x8E	; 142
    1e74:	87 2f       	mov	r24, r23
    1e76:	76 2f       	mov	r23, r22
    1e78:	05 c0       	rjmp	.+10     	; 0x1e84 <.L7^B1>

00001e7a <.L6^B1>:
    1e7a:	66 23       	and	r22, r22
    1e7c:	71 f0       	breq	.+28     	; 0x1e9a <.L9^B1>
    1e7e:	96 e8       	ldi	r25, 0x86	; 134
    1e80:	86 2f       	mov	r24, r22
    1e82:	70 e0       	ldi	r23, 0x00	; 0

00001e84 <.L7^B1>:
    1e84:	60 e0       	ldi	r22, 0x00	; 0
    1e86:	2a f0       	brmi	.+10     	; 0x1e92 <.L_pack>

00001e88 <.L10^B1>:
    1e88:	9a 95       	dec	r25
    1e8a:	66 0f       	add	r22, r22
    1e8c:	77 1f       	adc	r23, r23
    1e8e:	88 1f       	adc	r24, r24

00001e90 <.L8^B1>:
    1e90:	da f7       	brpl	.-10     	; 0x1e88 <.L10^B1>

00001e92 <.L_pack>:
    1e92:	88 0f       	add	r24, r24
    1e94:	96 95       	lsr	r25
    1e96:	87 95       	ror	r24
    1e98:	97 f9       	bld	r25, 7

00001e9a <.L9^B1>:
    1e9a:	08 95       	ret

00001e9c <__fp_cmp>:
    1e9c:	99 0f       	add	r25, r25
    1e9e:	00 08       	sbc	r0, r0
    1ea0:	55 0f       	add	r21, r21
    1ea2:	aa 0b       	sbc	r26, r26
    1ea4:	e0 e8       	ldi	r30, 0x80	; 128
    1ea6:	fe ef       	ldi	r31, 0xFE	; 254
    1ea8:	16 16       	cp	r1, r22
    1eaa:	17 06       	cpc	r1, r23
    1eac:	e8 07       	cpc	r30, r24
    1eae:	f9 07       	cpc	r31, r25
    1eb0:	c0 f0       	brcs	.+48     	; 0x1ee2 <.L9^B1>
    1eb2:	12 16       	cp	r1, r18
    1eb4:	13 06       	cpc	r1, r19
    1eb6:	e4 07       	cpc	r30, r20
    1eb8:	f5 07       	cpc	r31, r21
    1eba:	98 f0       	brcs	.+38     	; 0x1ee2 <.L9^B1>
    1ebc:	62 1b       	sub	r22, r18
    1ebe:	73 0b       	sbc	r23, r19
    1ec0:	84 0b       	sbc	r24, r20
    1ec2:	95 0b       	sbc	r25, r21
    1ec4:	39 f4       	brne	.+14     	; 0x1ed4 <.L1^B1>
    1ec6:	0a 26       	eor	r0, r26
    1ec8:	61 f0       	breq	.+24     	; 0x1ee2 <.L9^B1>
    1eca:	23 2b       	or	r18, r19
    1ecc:	24 2b       	or	r18, r20
    1ece:	25 2b       	or	r18, r21
    1ed0:	21 f4       	brne	.+8      	; 0x1eda <.L2^B1>
    1ed2:	08 95       	ret

00001ed4 <.L1^B1>:
    1ed4:	0a 26       	eor	r0, r26
    1ed6:	09 f4       	brne	.+2      	; 0x1eda <.L2^B1>
    1ed8:	a1 40       	sbci	r26, 0x01	; 1

00001eda <.L2^B1>:
    1eda:	a6 95       	lsr	r26
    1edc:	8f ef       	ldi	r24, 0xFF	; 255
    1ede:	81 1d       	adc	r24, r1
    1ee0:	81 1d       	adc	r24, r1

00001ee2 <.L9^B1>:
    1ee2:	08 95       	ret

00001ee4 <__fp_inf>:
    1ee4:	97 f9       	bld	r25, 7
    1ee6:	9f 67       	ori	r25, 0x7F	; 127
    1ee8:	80 e8       	ldi	r24, 0x80	; 128
    1eea:	70 e0       	ldi	r23, 0x00	; 0
    1eec:	60 e0       	ldi	r22, 0x00	; 0
    1eee:	08 95       	ret

00001ef0 <__fp_nan>:
    1ef0:	9f ef       	ldi	r25, 0xFF	; 255
    1ef2:	80 ec       	ldi	r24, 0xC0	; 192
    1ef4:	08 95       	ret

00001ef6 <__fp_pscA>:
    1ef6:	00 24       	eor	r0, r0
    1ef8:	0a 94       	dec	r0
    1efa:	16 16       	cp	r1, r22
    1efc:	17 06       	cpc	r1, r23
    1efe:	18 06       	cpc	r1, r24
    1f00:	09 06       	cpc	r0, r25
    1f02:	08 95       	ret

00001f04 <__fp_pscB>:
    1f04:	00 24       	eor	r0, r0
    1f06:	0a 94       	dec	r0
    1f08:	12 16       	cp	r1, r18
    1f0a:	13 06       	cpc	r1, r19
    1f0c:	14 06       	cpc	r1, r20
    1f0e:	05 06       	cpc	r0, r21
    1f10:	08 95       	ret

00001f12 <__fp_round>:
    1f12:	09 2e       	mov	r0, r25
    1f14:	03 94       	inc	r0
    1f16:	00 0c       	add	r0, r0
    1f18:	11 f4       	brne	.+4      	; 0x1f1e <.L1^B1>
    1f1a:	88 23       	and	r24, r24
    1f1c:	52 f0       	brmi	.+20     	; 0x1f32 <.L3^B1>

00001f1e <.L1^B1>:
    1f1e:	bb 0f       	add	r27, r27
    1f20:	40 f4       	brcc	.+16     	; 0x1f32 <.L3^B1>
    1f22:	bf 2b       	or	r27, r31
    1f24:	11 f4       	brne	.+4      	; 0x1f2a <.L2^B1>
    1f26:	60 ff       	sbrs	r22, 0
    1f28:	04 c0       	rjmp	.+8      	; 0x1f32 <.L3^B1>

00001f2a <.L2^B1>:
    1f2a:	6f 5f       	subi	r22, 0xFF	; 255
    1f2c:	7f 4f       	sbci	r23, 0xFF	; 255
    1f2e:	8f 4f       	sbci	r24, 0xFF	; 255
    1f30:	9f 4f       	sbci	r25, 0xFF	; 255

00001f32 <.L3^B1>:
    1f32:	08 95       	ret

00001f34 <__fp_split3>:
    1f34:	57 fd       	sbrc	r21, 7
    1f36:	90 58       	subi	r25, 0x80	; 128
    1f38:	44 0f       	add	r20, r20
    1f3a:	55 1f       	adc	r21, r21
    1f3c:	59 f0       	breq	.+22     	; 0x1f54 <.L4^B1>
    1f3e:	5f 3f       	cpi	r21, 0xFF	; 255
    1f40:	71 f0       	breq	.+28     	; 0x1f5e <.L5^B1>

00001f42 <.L1^B1>:
    1f42:	47 95       	ror	r20

00001f44 <__fp_splitA>:
    1f44:	88 0f       	add	r24, r24
    1f46:	97 fb       	bst	r25, 7
    1f48:	99 1f       	adc	r25, r25
    1f4a:	61 f0       	breq	.+24     	; 0x1f64 <.L6^B1>
    1f4c:	9f 3f       	cpi	r25, 0xFF	; 255
    1f4e:	79 f0       	breq	.+30     	; 0x1f6e <.L7^B1>

00001f50 <.L3^B1>:
    1f50:	87 95       	ror	r24
    1f52:	08 95       	ret

00001f54 <.L4^B1>:
    1f54:	12 16       	cp	r1, r18
    1f56:	13 06       	cpc	r1, r19
    1f58:	14 06       	cpc	r1, r20
    1f5a:	55 1f       	adc	r21, r21
    1f5c:	f2 cf       	rjmp	.-28     	; 0x1f42 <.L1^B1>

00001f5e <.L5^B1>:
    1f5e:	46 95       	lsr	r20
    1f60:	f1 df       	rcall	.-30     	; 0x1f44 <__fp_splitA>
    1f62:	08 c0       	rjmp	.+16     	; 0x1f74 <.L8^B1>

00001f64 <.L6^B1>:
    1f64:	16 16       	cp	r1, r22
    1f66:	17 06       	cpc	r1, r23
    1f68:	18 06       	cpc	r1, r24
    1f6a:	99 1f       	adc	r25, r25
    1f6c:	f1 cf       	rjmp	.-30     	; 0x1f50 <.L3^B1>

00001f6e <.L7^B1>:
    1f6e:	86 95       	lsr	r24
    1f70:	71 05       	cpc	r23, r1
    1f72:	61 05       	cpc	r22, r1

00001f74 <.L8^B1>:
    1f74:	08 94       	sec
    1f76:	08 95       	ret

00001f78 <__fp_zero>:
    1f78:	e8 94       	clt

00001f7a <__fp_szero>:
    1f7a:	bb 27       	eor	r27, r27
    1f7c:	66 27       	eor	r22, r22
    1f7e:	77 27       	eor	r23, r23
    1f80:	cb 01       	movw	r24, r22
    1f82:	97 f9       	bld	r25, 7
    1f84:	08 95       	ret

00001f86 <__gesf2>:
    1f86:	0e 94 4e 0f 	call	0x1e9c	; 0x1e9c <__fp_cmp>
    1f8a:	08 f4       	brcc	.+2      	; 0x1f8e <.L1^B1>
    1f8c:	8f ef       	ldi	r24, 0xFF	; 255

00001f8e <.L1^B1>:
    1f8e:	08 95       	ret

00001f90 <__mulsf3>:
    1f90:	0e 94 db 0f 	call	0x1fb6	; 0x1fb6 <__mulsf3x>
    1f94:	0c 94 89 0f 	jmp	0x1f12	; 0x1f12 <__fp_round>

00001f98 <.L^B1>:
    1f98:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <__fp_pscA>
    1f9c:	38 f0       	brcs	.+14     	; 0x1fac <.L1^B1>
    1f9e:	0e 94 82 0f 	call	0x1f04	; 0x1f04 <__fp_pscB>
    1fa2:	20 f0       	brcs	.+8      	; 0x1fac <.L1^B1>
    1fa4:	95 23       	and	r25, r21
    1fa6:	11 f0       	breq	.+4      	; 0x1fac <.L1^B1>
    1fa8:	0c 94 72 0f 	jmp	0x1ee4	; 0x1ee4 <__fp_inf>

00001fac <.L1^B1>:
    1fac:	0c 94 78 0f 	jmp	0x1ef0	; 0x1ef0 <__fp_nan>

00001fb0 <.L2^B1>:
    1fb0:	11 24       	eor	r1, r1
    1fb2:	0c 94 bd 0f 	jmp	0x1f7a	; 0x1f7a <__fp_szero>

00001fb6 <__mulsf3x>:
    1fb6:	0e 94 9a 0f 	call	0x1f34	; 0x1f34 <__fp_split3>
    1fba:	70 f3       	brcs	.-36     	; 0x1f98 <.L^B1>

00001fbc <__mulsf3_pse>:
    1fbc:	95 9f       	mul	r25, r21
    1fbe:	c1 f3       	breq	.-16     	; 0x1fb0 <.L2^B1>
    1fc0:	95 0f       	add	r25, r21
    1fc2:	50 e0       	ldi	r21, 0x00	; 0
    1fc4:	55 1f       	adc	r21, r21
    1fc6:	62 9f       	mul	r22, r18
    1fc8:	f0 01       	movw	r30, r0
    1fca:	72 9f       	mul	r23, r18
    1fcc:	bb 27       	eor	r27, r27
    1fce:	f0 0d       	add	r31, r0
    1fd0:	b1 1d       	adc	r27, r1
    1fd2:	63 9f       	mul	r22, r19
    1fd4:	aa 27       	eor	r26, r26
    1fd6:	f0 0d       	add	r31, r0
    1fd8:	b1 1d       	adc	r27, r1
    1fda:	aa 1f       	adc	r26, r26
    1fdc:	64 9f       	mul	r22, r20
    1fde:	66 27       	eor	r22, r22
    1fe0:	b0 0d       	add	r27, r0
    1fe2:	a1 1d       	adc	r26, r1
    1fe4:	66 1f       	adc	r22, r22
    1fe6:	82 9f       	mul	r24, r18
    1fe8:	22 27       	eor	r18, r18
    1fea:	b0 0d       	add	r27, r0
    1fec:	a1 1d       	adc	r26, r1
    1fee:	62 1f       	adc	r22, r18
    1ff0:	73 9f       	mul	r23, r19
    1ff2:	b0 0d       	add	r27, r0
    1ff4:	a1 1d       	adc	r26, r1
    1ff6:	62 1f       	adc	r22, r18
    1ff8:	83 9f       	mul	r24, r19
    1ffa:	a0 0d       	add	r26, r0
    1ffc:	61 1d       	adc	r22, r1
    1ffe:	22 1f       	adc	r18, r18
    2000:	74 9f       	mul	r23, r20
    2002:	33 27       	eor	r19, r19
    2004:	a0 0d       	add	r26, r0
    2006:	61 1d       	adc	r22, r1
    2008:	23 1f       	adc	r18, r19
    200a:	84 9f       	mul	r24, r20
    200c:	60 0d       	add	r22, r0
    200e:	21 1d       	adc	r18, r1
    2010:	82 2f       	mov	r24, r18
    2012:	76 2f       	mov	r23, r22
    2014:	6a 2f       	mov	r22, r26
    2016:	11 24       	eor	r1, r1
    2018:	9f 57       	subi	r25, 0x7F	; 127
    201a:	50 40       	sbci	r21, 0x00	; 0
    201c:	9a f0       	brmi	.+38     	; 0x2044 <.L13^B1>
    201e:	f1 f0       	breq	.+60     	; 0x205c <.L15^B1>

00002020 <.L10^B1>:
    2020:	88 23       	and	r24, r24
    2022:	4a f0       	brmi	.+18     	; 0x2036 <.L11^B1>
    2024:	ee 0f       	add	r30, r30
    2026:	ff 1f       	adc	r31, r31
    2028:	bb 1f       	adc	r27, r27
    202a:	66 1f       	adc	r22, r22
    202c:	77 1f       	adc	r23, r23
    202e:	88 1f       	adc	r24, r24
    2030:	91 50       	subi	r25, 0x01	; 1
    2032:	50 40       	sbci	r21, 0x00	; 0
    2034:	a9 f7       	brne	.-22     	; 0x2020 <.L10^B1>

00002036 <.L11^B1>:
    2036:	9e 3f       	cpi	r25, 0xFE	; 254
    2038:	51 05       	cpc	r21, r1
    203a:	80 f0       	brcs	.+32     	; 0x205c <.L15^B1>
    203c:	0c 94 72 0f 	jmp	0x1ee4	; 0x1ee4 <__fp_inf>

00002040 <.L12^B1>:
    2040:	0c 94 bd 0f 	jmp	0x1f7a	; 0x1f7a <__fp_szero>

00002044 <.L13^B1>:
    2044:	5f 3f       	cpi	r21, 0xFF	; 255
    2046:	e4 f3       	brlt	.-8      	; 0x2040 <.L12^B1>
    2048:	98 3e       	cpi	r25, 0xE8	; 232
    204a:	d4 f3       	brlt	.-12     	; 0x2040 <.L12^B1>

0000204c <.L14^B1>:
    204c:	86 95       	lsr	r24
    204e:	77 95       	ror	r23
    2050:	67 95       	ror	r22
    2052:	b7 95       	ror	r27
    2054:	f7 95       	ror	r31
    2056:	e7 95       	ror	r30
    2058:	9f 5f       	subi	r25, 0xFF	; 255
    205a:	c1 f7       	brne	.-16     	; 0x204c <.L14^B1>

0000205c <.L15^B1>:
    205c:	fe 2b       	or	r31, r30
    205e:	88 0f       	add	r24, r24
    2060:	91 1d       	adc	r25, r1
    2062:	96 95       	lsr	r25
    2064:	87 95       	ror	r24
    2066:	97 f9       	bld	r25, 7
    2068:	08 95       	ret

0000206a <_exit>:
    206a:	f8 94       	cli

0000206c <__stop_program>:
    206c:	ff cf       	rjmp	.-2      	; 0x206c <__stop_program>

0000206e <L0^A>:
    206e:	09 05       	cpc	r16, r9
    2070:	37 05       	cpc	r19, r7
    2072:	65 05       	cpc	r22, r5
    2074:	8d 05       	cpc	r24, r13
    2076:	cb 05       	cpc	r28, r11
    2078:	01 06       	cpc	r0, r17
    207a:	30 06       	cpc	r3, r16
    207c:	6a 06       	cpc	r6, r26
    207e:	1a 07       	cpc	r17, r26
    2080:	27 07       	cpc	r18, r23
