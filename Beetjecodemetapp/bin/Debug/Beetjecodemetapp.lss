
bin\Debug\Beetjecodemetapp.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  0000199a  00001a4e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000199a  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000010  00800200  00800200  00001a4e  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  00001a4e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      00000012  00000000  00000000  00001a51  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001a64  2**2
                  CONTENTS, READONLY, OCTETS
  6 .debug_aranges 00000138  00000000  00000000  00001aa8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_info   000014a6  00000000  00000000  00001be0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_abbrev 0000102f  00000000  00000000  00003086  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line   00001492  00000000  00000000  000040b5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_frame  000003e4  00000000  00000000  00005548  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_str    000006ea  00000000  00000000  0000592c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_line_str 0000017a  00000000  00000000  00006016  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__ctors_end>
       4:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
       8:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
       c:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      10:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      14:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      18:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      1c:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      20:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      24:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      28:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      2c:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      30:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      34:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      38:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      3c:	0c 94 89 0a 	jmp	0x1512	; 0x1512 <__vector_15>
      40:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      44:	0c 94 bd 03 	jmp	0x77a	; 0x77a <__vector_17>
      48:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      4c:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      50:	0c 94 92 03 	jmp	0x724	; 0x724 <__vector_20>
      54:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      58:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      5c:	0c 94 38 04 	jmp	0x870	; 0x870 <__vector_23>
      60:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      64:	0c 94 9c 00 	jmp	0x138	; 0x138 <__vector_25>
      68:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      6c:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      70:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      74:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      78:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      7c:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      80:	0c 94 10 04 	jmp	0x820	; 0x820 <__vector_32>
      84:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      88:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      8c:	0c 94 e5 03 	jmp	0x7ca	; 0x7ca <__vector_35>
      90:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      94:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      98:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      9c:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      a0:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      a4:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      a8:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      ac:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      b0:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      b4:	0c 94 56 04 	jmp	0x8ac	; 0x8ac <__vector_45>
      b8:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      bc:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      c0:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      c4:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      c8:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      cc:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      d0:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      d4:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      d8:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      dc:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
      e0:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>

000000e4 <__trampolines_start>:
      e4:	0c 94 be 05 	jmp	0xb7c	; 0xb7c <.L18>
      e8:	0c 94 77 06 	jmp	0xcee	; 0xcee <.L14>
      ec:	0c 94 99 05 	jmp	0xb32	; 0xb32 <.L19>
      f0:	0c 94 48 06 	jmp	0xc90	; 0xc90 <.L15>
      f4:	0c 94 12 06 	jmp	0xc24	; 0xc24 <.L16>
      f8:	0c 94 74 05 	jmp	0xae8	; 0xae8 <.L20>
      fc:	0c 94 b1 06 	jmp	0xd62	; 0xd62 <.L13>
     100:	0c 94 60 07 	jmp	0xec0	; 0xec0 <.L12>
     104:	0c 94 6d 07 	jmp	0xeda	; 0xeda <.L10>
     108:	0c 94 dd 05 	jmp	0xbba	; 0xbba <.L17>

0000010c <__ctors_end>:
     10c:	11 24       	eor	r1, r1
     10e:	1f be       	out	0x3f, r1	; 63
     110:	cf ef       	ldi	r28, 0xFF	; 255
     112:	d1 e2       	ldi	r29, 0x21	; 33
     114:	de bf       	out	0x3e, r29	; 62
     116:	cd bf       	out	0x3d, r28	; 61
     118:	00 e0       	ldi	r16, 0x00	; 0
     11a:	0c bf       	out	0x3c, r16	; 60

0000011c <__do_clear_bss>:
     11c:	22 e0       	ldi	r18, 0x02	; 2

0000011e <.Loc.1>:
     11e:	a0 e0       	ldi	r26, 0x00	; 0

00000120 <.Loc.2>:
     120:	b2 e0       	ldi	r27, 0x02	; 2

00000122 <.Loc.3>:
     122:	01 c0       	rjmp	.+2      	; 0x126 <.Loc.5>

00000124 <.Loc.4>:
     124:	1d 92       	st	X+, r1

00000126 <.Loc.5>:
     126:	a0 31       	cpi	r26, 0x10	; 16

00000128 <.Loc.6>:
     128:	b2 07       	cpc	r27, r18

0000012a <.Loc.7>:
     12a:	e1 f7       	brne	.-8      	; 0x124 <.Loc.4>

0000012c <L0^A>:
     12c:	0e 94 8c 04 	call	0x918	; 0x918 <main>
     130:	0c 94 c1 0c 	jmp	0x1982	; 0x1982 <_exit>

00000134 <__bad_interrupt>:
     134:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000138 <__vector_25>:
int Bluetooth_Getal = 0;//BLUETOOTH GETAL
int verandergetal = 0;//ONNODIG
int veranderandergetal = 0;//ONNODIG

ISR(USART0_RX_vect)
{
     138:	1f 92       	push	r1
     13a:	0f 92       	push	r0
     13c:	0f b6       	in	r0, 0x3f	; 63
     13e:	0f 92       	push	r0
     140:	11 24       	eor	r1, r1
     142:	0b b6       	in	r0, 0x3b	; 59
     144:	0f 92       	push	r0
     146:	8f 93       	push	r24
     148:	9f 93       	push	r25
     14a:	ef 93       	push	r30
     14c:	ff 93       	push	r31
     14e:	cf 93       	push	r28
     150:	df 93       	push	r29
     152:	cd b7       	in	r28, 0x3d	; 61
     154:	de b7       	in	r29, 0x3e	; 62

00000156 <.Loc.1>:
    Bluetooth_Getal = UDR0;
     156:	86 ec       	ldi	r24, 0xC6	; 198
     158:	90 e0       	ldi	r25, 0x00	; 0
     15a:	fc 01       	movw	r30, r24
     15c:	80 81       	ld	r24, Z
     15e:	88 2f       	mov	r24, r24
     160:	90 e0       	ldi	r25, 0x00	; 0

00000162 <.Loc.2>:
     162:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <Bluetooth_Getal+0x1>
     166:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <Bluetooth_Getal>

0000016a <.Loc.3>:
    if (verandergetal == 0)//ONNODIG
     16a:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <verandergetal>
     16e:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <verandergetal+0x1>

00000172 <.Loc.4>:
     172:	00 97       	sbiw	r24, 0x00	; 0
     174:	51 f4       	brne	.+20     	; 0x18a <.L2>

00000176 <.Loc.5>:
    {//ONNODIG
        verandergetal++;//ONNODIG
     176:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <verandergetal>
     17a:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <verandergetal+0x1>
     17e:	01 96       	adiw	r24, 0x01	; 1
     180:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <verandergetal+0x1>
     184:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <verandergetal>

00000188 <.Loc.6>:
    }//ONNODIG
    else//ONNODIG
    {//ONNODIG
        verandergetal = 0;//ONNODIG
    }//ONNODIG
}
     188:	04 c0       	rjmp	.+8      	; 0x192 <.L4>

0000018a <.L2>:
        verandergetal = 0;//ONNODIG
     18a:	10 92 03 02 	sts	0x0203, r1	; 0x800203 <verandergetal+0x1>
     18e:	10 92 02 02 	sts	0x0202, r1	; 0x800202 <verandergetal>

00000192 <.L4>:
}
     192:	00 00       	nop
     194:	df 91       	pop	r29
     196:	cf 91       	pop	r28
     198:	ff 91       	pop	r31
     19a:	ef 91       	pop	r30
     19c:	9f 91       	pop	r25
     19e:	8f 91       	pop	r24
     1a0:	0f 90       	pop	r0
     1a2:	0b be       	out	0x3b, r0	; 59
     1a4:	0f 90       	pop	r0
     1a6:	0f be       	out	0x3f, r0	; 63
     1a8:	0f 90       	pop	r0
     1aa:	1f 90       	pop	r1
     1ac:	18 95       	reti

000001ae <initBluetooth>:

void initBluetooth(void)
{
     1ae:	cf 93       	push	r28
     1b0:	df 93       	push	r29
     1b2:	cd b7       	in	r28, 0x3d	; 61
     1b4:	de b7       	in	r29, 0x3e	; 62

000001b6 <.Loc.10>:
    //Bluetooth
    UBRR0H = (BRC >> 8);
     1b6:	85 ec       	ldi	r24, 0xC5	; 197
     1b8:	90 e0       	ldi	r25, 0x00	; 0

000001ba <.Loc.11>:
     1ba:	fc 01       	movw	r30, r24
     1bc:	10 82       	st	Z, r1

000001be <.Loc.12>:
    UBRR0L = BRC;
     1be:	84 ec       	ldi	r24, 0xC4	; 196
     1c0:	90 e0       	ldi	r25, 0x00	; 0

000001c2 <.Loc.13>:
     1c2:	27 e6       	ldi	r18, 0x67	; 103
     1c4:	fc 01       	movw	r30, r24
     1c6:	20 83       	st	Z, r18

000001c8 <.Loc.14>:

    UCSR0B = (1 << RXEN0) |(1 << RXCIE0) |(1 << TXEN0) | (1 << TXCIE0);
     1c8:	81 ec       	ldi	r24, 0xC1	; 193
     1ca:	90 e0       	ldi	r25, 0x00	; 0

000001cc <.Loc.15>:
     1cc:	28 ed       	ldi	r18, 0xD8	; 216
     1ce:	fc 01       	movw	r30, r24
     1d0:	20 83       	st	Z, r18

000001d2 <.Loc.16>:
    UCSR0C = (1 << UCSZ01) | (1 << UCSZ00);
     1d2:	82 ec       	ldi	r24, 0xC2	; 194
     1d4:	90 e0       	ldi	r25, 0x00	; 0

000001d6 <.Loc.17>:
     1d6:	26 e0       	ldi	r18, 0x06	; 6
     1d8:	fc 01       	movw	r30, r24
     1da:	20 83       	st	Z, r18

000001dc <.Loc.18>:

    sei();
     1dc:	78 94       	sei

000001de <.Loc.19>:
}
     1de:	00 00       	nop
     1e0:	df 91       	pop	r29
     1e2:	cf 91       	pop	r28
     1e4:	08 95       	ret

000001e6 <rechtdoorrijden>:
volatile int timerteller = 0;
volatile int timertellerbak = 0;
volatile int bakvar = 0;

void rechtdoorrijden()
{
     1e6:	cf 93       	push	r28
     1e8:	df 93       	push	r29
     1ea:	cd b7       	in	r28, 0x3d	; 61
     1ec:	de b7       	in	r29, 0x3e	; 62

000001ee <.Loc.1>:
    PORT &= ~(1 << PIN11);
     1ee:	82 e2       	ldi	r24, 0x22	; 34
     1f0:	90 e0       	ldi	r25, 0x00	; 0
     1f2:	fc 01       	movw	r30, r24
     1f4:	20 81       	ld	r18, Z

000001f6 <.Loc.2>:
     1f6:	82 e2       	ldi	r24, 0x22	; 34
     1f8:	90 e0       	ldi	r25, 0x00	; 0

000001fa <.Loc.3>:
     1fa:	2f 7b       	andi	r18, 0xBF	; 191
     1fc:	fc 01       	movw	r30, r24
     1fe:	20 83       	st	Z, r18

00000200 <.Loc.4>:
    PORT |= (1 << PIN12);
     200:	82 e2       	ldi	r24, 0x22	; 34
     202:	90 e0       	ldi	r25, 0x00	; 0
     204:	fc 01       	movw	r30, r24
     206:	20 81       	ld	r18, Z
     208:	82 e2       	ldi	r24, 0x22	; 34
     20a:	90 e0       	ldi	r25, 0x00	; 0

0000020c <.Loc.5>:
     20c:	20 62       	ori	r18, 0x20	; 32
     20e:	fc 01       	movw	r30, r24
     210:	20 83       	st	Z, r18

00000212 <.Loc.6>:
    PORT |= (1 << PIN21);
     212:	82 e2       	ldi	r24, 0x22	; 34
     214:	90 e0       	ldi	r25, 0x00	; 0
     216:	fc 01       	movw	r30, r24
     218:	20 81       	ld	r18, Z
     21a:	82 e2       	ldi	r24, 0x22	; 34
     21c:	90 e0       	ldi	r25, 0x00	; 0

0000021e <.Loc.7>:
     21e:	20 61       	ori	r18, 0x10	; 16
     220:	fc 01       	movw	r30, r24
     222:	20 83       	st	Z, r18

00000224 <.Loc.8>:
    PORT &= ~(1 << PIN22);
     224:	82 e2       	ldi	r24, 0x22	; 34
     226:	90 e0       	ldi	r25, 0x00	; 0
     228:	fc 01       	movw	r30, r24
     22a:	20 81       	ld	r18, Z

0000022c <.Loc.9>:
     22c:	82 e2       	ldi	r24, 0x22	; 34
     22e:	90 e0       	ldi	r25, 0x00	; 0

00000230 <.Loc.10>:
     230:	27 7f       	andi	r18, 0xF7	; 247
     232:	fc 01       	movw	r30, r24
     234:	20 83       	st	Z, r18

00000236 <.Loc.11>:
}
     236:	00 00       	nop
     238:	df 91       	pop	r29
     23a:	cf 91       	pop	r28
     23c:	08 95       	ret

0000023e <achteruitrijden>:

void achteruitrijden()
{
     23e:	cf 93       	push	r28
     240:	df 93       	push	r29
     242:	cd b7       	in	r28, 0x3d	; 61
     244:	de b7       	in	r29, 0x3e	; 62

00000246 <.Loc.13>:
    PORT |= (1 << PIN11);
     246:	82 e2       	ldi	r24, 0x22	; 34
     248:	90 e0       	ldi	r25, 0x00	; 0
     24a:	fc 01       	movw	r30, r24
     24c:	20 81       	ld	r18, Z
     24e:	82 e2       	ldi	r24, 0x22	; 34
     250:	90 e0       	ldi	r25, 0x00	; 0

00000252 <.Loc.14>:
     252:	20 64       	ori	r18, 0x40	; 64
     254:	fc 01       	movw	r30, r24
     256:	20 83       	st	Z, r18

00000258 <.Loc.15>:
    PORT &= ~(1 << PIN12);
     258:	82 e2       	ldi	r24, 0x22	; 34
     25a:	90 e0       	ldi	r25, 0x00	; 0
     25c:	fc 01       	movw	r30, r24
     25e:	20 81       	ld	r18, Z

00000260 <.Loc.16>:
     260:	82 e2       	ldi	r24, 0x22	; 34
     262:	90 e0       	ldi	r25, 0x00	; 0

00000264 <.Loc.17>:
     264:	2f 7d       	andi	r18, 0xDF	; 223
     266:	fc 01       	movw	r30, r24
     268:	20 83       	st	Z, r18

0000026a <.Loc.18>:
    PORT &= ~(1 << PIN21);
     26a:	82 e2       	ldi	r24, 0x22	; 34
     26c:	90 e0       	ldi	r25, 0x00	; 0
     26e:	fc 01       	movw	r30, r24
     270:	20 81       	ld	r18, Z

00000272 <.Loc.19>:
     272:	82 e2       	ldi	r24, 0x22	; 34
     274:	90 e0       	ldi	r25, 0x00	; 0

00000276 <.Loc.20>:
     276:	2f 7e       	andi	r18, 0xEF	; 239
     278:	fc 01       	movw	r30, r24
     27a:	20 83       	st	Z, r18

0000027c <.Loc.21>:
    PORT |= (1 << PIN22);
     27c:	82 e2       	ldi	r24, 0x22	; 34
     27e:	90 e0       	ldi	r25, 0x00	; 0
     280:	fc 01       	movw	r30, r24
     282:	20 81       	ld	r18, Z
     284:	82 e2       	ldi	r24, 0x22	; 34
     286:	90 e0       	ldi	r25, 0x00	; 0

00000288 <.Loc.22>:
     288:	28 60       	ori	r18, 0x08	; 8
     28a:	fc 01       	movw	r30, r24
     28c:	20 83       	st	Z, r18

0000028e <.Loc.23>:
}
     28e:	00 00       	nop
     290:	df 91       	pop	r29
     292:	cf 91       	pop	r28
     294:	08 95       	ret

00000296 <naarrechtsrijden>:

void naarrechtsrijden()
{
     296:	cf 93       	push	r28
     298:	df 93       	push	r29
     29a:	cd b7       	in	r28, 0x3d	; 61
     29c:	de b7       	in	r29, 0x3e	; 62

0000029e <.Loc.25>:
    PORT &= ~(1 << PIN12);
     29e:	82 e2       	ldi	r24, 0x22	; 34
     2a0:	90 e0       	ldi	r25, 0x00	; 0
     2a2:	fc 01       	movw	r30, r24
     2a4:	20 81       	ld	r18, Z

000002a6 <.Loc.26>:
     2a6:	82 e2       	ldi	r24, 0x22	; 34
     2a8:	90 e0       	ldi	r25, 0x00	; 0

000002aa <.Loc.27>:
     2aa:	2f 7d       	andi	r18, 0xDF	; 223
     2ac:	fc 01       	movw	r30, r24
     2ae:	20 83       	st	Z, r18

000002b0 <.Loc.28>:
    PORT |= (1 << PIN11);
     2b0:	82 e2       	ldi	r24, 0x22	; 34
     2b2:	90 e0       	ldi	r25, 0x00	; 0
     2b4:	fc 01       	movw	r30, r24
     2b6:	20 81       	ld	r18, Z
     2b8:	82 e2       	ldi	r24, 0x22	; 34
     2ba:	90 e0       	ldi	r25, 0x00	; 0

000002bc <.Loc.29>:
     2bc:	20 64       	ori	r18, 0x40	; 64
     2be:	fc 01       	movw	r30, r24
     2c0:	20 83       	st	Z, r18

000002c2 <.Loc.30>:
    PORT &= ~(1 << PIN22);
     2c2:	82 e2       	ldi	r24, 0x22	; 34
     2c4:	90 e0       	ldi	r25, 0x00	; 0
     2c6:	fc 01       	movw	r30, r24
     2c8:	20 81       	ld	r18, Z

000002ca <.Loc.31>:
     2ca:	82 e2       	ldi	r24, 0x22	; 34
     2cc:	90 e0       	ldi	r25, 0x00	; 0

000002ce <.Loc.32>:
     2ce:	27 7f       	andi	r18, 0xF7	; 247
     2d0:	fc 01       	movw	r30, r24
     2d2:	20 83       	st	Z, r18

000002d4 <.Loc.33>:
    PORT |= (1 << PIN21);
     2d4:	82 e2       	ldi	r24, 0x22	; 34
     2d6:	90 e0       	ldi	r25, 0x00	; 0
     2d8:	fc 01       	movw	r30, r24
     2da:	20 81       	ld	r18, Z
     2dc:	82 e2       	ldi	r24, 0x22	; 34
     2de:	90 e0       	ldi	r25, 0x00	; 0

000002e0 <.Loc.34>:
     2e0:	20 61       	ori	r18, 0x10	; 16
     2e2:	fc 01       	movw	r30, r24
     2e4:	20 83       	st	Z, r18

000002e6 <.Loc.35>:
}
     2e6:	00 00       	nop
     2e8:	df 91       	pop	r29
     2ea:	cf 91       	pop	r28
     2ec:	08 95       	ret

000002ee <naarlinkssrijden>:

void naarlinkssrijden()
{
     2ee:	cf 93       	push	r28
     2f0:	df 93       	push	r29
     2f2:	cd b7       	in	r28, 0x3d	; 61
     2f4:	de b7       	in	r29, 0x3e	; 62

000002f6 <.Loc.37>:
    PORT |= (1 << PIN12);
     2f6:	82 e2       	ldi	r24, 0x22	; 34
     2f8:	90 e0       	ldi	r25, 0x00	; 0
     2fa:	fc 01       	movw	r30, r24
     2fc:	20 81       	ld	r18, Z
     2fe:	82 e2       	ldi	r24, 0x22	; 34
     300:	90 e0       	ldi	r25, 0x00	; 0

00000302 <.Loc.38>:
     302:	20 62       	ori	r18, 0x20	; 32
     304:	fc 01       	movw	r30, r24
     306:	20 83       	st	Z, r18

00000308 <.Loc.39>:
    PORT &= ~(1 << PIN11);
     308:	82 e2       	ldi	r24, 0x22	; 34
     30a:	90 e0       	ldi	r25, 0x00	; 0
     30c:	fc 01       	movw	r30, r24
     30e:	20 81       	ld	r18, Z

00000310 <.Loc.40>:
     310:	82 e2       	ldi	r24, 0x22	; 34
     312:	90 e0       	ldi	r25, 0x00	; 0

00000314 <.Loc.41>:
     314:	2f 7b       	andi	r18, 0xBF	; 191
     316:	fc 01       	movw	r30, r24
     318:	20 83       	st	Z, r18

0000031a <.Loc.42>:
    PORT |= (1 << PIN22);
     31a:	82 e2       	ldi	r24, 0x22	; 34
     31c:	90 e0       	ldi	r25, 0x00	; 0
     31e:	fc 01       	movw	r30, r24
     320:	20 81       	ld	r18, Z
     322:	82 e2       	ldi	r24, 0x22	; 34
     324:	90 e0       	ldi	r25, 0x00	; 0

00000326 <.Loc.43>:
     326:	28 60       	ori	r18, 0x08	; 8
     328:	fc 01       	movw	r30, r24
     32a:	20 83       	st	Z, r18

0000032c <.Loc.44>:
    PORT &= ~(1 << PIN21);
     32c:	82 e2       	ldi	r24, 0x22	; 34
     32e:	90 e0       	ldi	r25, 0x00	; 0
     330:	fc 01       	movw	r30, r24
     332:	20 81       	ld	r18, Z

00000334 <.Loc.45>:
     334:	82 e2       	ldi	r24, 0x22	; 34
     336:	90 e0       	ldi	r25, 0x00	; 0

00000338 <.Loc.46>:
     338:	2f 7e       	andi	r18, 0xEF	; 239
     33a:	fc 01       	movw	r30, r24
     33c:	20 83       	st	Z, r18

0000033e <.Loc.47>:
}
     33e:	00 00       	nop
     340:	df 91       	pop	r29
     342:	cf 91       	pop	r28
     344:	08 95       	ret

00000346 <signaal_geven>:

void signaal_geven()
{
     346:	cf 93       	push	r28
     348:	df 93       	push	r29
     34a:	cd b7       	in	r28, 0x3d	; 61
     34c:	de b7       	in	r29, 0x3e	; 62
     34e:	c4 54       	subi	r28, 0x44	; 68
     350:	d1 09       	sbc	r29, r1
     352:	0f b6       	in	r0, 0x3f	; 63
     354:	f8 94       	cli
     356:	de bf       	out	0x3e, r29	; 62
     358:	0f be       	out	0x3f, r0	; 63
     35a:	cd bf       	out	0x3d, r28	; 61

0000035c <.Loc.49>:
    PORT_LED |= (1<<LED_1);         // LED 1 aan
     35c:	82 e0       	ldi	r24, 0x02	; 2
     35e:	91 e0       	ldi	r25, 0x01	; 1
     360:	dc 01       	movw	r26, r24
     362:	2c 91       	ld	r18, X
     364:	82 e0       	ldi	r24, 0x02	; 2
     366:	91 e0       	ldi	r25, 0x01	; 1

00000368 <.Loc.50>:
     368:	20 61       	ori	r18, 0x10	; 16
     36a:	fc 01       	movw	r30, r24
     36c:	20 83       	st	Z, r18

0000036e <.Loc.51>:
    PORT_LED &= ~(1<<LED_2);        // LED 2 uit
     36e:	82 e0       	ldi	r24, 0x02	; 2
     370:	91 e0       	ldi	r25, 0x01	; 1
     372:	dc 01       	movw	r26, r24
     374:	2c 91       	ld	r18, X

00000376 <.Loc.52>:
     376:	82 e0       	ldi	r24, 0x02	; 2
     378:	91 e0       	ldi	r25, 0x01	; 1

0000037a <.Loc.53>:
     37a:	2f 7d       	andi	r18, 0xDF	; 223
     37c:	fc 01       	movw	r30, r24
     37e:	20 83       	st	Z, r18

00000380 <.Loc.54>:
    PORT_buzzer |= (1<<buzzer);     // buzzer aan
     380:	82 e0       	ldi	r24, 0x02	; 2
     382:	91 e0       	ldi	r25, 0x01	; 1
     384:	dc 01       	movw	r26, r24
     386:	2c 91       	ld	r18, X
     388:	82 e0       	ldi	r24, 0x02	; 2
     38a:	91 e0       	ldi	r25, 0x01	; 1

0000038c <.Loc.55>:
     38c:	28 60       	ori	r18, 0x08	; 8
     38e:	fc 01       	movw	r30, r24
     390:	20 83       	st	Z, r18
     392:	80 e0       	ldi	r24, 0x00	; 0
     394:	90 e0       	ldi	r25, 0x00	; 0
     396:	aa ef       	ldi	r26, 0xFA	; 250
     398:	b3 e4       	ldi	r27, 0x43	; 67
     39a:	8f 87       	std	Y+15, r24	; 0x0f
     39c:	98 8b       	std	Y+16, r25	; 0x10
     39e:	a9 8b       	std	Y+17, r26	; 0x11
     3a0:	ba 8b       	std	Y+18, r27	; 0x12

000003a2 <.LBB18>:

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     3a2:	20 e0       	ldi	r18, 0x00	; 0
     3a4:	30 e0       	ldi	r19, 0x00	; 0
     3a6:	4a e7       	ldi	r20, 0x7A	; 122
     3a8:	55 e4       	ldi	r21, 0x45	; 69
     3aa:	6f 85       	ldd	r22, Y+15	; 0x0f
     3ac:	78 89       	ldd	r23, Y+16	; 0x10
     3ae:	89 89       	ldd	r24, Y+17	; 0x11
     3b0:	9a 89       	ldd	r25, Y+18	; 0x12
     3b2:	0e 94 54 0c 	call	0x18a8	; 0x18a8 <__mulsf3>
     3b6:	6d a3       	std	Y+37, r22	; 0x25
     3b8:	7e a3       	std	Y+38, r23	; 0x26
     3ba:	8f a3       	std	Y+39, r24	; 0x27
     3bc:	98 a7       	std	Y+40, r25	; 0x28
     3be:	8d a1       	ldd	r24, Y+37	; 0x25
     3c0:	9e a1       	ldd	r25, Y+38	; 0x26
     3c2:	af a1       	ldd	r26, Y+39	; 0x27
     3c4:	b8 a5       	ldd	r27, Y+40	; 0x28
     3c6:	8b 8b       	std	Y+19, r24	; 0x13
     3c8:	9c 8b       	std	Y+20, r25	; 0x14
     3ca:	ad 8b       	std	Y+21, r26	; 0x15
     3cc:	be 8b       	std	Y+22, r27	; 0x16

000003ce <.Loc.57>:
	if (__tmp < 1.0)
     3ce:	20 e0       	ldi	r18, 0x00	; 0
     3d0:	30 e0       	ldi	r19, 0x00	; 0
     3d2:	40 e8       	ldi	r20, 0x80	; 128
     3d4:	5f e3       	ldi	r21, 0x3F	; 63
     3d6:	6b 89       	ldd	r22, Y+19	; 0x13
     3d8:	7c 89       	ldd	r23, Y+20	; 0x14
     3da:	8d 89       	ldd	r24, Y+21	; 0x15
     3dc:	9e 89       	ldd	r25, Y+22	; 0x16
     3de:	0e 94 f0 0a 	call	0x15e0	; 0x15e0 <__cmpsf2>
     3e2:	88 23       	and	r24, r24
     3e4:	2c f4       	brge	.+10     	; 0x3f0 <.L26>

000003e6 <.Loc.58>:
		__ticks = 1;
     3e6:	81 e0       	ldi	r24, 0x01	; 1
     3e8:	90 e0       	ldi	r25, 0x00	; 0
     3ea:	98 8f       	std	Y+24, r25	; 0x18
     3ec:	8f 8b       	std	Y+23, r24	; 0x17
     3ee:	55 c0       	rjmp	.+170    	; 0x49a <.L8>

000003f0 <.L26>:
	else if (__tmp > 65535)
     3f0:	20 e0       	ldi	r18, 0x00	; 0
     3f2:	3f ef       	ldi	r19, 0xFF	; 255
     3f4:	4f e7       	ldi	r20, 0x7F	; 127
     3f6:	57 e4       	ldi	r21, 0x47	; 71
     3f8:	6b 89       	ldd	r22, Y+19	; 0x13
     3fa:	7c 89       	ldd	r23, Y+20	; 0x14
     3fc:	8d 89       	ldd	r24, Y+21	; 0x15
     3fe:	9e 89       	ldd	r25, Y+22	; 0x16
     400:	0e 94 4f 0c 	call	0x189e	; 0x189e <__gesf2>
     404:	88 23       	and	r24, r24
     406:	d9 f1       	breq	.+118    	; 0x47e <.L27>
     408:	d4 f1       	brlt	.+116    	; 0x47e <.L27>

0000040a <.Loc.60>:
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     40a:	20 e0       	ldi	r18, 0x00	; 0
     40c:	30 e0       	ldi	r19, 0x00	; 0
     40e:	40 e2       	ldi	r20, 0x20	; 32
     410:	51 e4       	ldi	r21, 0x41	; 65
     412:	6f 85       	ldd	r22, Y+15	; 0x0f
     414:	78 89       	ldd	r23, Y+16	; 0x10
     416:	89 89       	ldd	r24, Y+17	; 0x11
     418:	9a 89       	ldd	r25, Y+18	; 0x12
     41a:	0e 94 54 0c 	call	0x18a8	; 0x18a8 <__mulsf3>
     41e:	69 a7       	std	Y+41, r22	; 0x29
     420:	7a a7       	std	Y+42, r23	; 0x2a
     422:	8b a7       	std	Y+43, r24	; 0x2b
     424:	9c a7       	std	Y+44, r25	; 0x2c
     426:	89 a5       	ldd	r24, Y+41	; 0x29
     428:	9a a5       	ldd	r25, Y+42	; 0x2a
     42a:	ab a5       	ldd	r26, Y+43	; 0x2b
     42c:	bc a5       	ldd	r27, Y+44	; 0x2c
     42e:	89 a3       	std	Y+33, r24	; 0x21
     430:	9a a3       	std	Y+34, r25	; 0x22
     432:	ab a3       	std	Y+35, r26	; 0x23
     434:	bc a3       	std	Y+36, r27	; 0x24

00000436 <.Loc.61>:
     436:	69 a1       	ldd	r22, Y+33	; 0x21
     438:	7a a1       	ldd	r23, Y+34	; 0x22
     43a:	8b a1       	ldd	r24, Y+35	; 0x23
     43c:	9c a1       	ldd	r25, Y+36	; 0x24
     43e:	0e 94 6e 0b 	call	0x16dc	; 0x16dc <__fixunssfsi>
     442:	6d a7       	std	Y+45, r22	; 0x2d
     444:	7e a7       	std	Y+46, r23	; 0x2e
     446:	8f a7       	std	Y+47, r24	; 0x2f
     448:	98 ab       	std	Y+48, r25	; 0x30
     44a:	ad a5       	ldd	r26, Y+45	; 0x2d
     44c:	be a5       	ldd	r27, Y+46	; 0x2e
     44e:	b8 8f       	std	Y+24, r27	; 0x18
     450:	af 8b       	std	Y+23, r26	; 0x17

00000452 <.Loc.62>:
		while(__ticks)
     452:	10 c0       	rjmp	.+32     	; 0x474 <.L11>

00000454 <.L12>:
     454:	80 e9       	ldi	r24, 0x90	; 144
     456:	91 e0       	ldi	r25, 0x01	; 1
     458:	9a 8f       	std	Y+26, r25	; 0x1a
     45a:	89 8f       	std	Y+25, r24	; 0x19

0000045c <.LBB20>:
		"sbc %B0,__zero_reg__"    "\n\t"
		"brne 1b"
		: "+d" (__count)
	);
#else
	__asm__ volatile (
     45c:	89 8d       	ldd	r24, Y+25	; 0x19
     45e:	9a 8d       	ldd	r25, Y+26	; 0x1a

00000460 <.L1^B1>:
     460:	01 97       	sbiw	r24, 0x01	; 1
     462:	f1 f7       	brne	.-4      	; 0x460 <.L1^B1>
     464:	9a 8f       	std	Y+26, r25	; 0x1a
     466:	89 8f       	std	Y+25, r24	; 0x19

00000468 <.Loc.64>:
	...

0000046a <.LBE20>:
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     46a:	8f 89       	ldd	r24, Y+23	; 0x17
     46c:	98 8d       	ldd	r25, Y+24	; 0x18
     46e:	01 97       	sbiw	r24, 0x01	; 1
     470:	98 8f       	std	Y+24, r25	; 0x18
     472:	8f 8b       	std	Y+23, r24	; 0x17

00000474 <.L11>:
		while(__ticks)
     474:	8f 89       	ldd	r24, Y+23	; 0x17
     476:	98 8d       	ldd	r25, Y+24	; 0x18
     478:	00 97       	sbiw	r24, 0x00	; 0
     47a:	61 f7       	brne	.-40     	; 0x454 <.L12>

0000047c <.Loc.67>:
		}
		return;
     47c:	19 c0       	rjmp	.+50     	; 0x4b0 <.L13>

0000047e <.L27>:
	}
	else
		__ticks = (uint16_t)__tmp;
     47e:	6b 89       	ldd	r22, Y+19	; 0x13
     480:	7c 89       	ldd	r23, Y+20	; 0x14
     482:	8d 89       	ldd	r24, Y+21	; 0x15
     484:	9e 89       	ldd	r25, Y+22	; 0x16
     486:	0e 94 6e 0b 	call	0x16dc	; 0x16dc <__fixunssfsi>
     48a:	69 ab       	std	Y+49, r22	; 0x31
     48c:	7a ab       	std	Y+50, r23	; 0x32
     48e:	8b ab       	std	Y+51, r24	; 0x33
     490:	9c ab       	std	Y+52, r25	; 0x34
     492:	e9 a9       	ldd	r30, Y+49	; 0x31
     494:	fa a9       	ldd	r31, Y+50	; 0x32
     496:	f8 8f       	std	Y+24, r31	; 0x18
     498:	ef 8b       	std	Y+23, r30	; 0x17

0000049a <.L8>:
     49a:	8f 89       	ldd	r24, Y+23	; 0x17
     49c:	98 8d       	ldd	r25, Y+24	; 0x18
     49e:	9c 8f       	std	Y+28, r25	; 0x1c
     4a0:	8b 8f       	std	Y+27, r24	; 0x1b

000004a2 <.LBB22>:
     4a2:	8b 8d       	ldd	r24, Y+27	; 0x1b
     4a4:	9c 8d       	ldd	r25, Y+28	; 0x1c

000004a6 <.L1^B2>:
     4a6:	01 97       	sbiw	r24, 0x01	; 1
     4a8:	f1 f7       	brne	.-4      	; 0x4a6 <.L1^B2>
     4aa:	9c 8f       	std	Y+28, r25	; 0x1c
     4ac:	8b 8f       	std	Y+27, r24	; 0x1b

000004ae <.Loc.70>:
	...

000004b0 <.L13>:
    _delay_ms(500);
    PORT_LED |= (1<<LED_2);         // LED 2 aan
     4b0:	82 e0       	ldi	r24, 0x02	; 2
     4b2:	91 e0       	ldi	r25, 0x01	; 1
     4b4:	dc 01       	movw	r26, r24
     4b6:	2c 91       	ld	r18, X
     4b8:	82 e0       	ldi	r24, 0x02	; 2
     4ba:	91 e0       	ldi	r25, 0x01	; 1

000004bc <.Loc.72>:
     4bc:	20 62       	ori	r18, 0x20	; 32
     4be:	fc 01       	movw	r30, r24
     4c0:	20 83       	st	Z, r18

000004c2 <.Loc.73>:
    PORT_LED &= ~(1<<LED_1);        // LED 1 uit
     4c2:	82 e0       	ldi	r24, 0x02	; 2
     4c4:	91 e0       	ldi	r25, 0x01	; 1
     4c6:	dc 01       	movw	r26, r24
     4c8:	2c 91       	ld	r18, X

000004ca <.Loc.74>:
     4ca:	82 e0       	ldi	r24, 0x02	; 2
     4cc:	91 e0       	ldi	r25, 0x01	; 1

000004ce <.Loc.75>:
     4ce:	2f 7e       	andi	r18, 0xEF	; 239
     4d0:	fc 01       	movw	r30, r24
     4d2:	20 83       	st	Z, r18

000004d4 <.Loc.76>:
    PORT_buzzer &= ~(1<<buzzer);    // buzzer uit
     4d4:	82 e0       	ldi	r24, 0x02	; 2
     4d6:	91 e0       	ldi	r25, 0x01	; 1
     4d8:	dc 01       	movw	r26, r24
     4da:	2c 91       	ld	r18, X

000004dc <.Loc.77>:
     4dc:	82 e0       	ldi	r24, 0x02	; 2
     4de:	91 e0       	ldi	r25, 0x01	; 1

000004e0 <.Loc.78>:
     4e0:	27 7f       	andi	r18, 0xF7	; 247
     4e2:	fc 01       	movw	r30, r24
     4e4:	20 83       	st	Z, r18
     4e6:	80 e0       	ldi	r24, 0x00	; 0
     4e8:	90 e0       	ldi	r25, 0x00	; 0
     4ea:	aa ef       	ldi	r26, 0xFA	; 250
     4ec:	b3 e4       	ldi	r27, 0x43	; 67
     4ee:	89 83       	std	Y+1, r24	; 0x01
     4f0:	9a 83       	std	Y+2, r25	; 0x02
     4f2:	ab 83       	std	Y+3, r26	; 0x03
     4f4:	bc 83       	std	Y+4, r27	; 0x04

000004f6 <.LBB24>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     4f6:	20 e0       	ldi	r18, 0x00	; 0
     4f8:	30 e0       	ldi	r19, 0x00	; 0
     4fa:	4a e7       	ldi	r20, 0x7A	; 122
     4fc:	55 e4       	ldi	r21, 0x45	; 69
     4fe:	69 81       	ldd	r22, Y+1	; 0x01
     500:	7a 81       	ldd	r23, Y+2	; 0x02
     502:	8b 81       	ldd	r24, Y+3	; 0x03
     504:	9c 81       	ldd	r25, Y+4	; 0x04
     506:	0e 94 54 0c 	call	0x18a8	; 0x18a8 <__mulsf3>
     50a:	6d ab       	std	Y+53, r22	; 0x35
     50c:	7e ab       	std	Y+54, r23	; 0x36
     50e:	8f ab       	std	Y+55, r24	; 0x37
     510:	98 af       	std	Y+56, r25	; 0x38
     512:	8d a9       	ldd	r24, Y+53	; 0x35
     514:	9e a9       	ldd	r25, Y+54	; 0x36
     516:	af a9       	ldd	r26, Y+55	; 0x37
     518:	b8 ad       	ldd	r27, Y+56	; 0x38
     51a:	8d 83       	std	Y+5, r24	; 0x05
     51c:	9e 83       	std	Y+6, r25	; 0x06
     51e:	af 83       	std	Y+7, r26	; 0x07
     520:	b8 87       	std	Y+8, r27	; 0x08

00000522 <.Loc.80>:
	if (__tmp < 1.0)
     522:	20 e0       	ldi	r18, 0x00	; 0
     524:	30 e0       	ldi	r19, 0x00	; 0
     526:	40 e8       	ldi	r20, 0x80	; 128
     528:	5f e3       	ldi	r21, 0x3F	; 63
     52a:	6d 81       	ldd	r22, Y+5	; 0x05
     52c:	7e 81       	ldd	r23, Y+6	; 0x06
     52e:	8f 81       	ldd	r24, Y+7	; 0x07
     530:	98 85       	ldd	r25, Y+8	; 0x08
     532:	0e 94 f0 0a 	call	0x15e0	; 0x15e0 <__cmpsf2>
     536:	88 23       	and	r24, r24
     538:	2c f4       	brge	.+10     	; 0x544 <.L28>

0000053a <.Loc.81>:
		__ticks = 1;
     53a:	81 e0       	ldi	r24, 0x01	; 1
     53c:	90 e0       	ldi	r25, 0x00	; 0
     53e:	9a 87       	std	Y+10, r25	; 0x0a
     540:	89 87       	std	Y+9, r24	; 0x09
     542:	5c c0       	rjmp	.+184    	; 0x5fc <.L16>

00000544 <.L28>:
	else if (__tmp > 65535)
     544:	20 e0       	ldi	r18, 0x00	; 0
     546:	3f ef       	ldi	r19, 0xFF	; 255
     548:	4f e7       	ldi	r20, 0x7F	; 127
     54a:	57 e4       	ldi	r21, 0x47	; 71
     54c:	6d 81       	ldd	r22, Y+5	; 0x05
     54e:	7e 81       	ldd	r23, Y+6	; 0x06
     550:	8f 81       	ldd	r24, Y+7	; 0x07
     552:	98 85       	ldd	r25, Y+8	; 0x08
     554:	0e 94 4f 0c 	call	0x189e	; 0x189e <__gesf2>
     558:	88 23       	and	r24, r24
     55a:	09 f0       	breq	.+2      	; 0x55e <L0^A>

0000055c <L0^A>:
     55c:	0c f4       	brge	.+2      	; 0x560 <.Loc.83>

0000055e <L0^A>:
     55e:	3c c0       	rjmp	.+120    	; 0x5d8 <.L29>

00000560 <.Loc.83>:
		__ticks = (uint16_t) (__ms * 10.0);
     560:	20 e0       	ldi	r18, 0x00	; 0
     562:	30 e0       	ldi	r19, 0x00	; 0
     564:	40 e2       	ldi	r20, 0x20	; 32
     566:	51 e4       	ldi	r21, 0x41	; 65
     568:	69 81       	ldd	r22, Y+1	; 0x01
     56a:	7a 81       	ldd	r23, Y+2	; 0x02
     56c:	8b 81       	ldd	r24, Y+3	; 0x03
     56e:	9c 81       	ldd	r25, Y+4	; 0x04
     570:	0e 94 54 0c 	call	0x18a8	; 0x18a8 <__mulsf3>
     574:	69 af       	std	Y+57, r22	; 0x39
     576:	7a af       	std	Y+58, r23	; 0x3a
     578:	8b af       	std	Y+59, r24	; 0x3b
     57a:	9c af       	std	Y+60, r25	; 0x3c
     57c:	89 ad       	ldd	r24, Y+57	; 0x39
     57e:	9a ad       	ldd	r25, Y+58	; 0x3a
     580:	ab ad       	ldd	r26, Y+59	; 0x3b
     582:	bc ad       	ldd	r27, Y+60	; 0x3c
     584:	8d 8f       	std	Y+29, r24	; 0x1d
     586:	9e 8f       	std	Y+30, r25	; 0x1e
     588:	af 8f       	std	Y+31, r26	; 0x1f
     58a:	b8 a3       	std	Y+32, r27	; 0x20

0000058c <.Loc.84>:
     58c:	6d 8d       	ldd	r22, Y+29	; 0x1d
     58e:	7e 8d       	ldd	r23, Y+30	; 0x1e
     590:	8f 8d       	ldd	r24, Y+31	; 0x1f
     592:	98 a1       	ldd	r25, Y+32	; 0x20
     594:	0e 94 6e 0b 	call	0x16dc	; 0x16dc <__fixunssfsi>
     598:	21 96       	adiw	r28, 0x01	; 1
     59a:	6c af       	std	Y+60, r22	; 0x3c
     59c:	7d af       	std	Y+61, r23	; 0x3d
     59e:	8e af       	std	Y+62, r24	; 0x3e
     5a0:	9f af       	std	Y+63, r25	; 0x3f
     5a2:	21 97       	sbiw	r28, 0x01	; 1
     5a4:	ad ad       	ldd	r26, Y+61	; 0x3d
     5a6:	be ad       	ldd	r27, Y+62	; 0x3e
     5a8:	ba 87       	std	Y+10, r27	; 0x0a
     5aa:	a9 87       	std	Y+9, r26	; 0x09

000005ac <.Loc.85>:
		while(__ticks)
     5ac:	10 c0       	rjmp	.+32     	; 0x5ce <.L19>

000005ae <.L20>:
     5ae:	80 e9       	ldi	r24, 0x90	; 144
     5b0:	91 e0       	ldi	r25, 0x01	; 1
     5b2:	9c 87       	std	Y+12, r25	; 0x0c
     5b4:	8b 87       	std	Y+11, r24	; 0x0b

000005b6 <.LBB26>:
     5b6:	8b 85       	ldd	r24, Y+11	; 0x0b
     5b8:	9c 85       	ldd	r25, Y+12	; 0x0c

000005ba <.L1^B3>:
     5ba:	01 97       	sbiw	r24, 0x01	; 1
     5bc:	f1 f7       	brne	.-4      	; 0x5ba <.L1^B3>
     5be:	9c 87       	std	Y+12, r25	; 0x0c
     5c0:	8b 87       	std	Y+11, r24	; 0x0b

000005c2 <.Loc.87>:
	...

000005c4 <.LBE26>:
			__ticks --;
     5c4:	89 85       	ldd	r24, Y+9	; 0x09
     5c6:	9a 85       	ldd	r25, Y+10	; 0x0a
     5c8:	01 97       	sbiw	r24, 0x01	; 1
     5ca:	9a 87       	std	Y+10, r25	; 0x0a
     5cc:	89 87       	std	Y+9, r24	; 0x09

000005ce <.L19>:
		while(__ticks)
     5ce:	89 85       	ldd	r24, Y+9	; 0x09
     5d0:	9a 85       	ldd	r25, Y+10	; 0x0a
     5d2:	00 97       	sbiw	r24, 0x00	; 0
     5d4:	61 f7       	brne	.-40     	; 0x5ae <.L20>

000005d6 <.Loc.90>:
		return;
     5d6:	1d c0       	rjmp	.+58     	; 0x612 <.L21>

000005d8 <.L29>:
		__ticks = (uint16_t)__tmp;
     5d8:	6d 81       	ldd	r22, Y+5	; 0x05
     5da:	7e 81       	ldd	r23, Y+6	; 0x06
     5dc:	8f 81       	ldd	r24, Y+7	; 0x07
     5de:	98 85       	ldd	r25, Y+8	; 0x08
     5e0:	0e 94 6e 0b 	call	0x16dc	; 0x16dc <__fixunssfsi>
     5e4:	25 96       	adiw	r28, 0x05	; 5
     5e6:	6c af       	std	Y+60, r22	; 0x3c
     5e8:	7d af       	std	Y+61, r23	; 0x3d
     5ea:	8e af       	std	Y+62, r24	; 0x3e
     5ec:	9f af       	std	Y+63, r25	; 0x3f
     5ee:	25 97       	sbiw	r28, 0x05	; 5
     5f0:	23 96       	adiw	r28, 0x03	; 3
     5f2:	ee ad       	ldd	r30, Y+62	; 0x3e
     5f4:	ff ad       	ldd	r31, Y+63	; 0x3f
     5f6:	23 97       	sbiw	r28, 0x03	; 3
     5f8:	fa 87       	std	Y+10, r31	; 0x0a
     5fa:	e9 87       	std	Y+9, r30	; 0x09

000005fc <.L16>:
     5fc:	89 85       	ldd	r24, Y+9	; 0x09
     5fe:	9a 85       	ldd	r25, Y+10	; 0x0a
     600:	9e 87       	std	Y+14, r25	; 0x0e
     602:	8d 87       	std	Y+13, r24	; 0x0d

00000604 <.LBB28>:
     604:	8d 85       	ldd	r24, Y+13	; 0x0d
     606:	9e 85       	ldd	r25, Y+14	; 0x0e

00000608 <.L1^B4>:
     608:	01 97       	sbiw	r24, 0x01	; 1
     60a:	f1 f7       	brne	.-4      	; 0x608 <.L1^B4>
     60c:	9e 87       	std	Y+14, r25	; 0x0e
     60e:	8d 87       	std	Y+13, r24	; 0x0d

00000610 <.Loc.93>:
	...

00000612 <.L21>:
    _delay_ms(500);
}
     612:	00 00       	nop
     614:	cc 5b       	subi	r28, 0xBC	; 188
     616:	df 4f       	sbci	r29, 0xFF	; 255
     618:	0f b6       	in	r0, 0x3f	; 63
     61a:	f8 94       	cli
     61c:	de bf       	out	0x3e, r29	; 62
     61e:	0f be       	out	0x3f, r0	; 63
     620:	cd bf       	out	0x3d, r28	; 61
     622:	df 91       	pop	r29
     624:	cf 91       	pop	r28
     626:	08 95       	ret

00000628 <h_bridgeR_set_percentage>:

void h_bridgeR_set_percentage(signed char percentage)
{
     628:	0f 93       	push	r16
     62a:	1f 93       	push	r17
     62c:	cf 93       	push	r28
     62e:	df 93       	push	r29
     630:	00 d0       	rcall	.+0      	; 0x632 <L0^A>

00000632 <L0^A>:
     632:	0f 92       	push	r0
     634:	0f 92       	push	r0
     636:	cd b7       	in	r28, 0x3d	; 61
     638:	de b7       	in	r29, 0x3e	; 62
     63a:	89 83       	std	Y+1, r24	; 0x01

0000063c <.Loc.96>:
	if (percentage >= 0 && percentage <= 100)
     63c:	89 81       	ldd	r24, Y+1	; 0x01
     63e:	88 23       	and	r24, r24
     640:	3c f1       	brlt	.+78     	; 0x690 <.L32>

00000642 <.Loc.97>:
     642:	89 81       	ldd	r24, Y+1	; 0x01
     644:	84 36       	cpi	r24, 0x64	; 100
     646:	09 f0       	breq	.+2      	; 0x64a <.Loc.98>

00000648 <L0^A>:
     648:	1c f5       	brge	.+70     	; 0x690 <.L32>

0000064a <.Loc.98>:
	{
			OCR1A = (65536*percentage)/100;
     64a:	89 81       	ldd	r24, Y+1	; 0x01
     64c:	08 2e       	mov	r0, r24
     64e:	00 0c       	add	r0, r0
     650:	99 0b       	sbc	r25, r25
     652:	aa 0b       	sbc	r26, r26
     654:	bb 0b       	sbc	r27, r27
     656:	ac 01       	movw	r20, r24
     658:	33 27       	eor	r19, r19
     65a:	22 27       	eor	r18, r18
     65c:	2a 83       	std	Y+2, r18	; 0x02
     65e:	3b 83       	std	Y+3, r19	; 0x03
     660:	4c 83       	std	Y+4, r20	; 0x04
     662:	5d 83       	std	Y+5, r21	; 0x05

00000664 <.Loc.99>:
     664:	04 e6       	ldi	r16, 0x64	; 100
     666:	10 e0       	ldi	r17, 0x00	; 0
     668:	20 e0       	ldi	r18, 0x00	; 0
     66a:	30 e0       	ldi	r19, 0x00	; 0
     66c:	6a 81       	ldd	r22, Y+2	; 0x02
     66e:	7b 81       	ldd	r23, Y+3	; 0x03
     670:	8c 81       	ldd	r24, Y+4	; 0x04
     672:	9d 81       	ldd	r25, Y+5	; 0x05
     674:	a9 01       	movw	r20, r18
     676:	98 01       	movw	r18, r16
     678:	0e 94 a7 0a 	call	0x154e	; 0x154e <__divmodsi4>
     67c:	da 01       	movw	r26, r20
     67e:	c9 01       	movw	r24, r18
     680:	ac 01       	movw	r20, r24
     682:	bd 01       	movw	r22, r26

00000684 <.Loc.100>:
     684:	88 e8       	ldi	r24, 0x88	; 136
     686:	90 e0       	ldi	r25, 0x00	; 0

00000688 <.Loc.101>:
     688:	9a 01       	movw	r18, r20
     68a:	fc 01       	movw	r30, r24
     68c:	31 83       	std	Z+1, r19	; 0x01
     68e:	20 83       	st	Z, r18

00000690 <.L32>:
	}
}
     690:	00 00       	nop
     692:	0f 90       	pop	r0
     694:	0f 90       	pop	r0
     696:	0f 90       	pop	r0
     698:	0f 90       	pop	r0
     69a:	0f 90       	pop	r0
     69c:	df 91       	pop	r29
     69e:	cf 91       	pop	r28
     6a0:	1f 91       	pop	r17
     6a2:	0f 91       	pop	r16
     6a4:	08 95       	ret

000006a6 <h_bridgeL_set_percentage>:

void h_bridgeL_set_percentage(signed char percentage)
{
     6a6:	0f 93       	push	r16
     6a8:	1f 93       	push	r17
     6aa:	cf 93       	push	r28
     6ac:	df 93       	push	r29
     6ae:	00 d0       	rcall	.+0      	; 0x6b0 <L0^A>

000006b0 <L0^A>:
     6b0:	0f 92       	push	r0
     6b2:	0f 92       	push	r0
     6b4:	cd b7       	in	r28, 0x3d	; 61
     6b6:	de b7       	in	r29, 0x3e	; 62
     6b8:	89 83       	std	Y+1, r24	; 0x01

000006ba <.Loc.104>:
	if (percentage >= 0 && percentage <= 100)
     6ba:	89 81       	ldd	r24, Y+1	; 0x01
     6bc:	88 23       	and	r24, r24
     6be:	3c f1       	brlt	.+78     	; 0x70e <.L35>

000006c0 <.Loc.105>:
     6c0:	89 81       	ldd	r24, Y+1	; 0x01
     6c2:	84 36       	cpi	r24, 0x64	; 100
     6c4:	09 f0       	breq	.+2      	; 0x6c8 <.Loc.106>

000006c6 <L0^A>:
     6c6:	1c f5       	brge	.+70     	; 0x70e <.L35>

000006c8 <.Loc.106>:
	{
			OCR3A = (65536*percentage)/100;
     6c8:	89 81       	ldd	r24, Y+1	; 0x01
     6ca:	08 2e       	mov	r0, r24
     6cc:	00 0c       	add	r0, r0
     6ce:	99 0b       	sbc	r25, r25
     6d0:	aa 0b       	sbc	r26, r26
     6d2:	bb 0b       	sbc	r27, r27
     6d4:	ac 01       	movw	r20, r24
     6d6:	33 27       	eor	r19, r19
     6d8:	22 27       	eor	r18, r18
     6da:	2a 83       	std	Y+2, r18	; 0x02
     6dc:	3b 83       	std	Y+3, r19	; 0x03
     6de:	4c 83       	std	Y+4, r20	; 0x04
     6e0:	5d 83       	std	Y+5, r21	; 0x05

000006e2 <.Loc.107>:
     6e2:	04 e6       	ldi	r16, 0x64	; 100
     6e4:	10 e0       	ldi	r17, 0x00	; 0
     6e6:	20 e0       	ldi	r18, 0x00	; 0
     6e8:	30 e0       	ldi	r19, 0x00	; 0
     6ea:	6a 81       	ldd	r22, Y+2	; 0x02
     6ec:	7b 81       	ldd	r23, Y+3	; 0x03
     6ee:	8c 81       	ldd	r24, Y+4	; 0x04
     6f0:	9d 81       	ldd	r25, Y+5	; 0x05
     6f2:	a9 01       	movw	r20, r18
     6f4:	98 01       	movw	r18, r16
     6f6:	0e 94 a7 0a 	call	0x154e	; 0x154e <__divmodsi4>
     6fa:	da 01       	movw	r26, r20
     6fc:	c9 01       	movw	r24, r18
     6fe:	ac 01       	movw	r20, r24
     700:	bd 01       	movw	r22, r26

00000702 <.Loc.108>:
     702:	88 e9       	ldi	r24, 0x98	; 152
     704:	90 e0       	ldi	r25, 0x00	; 0

00000706 <.Loc.109>:
     706:	9a 01       	movw	r18, r20
     708:	fc 01       	movw	r30, r24
     70a:	31 83       	std	Z+1, r19	; 0x01
     70c:	20 83       	st	Z, r18

0000070e <.L35>:
	}
}
     70e:	00 00       	nop
     710:	0f 90       	pop	r0
     712:	0f 90       	pop	r0
     714:	0f 90       	pop	r0
     716:	0f 90       	pop	r0
     718:	0f 90       	pop	r0
     71a:	df 91       	pop	r29
     71c:	cf 91       	pop	r28
     71e:	1f 91       	pop	r17
     720:	0f 91       	pop	r16
     722:	08 95       	ret

00000724 <__vector_20>:

//H-brug PWMR
ISR(TIMER1_OVF_vect)
{
     724:	1f 92       	push	r1
     726:	0f 92       	push	r0
     728:	0f b6       	in	r0, 0x3f	; 63
     72a:	0f 92       	push	r0
     72c:	11 24       	eor	r1, r1
     72e:	0b b6       	in	r0, 0x3b	; 59
     730:	0f 92       	push	r0
     732:	2f 93       	push	r18
     734:	3f 93       	push	r19
     736:	8f 93       	push	r24
     738:	9f 93       	push	r25
     73a:	ef 93       	push	r30
     73c:	ff 93       	push	r31
     73e:	cf 93       	push	r28
     740:	df 93       	push	r29
     742:	cd b7       	in	r28, 0x3d	; 61
     744:	de b7       	in	r29, 0x3e	; 62

00000746 <.Loc.112>:
    PORT ^= (1 << PEN1);
     746:	82 e2       	ldi	r24, 0x22	; 34
     748:	90 e0       	ldi	r25, 0x00	; 0
     74a:	fc 01       	movw	r30, r24
     74c:	30 81       	ld	r19, Z
     74e:	82 e2       	ldi	r24, 0x22	; 34
     750:	90 e0       	ldi	r25, 0x00	; 0

00000752 <.Loc.113>:
     752:	20 e8       	ldi	r18, 0x80	; 128
     754:	23 27       	eor	r18, r19
     756:	fc 01       	movw	r30, r24
     758:	20 83       	st	Z, r18

0000075a <.Loc.114>:
}
     75a:	00 00       	nop
     75c:	df 91       	pop	r29
     75e:	cf 91       	pop	r28
     760:	ff 91       	pop	r31
     762:	ef 91       	pop	r30
     764:	9f 91       	pop	r25
     766:	8f 91       	pop	r24
     768:	3f 91       	pop	r19
     76a:	2f 91       	pop	r18
     76c:	0f 90       	pop	r0
     76e:	0b be       	out	0x3b, r0	; 59
     770:	0f 90       	pop	r0
     772:	0f be       	out	0x3f, r0	; 63
     774:	0f 90       	pop	r0
     776:	1f 90       	pop	r1
     778:	18 95       	reti

0000077a <__vector_17>:
//H-brug PWMR
ISR(TIMER1_COMPA_vect)
{
     77a:	1f 92       	push	r1
     77c:	0f 92       	push	r0
     77e:	0f b6       	in	r0, 0x3f	; 63
     780:	0f 92       	push	r0
     782:	11 24       	eor	r1, r1
     784:	0b b6       	in	r0, 0x3b	; 59
     786:	0f 92       	push	r0
     788:	2f 93       	push	r18
     78a:	8f 93       	push	r24
     78c:	9f 93       	push	r25
     78e:	ef 93       	push	r30
     790:	ff 93       	push	r31
     792:	cf 93       	push	r28
     794:	df 93       	push	r29
     796:	cd b7       	in	r28, 0x3d	; 61
     798:	de b7       	in	r29, 0x3e	; 62

0000079a <.Loc.116>:
    PORT |= (1 << PEN1);
     79a:	82 e2       	ldi	r24, 0x22	; 34
     79c:	90 e0       	ldi	r25, 0x00	; 0
     79e:	fc 01       	movw	r30, r24
     7a0:	20 81       	ld	r18, Z
     7a2:	82 e2       	ldi	r24, 0x22	; 34
     7a4:	90 e0       	ldi	r25, 0x00	; 0

000007a6 <.Loc.117>:
     7a6:	20 68       	ori	r18, 0x80	; 128
     7a8:	fc 01       	movw	r30, r24
     7aa:	20 83       	st	Z, r18

000007ac <.Loc.118>:
}
     7ac:	00 00       	nop
     7ae:	df 91       	pop	r29
     7b0:	cf 91       	pop	r28
     7b2:	ff 91       	pop	r31
     7b4:	ef 91       	pop	r30
     7b6:	9f 91       	pop	r25
     7b8:	8f 91       	pop	r24
     7ba:	2f 91       	pop	r18
     7bc:	0f 90       	pop	r0
     7be:	0b be       	out	0x3b, r0	; 59
     7c0:	0f 90       	pop	r0
     7c2:	0f be       	out	0x3f, r0	; 63
     7c4:	0f 90       	pop	r0
     7c6:	1f 90       	pop	r1
     7c8:	18 95       	reti

000007ca <__vector_35>:

//H-brug PWML
ISR(TIMER3_OVF_vect)
{
     7ca:	1f 92       	push	r1
     7cc:	0f 92       	push	r0
     7ce:	0f b6       	in	r0, 0x3f	; 63
     7d0:	0f 92       	push	r0
     7d2:	11 24       	eor	r1, r1
     7d4:	0b b6       	in	r0, 0x3b	; 59
     7d6:	0f 92       	push	r0
     7d8:	2f 93       	push	r18
     7da:	3f 93       	push	r19
     7dc:	8f 93       	push	r24
     7de:	9f 93       	push	r25
     7e0:	ef 93       	push	r30
     7e2:	ff 93       	push	r31
     7e4:	cf 93       	push	r28
     7e6:	df 93       	push	r29
     7e8:	cd b7       	in	r28, 0x3d	; 61
     7ea:	de b7       	in	r29, 0x3e	; 62

000007ec <.Loc.120>:
    PORT ^= (1 << PEN2);
     7ec:	82 e2       	ldi	r24, 0x22	; 34
     7ee:	90 e0       	ldi	r25, 0x00	; 0
     7f0:	fc 01       	movw	r30, r24
     7f2:	30 81       	ld	r19, Z
     7f4:	82 e2       	ldi	r24, 0x22	; 34
     7f6:	90 e0       	ldi	r25, 0x00	; 0

000007f8 <.Loc.121>:
     7f8:	24 e0       	ldi	r18, 0x04	; 4
     7fa:	23 27       	eor	r18, r19
     7fc:	fc 01       	movw	r30, r24
     7fe:	20 83       	st	Z, r18

00000800 <.Loc.122>:
}
     800:	00 00       	nop
     802:	df 91       	pop	r29
     804:	cf 91       	pop	r28
     806:	ff 91       	pop	r31
     808:	ef 91       	pop	r30
     80a:	9f 91       	pop	r25
     80c:	8f 91       	pop	r24
     80e:	3f 91       	pop	r19
     810:	2f 91       	pop	r18
     812:	0f 90       	pop	r0
     814:	0b be       	out	0x3b, r0	; 59
     816:	0f 90       	pop	r0
     818:	0f be       	out	0x3f, r0	; 63
     81a:	0f 90       	pop	r0
     81c:	1f 90       	pop	r1
     81e:	18 95       	reti

00000820 <__vector_32>:
//H-brug PWML
ISR(TIMER3_COMPA_vect)
{
     820:	1f 92       	push	r1
     822:	0f 92       	push	r0
     824:	0f b6       	in	r0, 0x3f	; 63
     826:	0f 92       	push	r0
     828:	11 24       	eor	r1, r1
     82a:	0b b6       	in	r0, 0x3b	; 59
     82c:	0f 92       	push	r0
     82e:	2f 93       	push	r18
     830:	8f 93       	push	r24
     832:	9f 93       	push	r25
     834:	ef 93       	push	r30
     836:	ff 93       	push	r31
     838:	cf 93       	push	r28
     83a:	df 93       	push	r29
     83c:	cd b7       	in	r28, 0x3d	; 61
     83e:	de b7       	in	r29, 0x3e	; 62

00000840 <.Loc.124>:
    PORT |= (1 << PEN2);
     840:	82 e2       	ldi	r24, 0x22	; 34
     842:	90 e0       	ldi	r25, 0x00	; 0
     844:	fc 01       	movw	r30, r24
     846:	20 81       	ld	r18, Z
     848:	82 e2       	ldi	r24, 0x22	; 34
     84a:	90 e0       	ldi	r25, 0x00	; 0

0000084c <.Loc.125>:
     84c:	24 60       	ori	r18, 0x04	; 4
     84e:	fc 01       	movw	r30, r24
     850:	20 83       	st	Z, r18

00000852 <.Loc.126>:
}
     852:	00 00       	nop
     854:	df 91       	pop	r29
     856:	cf 91       	pop	r28
     858:	ff 91       	pop	r31
     85a:	ef 91       	pop	r30
     85c:	9f 91       	pop	r25
     85e:	8f 91       	pop	r24
     860:	2f 91       	pop	r18
     862:	0f 90       	pop	r0
     864:	0b be       	out	0x3b, r0	; 59
     866:	0f 90       	pop	r0
     868:	0f be       	out	0x3f, r0	; 63
     86a:	0f 90       	pop	r0
     86c:	1f 90       	pop	r1
     86e:	18 95       	reti

00000870 <__vector_23>:

//Timer Noodtoestand
ISR(TIMER0_OVF_vect)
{
     870:	1f 92       	push	r1
     872:	0f 92       	push	r0
     874:	0f b6       	in	r0, 0x3f	; 63
     876:	0f 92       	push	r0
     878:	11 24       	eor	r1, r1
     87a:	8f 93       	push	r24
     87c:	9f 93       	push	r25
     87e:	cf 93       	push	r28
     880:	df 93       	push	r29
     882:	cd b7       	in	r28, 0x3d	; 61
     884:	de b7       	in	r29, 0x3e	; 62

00000886 <.Loc.128>:
    timerteller ++;
     886:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <timerteller>
     88a:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <timerteller+0x1>
     88e:	01 96       	adiw	r24, 0x01	; 1
     890:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <timerteller+0x1>
     894:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <timerteller>

00000898 <.Loc.129>:
}
     898:	00 00       	nop
     89a:	df 91       	pop	r29
     89c:	cf 91       	pop	r28
     89e:	9f 91       	pop	r25
     8a0:	8f 91       	pop	r24
     8a2:	0f 90       	pop	r0
     8a4:	0f be       	out	0x3f, r0	; 63
     8a6:	0f 90       	pop	r0
     8a8:	1f 90       	pop	r1
     8aa:	18 95       	reti

000008ac <__vector_45>:

//Timer Bak detectie
ISR(TIMER4_OVF_vect)
{
     8ac:	1f 92       	push	r1
     8ae:	0f 92       	push	r0
     8b0:	0f b6       	in	r0, 0x3f	; 63
     8b2:	0f 92       	push	r0
     8b4:	11 24       	eor	r1, r1
     8b6:	0b b6       	in	r0, 0x3b	; 59
     8b8:	0f 92       	push	r0
     8ba:	8f 93       	push	r24
     8bc:	9f 93       	push	r25
     8be:	ef 93       	push	r30
     8c0:	ff 93       	push	r31
     8c2:	cf 93       	push	r28
     8c4:	df 93       	push	r29
     8c6:	cd b7       	in	r28, 0x3d	; 61
     8c8:	de b7       	in	r29, 0x3e	; 62

000008ca <.Loc.131>:
    if(timertellerbak >= 7)
     8ca:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <timertellerbak>
     8ce:	90 91 09 02 	lds	r25, 0x0209	; 0x800209 <timertellerbak+0x1>

000008d2 <.Loc.132>:
     8d2:	86 30       	cpi	r24, 0x06	; 6
     8d4:	91 05       	cpc	r25, r1
     8d6:	49 f0       	breq	.+18     	; 0x8ea <.L42>
     8d8:	44 f0       	brlt	.+16     	; 0x8ea <.L42>

000008da <.Loc.133>:
    {
        bakvar = 0;
     8da:	10 92 0b 02 	sts	0x020B, r1	; 0x80020b <bakvar+0x1>
     8de:	10 92 0a 02 	sts	0x020A, r1	; 0x80020a <bakvar>

000008e2 <.Loc.134>:
        TCCR4B = 0;
     8e2:	81 ea       	ldi	r24, 0xA1	; 161
     8e4:	90 e0       	ldi	r25, 0x00	; 0

000008e6 <.Loc.135>:
     8e6:	fc 01       	movw	r30, r24
     8e8:	10 82       	st	Z, r1

000008ea <.L42>:
    }
    timertellerbak ++;
     8ea:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <timertellerbak>
     8ee:	90 91 09 02 	lds	r25, 0x0209	; 0x800209 <timertellerbak+0x1>
     8f2:	01 96       	adiw	r24, 0x01	; 1
     8f4:	90 93 09 02 	sts	0x0209, r25	; 0x800209 <timertellerbak+0x1>
     8f8:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <timertellerbak>

000008fc <.Loc.137>:
}
     8fc:	00 00       	nop
     8fe:	df 91       	pop	r29
     900:	cf 91       	pop	r28
     902:	ff 91       	pop	r31
     904:	ef 91       	pop	r30
     906:	9f 91       	pop	r25
     908:	8f 91       	pop	r24
     90a:	0f 90       	pop	r0
     90c:	0b be       	out	0x3b, r0	; 59
     90e:	0f 90       	pop	r0
     910:	0f be       	out	0x3f, r0	; 63
     912:	0f 90       	pop	r0
     914:	1f 90       	pop	r1
     916:	18 95       	reti

00000918 <main>:
7: Noodknop ingedrukt
8: Noodknop uitgedrukt
*/

int main(void)
{
     918:	cf 93       	push	r28
     91a:	df 93       	push	r29
     91c:	cd b7       	in	r28, 0x3d	; 61
     91e:	de b7       	in	r29, 0x3e	; 62
     920:	a6 97       	sbiw	r28, 0x26	; 38
     922:	0f b6       	in	r0, 0x3f	; 63
     924:	f8 94       	cli
     926:	de bf       	out	0x3e, r29	; 62
     928:	0f be       	out	0x3f, r0	; 63
     92a:	cd bf       	out	0x3d, r28	; 61

0000092c <.Loc.1>:
    init();
     92c:	0e 94 92 07 	call	0xf24	; 0xf24 <init>

00000930 <.Loc.2>:

    initTimer();
     930:	0e 94 74 08 	call	0x10e8	; 0x10e8 <initTimer>

00000934 <.Loc.3>:
    int waarde;

    int toestand = 0;
     934:	1a 82       	std	Y+2, r1	; 0x02
     936:	19 82       	std	Y+1, r1	; 0x01

00000938 <.L45>:

    while(1)
    {
        //waarde = GetDistance();

        if(Bluetooth_Getal == 2)//Bluetooth verbroken
     938:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <Bluetooth_Getal>
     93c:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <Bluetooth_Getal+0x1>

00000940 <.Loc.5>:
     940:	82 30       	cpi	r24, 0x02	; 2
     942:	91 05       	cpc	r25, r1
     944:	11 f4       	brne	.+4      	; 0x94a <.L2>

00000946 <.Loc.6>:
        {
            toestand = 0;
     946:	1a 82       	std	Y+2, r1	; 0x02
     948:	19 82       	std	Y+1, r1	; 0x01

0000094a <.L2>:
        }
        if(Bluetooth_Getal == 6)//Uitknop ingedrukt
     94a:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <Bluetooth_Getal>
     94e:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <Bluetooth_Getal+0x1>

00000952 <.Loc.8>:
     952:	86 30       	cpi	r24, 0x06	; 6
     954:	91 05       	cpc	r25, r1
     956:	21 f4       	brne	.+8      	; 0x960 <.L3>

00000958 <.Loc.9>:
        {
            toestand = 1;
     958:	81 e0       	ldi	r24, 0x01	; 1
     95a:	90 e0       	ldi	r25, 0x00	; 0
     95c:	9a 83       	std	Y+2, r25	; 0x02
     95e:	89 83       	std	Y+1, r24	; 0x01

00000960 <.L3>:
        }
        if(Bluetooth_Getal == 7)// || (Noodknopport & (1<<Noodknoppin)) == 0))
     960:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <Bluetooth_Getal>
     964:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <Bluetooth_Getal+0x1>

00000968 <.Loc.11>:
     968:	87 30       	cpi	r24, 0x07	; 7
     96a:	91 05       	cpc	r25, r1
     96c:	21 f4       	brne	.+8      	; 0x976 <.L4>

0000096e <.Loc.12>:
        {
            toestand = 99;
     96e:	83 e6       	ldi	r24, 0x63	; 99
     970:	90 e0       	ldi	r25, 0x00	; 0
     972:	9a 83       	std	Y+2, r25	; 0x02
     974:	89 83       	std	Y+1, r24	; 0x01

00000976 <.L4>:
        }
        if(((IRregister & (1 << IRbaklinks)) == 0) || ((IRregister & (1 << IRbakrechts)) == 0))//Plantenbak gedetecteerd
     976:	86 e2       	ldi	r24, 0x26	; 38
     978:	90 e0       	ldi	r25, 0x00	; 0
     97a:	dc 01       	movw	r26, r24
     97c:	8c 91       	ld	r24, X

0000097e <.Loc.14>:
     97e:	88 2f       	mov	r24, r24
     980:	90 e0       	ldi	r25, 0x00	; 0
     982:	80 72       	andi	r24, 0x20	; 32
     984:	99 27       	eor	r25, r25

00000986 <.Loc.15>:
     986:	00 97       	sbiw	r24, 0x00	; 0
     988:	51 f0       	breq	.+20     	; 0x99e <.L5>

0000098a <.Loc.16>:
     98a:	86 e2       	ldi	r24, 0x26	; 38
     98c:	90 e0       	ldi	r25, 0x00	; 0
     98e:	fc 01       	movw	r30, r24
     990:	80 81       	ld	r24, Z

00000992 <.Loc.17>:
     992:	88 2f       	mov	r24, r24
     994:	90 e0       	ldi	r25, 0x00	; 0
     996:	80 71       	andi	r24, 0x10	; 16
     998:	99 27       	eor	r25, r25

0000099a <.Loc.18>:
     99a:	00 97       	sbiw	r24, 0x00	; 0
     99c:	d9 f4       	brne	.+54     	; 0x9d4 <.L6>

0000099e <.L5>:
        {
            if(bakvar != 1)
     99e:	80 91 0a 02 	lds	r24, 0x020A	; 0x80020a <bakvar>
     9a2:	90 91 0b 02 	lds	r25, 0x020B	; 0x80020b <bakvar+0x1>

000009a6 <.Loc.20>:
     9a6:	81 30       	cpi	r24, 0x01	; 1
     9a8:	91 05       	cpc	r25, r1
     9aa:	81 f0       	breq	.+32     	; 0x9cc <.L7>

000009ac <.Loc.21>:
            {
                bakvar = 1;
     9ac:	81 e0       	ldi	r24, 0x01	; 1
     9ae:	90 e0       	ldi	r25, 0x00	; 0
     9b0:	90 93 0b 02 	sts	0x020B, r25	; 0x80020b <bakvar+0x1>
     9b4:	80 93 0a 02 	sts	0x020A, r24	; 0x80020a <bakvar>

000009b8 <.Loc.22>:
                TCCR4B = (1 << CS42) | (0 << CS41) | (0 << CS40);
     9b8:	81 ea       	ldi	r24, 0xA1	; 161
     9ba:	90 e0       	ldi	r25, 0x00	; 0

000009bc <.Loc.23>:
     9bc:	24 e0       	ldi	r18, 0x04	; 4
     9be:	dc 01       	movw	r26, r24
     9c0:	2c 93       	st	X, r18

000009c2 <.Loc.24>:
                toestand = 8;
     9c2:	88 e0       	ldi	r24, 0x08	; 8
     9c4:	90 e0       	ldi	r25, 0x00	; 0
     9c6:	9a 83       	std	Y+2, r25	; 0x02
     9c8:	89 83       	std	Y+1, r24	; 0x01
     9ca:	04 c0       	rjmp	.+8      	; 0x9d4 <.L6>

000009cc <.L7>:
            }
            else
            {
                toestand = 4;
     9cc:	84 e0       	ldi	r24, 0x04	; 4
     9ce:	90 e0       	ldi	r25, 0x00	; 0
     9d0:	9a 83       	std	Y+2, r25	; 0x02
     9d2:	89 83       	std	Y+1, r24	; 0x01

000009d4 <.L6>:
        }
//        if(waarde <= 30)//Voorultrasoon ziet object
//        {
//            toestand = 9;
//        }
        switch(toestand)
     9d4:	89 81       	ldd	r24, Y+1	; 0x01
     9d6:	9a 81       	ldd	r25, Y+2	; 0x02
     9d8:	89 30       	cpi	r24, 0x09	; 9
     9da:	91 05       	cpc	r25, r1
     9dc:	09 f0       	breq	.+2      	; 0x9e0 <L0^A+0x2>

000009de <L0^A>:
     9de:	cc f4       	brge	.+50     	; 0xa12 <.L8>
     9e0:	89 81       	ldd	r24, Y+1	; 0x01
     9e2:	9a 81       	ldd	r25, Y+2	; 0x02
     9e4:	99 23       	and	r25, r25
     9e6:	0c f4       	brge	.+2      	; 0x9ea <L0^A+0x2>

000009e8 <L0^A>:
     9e8:	a7 cf       	rjmp	.-178    	; 0x938 <.L45>
     9ea:	89 81       	ldd	r24, Y+1	; 0x01
     9ec:	9a 81       	ldd	r25, Y+2	; 0x02
     9ee:	09 2e       	mov	r0, r25
     9f0:	00 0c       	add	r0, r0
     9f2:	aa 0b       	sbc	r26, r26
     9f4:	bb 0b       	sbc	r27, r27
     9f6:	89 30       	cpi	r24, 0x09	; 9
     9f8:	91 05       	cpc	r25, r1
     9fa:	a1 05       	cpc	r26, r1
     9fc:	b1 05       	cpc	r27, r1
     9fe:	11 f0       	breq	.+4      	; 0xa04 <L0^A+0x2>

00000a00 <L0^A>:
     a00:	08 f0       	brcs	.+2      	; 0xa04 <L0^A+0x2>

00000a02 <L0^A>:
     a02:	9a cf       	rjmp	.-204    	; 0x938 <.L45>
     a04:	fc 01       	movw	r30, r24
     a06:	88 27       	eor	r24, r24
     a08:	ed 53       	subi	r30, 0x3D	; 61
     a0a:	f3 4f       	sbci	r31, 0xF3	; 243
     a0c:	8f 4f       	sbci	r24, 0xFF	; 255
     a0e:	0c 94 c6 0a 	jmp	0x158c	; 0x158c <__tablejump2__>

00000a12 <.L8>:
     a12:	89 81       	ldd	r24, Y+1	; 0x01
     a14:	9a 81       	ldd	r25, Y+2	; 0x02
     a16:	83 36       	cpi	r24, 0x63	; 99
     a18:	91 05       	cpc	r25, r1
     a1a:	09 f0       	breq	.+2      	; 0xa1e <.Loc.27>

00000a1c <L0^A>:
     a1c:	8d cf       	rjmp	.-230    	; 0x938 <.L45>

00000a1e <.Loc.27>:
        {
        case 99://Noodtoestand
            h_bridgeR_set_percentage(snelheiduit);//motoren uit
     a1e:	83 e6       	ldi	r24, 0x63	; 99
     a20:	0e 94 14 03 	call	0x628	; 0x628 <h_bridgeR_set_percentage>

00000a24 <.Loc.28>:
            h_bridgeL_set_percentage(snelheiduit);
     a24:	83 e6       	ldi	r24, 0x63	; 99
     a26:	0e 94 53 03 	call	0x6a6	; 0x6a6 <h_bridgeL_set_percentage>

00000a2a <.Loc.29>:
            if(timerteller <= 30)
     a2a:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <timerteller>
     a2e:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <timerteller+0x1>

00000a32 <.Loc.30>:
     a32:	8e 31       	cpi	r24, 0x1E	; 30
     a34:	91 05       	cpc	r25, r1
     a36:	09 f0       	breq	.+2      	; 0xa3a <.Loc.31>

00000a38 <L0^A>:
     a38:	dc f4       	brge	.+54     	; 0xa70 <.L21>

00000a3a <.Loc.31>:
            {
                PORT_buzzer &= ~(1<<buzzer);//buzzer
     a3a:	82 e0       	ldi	r24, 0x02	; 2
     a3c:	91 e0       	ldi	r25, 0x01	; 1
     a3e:	fc 01       	movw	r30, r24
     a40:	20 81       	ld	r18, Z

00000a42 <.Loc.32>:
     a42:	82 e0       	ldi	r24, 0x02	; 2
     a44:	91 e0       	ldi	r25, 0x01	; 1

00000a46 <.Loc.33>:
     a46:	27 7f       	andi	r18, 0xF7	; 247
     a48:	dc 01       	movw	r26, r24
     a4a:	2c 93       	st	X, r18

00000a4c <.Loc.34>:
                PORT_LED &= ~(1<<LED_1);//LED
     a4c:	82 e0       	ldi	r24, 0x02	; 2
     a4e:	91 e0       	ldi	r25, 0x01	; 1
     a50:	fc 01       	movw	r30, r24
     a52:	20 81       	ld	r18, Z

00000a54 <.Loc.35>:
     a54:	82 e0       	ldi	r24, 0x02	; 2
     a56:	91 e0       	ldi	r25, 0x01	; 1

00000a58 <.Loc.36>:
     a58:	2f 7e       	andi	r18, 0xEF	; 239
     a5a:	dc 01       	movw	r26, r24
     a5c:	2c 93       	st	X, r18

00000a5e <.Loc.37>:
                PORT_LED &= ~(1<<LED_2);//LED
     a5e:	82 e0       	ldi	r24, 0x02	; 2
     a60:	91 e0       	ldi	r25, 0x01	; 1
     a62:	fc 01       	movw	r30, r24
     a64:	20 81       	ld	r18, Z

00000a66 <.Loc.38>:
     a66:	82 e0       	ldi	r24, 0x02	; 2
     a68:	91 e0       	ldi	r25, 0x01	; 1

00000a6a <.Loc.39>:
     a6a:	2f 7d       	andi	r18, 0xDF	; 223
     a6c:	dc 01       	movw	r26, r24
     a6e:	2c 93       	st	X, r18

00000a70 <.L21>:
            }
            if(timerteller >= 30)
     a70:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <timerteller>
     a74:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <timerteller+0x1>

00000a78 <.Loc.41>:
     a78:	8d 31       	cpi	r24, 0x1D	; 29
     a7a:	91 05       	cpc	r25, r1
     a7c:	41 f1       	breq	.+80     	; 0xace <.L22>
     a7e:	3c f1       	brlt	.+78     	; 0xace <.L22>

00000a80 <.Loc.42>:
            {
                PORT_buzzer |= (1<<buzzer);//buzzer
     a80:	82 e0       	ldi	r24, 0x02	; 2
     a82:	91 e0       	ldi	r25, 0x01	; 1
     a84:	fc 01       	movw	r30, r24
     a86:	20 81       	ld	r18, Z
     a88:	82 e0       	ldi	r24, 0x02	; 2
     a8a:	91 e0       	ldi	r25, 0x01	; 1

00000a8c <.Loc.43>:
     a8c:	28 60       	ori	r18, 0x08	; 8
     a8e:	dc 01       	movw	r26, r24
     a90:	2c 93       	st	X, r18

00000a92 <.Loc.44>:
                PORT_LED |= (1<<LED_1);//LED
     a92:	82 e0       	ldi	r24, 0x02	; 2
     a94:	91 e0       	ldi	r25, 0x01	; 1
     a96:	fc 01       	movw	r30, r24
     a98:	20 81       	ld	r18, Z
     a9a:	82 e0       	ldi	r24, 0x02	; 2
     a9c:	91 e0       	ldi	r25, 0x01	; 1

00000a9e <.Loc.45>:
     a9e:	20 61       	ori	r18, 0x10	; 16
     aa0:	dc 01       	movw	r26, r24
     aa2:	2c 93       	st	X, r18

00000aa4 <.Loc.46>:
                PORT_LED |= (1<<LED_2);//LED
     aa4:	82 e0       	ldi	r24, 0x02	; 2
     aa6:	91 e0       	ldi	r25, 0x01	; 1
     aa8:	fc 01       	movw	r30, r24
     aaa:	20 81       	ld	r18, Z
     aac:	82 e0       	ldi	r24, 0x02	; 2
     aae:	91 e0       	ldi	r25, 0x01	; 1

00000ab0 <.Loc.47>:
     ab0:	20 62       	ori	r18, 0x20	; 32
     ab2:	dc 01       	movw	r26, r24
     ab4:	2c 93       	st	X, r18

00000ab6 <.Loc.48>:
                if(timerteller >= 60)
     ab6:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <timerteller>
     aba:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <timerteller+0x1>

00000abe <.Loc.49>:
     abe:	8b 33       	cpi	r24, 0x3B	; 59
     ac0:	91 05       	cpc	r25, r1
     ac2:	29 f0       	breq	.+10     	; 0xace <.L22>
     ac4:	24 f0       	brlt	.+8      	; 0xace <.L22>

00000ac6 <.Loc.50>:
                {
                    timerteller = 0;
     ac6:	10 92 07 02 	sts	0x0207, r1	; 0x800207 <timerteller+0x1>
     aca:	10 92 06 02 	sts	0x0206, r1	; 0x800206 <timerteller>

00000ace <.L22>:
                }
            }
            if((Bluetooth_Getal == 8))// && ((Noodknopport & (1<<Noodknoppin)) != 0))
     ace:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <Bluetooth_Getal>
     ad2:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <Bluetooth_Getal+0x1>

00000ad6 <.Loc.52>:
     ad6:	88 30       	cpi	r24, 0x08	; 8
     ad8:	91 05       	cpc	r25, r1
     ada:	09 f0       	breq	.+2      	; 0xade <.Loc.53>

00000adc <L0^A>:
     adc:	0f c2       	rjmp	.+1054   	; 0xefc <.L50>

00000ade <.Loc.53>:
            {
                toestand = 2;
     ade:	82 e0       	ldi	r24, 0x02	; 2
     ae0:	90 e0       	ldi	r25, 0x00	; 0
     ae2:	9a 83       	std	Y+2, r25	; 0x02
     ae4:	89 83       	std	Y+1, r24	; 0x01

00000ae6 <.Loc.54>:
            }
            break;
     ae6:	0a c2       	rjmp	.+1044   	; 0xefc <.L50>

00000ae8 <.L20>:
        case 0:
            PORT_LED |= (1<<LED_2);
     ae8:	82 e0       	ldi	r24, 0x02	; 2
     aea:	91 e0       	ldi	r25, 0x01	; 1
     aec:	fc 01       	movw	r30, r24
     aee:	20 81       	ld	r18, Z
     af0:	82 e0       	ldi	r24, 0x02	; 2
     af2:	91 e0       	ldi	r25, 0x01	; 1

00000af4 <.Loc.56>:
     af4:	20 62       	ori	r18, 0x20	; 32
     af6:	dc 01       	movw	r26, r24
     af8:	2c 93       	st	X, r18

00000afa <.Loc.57>:
            PORT_LED &= ~(1<<LED_1);
     afa:	82 e0       	ldi	r24, 0x02	; 2
     afc:	91 e0       	ldi	r25, 0x01	; 1
     afe:	fc 01       	movw	r30, r24
     b00:	20 81       	ld	r18, Z

00000b02 <.Loc.58>:
     b02:	82 e0       	ldi	r24, 0x02	; 2
     b04:	91 e0       	ldi	r25, 0x01	; 1

00000b06 <.Loc.59>:
     b06:	2f 7e       	andi	r18, 0xEF	; 239
     b08:	dc 01       	movw	r26, r24
     b0a:	2c 93       	st	X, r18

00000b0c <.Loc.60>:
            h_bridgeL_set_percentage(snelheiduit);//motoren uit
     b0c:	83 e6       	ldi	r24, 0x63	; 99
     b0e:	0e 94 53 03 	call	0x6a6	; 0x6a6 <h_bridgeL_set_percentage>

00000b12 <.Loc.61>:
            h_bridgeR_set_percentage(snelheiduit);
     b12:	83 e6       	ldi	r24, 0x63	; 99
     b14:	0e 94 14 03 	call	0x628	; 0x628 <h_bridgeR_set_percentage>

00000b18 <.Loc.62>:
            if(Bluetooth_Getal == 1)//Bluetooth verbonden
     b18:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <Bluetooth_Getal>
     b1c:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <Bluetooth_Getal+0x1>

00000b20 <.Loc.63>:
     b20:	81 30       	cpi	r24, 0x01	; 1
     b22:	91 05       	cpc	r25, r1
     b24:	09 f0       	breq	.+2      	; 0xb28 <.Loc.64>

00000b26 <L0^A>:
     b26:	ec c1       	rjmp	.+984    	; 0xf00 <.L51>

00000b28 <.Loc.64>:
            {
                toestand = 1;
     b28:	81 e0       	ldi	r24, 0x01	; 1
     b2a:	90 e0       	ldi	r25, 0x00	; 0
     b2c:	9a 83       	std	Y+2, r25	; 0x02
     b2e:	89 83       	std	Y+1, r24	; 0x01

00000b30 <.Loc.65>:
            }
            break;
     b30:	e7 c1       	rjmp	.+974    	; 0xf00 <.L51>

00000b32 <.L19>:
        case 1://wachten op aan knop
            PORT_LED |= (1<<LED_2);
     b32:	82 e0       	ldi	r24, 0x02	; 2
     b34:	91 e0       	ldi	r25, 0x01	; 1
     b36:	fc 01       	movw	r30, r24
     b38:	20 81       	ld	r18, Z
     b3a:	82 e0       	ldi	r24, 0x02	; 2
     b3c:	91 e0       	ldi	r25, 0x01	; 1

00000b3e <.Loc.67>:
     b3e:	20 62       	ori	r18, 0x20	; 32
     b40:	dc 01       	movw	r26, r24
     b42:	2c 93       	st	X, r18

00000b44 <.Loc.68>:
            PORT_LED |= (1<<LED_1);
     b44:	82 e0       	ldi	r24, 0x02	; 2
     b46:	91 e0       	ldi	r25, 0x01	; 1
     b48:	fc 01       	movw	r30, r24
     b4a:	20 81       	ld	r18, Z
     b4c:	82 e0       	ldi	r24, 0x02	; 2
     b4e:	91 e0       	ldi	r25, 0x01	; 1

00000b50 <.Loc.69>:
     b50:	20 61       	ori	r18, 0x10	; 16
     b52:	dc 01       	movw	r26, r24
     b54:	2c 93       	st	X, r18

00000b56 <.Loc.70>:
            h_bridgeL_set_percentage(snelheiduit);//motoren uit
     b56:	83 e6       	ldi	r24, 0x63	; 99
     b58:	0e 94 53 03 	call	0x6a6	; 0x6a6 <h_bridgeL_set_percentage>

00000b5c <.Loc.71>:
            h_bridgeR_set_percentage(snelheiduit);
     b5c:	83 e6       	ldi	r24, 0x63	; 99
     b5e:	0e 94 14 03 	call	0x628	; 0x628 <h_bridgeR_set_percentage>

00000b62 <.Loc.72>:
            if(Bluetooth_Getal == 3)//Aanknop
     b62:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <Bluetooth_Getal>
     b66:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <Bluetooth_Getal+0x1>

00000b6a <.Loc.73>:
     b6a:	83 30       	cpi	r24, 0x03	; 3
     b6c:	91 05       	cpc	r25, r1
     b6e:	09 f0       	breq	.+2      	; 0xb72 <.Loc.74>

00000b70 <L0^A>:
     b70:	c9 c1       	rjmp	.+914    	; 0xf04 <.L52>

00000b72 <.Loc.74>:
            {
                toestand = 2;
     b72:	82 e0       	ldi	r24, 0x02	; 2
     b74:	90 e0       	ldi	r25, 0x00	; 0
     b76:	9a 83       	std	Y+2, r25	; 0x02
     b78:	89 83       	std	Y+1, r24	; 0x01

00000b7a <.Loc.75>:
            }
            break;
     b7a:	c4 c1       	rjmp	.+904    	; 0xf04 <.L52>

00000b7c <.L18>:
        case 2://toestand keuze case
            PORT_LED &= ~(1<<LED_2);
     b7c:	82 e0       	ldi	r24, 0x02	; 2
     b7e:	91 e0       	ldi	r25, 0x01	; 1
     b80:	fc 01       	movw	r30, r24
     b82:	20 81       	ld	r18, Z

00000b84 <.Loc.77>:
     b84:	82 e0       	ldi	r24, 0x02	; 2
     b86:	91 e0       	ldi	r25, 0x01	; 1

00000b88 <.Loc.78>:
     b88:	2f 7d       	andi	r18, 0xDF	; 223
     b8a:	dc 01       	movw	r26, r24
     b8c:	2c 93       	st	X, r18

00000b8e <.Loc.79>:
            PORT_LED |= (1<<LED_1);
     b8e:	82 e0       	ldi	r24, 0x02	; 2
     b90:	91 e0       	ldi	r25, 0x01	; 1
     b92:	fc 01       	movw	r30, r24
     b94:	20 81       	ld	r18, Z
     b96:	82 e0       	ldi	r24, 0x02	; 2
     b98:	91 e0       	ldi	r25, 0x01	; 1

00000b9a <.Loc.80>:
     b9a:	20 61       	ori	r18, 0x10	; 16
     b9c:	dc 01       	movw	r26, r24
     b9e:	2c 93       	st	X, r18

00000ba0 <.Loc.81>:
            if(Bluetooth_Getal == 4)//Autonoomknop
     ba0:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <Bluetooth_Getal>
     ba4:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <Bluetooth_Getal+0x1>

00000ba8 <.Loc.82>:
     ba8:	84 30       	cpi	r24, 0x04	; 4
     baa:	91 05       	cpc	r25, r1
     bac:	09 f0       	breq	.+2      	; 0xbb0 <.Loc.83>

00000bae <L0^A>:
     bae:	ac c1       	rjmp	.+856    	; 0xf08 <.L53>

00000bb0 <.Loc.83>:
            {
                toestand = 3;
     bb0:	83 e0       	ldi	r24, 0x03	; 3
     bb2:	90 e0       	ldi	r25, 0x00	; 0
     bb4:	9a 83       	std	Y+2, r25	; 0x02
     bb6:	89 83       	std	Y+1, r24	; 0x01

00000bb8 <.Loc.84>:
            }
            break;
     bb8:	a7 c1       	rjmp	.+846    	; 0xf08 <.L53>

00000bba <.L17>:
        case 3://rijstrook inrijden
            PORT_LED &= ~(1<<LED_2);
     bba:	82 e0       	ldi	r24, 0x02	; 2
     bbc:	91 e0       	ldi	r25, 0x01	; 1
     bbe:	fc 01       	movw	r30, r24
     bc0:	20 81       	ld	r18, Z

00000bc2 <.Loc.86>:
     bc2:	82 e0       	ldi	r24, 0x02	; 2
     bc4:	91 e0       	ldi	r25, 0x01	; 1

00000bc6 <.Loc.87>:
     bc6:	2f 7d       	andi	r18, 0xDF	; 223
     bc8:	dc 01       	movw	r26, r24
     bca:	2c 93       	st	X, r18

00000bcc <.Loc.88>:
            PORT_LED &= ~(1<<LED_1);
     bcc:	82 e0       	ldi	r24, 0x02	; 2
     bce:	91 e0       	ldi	r25, 0x01	; 1
     bd0:	fc 01       	movw	r30, r24
     bd2:	20 81       	ld	r18, Z

00000bd4 <.Loc.89>:
     bd4:	82 e0       	ldi	r24, 0x02	; 2
     bd6:	91 e0       	ldi	r25, 0x01	; 1

00000bd8 <.Loc.90>:
     bd8:	2f 7e       	andi	r18, 0xEF	; 239
     bda:	dc 01       	movw	r26, r24
     bdc:	2c 93       	st	X, r18

00000bde <.Loc.91>:
            h_bridgeR_set_percentage(snelheidrechtdoor);
     bde:	81 e4       	ldi	r24, 0x41	; 65
     be0:	0e 94 14 03 	call	0x628	; 0x628 <h_bridgeR_set_percentage>

00000be4 <.Loc.92>:
            h_bridgeL_set_percentage(snelheidrechtdoor);
     be4:	81 e4       	ldi	r24, 0x41	; 65
     be6:	0e 94 53 03 	call	0x6a6	; 0x6a6 <h_bridgeL_set_percentage>

00000bea <.Loc.93>:
            rechtdoorrijden();
     bea:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <rechtdoorrijden>

00000bee <.Loc.94>:
            if(((IRregister & (1 << IRonderrechts)) == 0) && ((IRregister & (1 << IRonderlinks)) == 0))
     bee:	86 e2       	ldi	r24, 0x26	; 38
     bf0:	90 e0       	ldi	r25, 0x00	; 0
     bf2:	fc 01       	movw	r30, r24
     bf4:	80 81       	ld	r24, Z

00000bf6 <.Loc.95>:
     bf6:	88 2f       	mov	r24, r24
     bf8:	90 e0       	ldi	r25, 0x00	; 0
     bfa:	84 70       	andi	r24, 0x04	; 4
     bfc:	99 27       	eor	r25, r25

00000bfe <.Loc.96>:
     bfe:	00 97       	sbiw	r24, 0x00	; 0
     c00:	09 f0       	breq	.+2      	; 0xc04 <.Loc.97>

00000c02 <L0^A>:
     c02:	84 c1       	rjmp	.+776    	; 0xf0c <.L54>

00000c04 <.Loc.97>:
     c04:	86 e2       	ldi	r24, 0x26	; 38
     c06:	90 e0       	ldi	r25, 0x00	; 0
     c08:	dc 01       	movw	r26, r24
     c0a:	8c 91       	ld	r24, X

00000c0c <.Loc.98>:
     c0c:	88 2f       	mov	r24, r24
     c0e:	90 e0       	ldi	r25, 0x00	; 0
     c10:	88 70       	andi	r24, 0x08	; 8
     c12:	99 27       	eor	r25, r25

00000c14 <.Loc.99>:
     c14:	00 97       	sbiw	r24, 0x00	; 0
     c16:	09 f0       	breq	.+2      	; 0xc1a <.Loc.100>

00000c18 <L0^A>:
     c18:	79 c1       	rjmp	.+754    	; 0xf0c <.L54>

00000c1a <.Loc.100>:
            {
                toestand = 4;
     c1a:	84 e0       	ldi	r24, 0x04	; 4
     c1c:	90 e0       	ldi	r25, 0x00	; 0
     c1e:	9a 83       	std	Y+2, r25	; 0x02
     c20:	89 83       	std	Y+1, r24	; 0x01

00000c22 <.Loc.101>:
            }
            break;
     c22:	74 c1       	rjmp	.+744    	; 0xf0c <.L54>

00000c24 <.L16>:
        case 4://Tussen de balken rechtdoor
            //Motoren naar rechtdoor
            rechtdoorrijden();
     c24:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <rechtdoorrijden>

00000c28 <.Loc.103>:
            h_bridgeR_set_percentage(snelheidrechtdoor);
     c28:	81 e4       	ldi	r24, 0x41	; 65
     c2a:	0e 94 14 03 	call	0x628	; 0x628 <h_bridgeR_set_percentage>

00000c2e <.Loc.104>:
            h_bridgeL_set_percentage(snelheidrechtdoor);
     c2e:	81 e4       	ldi	r24, 0x41	; 65
     c30:	0e 94 53 03 	call	0x6a6	; 0x6a6 <h_bridgeL_set_percentage>

00000c34 <.Loc.105>:
            if(IRregister & (1 << IRonderrechts))
     c34:	86 e2       	ldi	r24, 0x26	; 38
     c36:	90 e0       	ldi	r25, 0x00	; 0
     c38:	fc 01       	movw	r30, r24
     c3a:	80 81       	ld	r24, Z

00000c3c <.Loc.106>:
     c3c:	88 2f       	mov	r24, r24
     c3e:	90 e0       	ldi	r25, 0x00	; 0
     c40:	84 70       	andi	r24, 0x04	; 4
     c42:	99 27       	eor	r25, r25

00000c44 <.Loc.107>:
     c44:	00 97       	sbiw	r24, 0x00	; 0
     c46:	29 f0       	breq	.+10     	; 0xc52 <.L28>

00000c48 <.Loc.108>:
            {
                toestand = 5;
     c48:	85 e0       	ldi	r24, 0x05	; 5
     c4a:	90 e0       	ldi	r25, 0x00	; 0
     c4c:	9a 83       	std	Y+2, r25	; 0x02
     c4e:	89 83       	std	Y+1, r24	; 0x01

00000c50 <.Loc.109>:
            }
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
            {
                //toestand = 7;
            }
            break;
     c50:	5f c1       	rjmp	.+702    	; 0xf10 <.L55>

00000c52 <.L28>:
            else if(IRregister & (1 << IRonderlinks))
     c52:	86 e2       	ldi	r24, 0x26	; 38
     c54:	90 e0       	ldi	r25, 0x00	; 0
     c56:	dc 01       	movw	r26, r24
     c58:	8c 91       	ld	r24, X

00000c5a <.Loc.111>:
     c5a:	88 2f       	mov	r24, r24
     c5c:	90 e0       	ldi	r25, 0x00	; 0
     c5e:	88 70       	andi	r24, 0x08	; 8
     c60:	99 27       	eor	r25, r25

00000c62 <.Loc.112>:
     c62:	00 97       	sbiw	r24, 0x00	; 0
     c64:	29 f0       	breq	.+10     	; 0xc70 <.L30>

00000c66 <.Loc.113>:
                toestand = 6;
     c66:	86 e0       	ldi	r24, 0x06	; 6
     c68:	90 e0       	ldi	r25, 0x00	; 0
     c6a:	9a 83       	std	Y+2, r25	; 0x02
     c6c:	89 83       	std	Y+1, r24	; 0x01

00000c6e <.Loc.114>:
            break;
     c6e:	50 c1       	rjmp	.+672    	; 0xf10 <.L55>

00000c70 <.L30>:
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
     c70:	86 e2       	ldi	r24, 0x26	; 38
     c72:	90 e0       	ldi	r25, 0x00	; 0
     c74:	fc 01       	movw	r30, r24
     c76:	80 81       	ld	r24, Z

00000c78 <.Loc.116>:
     c78:	88 2f       	mov	r24, r24
     c7a:	90 e0       	ldi	r25, 0x00	; 0
     c7c:	84 70       	andi	r24, 0x04	; 4
     c7e:	99 27       	eor	r25, r25

00000c80 <.Loc.117>:
     c80:	00 97       	sbiw	r24, 0x00	; 0
     c82:	09 f4       	brne	.+2      	; 0xc86 <.Loc.118>

00000c84 <L0^A>:
     c84:	45 c1       	rjmp	.+650    	; 0xf10 <.L55>

00000c86 <.Loc.118>:
     c86:	86 e2       	ldi	r24, 0x26	; 38
     c88:	90 e0       	ldi	r25, 0x00	; 0
     c8a:	dc 01       	movw	r26, r24
     c8c:	8c 91       	ld	r24, X

00000c8e <.Loc.119>:
            break;
     c8e:	40 c1       	rjmp	.+640    	; 0xf10 <.L55>

00000c90 <.L15>:
        case 5://Naar links rijden
            //Motoren naar rechts
            h_bridgeR_set_percentage(snelheidhard);
     c90:	8c e3       	ldi	r24, 0x3C	; 60
     c92:	0e 94 14 03 	call	0x628	; 0x628 <h_bridgeR_set_percentage>

00000c96 <.Loc.121>:
            h_bridgeL_set_percentage(snelheidzacht);
     c96:	86 e4       	ldi	r24, 0x46	; 70
     c98:	0e 94 53 03 	call	0x6a6	; 0x6a6 <h_bridgeL_set_percentage>

00000c9c <.Loc.122>:
            if(((IRregister & (1 << IRonderrechts)) == 0) && ((IRregister & (1 << IRonderlinks)) == 0))
     c9c:	86 e2       	ldi	r24, 0x26	; 38
     c9e:	90 e0       	ldi	r25, 0x00	; 0
     ca0:	fc 01       	movw	r30, r24
     ca2:	80 81       	ld	r24, Z

00000ca4 <.Loc.123>:
     ca4:	88 2f       	mov	r24, r24
     ca6:	90 e0       	ldi	r25, 0x00	; 0
     ca8:	84 70       	andi	r24, 0x04	; 4
     caa:	99 27       	eor	r25, r25

00000cac <.Loc.124>:
     cac:	00 97       	sbiw	r24, 0x00	; 0
     cae:	79 f4       	brne	.+30     	; 0xcce <.L31>

00000cb0 <.Loc.125>:
     cb0:	86 e2       	ldi	r24, 0x26	; 38
     cb2:	90 e0       	ldi	r25, 0x00	; 0
     cb4:	dc 01       	movw	r26, r24
     cb6:	8c 91       	ld	r24, X

00000cb8 <.Loc.126>:
     cb8:	88 2f       	mov	r24, r24
     cba:	90 e0       	ldi	r25, 0x00	; 0
     cbc:	88 70       	andi	r24, 0x08	; 8
     cbe:	99 27       	eor	r25, r25

00000cc0 <.Loc.127>:
     cc0:	00 97       	sbiw	r24, 0x00	; 0
     cc2:	29 f4       	brne	.+10     	; 0xcce <.L31>

00000cc4 <.Loc.128>:
            {
                toestand = 4;
     cc4:	84 e0       	ldi	r24, 0x04	; 4
     cc6:	90 e0       	ldi	r25, 0x00	; 0
     cc8:	9a 83       	std	Y+2, r25	; 0x02
     cca:	89 83       	std	Y+1, r24	; 0x01

00000ccc <.Loc.129>:
            }
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
            {
                //toestand = 7;
            }
            break;
     ccc:	23 c1       	rjmp	.+582    	; 0xf14 <.L56>

00000cce <.L31>:
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
     cce:	86 e2       	ldi	r24, 0x26	; 38
     cd0:	90 e0       	ldi	r25, 0x00	; 0
     cd2:	fc 01       	movw	r30, r24
     cd4:	80 81       	ld	r24, Z

00000cd6 <.Loc.131>:
     cd6:	88 2f       	mov	r24, r24
     cd8:	90 e0       	ldi	r25, 0x00	; 0
     cda:	84 70       	andi	r24, 0x04	; 4
     cdc:	99 27       	eor	r25, r25

00000cde <.Loc.132>:
     cde:	00 97       	sbiw	r24, 0x00	; 0
     ce0:	09 f4       	brne	.+2      	; 0xce4 <.Loc.133>

00000ce2 <L0^A>:
     ce2:	18 c1       	rjmp	.+560    	; 0xf14 <.L56>

00000ce4 <.Loc.133>:
     ce4:	86 e2       	ldi	r24, 0x26	; 38
     ce6:	90 e0       	ldi	r25, 0x00	; 0
     ce8:	dc 01       	movw	r26, r24
     cea:	8c 91       	ld	r24, X

00000cec <.Loc.134>:
            break;
     cec:	13 c1       	rjmp	.+550    	; 0xf14 <.L56>

00000cee <.L14>:
        case 6://Naar rechts rijden
            //Motoren naar links
            h_bridgeR_set_percentage(snelheidzacht);
     cee:	86 e4       	ldi	r24, 0x46	; 70
     cf0:	0e 94 14 03 	call	0x628	; 0x628 <h_bridgeR_set_percentage>

00000cf4 <.Loc.136>:
            h_bridgeL_set_percentage(snelheidhard);
     cf4:	8c e3       	ldi	r24, 0x3C	; 60
     cf6:	0e 94 53 03 	call	0x6a6	; 0x6a6 <h_bridgeL_set_percentage>

00000cfa <.Loc.137>:
            if(((IRregister & (1 << IRonderrechts)) == 0) && ((IRregister & (1 << IRonderlinks)) == 0))
     cfa:	86 e2       	ldi	r24, 0x26	; 38
     cfc:	90 e0       	ldi	r25, 0x00	; 0
     cfe:	fc 01       	movw	r30, r24
     d00:	80 81       	ld	r24, Z

00000d02 <.Loc.138>:
     d02:	88 2f       	mov	r24, r24
     d04:	90 e0       	ldi	r25, 0x00	; 0
     d06:	84 70       	andi	r24, 0x04	; 4
     d08:	99 27       	eor	r25, r25

00000d0a <.Loc.139>:
     d0a:	00 97       	sbiw	r24, 0x00	; 0
     d0c:	79 f4       	brne	.+30     	; 0xd2c <.L33>

00000d0e <.Loc.140>:
     d0e:	86 e2       	ldi	r24, 0x26	; 38
     d10:	90 e0       	ldi	r25, 0x00	; 0
     d12:	dc 01       	movw	r26, r24
     d14:	8c 91       	ld	r24, X

00000d16 <.Loc.141>:
     d16:	88 2f       	mov	r24, r24
     d18:	90 e0       	ldi	r25, 0x00	; 0
     d1a:	88 70       	andi	r24, 0x08	; 8
     d1c:	99 27       	eor	r25, r25

00000d1e <.Loc.142>:
     d1e:	00 97       	sbiw	r24, 0x00	; 0
     d20:	29 f4       	brne	.+10     	; 0xd2c <.L33>

00000d22 <.Loc.143>:
            {
                toestand = 4;
     d22:	84 e0       	ldi	r24, 0x04	; 4
     d24:	90 e0       	ldi	r25, 0x00	; 0
     d26:	9a 83       	std	Y+2, r25	; 0x02
     d28:	89 83       	std	Y+1, r24	; 0x01

00000d2a <.Loc.144>:
            }
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
            {
                toestand = 7;
            }
            break;
     d2a:	f6 c0       	rjmp	.+492    	; 0xf18 <.L57>

00000d2c <.L33>:
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
     d2c:	86 e2       	ldi	r24, 0x26	; 38
     d2e:	90 e0       	ldi	r25, 0x00	; 0
     d30:	fc 01       	movw	r30, r24
     d32:	80 81       	ld	r24, Z

00000d34 <.Loc.146>:
     d34:	88 2f       	mov	r24, r24
     d36:	90 e0       	ldi	r25, 0x00	; 0
     d38:	84 70       	andi	r24, 0x04	; 4
     d3a:	99 27       	eor	r25, r25

00000d3c <.Loc.147>:
     d3c:	00 97       	sbiw	r24, 0x00	; 0
     d3e:	09 f4       	brne	.+2      	; 0xd42 <.Loc.148>

00000d40 <L0^A>:
     d40:	eb c0       	rjmp	.+470    	; 0xf18 <.L57>

00000d42 <.Loc.148>:
     d42:	86 e2       	ldi	r24, 0x26	; 38
     d44:	90 e0       	ldi	r25, 0x00	; 0
     d46:	dc 01       	movw	r26, r24
     d48:	8c 91       	ld	r24, X

00000d4a <.Loc.149>:
     d4a:	88 2f       	mov	r24, r24
     d4c:	90 e0       	ldi	r25, 0x00	; 0
     d4e:	88 70       	andi	r24, 0x08	; 8
     d50:	99 27       	eor	r25, r25

00000d52 <.Loc.150>:
     d52:	00 97       	sbiw	r24, 0x00	; 0
     d54:	09 f4       	brne	.+2      	; 0xd58 <.Loc.151>

00000d56 <L0^A>:
     d56:	e0 c0       	rjmp	.+448    	; 0xf18 <.L57>

00000d58 <.Loc.151>:
                toestand = 7;
     d58:	87 e0       	ldi	r24, 0x07	; 7
     d5a:	90 e0       	ldi	r25, 0x00	; 0
     d5c:	9a 83       	std	Y+2, r25	; 0x02
     d5e:	89 83       	std	Y+1, r24	; 0x01

00000d60 <.Loc.152>:
            break;
     d60:	db c0       	rjmp	.+438    	; 0xf18 <.L57>

00000d62 <.L13>:
     d62:	80 e0       	ldi	r24, 0x00	; 0
     d64:	90 e0       	ldi	r25, 0x00	; 0
     d66:	aa ef       	ldi	r26, 0xFA	; 250
     d68:	b4 e4       	ldi	r27, 0x44	; 68
     d6a:	8d 83       	std	Y+5, r24	; 0x05
     d6c:	9e 83       	std	Y+6, r25	; 0x06
     d6e:	af 83       	std	Y+7, r26	; 0x07
     d70:	b8 87       	std	Y+8, r27	; 0x08

00000d72 <.LBB36>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     d72:	20 e0       	ldi	r18, 0x00	; 0
     d74:	30 e0       	ldi	r19, 0x00	; 0
     d76:	4a e7       	ldi	r20, 0x7A	; 122
     d78:	55 e4       	ldi	r21, 0x45	; 69
     d7a:	6d 81       	ldd	r22, Y+5	; 0x05
     d7c:	7e 81       	ldd	r23, Y+6	; 0x06
     d7e:	8f 81       	ldd	r24, Y+7	; 0x07
     d80:	98 85       	ldd	r25, Y+8	; 0x08
     d82:	0e 94 54 0c 	call	0x18a8	; 0x18a8 <__mulsf3>
     d86:	6f 8b       	std	Y+23, r22	; 0x17
     d88:	78 8f       	std	Y+24, r23	; 0x18
     d8a:	89 8f       	std	Y+25, r24	; 0x19
     d8c:	9a 8f       	std	Y+26, r25	; 0x1a
     d8e:	8f 89       	ldd	r24, Y+23	; 0x17
     d90:	98 8d       	ldd	r25, Y+24	; 0x18
     d92:	a9 8d       	ldd	r26, Y+25	; 0x19
     d94:	ba 8d       	ldd	r27, Y+26	; 0x1a
     d96:	89 87       	std	Y+9, r24	; 0x09
     d98:	9a 87       	std	Y+10, r25	; 0x0a
     d9a:	ab 87       	std	Y+11, r26	; 0x0b
     d9c:	bc 87       	std	Y+12, r27	; 0x0c

00000d9e <.Loc.154>:
	if (__tmp < 1.0)
     d9e:	20 e0       	ldi	r18, 0x00	; 0
     da0:	30 e0       	ldi	r19, 0x00	; 0
     da2:	40 e8       	ldi	r20, 0x80	; 128
     da4:	5f e3       	ldi	r21, 0x3F	; 63
     da6:	69 85       	ldd	r22, Y+9	; 0x09
     da8:	7a 85       	ldd	r23, Y+10	; 0x0a
     daa:	8b 85       	ldd	r24, Y+11	; 0x0b
     dac:	9c 85       	ldd	r25, Y+12	; 0x0c
     dae:	0e 94 f0 0a 	call	0x15e0	; 0x15e0 <__cmpsf2>
     db2:	88 23       	and	r24, r24
     db4:	2c f4       	brge	.+10     	; 0xdc0 <.L48>

00000db6 <.Loc.155>:
		__ticks = 1;
     db6:	81 e0       	ldi	r24, 0x01	; 1
     db8:	90 e0       	ldi	r25, 0x00	; 0
     dba:	9e 87       	std	Y+14, r25	; 0x0e
     dbc:	8d 87       	std	Y+13, r24	; 0x0d
     dbe:	55 c0       	rjmp	.+170    	; 0xe6a <.L37>

00000dc0 <.L48>:
	else if (__tmp > 65535)
     dc0:	20 e0       	ldi	r18, 0x00	; 0
     dc2:	3f ef       	ldi	r19, 0xFF	; 255
     dc4:	4f e7       	ldi	r20, 0x7F	; 127
     dc6:	57 e4       	ldi	r21, 0x47	; 71
     dc8:	69 85       	ldd	r22, Y+9	; 0x09
     dca:	7a 85       	ldd	r23, Y+10	; 0x0a
     dcc:	8b 85       	ldd	r24, Y+11	; 0x0b
     dce:	9c 85       	ldd	r25, Y+12	; 0x0c
     dd0:	0e 94 4f 0c 	call	0x189e	; 0x189e <__gesf2>
     dd4:	88 23       	and	r24, r24
     dd6:	d9 f1       	breq	.+118    	; 0xe4e <.L49>
     dd8:	d4 f1       	brlt	.+116    	; 0xe4e <.L49>

00000dda <.Loc.157>:
		__ticks = (uint16_t) (__ms * 10.0);
     dda:	20 e0       	ldi	r18, 0x00	; 0
     ddc:	30 e0       	ldi	r19, 0x00	; 0
     dde:	40 e2       	ldi	r20, 0x20	; 32
     de0:	51 e4       	ldi	r21, 0x41	; 65
     de2:	6d 81       	ldd	r22, Y+5	; 0x05
     de4:	7e 81       	ldd	r23, Y+6	; 0x06
     de6:	8f 81       	ldd	r24, Y+7	; 0x07
     de8:	98 85       	ldd	r25, Y+8	; 0x08
     dea:	0e 94 54 0c 	call	0x18a8	; 0x18a8 <__mulsf3>
     dee:	6b 8f       	std	Y+27, r22	; 0x1b
     df0:	7c 8f       	std	Y+28, r23	; 0x1c
     df2:	8d 8f       	std	Y+29, r24	; 0x1d
     df4:	9e 8f       	std	Y+30, r25	; 0x1e
     df6:	8b 8d       	ldd	r24, Y+27	; 0x1b
     df8:	9c 8d       	ldd	r25, Y+28	; 0x1c
     dfa:	ad 8d       	ldd	r26, Y+29	; 0x1d
     dfc:	be 8d       	ldd	r27, Y+30	; 0x1e
     dfe:	8b 8b       	std	Y+19, r24	; 0x13
     e00:	9c 8b       	std	Y+20, r25	; 0x14
     e02:	ad 8b       	std	Y+21, r26	; 0x15
     e04:	be 8b       	std	Y+22, r27	; 0x16

00000e06 <.Loc.158>:
     e06:	6b 89       	ldd	r22, Y+19	; 0x13
     e08:	7c 89       	ldd	r23, Y+20	; 0x14
     e0a:	8d 89       	ldd	r24, Y+21	; 0x15
     e0c:	9e 89       	ldd	r25, Y+22	; 0x16
     e0e:	0e 94 6e 0b 	call	0x16dc	; 0x16dc <__fixunssfsi>
     e12:	6f 8f       	std	Y+31, r22	; 0x1f
     e14:	78 a3       	std	Y+32, r23	; 0x20
     e16:	89 a3       	std	Y+33, r24	; 0x21
     e18:	9a a3       	std	Y+34, r25	; 0x22
     e1a:	af 8d       	ldd	r26, Y+31	; 0x1f
     e1c:	b8 a1       	ldd	r27, Y+32	; 0x20
     e1e:	be 87       	std	Y+14, r27	; 0x0e
     e20:	ad 87       	std	Y+13, r26	; 0x0d

00000e22 <.Loc.159>:
		while(__ticks)
     e22:	10 c0       	rjmp	.+32     	; 0xe44 <.L40>

00000e24 <.L41>:
     e24:	80 e9       	ldi	r24, 0x90	; 144
     e26:	91 e0       	ldi	r25, 0x01	; 1
     e28:	98 8b       	std	Y+16, r25	; 0x10
     e2a:	8f 87       	std	Y+15, r24	; 0x0f

00000e2c <.LBB38>:
     e2c:	8f 85       	ldd	r24, Y+15	; 0x0f
     e2e:	98 89       	ldd	r25, Y+16	; 0x10

00000e30 <.L1^B1>:
     e30:	01 97       	sbiw	r24, 0x01	; 1
     e32:	f1 f7       	brne	.-4      	; 0xe30 <.L1^B1>
     e34:	98 8b       	std	Y+16, r25	; 0x10
     e36:	8f 87       	std	Y+15, r24	; 0x0f

00000e38 <.Loc.161>:
	...

00000e3a <.LBE38>:
			__ticks --;
     e3a:	8d 85       	ldd	r24, Y+13	; 0x0d
     e3c:	9e 85       	ldd	r25, Y+14	; 0x0e
     e3e:	01 97       	sbiw	r24, 0x01	; 1
     e40:	9e 87       	std	Y+14, r25	; 0x0e
     e42:	8d 87       	std	Y+13, r24	; 0x0d

00000e44 <.L40>:
		while(__ticks)
     e44:	8d 85       	ldd	r24, Y+13	; 0x0d
     e46:	9e 85       	ldd	r25, Y+14	; 0x0e
     e48:	00 97       	sbiw	r24, 0x00	; 0
     e4a:	61 f7       	brne	.-40     	; 0xe24 <.L41>

00000e4c <.Loc.164>:
		return;
     e4c:	19 c0       	rjmp	.+50     	; 0xe80 <.L42>

00000e4e <.L49>:
		__ticks = (uint16_t)__tmp;
     e4e:	69 85       	ldd	r22, Y+9	; 0x09
     e50:	7a 85       	ldd	r23, Y+10	; 0x0a
     e52:	8b 85       	ldd	r24, Y+11	; 0x0b
     e54:	9c 85       	ldd	r25, Y+12	; 0x0c
     e56:	0e 94 6e 0b 	call	0x16dc	; 0x16dc <__fixunssfsi>
     e5a:	6b a3       	std	Y+35, r22	; 0x23
     e5c:	7c a3       	std	Y+36, r23	; 0x24
     e5e:	8d a3       	std	Y+37, r24	; 0x25
     e60:	9e a3       	std	Y+38, r25	; 0x26
     e62:	eb a1       	ldd	r30, Y+35	; 0x23
     e64:	fc a1       	ldd	r31, Y+36	; 0x24
     e66:	fe 87       	std	Y+14, r31	; 0x0e
     e68:	ed 87       	std	Y+13, r30	; 0x0d

00000e6a <.L37>:
     e6a:	8d 85       	ldd	r24, Y+13	; 0x0d
     e6c:	9e 85       	ldd	r25, Y+14	; 0x0e
     e6e:	9a 8b       	std	Y+18, r25	; 0x12
     e70:	89 8b       	std	Y+17, r24	; 0x11

00000e72 <.LBB40>:
     e72:	89 89       	ldd	r24, Y+17	; 0x11
     e74:	9a 89       	ldd	r25, Y+18	; 0x12

00000e76 <.L1^B2>:
     e76:	01 97       	sbiw	r24, 0x01	; 1
     e78:	f1 f7       	brne	.-4      	; 0xe76 <.L1^B2>
     e7a:	9a 8b       	std	Y+18, r25	; 0x12
     e7c:	89 8b       	std	Y+17, r24	; 0x11

00000e7e <.Loc.167>:
	...

00000e80 <.L42>:
        case 7://Balken niet meer in zicht en bocht maken
            _delay_ms(2000);
            h_bridgeR_set_percentage(snelheidhard);
     e80:	8c e3       	ldi	r24, 0x3C	; 60
     e82:	0e 94 14 03 	call	0x628	; 0x628 <h_bridgeR_set_percentage>

00000e86 <.Loc.169>:
            h_bridgeL_set_percentage(snelheidzacht);
     e86:	86 e4       	ldi	r24, 0x46	; 70
     e88:	0e 94 53 03 	call	0x6a6	; 0x6a6 <h_bridgeL_set_percentage>

00000e8c <.Loc.170>:
            if(((IRregister & (1 << IRonderlinks)) == 0) && ((IRregister & (1 << IRonderrechts)) == 0))
     e8c:	86 e2       	ldi	r24, 0x26	; 38
     e8e:	90 e0       	ldi	r25, 0x00	; 0
     e90:	dc 01       	movw	r26, r24
     e92:	8c 91       	ld	r24, X

00000e94 <.Loc.171>:
     e94:	88 2f       	mov	r24, r24
     e96:	90 e0       	ldi	r25, 0x00	; 0
     e98:	88 70       	andi	r24, 0x08	; 8
     e9a:	99 27       	eor	r25, r25

00000e9c <.Loc.172>:
     e9c:	00 97       	sbiw	r24, 0x00	; 0
     e9e:	09 f0       	breq	.+2      	; 0xea2 <.Loc.173>

00000ea0 <L0^A>:
     ea0:	3d c0       	rjmp	.+122    	; 0xf1c <.L58>

00000ea2 <.Loc.173>:
     ea2:	86 e2       	ldi	r24, 0x26	; 38
     ea4:	90 e0       	ldi	r25, 0x00	; 0
     ea6:	fc 01       	movw	r30, r24
     ea8:	80 81       	ld	r24, Z

00000eaa <.Loc.174>:
     eaa:	88 2f       	mov	r24, r24
     eac:	90 e0       	ldi	r25, 0x00	; 0
     eae:	84 70       	andi	r24, 0x04	; 4
     eb0:	99 27       	eor	r25, r25

00000eb2 <.Loc.175>:
     eb2:	00 97       	sbiw	r24, 0x00	; 0
     eb4:	99 f5       	brne	.+102    	; 0xf1c <.L58>

00000eb6 <.Loc.176>:
            {
                toestand = 4;
     eb6:	84 e0       	ldi	r24, 0x04	; 4
     eb8:	90 e0       	ldi	r25, 0x00	; 0
     eba:	9a 83       	std	Y+2, r25	; 0x02
     ebc:	89 83       	std	Y+1, r24	; 0x01

00000ebe <.Loc.177>:
            }
            break;
     ebe:	2e c0       	rjmp	.+92     	; 0xf1c <.L58>

00000ec0 <.L12>:
        case 8://signaleren
            h_bridgeR_set_percentage(snelheiduit);
     ec0:	83 e6       	ldi	r24, 0x63	; 99
     ec2:	0e 94 14 03 	call	0x628	; 0x628 <h_bridgeR_set_percentage>

00000ec6 <.Loc.179>:
            h_bridgeL_set_percentage(snelheiduit);
     ec6:	83 e6       	ldi	r24, 0x63	; 99
     ec8:	0e 94 53 03 	call	0x6a6	; 0x6a6 <h_bridgeL_set_percentage>

00000ecc <.Loc.180>:
            signaal_geven();
     ecc:	0e 94 a3 01 	call	0x346	; 0x346 <signaal_geven>

00000ed0 <.Loc.181>:
            toestand = 4;
     ed0:	84 e0       	ldi	r24, 0x04	; 4
     ed2:	90 e0       	ldi	r25, 0x00	; 0
     ed4:	9a 83       	std	Y+2, r25	; 0x02
     ed6:	89 83       	std	Y+1, r24	; 0x01

00000ed8 <.Loc.182>:
            break;
     ed8:	24 c0       	rjmp	.+72     	; 0xf22 <.L9>

00000eda <.L10>:
        case 9://Voorultrasoon ziet iets
            h_bridgeR_set_percentage(snelheiduit);
     eda:	83 e6       	ldi	r24, 0x63	; 99
     edc:	0e 94 14 03 	call	0x628	; 0x628 <h_bridgeR_set_percentage>

00000ee0 <.Loc.184>:
            h_bridgeL_set_percentage(snelheiduit);
     ee0:	83 e6       	ldi	r24, 0x63	; 99
     ee2:	0e 94 53 03 	call	0x6a6	; 0x6a6 <h_bridgeL_set_percentage>

00000ee6 <.Loc.185>:
            if(waarde > 30)
     ee6:	8b 81       	ldd	r24, Y+3	; 0x03
     ee8:	9c 81       	ldd	r25, Y+4	; 0x04
     eea:	8e 31       	cpi	r24, 0x1E	; 30
     eec:	91 05       	cpc	r25, r1
     eee:	c1 f0       	breq	.+48     	; 0xf20 <.L59>
     ef0:	bc f0       	brlt	.+46     	; 0xf20 <.L59>

00000ef2 <.Loc.186>:
            {
                toestand = 4;
     ef2:	84 e0       	ldi	r24, 0x04	; 4
     ef4:	90 e0       	ldi	r25, 0x00	; 0
     ef6:	9a 83       	std	Y+2, r25	; 0x02
     ef8:	89 83       	std	Y+1, r24	; 0x01

00000efa <.Loc.187>:
            }
            break;
     efa:	12 c0       	rjmp	.+36     	; 0xf20 <.L59>

00000efc <.L50>:
            break;
     efc:	00 00       	nop
     efe:	1c cd       	rjmp	.-1480   	; 0x938 <.L45>

00000f00 <.L51>:
            break;
     f00:	00 00       	nop
     f02:	1a cd       	rjmp	.-1484   	; 0x938 <.L45>

00000f04 <.L52>:
            break;
     f04:	00 00       	nop
     f06:	18 cd       	rjmp	.-1488   	; 0x938 <.L45>

00000f08 <.L53>:
            break;
     f08:	00 00       	nop
     f0a:	16 cd       	rjmp	.-1492   	; 0x938 <.L45>

00000f0c <.L54>:
            break;
     f0c:	00 00       	nop
     f0e:	14 cd       	rjmp	.-1496   	; 0x938 <.L45>

00000f10 <.L55>:
            break;
     f10:	00 00       	nop
     f12:	12 cd       	rjmp	.-1500   	; 0x938 <.L45>

00000f14 <.L56>:
            break;
     f14:	00 00       	nop
     f16:	10 cd       	rjmp	.-1504   	; 0x938 <.L45>

00000f18 <.L57>:
            break;
     f18:	00 00       	nop
     f1a:	0e cd       	rjmp	.-1508   	; 0x938 <.L45>

00000f1c <.L58>:
            break;
     f1c:	00 00       	nop
     f1e:	0c cd       	rjmp	.-1512   	; 0x938 <.L45>

00000f20 <.L59>:
	...

00000f22 <.L9>:
        if(Bluetooth_Getal == 2)//Bluetooth verbroken
     f22:	0a cd       	rjmp	.-1516   	; 0x938 <.L45>

00000f24 <init>:

    return 0;
}

void init()
{
     f24:	cf 93       	push	r28
     f26:	df 93       	push	r29
     f28:	cd b7       	in	r28, 0x3d	; 61
     f2a:	de b7       	in	r29, 0x3e	; 62

00000f2c <.Loc.200>:
    initBluetooth();
     f2c:	0e 94 d7 00 	call	0x1ae	; 0x1ae <initBluetooth>

00000f30 <.Loc.201>:
    sei();
     f30:	78 94       	sei

00000f32 <.Loc.202>:

    //timer PWM motorenR
    TCCR1B = (0 << CS12) | (0 << CS11) | (1 << CS10);
     f32:	81 e8       	ldi	r24, 0x81	; 129
     f34:	90 e0       	ldi	r25, 0x00	; 0

00000f36 <.Loc.203>:
     f36:	21 e0       	ldi	r18, 0x01	; 1
     f38:	fc 01       	movw	r30, r24
     f3a:	20 83       	st	Z, r18

00000f3c <.Loc.204>:
    TIMSK1 = (1 << OCIE1A) | (1 << TOIE1);
     f3c:	8f e6       	ldi	r24, 0x6F	; 111
     f3e:	90 e0       	ldi	r25, 0x00	; 0

00000f40 <.Loc.205>:
     f40:	23 e0       	ldi	r18, 0x03	; 3
     f42:	fc 01       	movw	r30, r24
     f44:	20 83       	st	Z, r18

00000f46 <.Loc.206>:

    OCR1A = 0;
     f46:	88 e8       	ldi	r24, 0x88	; 136
     f48:	90 e0       	ldi	r25, 0x00	; 0

00000f4a <.Loc.207>:
     f4a:	fc 01       	movw	r30, r24
     f4c:	11 82       	std	Z+1, r1	; 0x01
     f4e:	10 82       	st	Z, r1

00000f50 <.Loc.208>:
    //timer PWM motorenL
    TCCR3B = (0 << CS32) | (0 << CS31) | (1 << CS30);
     f50:	81 e9       	ldi	r24, 0x91	; 145
     f52:	90 e0       	ldi	r25, 0x00	; 0

00000f54 <.Loc.209>:
     f54:	21 e0       	ldi	r18, 0x01	; 1
     f56:	fc 01       	movw	r30, r24
     f58:	20 83       	st	Z, r18

00000f5a <.Loc.210>:
    TIMSK3 = (1 << OCIE3A) | (1 << TOIE3);
     f5a:	81 e7       	ldi	r24, 0x71	; 113
     f5c:	90 e0       	ldi	r25, 0x00	; 0

00000f5e <.Loc.211>:
     f5e:	23 e0       	ldi	r18, 0x03	; 3
     f60:	fc 01       	movw	r30, r24
     f62:	20 83       	st	Z, r18

00000f64 <.Loc.212>:

    OCR3A = 0;
     f64:	88 e9       	ldi	r24, 0x98	; 152
     f66:	90 e0       	ldi	r25, 0x00	; 0

00000f68 <.Loc.213>:
     f68:	fc 01       	movw	r30, r24
     f6a:	11 82       	std	Z+1, r1	; 0x01
     f6c:	10 82       	st	Z, r1

00000f6e <.Loc.214>:

    //timer noodtoestand
    TCCR0B = (1 << CS02) | (1 << CS00);
     f6e:	85 e4       	ldi	r24, 0x45	; 69
     f70:	90 e0       	ldi	r25, 0x00	; 0

00000f72 <.Loc.215>:
     f72:	25 e0       	ldi	r18, 0x05	; 5
     f74:	fc 01       	movw	r30, r24
     f76:	20 83       	st	Z, r18

00000f78 <.Loc.216>:
    TIMSK0 |= (1 << TOIE0);
     f78:	8e e6       	ldi	r24, 0x6E	; 110
     f7a:	90 e0       	ldi	r25, 0x00	; 0
     f7c:	fc 01       	movw	r30, r24
     f7e:	20 81       	ld	r18, Z
     f80:	8e e6       	ldi	r24, 0x6E	; 110
     f82:	90 e0       	ldi	r25, 0x00	; 0

00000f84 <.Loc.217>:
     f84:	21 60       	ori	r18, 0x01	; 1
     f86:	fc 01       	movw	r30, r24
     f88:	20 83       	st	Z, r18

00000f8a <.Loc.218>:

    //timer noodtoestand
    //TCCR4B = (1 << CS42) | (1 << CS40);
    TIMSK4 |= (1 << TOIE4);
     f8a:	82 e7       	ldi	r24, 0x72	; 114
     f8c:	90 e0       	ldi	r25, 0x00	; 0
     f8e:	fc 01       	movw	r30, r24
     f90:	20 81       	ld	r18, Z
     f92:	82 e7       	ldi	r24, 0x72	; 114
     f94:	90 e0       	ldi	r25, 0x00	; 0

00000f96 <.Loc.219>:
     f96:	21 60       	ori	r18, 0x01	; 1
     f98:	fc 01       	movw	r30, r24
     f9a:	20 83       	st	Z, r18

00000f9c <.Loc.220>:

    //pinout h-brug
    DDR |= (1 << PEN1);
     f9c:	81 e2       	ldi	r24, 0x21	; 33
     f9e:	90 e0       	ldi	r25, 0x00	; 0
     fa0:	fc 01       	movw	r30, r24
     fa2:	20 81       	ld	r18, Z
     fa4:	81 e2       	ldi	r24, 0x21	; 33
     fa6:	90 e0       	ldi	r25, 0x00	; 0

00000fa8 <.Loc.221>:
     fa8:	20 68       	ori	r18, 0x80	; 128
     faa:	fc 01       	movw	r30, r24
     fac:	20 83       	st	Z, r18

00000fae <.Loc.222>:
    DDR |= (1 << PIN11);
     fae:	81 e2       	ldi	r24, 0x21	; 33
     fb0:	90 e0       	ldi	r25, 0x00	; 0
     fb2:	fc 01       	movw	r30, r24
     fb4:	20 81       	ld	r18, Z
     fb6:	81 e2       	ldi	r24, 0x21	; 33
     fb8:	90 e0       	ldi	r25, 0x00	; 0

00000fba <.Loc.223>:
     fba:	20 64       	ori	r18, 0x40	; 64
     fbc:	fc 01       	movw	r30, r24
     fbe:	20 83       	st	Z, r18

00000fc0 <.Loc.224>:
    DDR |= (1 << PIN12);
     fc0:	81 e2       	ldi	r24, 0x21	; 33
     fc2:	90 e0       	ldi	r25, 0x00	; 0
     fc4:	fc 01       	movw	r30, r24
     fc6:	20 81       	ld	r18, Z
     fc8:	81 e2       	ldi	r24, 0x21	; 33
     fca:	90 e0       	ldi	r25, 0x00	; 0

00000fcc <.Loc.225>:
     fcc:	20 62       	ori	r18, 0x20	; 32
     fce:	fc 01       	movw	r30, r24
     fd0:	20 83       	st	Z, r18

00000fd2 <.Loc.226>:
    DDR |= (1 << PIN21);
     fd2:	81 e2       	ldi	r24, 0x21	; 33
     fd4:	90 e0       	ldi	r25, 0x00	; 0
     fd6:	fc 01       	movw	r30, r24
     fd8:	20 81       	ld	r18, Z
     fda:	81 e2       	ldi	r24, 0x21	; 33
     fdc:	90 e0       	ldi	r25, 0x00	; 0

00000fde <.Loc.227>:
     fde:	20 61       	ori	r18, 0x10	; 16
     fe0:	fc 01       	movw	r30, r24
     fe2:	20 83       	st	Z, r18

00000fe4 <.Loc.228>:
    DDR |= (1 << PIN22);
     fe4:	81 e2       	ldi	r24, 0x21	; 33
     fe6:	90 e0       	ldi	r25, 0x00	; 0
     fe8:	fc 01       	movw	r30, r24
     fea:	20 81       	ld	r18, Z
     fec:	81 e2       	ldi	r24, 0x21	; 33
     fee:	90 e0       	ldi	r25, 0x00	; 0

00000ff0 <.Loc.229>:
     ff0:	28 60       	ori	r18, 0x08	; 8
     ff2:	fc 01       	movw	r30, r24
     ff4:	20 83       	st	Z, r18

00000ff6 <.Loc.230>:
    DDR |= (1 << PEN2);
     ff6:	81 e2       	ldi	r24, 0x21	; 33
     ff8:	90 e0       	ldi	r25, 0x00	; 0
     ffa:	fc 01       	movw	r30, r24
     ffc:	20 81       	ld	r18, Z
     ffe:	81 e2       	ldi	r24, 0x21	; 33
    1000:	90 e0       	ldi	r25, 0x00	; 0

00001002 <.Loc.231>:
    1002:	24 60       	ori	r18, 0x04	; 4
    1004:	fc 01       	movw	r30, r24
    1006:	20 83       	st	Z, r18

00001008 <.Loc.232>:

    //H-brug pinnen LOW
    PORT &= ~(1 << PEN1);
    1008:	82 e2       	ldi	r24, 0x22	; 34
    100a:	90 e0       	ldi	r25, 0x00	; 0
    100c:	fc 01       	movw	r30, r24
    100e:	20 81       	ld	r18, Z

00001010 <.Loc.233>:
    1010:	82 e2       	ldi	r24, 0x22	; 34
    1012:	90 e0       	ldi	r25, 0x00	; 0

00001014 <.Loc.234>:
    1014:	2f 77       	andi	r18, 0x7F	; 127
    1016:	fc 01       	movw	r30, r24
    1018:	20 83       	st	Z, r18

0000101a <.Loc.235>:
	PORT &= ~(1 << PIN11);
    101a:	82 e2       	ldi	r24, 0x22	; 34
    101c:	90 e0       	ldi	r25, 0x00	; 0
    101e:	fc 01       	movw	r30, r24
    1020:	20 81       	ld	r18, Z

00001022 <.Loc.236>:
    1022:	82 e2       	ldi	r24, 0x22	; 34
    1024:	90 e0       	ldi	r25, 0x00	; 0

00001026 <.Loc.237>:
    1026:	2f 7b       	andi	r18, 0xBF	; 191
    1028:	fc 01       	movw	r30, r24
    102a:	20 83       	st	Z, r18

0000102c <.Loc.238>:
	PORT &= ~(1 << PIN12);
    102c:	82 e2       	ldi	r24, 0x22	; 34
    102e:	90 e0       	ldi	r25, 0x00	; 0
    1030:	fc 01       	movw	r30, r24
    1032:	20 81       	ld	r18, Z

00001034 <.Loc.239>:
    1034:	82 e2       	ldi	r24, 0x22	; 34
    1036:	90 e0       	ldi	r25, 0x00	; 0

00001038 <.Loc.240>:
    1038:	2f 7d       	andi	r18, 0xDF	; 223
    103a:	fc 01       	movw	r30, r24
    103c:	20 83       	st	Z, r18

0000103e <.Loc.241>:
	PORT &= ~(1 << PIN21);
    103e:	82 e2       	ldi	r24, 0x22	; 34
    1040:	90 e0       	ldi	r25, 0x00	; 0
    1042:	fc 01       	movw	r30, r24
    1044:	20 81       	ld	r18, Z

00001046 <.Loc.242>:
    1046:	82 e2       	ldi	r24, 0x22	; 34
    1048:	90 e0       	ldi	r25, 0x00	; 0

0000104a <.Loc.243>:
    104a:	2f 7e       	andi	r18, 0xEF	; 239
    104c:	fc 01       	movw	r30, r24
    104e:	20 83       	st	Z, r18

00001050 <.Loc.244>:
	PORT &= ~(1 << PIN22);
    1050:	82 e2       	ldi	r24, 0x22	; 34
    1052:	90 e0       	ldi	r25, 0x00	; 0
    1054:	fc 01       	movw	r30, r24
    1056:	20 81       	ld	r18, Z

00001058 <.Loc.245>:
    1058:	82 e2       	ldi	r24, 0x22	; 34
    105a:	90 e0       	ldi	r25, 0x00	; 0

0000105c <.Loc.246>:
    105c:	27 7f       	andi	r18, 0xF7	; 247
    105e:	fc 01       	movw	r30, r24
    1060:	20 83       	st	Z, r18

00001062 <.Loc.247>:
	PORT &= ~(1 << PEN2);
    1062:	82 e2       	ldi	r24, 0x22	; 34
    1064:	90 e0       	ldi	r25, 0x00	; 0
    1066:	fc 01       	movw	r30, r24
    1068:	20 81       	ld	r18, Z

0000106a <.Loc.248>:
    106a:	82 e2       	ldi	r24, 0x22	; 34
    106c:	90 e0       	ldi	r25, 0x00	; 0

0000106e <.Loc.249>:
    106e:	2b 7f       	andi	r18, 0xFB	; 251
    1070:	fc 01       	movw	r30, r24
    1072:	20 83       	st	Z, r18

00001074 <.Loc.250>:

	//LEDS
    DDR_LED |= (1<<LED_1) | (1<<LED_2);     // enable pins as output
    1074:	81 e0       	ldi	r24, 0x01	; 1
    1076:	91 e0       	ldi	r25, 0x01	; 1
    1078:	fc 01       	movw	r30, r24
    107a:	20 81       	ld	r18, Z
    107c:	81 e0       	ldi	r24, 0x01	; 1
    107e:	91 e0       	ldi	r25, 0x01	; 1

00001080 <.Loc.251>:
    1080:	20 63       	ori	r18, 0x30	; 48
    1082:	fc 01       	movw	r30, r24
    1084:	20 83       	st	Z, r18

00001086 <.Loc.252>:
    PORT_LED &= ~(1<<LED_1) & ~(1<<LED_2);  // put pins low
    1086:	82 e0       	ldi	r24, 0x02	; 2
    1088:	91 e0       	ldi	r25, 0x01	; 1
    108a:	fc 01       	movw	r30, r24
    108c:	20 81       	ld	r18, Z

0000108e <.Loc.253>:
    108e:	82 e0       	ldi	r24, 0x02	; 2
    1090:	91 e0       	ldi	r25, 0x01	; 1

00001092 <.Loc.254>:
    1092:	2f 7c       	andi	r18, 0xCF	; 207
    1094:	fc 01       	movw	r30, r24
    1096:	20 83       	st	Z, r18

00001098 <.Loc.255>:
    //PORT_LED |= (1<<LED_2);

    //Buzzer
    DDR_buzzer |= (1<<buzzer);              // enable pins as output
    1098:	81 e0       	ldi	r24, 0x01	; 1
    109a:	91 e0       	ldi	r25, 0x01	; 1
    109c:	fc 01       	movw	r30, r24
    109e:	20 81       	ld	r18, Z
    10a0:	81 e0       	ldi	r24, 0x01	; 1
    10a2:	91 e0       	ldi	r25, 0x01	; 1

000010a4 <.Loc.256>:
    10a4:	28 60       	ori	r18, 0x08	; 8
    10a6:	fc 01       	movw	r30, r24
    10a8:	20 83       	st	Z, r18

000010aa <.Loc.257>:
    PORT_buzzer &= ~(1<<buzzer);            // put pins low
    10aa:	82 e0       	ldi	r24, 0x02	; 2
    10ac:	91 e0       	ldi	r25, 0x01	; 1
    10ae:	fc 01       	movw	r30, r24
    10b0:	20 81       	ld	r18, Z

000010b2 <.Loc.258>:
    10b2:	82 e0       	ldi	r24, 0x02	; 2
    10b4:	91 e0       	ldi	r25, 0x01	; 1

000010b6 <.Loc.259>:
    10b6:	27 7f       	andi	r18, 0xF7	; 247
    10b8:	fc 01       	movw	r30, r24
    10ba:	20 83       	st	Z, r18

000010bc <.Loc.260>:

    //knoppen
	DDRF &= ~(1<<Noodknoppin);
    10bc:	80 e3       	ldi	r24, 0x30	; 48
    10be:	90 e0       	ldi	r25, 0x00	; 0
    10c0:	fc 01       	movw	r30, r24
    10c2:	20 81       	ld	r18, Z

000010c4 <.Loc.261>:
    10c4:	80 e3       	ldi	r24, 0x30	; 48
    10c6:	90 e0       	ldi	r25, 0x00	; 0

000010c8 <.Loc.262>:
    10c8:	2d 7f       	andi	r18, 0xFD	; 253
    10ca:	fc 01       	movw	r30, r24
    10cc:	20 83       	st	Z, r18

000010ce <.Loc.263>:
	PORTF |= (1<<Noodknoppin);   		// enAble alle knoppen voor input
    10ce:	81 e3       	ldi	r24, 0x31	; 49
    10d0:	90 e0       	ldi	r25, 0x00	; 0
    10d2:	fc 01       	movw	r30, r24
    10d4:	20 81       	ld	r18, Z
    10d6:	81 e3       	ldi	r24, 0x31	; 49
    10d8:	90 e0       	ldi	r25, 0x00	; 0

000010da <.Loc.264>:
    10da:	22 60       	ori	r18, 0x02	; 2
    10dc:	fc 01       	movw	r30, r24
    10de:	20 83       	st	Z, r18

000010e0 <.Loc.265>:
}
    10e0:	00 00       	nop
    10e2:	df 91       	pop	r29
    10e4:	cf 91       	pop	r28
    10e6:	08 95       	ret

000010e8 <initTimer>:


void initTimer(void){
    10e8:	cf 93       	push	r28
    10ea:	df 93       	push	r29
    10ec:	cd b7       	in	r28, 0x3d	; 61
    10ee:	de b7       	in	r29, 0x3e	; 62

000010f0 <.Loc.267>:
    Ultraregister |= (1<<Voorultrasoontrig);
    10f0:	83 e2       	ldi	r24, 0x23	; 35
    10f2:	90 e0       	ldi	r25, 0x00	; 0
    10f4:	fc 01       	movw	r30, r24
    10f6:	20 81       	ld	r18, Z
    10f8:	83 e2       	ldi	r24, 0x23	; 35
    10fa:	90 e0       	ldi	r25, 0x00	; 0

000010fc <.Loc.268>:
    10fc:	20 62       	ori	r18, 0x20	; 32
    10fe:	fc 01       	movw	r30, r24
    1100:	20 83       	st	Z, r18

00001102 <.Loc.269>:
    UltraPort &= ~(1<<Voorultrasoontrig);
    1102:	85 e2       	ldi	r24, 0x25	; 37
    1104:	90 e0       	ldi	r25, 0x00	; 0
    1106:	fc 01       	movw	r30, r24
    1108:	20 81       	ld	r18, Z

0000110a <.Loc.270>:
    110a:	85 e2       	ldi	r24, 0x25	; 37
    110c:	90 e0       	ldi	r25, 0x00	; 0

0000110e <.Loc.271>:
    110e:	2f 7d       	andi	r18, 0xDF	; 223
    1110:	fc 01       	movw	r30, r24
    1112:	20 83       	st	Z, r18

00001114 <.Loc.272>:
    TCCR2A = 0;
    1114:	80 eb       	ldi	r24, 0xB0	; 176
    1116:	90 e0       	ldi	r25, 0x00	; 0

00001118 <.Loc.273>:
    1118:	fc 01       	movw	r30, r24
    111a:	10 82       	st	Z, r1

0000111c <.Loc.274>:
    TCCR2B |= (1<<CS20);
    111c:	81 eb       	ldi	r24, 0xB1	; 177
    111e:	90 e0       	ldi	r25, 0x00	; 0
    1120:	fc 01       	movw	r30, r24
    1122:	20 81       	ld	r18, Z
    1124:	81 eb       	ldi	r24, 0xB1	; 177
    1126:	90 e0       	ldi	r25, 0x00	; 0

00001128 <.Loc.275>:
    1128:	21 60       	ori	r18, 0x01	; 1
    112a:	fc 01       	movw	r30, r24
    112c:	20 83       	st	Z, r18

0000112e <.Loc.276>:
    //16000000 / 256 = 62,500
    //1 / 62500 = 0.000016s
    //62500x/sec
    TIMSK2 = (1<<TOIE2);
    112e:	80 e7       	ldi	r24, 0x70	; 112
    1130:	90 e0       	ldi	r25, 0x00	; 0

00001132 <.Loc.277>:
    1132:	21 e0       	ldi	r18, 0x01	; 1
    1134:	fc 01       	movw	r30, r24
    1136:	20 83       	st	Z, r18

00001138 <.Loc.278>:
    sei();
    1138:	78 94       	sei

0000113a <.Loc.279>:
}
    113a:	00 00       	nop
    113c:	df 91       	pop	r29
    113e:	cf 91       	pop	r28
    1140:	08 95       	ret

00001142 <GetDistance>:

int GetDistance(void){
    1142:	cf 93       	push	r28
    1144:	df 93       	push	r29
    1146:	cd b7       	in	r28, 0x3d	; 61
    1148:	de b7       	in	r29, 0x3e	; 62
    114a:	6e 97       	sbiw	r28, 0x1e	; 30
    114c:	0f b6       	in	r0, 0x3f	; 63
    114e:	f8 94       	cli
    1150:	de bf       	out	0x3e, r29	; 62
    1152:	0f be       	out	0x3f, r0	; 63
    1154:	cd bf       	out	0x3d, r28	; 61

00001156 <.Loc.281>:

    int Distance;

    TriggerPulse();
    1156:	0e 94 2f 09 	call	0x125e	; 0x125e <TriggerPulse>

0000115a <.Loc.282>:
	...

0000115c <.L63>:

    while ((Ultraregister & (1<<Voorultrasoonecho)) == 0){
    115c:	83 e2       	ldi	r24, 0x23	; 35
    115e:	90 e0       	ldi	r25, 0x00	; 0
    1160:	dc 01       	movw	r26, r24
    1162:	8c 91       	ld	r24, X

00001164 <.Loc.284>:
    1164:	88 2f       	mov	r24, r24
    1166:	90 e0       	ldi	r25, 0x00	; 0
    1168:	80 71       	andi	r24, 0x10	; 16
    116a:	99 27       	eor	r25, r25

0000116c <.Loc.285>:
    116c:	00 97       	sbiw	r24, 0x00	; 0
    116e:	b1 f3       	breq	.-20     	; 0x115c <.L63>

00001170 <.Loc.286>:

    }
    TCNT2 = 0;
    1170:	82 eb       	ldi	r24, 0xB2	; 178
    1172:	90 e0       	ldi	r25, 0x00	; 0

00001174 <.Loc.287>:
    1174:	fc 01       	movw	r30, r24
    1176:	10 82       	st	Z, r1

00001178 <.Loc.288>:
    TIFR2 = 1<<TOV2;
    1178:	87 e3       	ldi	r24, 0x37	; 55
    117a:	90 e0       	ldi	r25, 0x00	; 0

0000117c <.Loc.289>:
    117c:	21 e0       	ldi	r18, 0x01	; 1
    117e:	dc 01       	movw	r26, r24
    1180:	2c 93       	st	X, r18

00001182 <.Loc.290>:
    count = 0;
    1182:	10 92 0f 02 	sts	0x020F, r1	; 0x80020f <count+0x1>
    1186:	10 92 0e 02 	sts	0x020E, r1	; 0x80020e <count>

0000118a <.Loc.291>:
	...

0000118c <.L64>:

    while ((Ultraregister & (1<<Voorultrasoonecho)) != 0){
    118c:	83 e2       	ldi	r24, 0x23	; 35
    118e:	90 e0       	ldi	r25, 0x00	; 0
    1190:	fc 01       	movw	r30, r24
    1192:	80 81       	ld	r24, Z

00001194 <.Loc.293>:
    1194:	88 2f       	mov	r24, r24
    1196:	90 e0       	ldi	r25, 0x00	; 0
    1198:	80 71       	andi	r24, 0x10	; 16
    119a:	99 27       	eor	r25, r25

0000119c <.Loc.294>:
    119c:	00 97       	sbiw	r24, 0x00	; 0
    119e:	b1 f7       	brne	.-20     	; 0x118c <.L64>

000011a0 <.Loc.295>:

    }
    Distance = count;
    11a0:	80 91 0e 02 	lds	r24, 0x020E	; 0x80020e <count>
    11a4:	90 91 0f 02 	lds	r25, 0x020F	; 0x80020f <count+0x1>
    11a8:	9a 83       	std	Y+2, r25	; 0x02
    11aa:	89 83       	std	Y+1, r24	; 0x01

000011ac <.Loc.296>:

    Distance = Distance * 0.008 * 343;
    11ac:	89 81       	ldd	r24, Y+1	; 0x01
    11ae:	9a 81       	ldd	r25, Y+2	; 0x02
    11b0:	9c 01       	movw	r18, r24
    11b2:	99 0f       	add	r25, r25
    11b4:	44 0b       	sbc	r20, r20
    11b6:	55 0b       	sbc	r21, r21
    11b8:	2f 87       	std	Y+15, r18	; 0x0f
    11ba:	38 8b       	std	Y+16, r19	; 0x10
    11bc:	49 8b       	std	Y+17, r20	; 0x11
    11be:	5a 8b       	std	Y+18, r21	; 0x12
    11c0:	6f 85       	ldd	r22, Y+15	; 0x0f
    11c2:	78 89       	ldd	r23, Y+16	; 0x10
    11c4:	89 89       	ldd	r24, Y+17	; 0x11
    11c6:	9a 89       	ldd	r25, Y+18	; 0x12
    11c8:	0e 94 9f 0b 	call	0x173e	; 0x173e <__floatsisf>
    11cc:	6b 83       	std	Y+3, r22	; 0x03
    11ce:	7c 83       	std	Y+4, r23	; 0x04
    11d0:	8d 83       	std	Y+5, r24	; 0x05
    11d2:	9e 83       	std	Y+6, r25	; 0x06
    11d4:	2f e6       	ldi	r18, 0x6F	; 111
    11d6:	32 e1       	ldi	r19, 0x12	; 18
    11d8:	43 e0       	ldi	r20, 0x03	; 3
    11da:	5c e3       	ldi	r21, 0x3C	; 60
    11dc:	6b 81       	ldd	r22, Y+3	; 0x03
    11de:	7c 81       	ldd	r23, Y+4	; 0x04
    11e0:	8d 81       	ldd	r24, Y+5	; 0x05
    11e2:	9e 81       	ldd	r25, Y+6	; 0x06
    11e4:	0e 94 54 0c 	call	0x18a8	; 0x18a8 <__mulsf3>
    11e8:	6b 8b       	std	Y+19, r22	; 0x13
    11ea:	7c 8b       	std	Y+20, r23	; 0x14
    11ec:	8d 8b       	std	Y+21, r24	; 0x15
    11ee:	9e 8b       	std	Y+22, r25	; 0x16
    11f0:	8b 89       	ldd	r24, Y+19	; 0x13
    11f2:	9c 89       	ldd	r25, Y+20	; 0x14
    11f4:	ad 89       	ldd	r26, Y+21	; 0x15
    11f6:	be 89       	ldd	r27, Y+22	; 0x16
    11f8:	8f 83       	std	Y+7, r24	; 0x07
    11fa:	98 87       	std	Y+8, r25	; 0x08
    11fc:	a9 87       	std	Y+9, r26	; 0x09
    11fe:	ba 87       	std	Y+10, r27	; 0x0a

00001200 <.Loc.297>:
    1200:	20 e0       	ldi	r18, 0x00	; 0
    1202:	30 e8       	ldi	r19, 0x80	; 128
    1204:	4b ea       	ldi	r20, 0xAB	; 171
    1206:	53 e4       	ldi	r21, 0x43	; 67
    1208:	6f 81       	ldd	r22, Y+7	; 0x07
    120a:	78 85       	ldd	r23, Y+8	; 0x08
    120c:	89 85       	ldd	r24, Y+9	; 0x09
    120e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1210:	0e 94 54 0c 	call	0x18a8	; 0x18a8 <__mulsf3>
    1214:	6f 8b       	std	Y+23, r22	; 0x17
    1216:	78 8f       	std	Y+24, r23	; 0x18
    1218:	89 8f       	std	Y+25, r24	; 0x19
    121a:	9a 8f       	std	Y+26, r25	; 0x1a
    121c:	2f 89       	ldd	r18, Y+23	; 0x17
    121e:	38 8d       	ldd	r19, Y+24	; 0x18
    1220:	49 8d       	ldd	r20, Y+25	; 0x19
    1222:	5a 8d       	ldd	r21, Y+26	; 0x1a
    1224:	2b 87       	std	Y+11, r18	; 0x0b
    1226:	3c 87       	std	Y+12, r19	; 0x0c
    1228:	4d 87       	std	Y+13, r20	; 0x0d
    122a:	5e 87       	std	Y+14, r21	; 0x0e

0000122c <.Loc.298>:
    122c:	6b 85       	ldd	r22, Y+11	; 0x0b
    122e:	7c 85       	ldd	r23, Y+12	; 0x0c
    1230:	8d 85       	ldd	r24, Y+13	; 0x0d
    1232:	9e 85       	ldd	r25, Y+14	; 0x0e
    1234:	0e 94 67 0b 	call	0x16ce	; 0x16ce <__fixsfsi>
    1238:	6b 8f       	std	Y+27, r22	; 0x1b
    123a:	7c 8f       	std	Y+28, r23	; 0x1c
    123c:	8d 8f       	std	Y+29, r24	; 0x1d
    123e:	9e 8f       	std	Y+30, r25	; 0x1e
    1240:	4b 8d       	ldd	r20, Y+27	; 0x1b
    1242:	5c 8d       	ldd	r21, Y+28	; 0x1c
    1244:	5a 83       	std	Y+2, r21	; 0x02
    1246:	49 83       	std	Y+1, r20	; 0x01

00001248 <.Loc.299>:
    //34 cm / ms
    //340   mm / ms
    //0.34  mm / us
    //5.44 * count geeft distance in mm

    return Distance;
    1248:	89 81       	ldd	r24, Y+1	; 0x01
    124a:	9a 81       	ldd	r25, Y+2	; 0x02

0000124c <.Loc.300>:
}
    124c:	6e 96       	adiw	r28, 0x1e	; 30
    124e:	0f b6       	in	r0, 0x3f	; 63
    1250:	f8 94       	cli
    1252:	de bf       	out	0x3e, r29	; 62
    1254:	0f be       	out	0x3f, r0	; 63
    1256:	cd bf       	out	0x3d, r28	; 61
    1258:	df 91       	pop	r29
    125a:	cf 91       	pop	r28
    125c:	08 95       	ret

0000125e <TriggerPulse>:

void TriggerPulse (void){
    125e:	cf 93       	push	r28
    1260:	df 93       	push	r29
    1262:	cd b7       	in	r28, 0x3d	; 61
    1264:	de b7       	in	r29, 0x3e	; 62
    1266:	c8 54       	subi	r28, 0x48	; 72
    1268:	d1 09       	sbc	r29, r1
    126a:	0f b6       	in	r0, 0x3f	; 63
    126c:	f8 94       	cli
    126e:	de bf       	out	0x3e, r29	; 62
    1270:	0f be       	out	0x3f, r0	; 63
    1272:	cd bf       	out	0x3d, r28	; 61

00001274 <.Loc.302>:
    UltraPort |= (1<<Voorultrasoontrig);
    1274:	85 e2       	ldi	r24, 0x25	; 37
    1276:	90 e0       	ldi	r25, 0x00	; 0
    1278:	dc 01       	movw	r26, r24
    127a:	2c 91       	ld	r18, X
    127c:	85 e2       	ldi	r24, 0x25	; 37
    127e:	90 e0       	ldi	r25, 0x00	; 0

00001280 <.Loc.303>:
    1280:	20 62       	ori	r18, 0x20	; 32
    1282:	fc 01       	movw	r30, r24
    1284:	20 83       	st	Z, r18
    1286:	80 e0       	ldi	r24, 0x00	; 0
    1288:	90 e0       	ldi	r25, 0x00	; 0
    128a:	a0 e2       	ldi	r26, 0x20	; 32
    128c:	b1 e4       	ldi	r27, 0x41	; 65
    128e:	89 83       	std	Y+1, r24	; 0x01
    1290:	9a 83       	std	Y+2, r25	; 0x02
    1292:	ab 83       	std	Y+3, r26	; 0x03
    1294:	bc 83       	std	Y+4, r27	; 0x04

00001296 <.LBB42>:
	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint8_t __ticks;
	double __tmp2 ;
	__tmp = ((F_CPU) / 3e6) * __us;
    1296:	2b ea       	ldi	r18, 0xAB	; 171
    1298:	3a ea       	ldi	r19, 0xAA	; 170
    129a:	4a ea       	ldi	r20, 0xAA	; 170
    129c:	50 e4       	ldi	r21, 0x40	; 64
    129e:	69 81       	ldd	r22, Y+1	; 0x01
    12a0:	7a 81       	ldd	r23, Y+2	; 0x02
    12a2:	8b 81       	ldd	r24, Y+3	; 0x03
    12a4:	9c 81       	ldd	r25, Y+4	; 0x04
    12a6:	0e 94 54 0c 	call	0x18a8	; 0x18a8 <__mulsf3>
    12aa:	6d a3       	std	Y+37, r22	; 0x25
    12ac:	7e a3       	std	Y+38, r23	; 0x26
    12ae:	8f a3       	std	Y+39, r24	; 0x27
    12b0:	98 a7       	std	Y+40, r25	; 0x28
    12b2:	8d a1       	ldd	r24, Y+37	; 0x25
    12b4:	9e a1       	ldd	r25, Y+38	; 0x26
    12b6:	af a1       	ldd	r26, Y+39	; 0x27
    12b8:	b8 a5       	ldd	r27, Y+40	; 0x28
    12ba:	8d 83       	std	Y+5, r24	; 0x05
    12bc:	9e 83       	std	Y+6, r25	; 0x06
    12be:	af 83       	std	Y+7, r26	; 0x07
    12c0:	b8 87       	std	Y+8, r27	; 0x08

000012c2 <.Loc.305>:
	__tmp2 = ((F_CPU) / 4e6) * __us;
    12c2:	20 e0       	ldi	r18, 0x00	; 0
    12c4:	30 e0       	ldi	r19, 0x00	; 0
    12c6:	40 e8       	ldi	r20, 0x80	; 128
    12c8:	50 e4       	ldi	r21, 0x40	; 64
    12ca:	69 81       	ldd	r22, Y+1	; 0x01
    12cc:	7a 81       	ldd	r23, Y+2	; 0x02
    12ce:	8b 81       	ldd	r24, Y+3	; 0x03
    12d0:	9c 81       	ldd	r25, Y+4	; 0x04
    12d2:	0e 94 54 0c 	call	0x18a8	; 0x18a8 <__mulsf3>
    12d6:	69 a7       	std	Y+41, r22	; 0x29
    12d8:	7a a7       	std	Y+42, r23	; 0x2a
    12da:	8b a7       	std	Y+43, r24	; 0x2b
    12dc:	9c a7       	std	Y+44, r25	; 0x2c
    12de:	89 a5       	ldd	r24, Y+41	; 0x29
    12e0:	9a a5       	ldd	r25, Y+42	; 0x2a
    12e2:	ab a5       	ldd	r26, Y+43	; 0x2b
    12e4:	bc a5       	ldd	r27, Y+44	; 0x2c
    12e6:	89 87       	std	Y+9, r24	; 0x09
    12e8:	9a 87       	std	Y+10, r25	; 0x0a
    12ea:	ab 87       	std	Y+11, r26	; 0x0b
    12ec:	bc 87       	std	Y+12, r27	; 0x0c

000012ee <.Loc.306>:
	if (__tmp < 1.0)
    12ee:	20 e0       	ldi	r18, 0x00	; 0
    12f0:	30 e0       	ldi	r19, 0x00	; 0
    12f2:	40 e8       	ldi	r20, 0x80	; 128
    12f4:	5f e3       	ldi	r21, 0x3F	; 63
    12f6:	6d 81       	ldd	r22, Y+5	; 0x05
    12f8:	7e 81       	ldd	r23, Y+6	; 0x06
    12fa:	8f 81       	ldd	r24, Y+7	; 0x07
    12fc:	98 85       	ldd	r25, Y+8	; 0x08
    12fe:	0e 94 f0 0a 	call	0x15e0	; 0x15e0 <__cmpsf2>
    1302:	88 23       	and	r24, r24
    1304:	1c f4       	brge	.+6      	; 0x130c <.L88>

00001306 <.Loc.307>:
		__ticks = 1;
    1306:	81 e0       	ldi	r24, 0x01	; 1
    1308:	8d 87       	std	Y+13, r24	; 0x0d
    130a:	e8 c0       	rjmp	.+464    	; 0x14dc <.L69>

0000130c <.L88>:
	else if (__tmp2 > 65535)
    130c:	20 e0       	ldi	r18, 0x00	; 0
    130e:	3f ef       	ldi	r19, 0xFF	; 255
    1310:	4f e7       	ldi	r20, 0x7F	; 127
    1312:	57 e4       	ldi	r21, 0x47	; 71
    1314:	69 85       	ldd	r22, Y+9	; 0x09
    1316:	7a 85       	ldd	r23, Y+10	; 0x0a
    1318:	8b 85       	ldd	r24, Y+11	; 0x0b
    131a:	9c 85       	ldd	r25, Y+12	; 0x0c
    131c:	0e 94 4f 0c 	call	0x189e	; 0x189e <__gesf2>
    1320:	88 23       	and	r24, r24
    1322:	09 f0       	breq	.+2      	; 0x1326 <L0^A>

00001324 <L0^A>:
    1324:	0c f4       	brge	.+2      	; 0x1328 <.Loc.309>

00001326 <L0^A>:
    1326:	9f c0       	rjmp	.+318    	; 0x1466 <.L89>

00001328 <.Loc.309>:
	{
		_delay_ms(__us / 1000.0);
    1328:	20 e0       	ldi	r18, 0x00	; 0
    132a:	30 e0       	ldi	r19, 0x00	; 0
    132c:	4a e7       	ldi	r20, 0x7A	; 122
    132e:	54 e4       	ldi	r21, 0x44	; 68
    1330:	69 81       	ldd	r22, Y+1	; 0x01
    1332:	7a 81       	ldd	r23, Y+2	; 0x02
    1334:	8b 81       	ldd	r24, Y+3	; 0x03
    1336:	9c 81       	ldd	r25, Y+4	; 0x04
    1338:	0e 94 f5 0a 	call	0x15ea	; 0x15ea <__divsf3>
    133c:	6d a7       	std	Y+45, r22	; 0x2d
    133e:	7e a7       	std	Y+46, r23	; 0x2e
    1340:	8f a7       	std	Y+47, r24	; 0x2f
    1342:	98 ab       	std	Y+48, r25	; 0x30
    1344:	8d a5       	ldd	r24, Y+45	; 0x2d
    1346:	9e a5       	ldd	r25, Y+46	; 0x2e
    1348:	af a5       	ldd	r26, Y+47	; 0x2f
    134a:	b8 a9       	ldd	r27, Y+48	; 0x30
    134c:	8e 87       	std	Y+14, r24	; 0x0e
    134e:	9f 87       	std	Y+15, r25	; 0x0f
    1350:	a8 8b       	std	Y+16, r26	; 0x10
    1352:	b9 8b       	std	Y+17, r27	; 0x11

00001354 <.LBB44>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    1354:	20 e0       	ldi	r18, 0x00	; 0
    1356:	30 e0       	ldi	r19, 0x00	; 0
    1358:	4a e7       	ldi	r20, 0x7A	; 122
    135a:	55 e4       	ldi	r21, 0x45	; 69
    135c:	6e 85       	ldd	r22, Y+14	; 0x0e
    135e:	7f 85       	ldd	r23, Y+15	; 0x0f
    1360:	88 89       	ldd	r24, Y+16	; 0x10
    1362:	99 89       	ldd	r25, Y+17	; 0x11
    1364:	0e 94 54 0c 	call	0x18a8	; 0x18a8 <__mulsf3>
    1368:	69 ab       	std	Y+49, r22	; 0x31
    136a:	7a ab       	std	Y+50, r23	; 0x32
    136c:	8b ab       	std	Y+51, r24	; 0x33
    136e:	9c ab       	std	Y+52, r25	; 0x34
    1370:	89 a9       	ldd	r24, Y+49	; 0x31
    1372:	9a a9       	ldd	r25, Y+50	; 0x32
    1374:	ab a9       	ldd	r26, Y+51	; 0x33
    1376:	bc a9       	ldd	r27, Y+52	; 0x34
    1378:	8a 8b       	std	Y+18, r24	; 0x12
    137a:	9b 8b       	std	Y+19, r25	; 0x13
    137c:	ac 8b       	std	Y+20, r26	; 0x14
    137e:	bd 8b       	std	Y+21, r27	; 0x15

00001380 <.Loc.311>:
	if (__tmp < 1.0)
    1380:	20 e0       	ldi	r18, 0x00	; 0
    1382:	30 e0       	ldi	r19, 0x00	; 0
    1384:	40 e8       	ldi	r20, 0x80	; 128
    1386:	5f e3       	ldi	r21, 0x3F	; 63
    1388:	6a 89       	ldd	r22, Y+18	; 0x12
    138a:	7b 89       	ldd	r23, Y+19	; 0x13
    138c:	8c 89       	ldd	r24, Y+20	; 0x14
    138e:	9d 89       	ldd	r25, Y+21	; 0x15
    1390:	0e 94 f0 0a 	call	0x15e0	; 0x15e0 <__cmpsf2>
    1394:	88 23       	and	r24, r24
    1396:	2c f4       	brge	.+10     	; 0x13a2 <.L90>

00001398 <.Loc.312>:
		__ticks = 1;
    1398:	81 e0       	ldi	r24, 0x01	; 1
    139a:	90 e0       	ldi	r25, 0x00	; 0
    139c:	9f 8b       	std	Y+23, r25	; 0x17
    139e:	8e 8b       	std	Y+22, r24	; 0x16
    13a0:	57 c0       	rjmp	.+174    	; 0x1450 <.L74>

000013a2 <.L90>:
	else if (__tmp > 65535)
    13a2:	20 e0       	ldi	r18, 0x00	; 0
    13a4:	3f ef       	ldi	r19, 0xFF	; 255
    13a6:	4f e7       	ldi	r20, 0x7F	; 127
    13a8:	57 e4       	ldi	r21, 0x47	; 71
    13aa:	6a 89       	ldd	r22, Y+18	; 0x12
    13ac:	7b 89       	ldd	r23, Y+19	; 0x13
    13ae:	8c 89       	ldd	r24, Y+20	; 0x14
    13b0:	9d 89       	ldd	r25, Y+21	; 0x15
    13b2:	0e 94 4f 0c 	call	0x189e	; 0x189e <__gesf2>
    13b6:	88 23       	and	r24, r24
    13b8:	d9 f1       	breq	.+118    	; 0x1430 <.L91>
    13ba:	d4 f1       	brlt	.+116    	; 0x1430 <.L91>

000013bc <.Loc.314>:
		__ticks = (uint16_t) (__ms * 10.0);
    13bc:	20 e0       	ldi	r18, 0x00	; 0
    13be:	30 e0       	ldi	r19, 0x00	; 0
    13c0:	40 e2       	ldi	r20, 0x20	; 32
    13c2:	51 e4       	ldi	r21, 0x41	; 65
    13c4:	6e 85       	ldd	r22, Y+14	; 0x0e
    13c6:	7f 85       	ldd	r23, Y+15	; 0x0f
    13c8:	88 89       	ldd	r24, Y+16	; 0x10
    13ca:	99 89       	ldd	r25, Y+17	; 0x11
    13cc:	0e 94 54 0c 	call	0x18a8	; 0x18a8 <__mulsf3>
    13d0:	6d ab       	std	Y+53, r22	; 0x35
    13d2:	7e ab       	std	Y+54, r23	; 0x36
    13d4:	8f ab       	std	Y+55, r24	; 0x37
    13d6:	98 af       	std	Y+56, r25	; 0x38
    13d8:	8d a9       	ldd	r24, Y+53	; 0x35
    13da:	9e a9       	ldd	r25, Y+54	; 0x36
    13dc:	af a9       	ldd	r26, Y+55	; 0x37
    13de:	b8 ad       	ldd	r27, Y+56	; 0x38
    13e0:	89 a3       	std	Y+33, r24	; 0x21
    13e2:	9a a3       	std	Y+34, r25	; 0x22
    13e4:	ab a3       	std	Y+35, r26	; 0x23
    13e6:	bc a3       	std	Y+36, r27	; 0x24

000013e8 <.Loc.315>:
    13e8:	69 a1       	ldd	r22, Y+33	; 0x21
    13ea:	7a a1       	ldd	r23, Y+34	; 0x22
    13ec:	8b a1       	ldd	r24, Y+35	; 0x23
    13ee:	9c a1       	ldd	r25, Y+36	; 0x24
    13f0:	0e 94 6e 0b 	call	0x16dc	; 0x16dc <__fixunssfsi>
    13f4:	69 af       	std	Y+57, r22	; 0x39
    13f6:	7a af       	std	Y+58, r23	; 0x3a
    13f8:	8b af       	std	Y+59, r24	; 0x3b
    13fa:	9c af       	std	Y+60, r25	; 0x3c
    13fc:	a9 ad       	ldd	r26, Y+57	; 0x39
    13fe:	ba ad       	ldd	r27, Y+58	; 0x3a
    1400:	bf 8b       	std	Y+23, r27	; 0x17
    1402:	ae 8b       	std	Y+22, r26	; 0x16

00001404 <.Loc.316>:
		while(__ticks)
    1404:	10 c0       	rjmp	.+32     	; 0x1426 <.L77>

00001406 <.L78>:
    1406:	80 e9       	ldi	r24, 0x90	; 144
    1408:	91 e0       	ldi	r25, 0x01	; 1
    140a:	99 8f       	std	Y+25, r25	; 0x19
    140c:	88 8f       	std	Y+24, r24	; 0x18

0000140e <.LBB46>:
    140e:	88 8d       	ldd	r24, Y+24	; 0x18
    1410:	99 8d       	ldd	r25, Y+25	; 0x19

00001412 <.L1^B3>:
    1412:	01 97       	sbiw	r24, 0x01	; 1
    1414:	f1 f7       	brne	.-4      	; 0x1412 <.L1^B3>
    1416:	99 8f       	std	Y+25, r25	; 0x19
    1418:	88 8f       	std	Y+24, r24	; 0x18

0000141a <.Loc.318>:
	...

0000141c <.LBE46>:
			__ticks --;
    141c:	8e 89       	ldd	r24, Y+22	; 0x16
    141e:	9f 89       	ldd	r25, Y+23	; 0x17
    1420:	01 97       	sbiw	r24, 0x01	; 1
    1422:	9f 8b       	std	Y+23, r25	; 0x17
    1424:	8e 8b       	std	Y+22, r24	; 0x16

00001426 <.L77>:
		while(__ticks)
    1426:	8e 89       	ldd	r24, Y+22	; 0x16
    1428:	9f 89       	ldd	r25, Y+23	; 0x17
    142a:	00 97       	sbiw	r24, 0x00	; 0
    142c:	61 f7       	brne	.-40     	; 0x1406 <.L78>

0000142e <.Loc.321>:
		return;
    142e:	56 c0       	rjmp	.+172    	; 0x14dc <.L69>

00001430 <.L91>:
		__ticks = (uint16_t)__tmp;
    1430:	6a 89       	ldd	r22, Y+18	; 0x12
    1432:	7b 89       	ldd	r23, Y+19	; 0x13
    1434:	8c 89       	ldd	r24, Y+20	; 0x14
    1436:	9d 89       	ldd	r25, Y+21	; 0x15
    1438:	0e 94 6e 0b 	call	0x16dc	; 0x16dc <__fixunssfsi>
    143c:	21 96       	adiw	r28, 0x01	; 1
    143e:	6c af       	std	Y+60, r22	; 0x3c
    1440:	7d af       	std	Y+61, r23	; 0x3d
    1442:	8e af       	std	Y+62, r24	; 0x3e
    1444:	9f af       	std	Y+63, r25	; 0x3f
    1446:	21 97       	sbiw	r28, 0x01	; 1
    1448:	ed ad       	ldd	r30, Y+61	; 0x3d
    144a:	fe ad       	ldd	r31, Y+62	; 0x3e
    144c:	ff 8b       	std	Y+23, r31	; 0x17
    144e:	ee 8b       	std	Y+22, r30	; 0x16

00001450 <.L74>:
    1450:	8e 89       	ldd	r24, Y+22	; 0x16
    1452:	9f 89       	ldd	r25, Y+23	; 0x17
    1454:	9b 8f       	std	Y+27, r25	; 0x1b
    1456:	8a 8f       	std	Y+26, r24	; 0x1a

00001458 <.LBB48>:
    1458:	8a 8d       	ldd	r24, Y+26	; 0x1a
    145a:	9b 8d       	ldd	r25, Y+27	; 0x1b

0000145c <.L1^B4>:
    145c:	01 97       	sbiw	r24, 0x01	; 1
    145e:	f1 f7       	brne	.-4      	; 0x145c <.L1^B4>
    1460:	9b 8f       	std	Y+27, r25	; 0x1b
    1462:	8a 8f       	std	Y+26, r24	; 0x1a

00001464 <.Loc.324>:
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
#endif /* __AVR_TINY__ */
}
    1464:	3b c0       	rjmp	.+118    	; 0x14dc <.L69>

00001466 <.L89>:
	}
	else if (__tmp > 255)
    1466:	20 e0       	ldi	r18, 0x00	; 0
    1468:	30 e0       	ldi	r19, 0x00	; 0
    146a:	4f e7       	ldi	r20, 0x7F	; 127
    146c:	53 e4       	ldi	r21, 0x43	; 67
    146e:	6d 81       	ldd	r22, Y+5	; 0x05
    1470:	7e 81       	ldd	r23, Y+6	; 0x06
    1472:	8f 81       	ldd	r24, Y+7	; 0x07
    1474:	98 85       	ldd	r25, Y+8	; 0x08
    1476:	0e 94 4f 0c 	call	0x189e	; 0x189e <__gesf2>
    147a:	88 23       	and	r24, r24
    147c:	f9 f0       	breq	.+62     	; 0x14bc <.L92>
    147e:	f4 f0       	brlt	.+60     	; 0x14bc <.L92>

00001480 <.LBB50>:
	{
		uint16_t __ticks=(uint16_t)__tmp2;
    1480:	69 85       	ldd	r22, Y+9	; 0x09
    1482:	7a 85       	ldd	r23, Y+10	; 0x0a
    1484:	8b 85       	ldd	r24, Y+11	; 0x0b
    1486:	9c 85       	ldd	r25, Y+12	; 0x0c
    1488:	0e 94 6e 0b 	call	0x16dc	; 0x16dc <__fixunssfsi>
    148c:	25 96       	adiw	r28, 0x05	; 5
    148e:	6c af       	std	Y+60, r22	; 0x3c
    1490:	7d af       	std	Y+61, r23	; 0x3d
    1492:	8e af       	std	Y+62, r24	; 0x3e
    1494:	9f af       	std	Y+63, r25	; 0x3f
    1496:	25 97       	sbiw	r28, 0x05	; 5
    1498:	23 96       	adiw	r28, 0x03	; 3
    149a:	8e ad       	ldd	r24, Y+62	; 0x3e
    149c:	9f ad       	ldd	r25, Y+63	; 0x3f
    149e:	23 97       	sbiw	r28, 0x03	; 3
    14a0:	9d 8f       	std	Y+29, r25	; 0x1d
    14a2:	8c 8f       	std	Y+28, r24	; 0x1c
    14a4:	8c 8d       	ldd	r24, Y+28	; 0x1c
    14a6:	9d 8d       	ldd	r25, Y+29	; 0x1d
    14a8:	9f 8f       	std	Y+31, r25	; 0x1f
    14aa:	8e 8f       	std	Y+30, r24	; 0x1e

000014ac <.LBB51>:
	__asm__ volatile (
    14ac:	8e 8d       	ldd	r24, Y+30	; 0x1e
    14ae:	9f 8d       	ldd	r25, Y+31	; 0x1f

000014b0 <.L1^B5>:
    14b0:	01 97       	sbiw	r24, 0x01	; 1
    14b2:	f1 f7       	brne	.-4      	; 0x14b0 <.L1^B5>
    14b4:	9f 8f       	std	Y+31, r25	; 0x1f
    14b6:	8e 8f       	std	Y+30, r24	; 0x1e

000014b8 <.Loc.328>:
	...

000014ba <.LBE51>:
		_delay_loop_2(__ticks);
		return;
    14ba:	17 c0       	rjmp	.+46     	; 0x14ea <.L82>

000014bc <.L92>:
	}
	else
		__ticks = (uint8_t)__tmp;
    14bc:	6d 81       	ldd	r22, Y+5	; 0x05
    14be:	7e 81       	ldd	r23, Y+6	; 0x06
    14c0:	8f 81       	ldd	r24, Y+7	; 0x07
    14c2:	98 85       	ldd	r25, Y+8	; 0x08
    14c4:	0e 94 6e 0b 	call	0x16dc	; 0x16dc <__fixunssfsi>
    14c8:	29 96       	adiw	r28, 0x09	; 9
    14ca:	6c af       	std	Y+60, r22	; 0x3c
    14cc:	7d af       	std	Y+61, r23	; 0x3d
    14ce:	8e af       	std	Y+62, r24	; 0x3e
    14d0:	9f af       	std	Y+63, r25	; 0x3f
    14d2:	29 97       	sbiw	r28, 0x09	; 9
    14d4:	26 96       	adiw	r28, 0x06	; 6
    14d6:	9f ad       	ldd	r25, Y+63	; 0x3f
    14d8:	26 97       	sbiw	r28, 0x06	; 6
    14da:	9d 87       	std	Y+13, r25	; 0x0d

000014dc <.L69>:
    14dc:	8d 85       	ldd	r24, Y+13	; 0x0d
    14de:	88 a3       	std	Y+32, r24	; 0x20

000014e0 <.LBB53>:
	__asm__ volatile (
    14e0:	88 a1       	ldd	r24, Y+32	; 0x20

000014e2 <.L1^B6>:
    14e2:	8a 95       	dec	r24
    14e4:	f1 f7       	brne	.-4      	; 0x14e2 <.L1^B6>
    14e6:	88 a3       	std	Y+32, r24	; 0x20

000014e8 <.Loc.332>:
	...

000014ea <.L82>:
    _delay_us(10);
    UltraPort &= (~(1<<Voorultrasoontrig));
    14ea:	85 e2       	ldi	r24, 0x25	; 37
    14ec:	90 e0       	ldi	r25, 0x00	; 0
    14ee:	dc 01       	movw	r26, r24
    14f0:	2c 91       	ld	r18, X

000014f2 <.Loc.334>:
    14f2:	85 e2       	ldi	r24, 0x25	; 37
    14f4:	90 e0       	ldi	r25, 0x00	; 0

000014f6 <.Loc.335>:
    14f6:	2f 7d       	andi	r18, 0xDF	; 223
    14f8:	fc 01       	movw	r30, r24
    14fa:	20 83       	st	Z, r18

000014fc <.Loc.336>:
}
    14fc:	00 00       	nop
    14fe:	c8 5b       	subi	r28, 0xB8	; 184
    1500:	df 4f       	sbci	r29, 0xFF	; 255
    1502:	0f b6       	in	r0, 0x3f	; 63
    1504:	f8 94       	cli
    1506:	de bf       	out	0x3e, r29	; 62
    1508:	0f be       	out	0x3f, r0	; 63
    150a:	cd bf       	out	0x3d, r28	; 61
    150c:	df 91       	pop	r29
    150e:	cf 91       	pop	r28
    1510:	08 95       	ret

00001512 <__vector_15>:
ISR(TIMER2_OVF_vect){
    1512:	1f 92       	push	r1
    1514:	0f 92       	push	r0
    1516:	0f b6       	in	r0, 0x3f	; 63
    1518:	0f 92       	push	r0
    151a:	11 24       	eor	r1, r1
    151c:	8f 93       	push	r24
    151e:	9f 93       	push	r25
    1520:	cf 93       	push	r28
    1522:	df 93       	push	r29
    1524:	cd b7       	in	r28, 0x3d	; 61
    1526:	de b7       	in	r29, 0x3e	; 62

00001528 <.Loc.338>:
    count++;
    1528:	80 91 0e 02 	lds	r24, 0x020E	; 0x80020e <count>
    152c:	90 91 0f 02 	lds	r25, 0x020F	; 0x80020f <count+0x1>
    1530:	01 96       	adiw	r24, 0x01	; 1
    1532:	90 93 0f 02 	sts	0x020F, r25	; 0x80020f <count+0x1>
    1536:	80 93 0e 02 	sts	0x020E, r24	; 0x80020e <count>

0000153a <.Loc.339>:
}
    153a:	00 00       	nop
    153c:	df 91       	pop	r29
    153e:	cf 91       	pop	r28
    1540:	9f 91       	pop	r25
    1542:	8f 91       	pop	r24
    1544:	0f 90       	pop	r0
    1546:	0f be       	out	0x3f, r0	; 63
    1548:	0f 90       	pop	r0
    154a:	1f 90       	pop	r1
    154c:	18 95       	reti

0000154e <__divmodsi4>:
    154e:	05 2e       	mov	r0, r21

00001550 <.Loc.1>:
    1550:	97 fb       	bst	r25, 7

00001552 <.Loc.2>:
    1552:	1e f4       	brtc	.+6      	; 0x155a <.L^B1>

00001554 <.Loc.3>:
    1554:	00 94       	com	r0

00001556 <.Loc.4>:
    1556:	0e 94 be 0a 	call	0x157c	; 0x157c <__negsi2>

0000155a <.L^B1>:
    155a:	57 fd       	sbrc	r21, 7

0000155c <.Loc.6>:
    155c:	07 d0       	rcall	.+14     	; 0x156c <__divmodsi4_neg2>

0000155e <.Loc.7>:
    155e:	0e 94 ce 0a 	call	0x159c	; 0x159c <__udivmodsi4>

00001562 <.Loc.8>:
    1562:	07 fc       	sbrc	r0, 7

00001564 <.Loc.9>:
    1564:	03 d0       	rcall	.+6      	; 0x156c <__divmodsi4_neg2>

00001566 <.Loc.10>:
    1566:	4e f4       	brtc	.+18     	; 0x157a <__divmodsi4_exit>

00001568 <.Loc.11>:
    1568:	0c 94 be 0a 	jmp	0x157c	; 0x157c <__negsi2>

0000156c <__divmodsi4_neg2>:
    156c:	50 95       	com	r21

0000156e <.Loc.13>:
    156e:	40 95       	com	r20

00001570 <.Loc.14>:
    1570:	30 95       	com	r19

00001572 <.Loc.15>:
    1572:	21 95       	neg	r18

00001574 <.Loc.16>:
    1574:	3f 4f       	sbci	r19, 0xFF	; 255

00001576 <.Loc.17>:
    1576:	4f 4f       	sbci	r20, 0xFF	; 255

00001578 <.Loc.18>:
    1578:	5f 4f       	sbci	r21, 0xFF	; 255

0000157a <__divmodsi4_exit>:
    157a:	08 95       	ret

0000157c <__negsi2>:
    157c:	90 95       	com	r25
    157e:	80 95       	com	r24
    1580:	70 95       	com	r23
    1582:	61 95       	neg	r22
    1584:	7f 4f       	sbci	r23, 0xFF	; 255
    1586:	8f 4f       	sbci	r24, 0xFF	; 255
    1588:	9f 4f       	sbci	r25, 0xFF	; 255

0000158a <.Loc.1>:
    158a:	08 95       	ret

0000158c <__tablejump2__>:
    158c:	ee 0f       	add	r30, r30

0000158e <.Loc.1>:
    158e:	ff 1f       	adc	r31, r31

00001590 <.Loc.2>:
    1590:	88 1f       	adc	r24, r24

00001592 <.Loc.3>:
    1592:	8b bf       	out	0x3b, r24	; 59

00001594 <.Loc.4>:
    1594:	07 90       	elpm	r0, Z+

00001596 <.Loc.5>:
    1596:	f6 91       	elpm	r31, Z

00001598 <.Loc.6>:
    1598:	e0 2d       	mov	r30, r0

0000159a <.Loc.7>:
    159a:	19 94       	eijmp

0000159c <__udivmodsi4>:
    159c:	a1 e2       	ldi	r26, 0x21	; 33

0000159e <.Loc.1>:
    159e:	1a 2e       	mov	r1, r26

000015a0 <.Loc.2>:
    15a0:	aa 1b       	sub	r26, r26

000015a2 <.Loc.3>:
    15a2:	bb 1b       	sub	r27, r27

000015a4 <.Loc.4>:
    15a4:	fd 01       	movw	r30, r26

000015a6 <.Loc.5>:
    15a6:	0d c0       	rjmp	.+26     	; 0x15c2 <__udivmodsi4_ep>

000015a8 <__udivmodsi4_loop>:
    15a8:	aa 1f       	adc	r26, r26

000015aa <.Loc.7>:
    15aa:	bb 1f       	adc	r27, r27

000015ac <.Loc.8>:
    15ac:	ee 1f       	adc	r30, r30

000015ae <.Loc.9>:
    15ae:	ff 1f       	adc	r31, r31

000015b0 <.Loc.10>:
    15b0:	a2 17       	cp	r26, r18

000015b2 <.Loc.11>:
    15b2:	b3 07       	cpc	r27, r19

000015b4 <.Loc.12>:
    15b4:	e4 07       	cpc	r30, r20

000015b6 <.Loc.13>:
    15b6:	f5 07       	cpc	r31, r21

000015b8 <.Loc.14>:
    15b8:	20 f0       	brcs	.+8      	; 0x15c2 <__udivmodsi4_ep>

000015ba <.Loc.15>:
    15ba:	a2 1b       	sub	r26, r18

000015bc <.Loc.16>:
    15bc:	b3 0b       	sbc	r27, r19

000015be <.Loc.17>:
    15be:	e4 0b       	sbc	r30, r20

000015c0 <.Loc.18>:
    15c0:	f5 0b       	sbc	r31, r21

000015c2 <__udivmodsi4_ep>:
    15c2:	66 1f       	adc	r22, r22

000015c4 <.Loc.20>:
    15c4:	77 1f       	adc	r23, r23

000015c6 <.Loc.21>:
    15c6:	88 1f       	adc	r24, r24

000015c8 <.Loc.22>:
    15c8:	99 1f       	adc	r25, r25

000015ca <.Loc.23>:
    15ca:	1a 94       	dec	r1

000015cc <.Loc.24>:
    15cc:	69 f7       	brne	.-38     	; 0x15a8 <__udivmodsi4_loop>

000015ce <.Loc.25>:
    15ce:	60 95       	com	r22

000015d0 <.Loc.26>:
    15d0:	70 95       	com	r23

000015d2 <.Loc.27>:
    15d2:	80 95       	com	r24

000015d4 <.Loc.28>:
    15d4:	90 95       	com	r25

000015d6 <.Loc.29>:
    15d6:	9b 01       	movw	r18, r22

000015d8 <.Loc.30>:
    15d8:	ac 01       	movw	r20, r24

000015da <.Loc.31>:
    15da:	bd 01       	movw	r22, r26

000015dc <.Loc.32>:
    15dc:	cf 01       	movw	r24, r30

000015de <.Loc.33>:
    15de:	08 95       	ret

000015e0 <__cmpsf2>:
    15e0:	0e 94 da 0b 	call	0x17b4	; 0x17b4 <__fp_cmp>
    15e4:	08 f4       	brcc	.+2      	; 0x15e8 <.L1^B1>
    15e6:	81 e0       	ldi	r24, 0x01	; 1

000015e8 <.L1^B1>:
    15e8:	08 95       	ret

000015ea <__divsf3>:
    15ea:	0e 94 09 0b 	call	0x1612	; 0x1612 <__divsf3x>
    15ee:	0c 94 15 0c 	jmp	0x182a	; 0x182a <__fp_round>

000015f2 <.L^B1>:
    15f2:	0e 94 0e 0c 	call	0x181c	; 0x181c <__fp_pscB>
    15f6:	58 f0       	brcs	.+22     	; 0x160e <.L_nan>
    15f8:	0e 94 07 0c 	call	0x180e	; 0x180e <__fp_pscA>
    15fc:	40 f0       	brcs	.+16     	; 0x160e <.L_nan>
    15fe:	29 f4       	brne	.+10     	; 0x160a <.L_zr>
    1600:	5f 3f       	cpi	r21, 0xFF	; 255
    1602:	29 f0       	breq	.+10     	; 0x160e <.L_nan>

00001604 <.L_inf>:
    1604:	0c 94 fe 0b 	jmp	0x17fc	; 0x17fc <__fp_inf>

00001608 <.L1^B1>:
    1608:	51 11       	cpse	r21, r1

0000160a <.L_zr>:
    160a:	0c 94 49 0c 	jmp	0x1892	; 0x1892 <__fp_szero>

0000160e <.L_nan>:
    160e:	0c 94 04 0c 	jmp	0x1808	; 0x1808 <__fp_nan>

00001612 <__divsf3x>:
    1612:	0e 94 26 0c 	call	0x184c	; 0x184c <__fp_split3>
    1616:	68 f3       	brcs	.-38     	; 0x15f2 <.L^B1>

00001618 <__divsf3_pse>:
    1618:	99 23       	and	r25, r25
    161a:	b1 f3       	breq	.-20     	; 0x1608 <.L1^B1>
    161c:	55 23       	and	r21, r21
    161e:	91 f3       	breq	.-28     	; 0x1604 <.L_inf>
    1620:	95 1b       	sub	r25, r21
    1622:	55 0b       	sbc	r21, r21
    1624:	bb 27       	eor	r27, r27
    1626:	aa 27       	eor	r26, r26

00001628 <.L2^B1>:
    1628:	62 17       	cp	r22, r18
    162a:	73 07       	cpc	r23, r19
    162c:	84 07       	cpc	r24, r20
    162e:	38 f0       	brcs	.+14     	; 0x163e <.L3^B1>
    1630:	9f 5f       	subi	r25, 0xFF	; 255
    1632:	5f 4f       	sbci	r21, 0xFF	; 255
    1634:	22 0f       	add	r18, r18
    1636:	33 1f       	adc	r19, r19
    1638:	44 1f       	adc	r20, r20
    163a:	aa 1f       	adc	r26, r26
    163c:	a9 f3       	breq	.-22     	; 0x1628 <.L2^B1>

0000163e <.L3^B1>:
    163e:	35 d0       	rcall	.+106    	; 0x16aa <.L_div>
    1640:	0e 2e       	mov	r0, r30
    1642:	3a f0       	brmi	.+14     	; 0x1652 <.L5^B1>

00001644 <.L4^B1>:
    1644:	e0 e8       	ldi	r30, 0x80	; 128
    1646:	32 d0       	rcall	.+100    	; 0x16ac <.L_div1>
    1648:	91 50       	subi	r25, 0x01	; 1
    164a:	50 40       	sbci	r21, 0x00	; 0
    164c:	e6 95       	lsr	r30
    164e:	00 1c       	adc	r0, r0
    1650:	ca f7       	brpl	.-14     	; 0x1644 <.L4^B1>

00001652 <.L5^B1>:
    1652:	2b d0       	rcall	.+86     	; 0x16aa <.L_div>
    1654:	fe 2f       	mov	r31, r30
    1656:	29 d0       	rcall	.+82     	; 0x16aa <.L_div>
    1658:	66 0f       	add	r22, r22
    165a:	77 1f       	adc	r23, r23
    165c:	88 1f       	adc	r24, r24
    165e:	bb 1f       	adc	r27, r27
    1660:	26 17       	cp	r18, r22
    1662:	37 07       	cpc	r19, r23
    1664:	48 07       	cpc	r20, r24
    1666:	ab 07       	cpc	r26, r27
    1668:	b0 e8       	ldi	r27, 0x80	; 128
    166a:	09 f0       	breq	.+2      	; 0x166e <.L4^B2>
    166c:	bb 0b       	sbc	r27, r27

0000166e <.L4^B2>:
    166e:	80 2d       	mov	r24, r0
    1670:	bf 01       	movw	r22, r30
    1672:	ff 27       	eor	r31, r31
    1674:	93 58       	subi	r25, 0x83	; 131
    1676:	5f 4f       	sbci	r21, 0xFF	; 255
    1678:	3a f0       	brmi	.+14     	; 0x1688 <.L13^B1>
    167a:	9e 3f       	cpi	r25, 0xFE	; 254
    167c:	51 05       	cpc	r21, r1
    167e:	78 f0       	brcs	.+30     	; 0x169e <.L15^B1>
    1680:	0c 94 fe 0b 	jmp	0x17fc	; 0x17fc <__fp_inf>

00001684 <.L12^B1>:
    1684:	0c 94 49 0c 	jmp	0x1892	; 0x1892 <__fp_szero>

00001688 <.L13^B1>:
    1688:	5f 3f       	cpi	r21, 0xFF	; 255
    168a:	e4 f3       	brlt	.-8      	; 0x1684 <.L12^B1>
    168c:	98 3e       	cpi	r25, 0xE8	; 232
    168e:	d4 f3       	brlt	.-12     	; 0x1684 <.L12^B1>

00001690 <.L14^B1>:
    1690:	86 95       	lsr	r24
    1692:	77 95       	ror	r23
    1694:	67 95       	ror	r22
    1696:	b7 95       	ror	r27
    1698:	f7 95       	ror	r31
    169a:	9f 5f       	subi	r25, 0xFF	; 255
    169c:	c9 f7       	brne	.-14     	; 0x1690 <.L14^B1>

0000169e <.L15^B1>:
    169e:	88 0f       	add	r24, r24
    16a0:	91 1d       	adc	r25, r1
    16a2:	96 95       	lsr	r25
    16a4:	87 95       	ror	r24
    16a6:	97 f9       	bld	r25, 7
    16a8:	08 95       	ret

000016aa <.L_div>:
    16aa:	e1 e0       	ldi	r30, 0x01	; 1

000016ac <.L_div1>:
    16ac:	66 0f       	add	r22, r22
    16ae:	77 1f       	adc	r23, r23
    16b0:	88 1f       	adc	r24, r24
    16b2:	bb 1f       	adc	r27, r27
    16b4:	62 17       	cp	r22, r18
    16b6:	73 07       	cpc	r23, r19
    16b8:	84 07       	cpc	r24, r20
    16ba:	ba 07       	cpc	r27, r26
    16bc:	20 f0       	brcs	.+8      	; 0x16c6 <.L2^B2>
    16be:	62 1b       	sub	r22, r18
    16c0:	73 0b       	sbc	r23, r19
    16c2:	84 0b       	sbc	r24, r20
    16c4:	ba 0b       	sbc	r27, r26

000016c6 <.L2^B2>:
    16c6:	ee 1f       	adc	r30, r30
    16c8:	88 f7       	brcc	.-30     	; 0x16ac <.L_div1>
    16ca:	e0 95       	com	r30
    16cc:	08 95       	ret

000016ce <__fixsfsi>:
    16ce:	0e 94 6e 0b 	call	0x16dc	; 0x16dc <__fixunssfsi>
    16d2:	68 94       	set
    16d4:	b1 11       	cpse	r27, r1
    16d6:	0c 94 49 0c 	jmp	0x1892	; 0x1892 <__fp_szero>
    16da:	08 95       	ret

000016dc <__fixunssfsi>:
    16dc:	0e 94 2e 0c 	call	0x185c	; 0x185c <__fp_splitA>
    16e0:	88 f0       	brcs	.+34     	; 0x1704 <.L_err>
    16e2:	9f 57       	subi	r25, 0x7F	; 127
    16e4:	98 f0       	brcs	.+38     	; 0x170c <.L_zr>
    16e6:	b9 2f       	mov	r27, r25
    16e8:	99 27       	eor	r25, r25
    16ea:	b7 51       	subi	r27, 0x17	; 23
    16ec:	b0 f0       	brcs	.+44     	; 0x171a <.L4^B1>
    16ee:	e1 f0       	breq	.+56     	; 0x1728 <.L_sign>

000016f0 <.L1^B1>:
    16f0:	66 0f       	add	r22, r22
    16f2:	77 1f       	adc	r23, r23
    16f4:	88 1f       	adc	r24, r24
    16f6:	99 1f       	adc	r25, r25
    16f8:	1a f0       	brmi	.+6      	; 0x1700 <.L2^B1>
    16fa:	ba 95       	dec	r27
    16fc:	c9 f7       	brne	.-14     	; 0x16f0 <.L1^B1>
    16fe:	14 c0       	rjmp	.+40     	; 0x1728 <.L_sign>

00001700 <.L2^B1>:
    1700:	b1 30       	cpi	r27, 0x01	; 1
    1702:	91 f0       	breq	.+36     	; 0x1728 <.L_sign>

00001704 <.L_err>:
    1704:	0e 94 48 0c 	call	0x1890	; 0x1890 <__fp_zero>
    1708:	b1 e0       	ldi	r27, 0x01	; 1
    170a:	08 95       	ret

0000170c <.L_zr>:
    170c:	0c 94 48 0c 	jmp	0x1890	; 0x1890 <__fp_zero>

00001710 <.L3^B1>:
    1710:	67 2f       	mov	r22, r23
    1712:	78 2f       	mov	r23, r24
    1714:	88 27       	eor	r24, r24
    1716:	b8 5f       	subi	r27, 0xF8	; 248
    1718:	39 f0       	breq	.+14     	; 0x1728 <.L_sign>

0000171a <.L4^B1>:
    171a:	b9 3f       	cpi	r27, 0xF9	; 249
    171c:	cc f3       	brlt	.-14     	; 0x1710 <.L3^B1>

0000171e <.L5^B1>:
    171e:	86 95       	lsr	r24
    1720:	77 95       	ror	r23
    1722:	67 95       	ror	r22
    1724:	b3 95       	inc	r27
    1726:	d9 f7       	brne	.-10     	; 0x171e <.L5^B1>

00001728 <.L_sign>:
    1728:	3e f4       	brtc	.+14     	; 0x1738 <.L6^B1>
    172a:	90 95       	com	r25
    172c:	80 95       	com	r24
    172e:	70 95       	com	r23
    1730:	61 95       	neg	r22
    1732:	7f 4f       	sbci	r23, 0xFF	; 255
    1734:	8f 4f       	sbci	r24, 0xFF	; 255
    1736:	9f 4f       	sbci	r25, 0xFF	; 255

00001738 <.L6^B1>:
    1738:	08 95       	ret

0000173a <__floatunsisf>:
    173a:	e8 94       	clt
    173c:	09 c0       	rjmp	.+18     	; 0x1750 <.L1^B1>

0000173e <__floatsisf>:
    173e:	97 fb       	bst	r25, 7
    1740:	3e f4       	brtc	.+14     	; 0x1750 <.L1^B1>
    1742:	90 95       	com	r25
    1744:	80 95       	com	r24
    1746:	70 95       	com	r23
    1748:	61 95       	neg	r22
    174a:	7f 4f       	sbci	r23, 0xFF	; 255
    174c:	8f 4f       	sbci	r24, 0xFF	; 255
    174e:	9f 4f       	sbci	r25, 0xFF	; 255

00001750 <.L1^B1>:
    1750:	99 23       	and	r25, r25
    1752:	a9 f0       	breq	.+42     	; 0x177e <.L4^B1>
    1754:	f9 2f       	mov	r31, r25
    1756:	96 e9       	ldi	r25, 0x96	; 150
    1758:	bb 27       	eor	r27, r27

0000175a <.L2^B1>:
    175a:	93 95       	inc	r25
    175c:	f6 95       	lsr	r31
    175e:	87 95       	ror	r24
    1760:	77 95       	ror	r23
    1762:	67 95       	ror	r22
    1764:	b7 95       	ror	r27
    1766:	f1 11       	cpse	r31, r1
    1768:	f8 cf       	rjmp	.-16     	; 0x175a <.L2^B1>
    176a:	fa f4       	brpl	.+62     	; 0x17aa <.L_pack>
    176c:	bb 0f       	add	r27, r27
    176e:	11 f4       	brne	.+4      	; 0x1774 <.L3^B1>
    1770:	60 ff       	sbrs	r22, 0
    1772:	1b c0       	rjmp	.+54     	; 0x17aa <.L_pack>

00001774 <.L3^B1>:
    1774:	6f 5f       	subi	r22, 0xFF	; 255
    1776:	7f 4f       	sbci	r23, 0xFF	; 255
    1778:	8f 4f       	sbci	r24, 0xFF	; 255
    177a:	9f 4f       	sbci	r25, 0xFF	; 255
    177c:	16 c0       	rjmp	.+44     	; 0x17aa <.L_pack>

0000177e <.L4^B1>:
    177e:	88 23       	and	r24, r24
    1780:	11 f0       	breq	.+4      	; 0x1786 <.L5^B1>
    1782:	96 e9       	ldi	r25, 0x96	; 150
    1784:	11 c0       	rjmp	.+34     	; 0x17a8 <.L8^B1>

00001786 <.L5^B1>:
    1786:	77 23       	and	r23, r23
    1788:	21 f0       	breq	.+8      	; 0x1792 <.L6^B1>
    178a:	9e e8       	ldi	r25, 0x8E	; 142
    178c:	87 2f       	mov	r24, r23
    178e:	76 2f       	mov	r23, r22
    1790:	05 c0       	rjmp	.+10     	; 0x179c <.L7^B1>

00001792 <.L6^B1>:
    1792:	66 23       	and	r22, r22
    1794:	71 f0       	breq	.+28     	; 0x17b2 <.L9^B1>
    1796:	96 e8       	ldi	r25, 0x86	; 134
    1798:	86 2f       	mov	r24, r22
    179a:	70 e0       	ldi	r23, 0x00	; 0

0000179c <.L7^B1>:
    179c:	60 e0       	ldi	r22, 0x00	; 0
    179e:	2a f0       	brmi	.+10     	; 0x17aa <.L_pack>

000017a0 <.L10^B1>:
    17a0:	9a 95       	dec	r25
    17a2:	66 0f       	add	r22, r22
    17a4:	77 1f       	adc	r23, r23
    17a6:	88 1f       	adc	r24, r24

000017a8 <.L8^B1>:
    17a8:	da f7       	brpl	.-10     	; 0x17a0 <.L10^B1>

000017aa <.L_pack>:
    17aa:	88 0f       	add	r24, r24
    17ac:	96 95       	lsr	r25
    17ae:	87 95       	ror	r24
    17b0:	97 f9       	bld	r25, 7

000017b2 <.L9^B1>:
    17b2:	08 95       	ret

000017b4 <__fp_cmp>:
    17b4:	99 0f       	add	r25, r25
    17b6:	00 08       	sbc	r0, r0
    17b8:	55 0f       	add	r21, r21
    17ba:	aa 0b       	sbc	r26, r26
    17bc:	e0 e8       	ldi	r30, 0x80	; 128
    17be:	fe ef       	ldi	r31, 0xFE	; 254
    17c0:	16 16       	cp	r1, r22
    17c2:	17 06       	cpc	r1, r23
    17c4:	e8 07       	cpc	r30, r24
    17c6:	f9 07       	cpc	r31, r25
    17c8:	c0 f0       	brcs	.+48     	; 0x17fa <.L9^B1>
    17ca:	12 16       	cp	r1, r18
    17cc:	13 06       	cpc	r1, r19
    17ce:	e4 07       	cpc	r30, r20
    17d0:	f5 07       	cpc	r31, r21
    17d2:	98 f0       	brcs	.+38     	; 0x17fa <.L9^B1>
    17d4:	62 1b       	sub	r22, r18
    17d6:	73 0b       	sbc	r23, r19
    17d8:	84 0b       	sbc	r24, r20
    17da:	95 0b       	sbc	r25, r21
    17dc:	39 f4       	brne	.+14     	; 0x17ec <.L1^B1>
    17de:	0a 26       	eor	r0, r26
    17e0:	61 f0       	breq	.+24     	; 0x17fa <.L9^B1>
    17e2:	23 2b       	or	r18, r19
    17e4:	24 2b       	or	r18, r20
    17e6:	25 2b       	or	r18, r21
    17e8:	21 f4       	brne	.+8      	; 0x17f2 <.L2^B1>
    17ea:	08 95       	ret

000017ec <.L1^B1>:
    17ec:	0a 26       	eor	r0, r26
    17ee:	09 f4       	brne	.+2      	; 0x17f2 <.L2^B1>
    17f0:	a1 40       	sbci	r26, 0x01	; 1

000017f2 <.L2^B1>:
    17f2:	a6 95       	lsr	r26
    17f4:	8f ef       	ldi	r24, 0xFF	; 255
    17f6:	81 1d       	adc	r24, r1
    17f8:	81 1d       	adc	r24, r1

000017fa <.L9^B1>:
    17fa:	08 95       	ret

000017fc <__fp_inf>:
    17fc:	97 f9       	bld	r25, 7
    17fe:	9f 67       	ori	r25, 0x7F	; 127
    1800:	80 e8       	ldi	r24, 0x80	; 128
    1802:	70 e0       	ldi	r23, 0x00	; 0
    1804:	60 e0       	ldi	r22, 0x00	; 0
    1806:	08 95       	ret

00001808 <__fp_nan>:
    1808:	9f ef       	ldi	r25, 0xFF	; 255
    180a:	80 ec       	ldi	r24, 0xC0	; 192
    180c:	08 95       	ret

0000180e <__fp_pscA>:
    180e:	00 24       	eor	r0, r0
    1810:	0a 94       	dec	r0
    1812:	16 16       	cp	r1, r22
    1814:	17 06       	cpc	r1, r23
    1816:	18 06       	cpc	r1, r24
    1818:	09 06       	cpc	r0, r25
    181a:	08 95       	ret

0000181c <__fp_pscB>:
    181c:	00 24       	eor	r0, r0
    181e:	0a 94       	dec	r0
    1820:	12 16       	cp	r1, r18
    1822:	13 06       	cpc	r1, r19
    1824:	14 06       	cpc	r1, r20
    1826:	05 06       	cpc	r0, r21
    1828:	08 95       	ret

0000182a <__fp_round>:
    182a:	09 2e       	mov	r0, r25
    182c:	03 94       	inc	r0
    182e:	00 0c       	add	r0, r0
    1830:	11 f4       	brne	.+4      	; 0x1836 <.L1^B1>
    1832:	88 23       	and	r24, r24
    1834:	52 f0       	brmi	.+20     	; 0x184a <.L3^B1>

00001836 <.L1^B1>:
    1836:	bb 0f       	add	r27, r27
    1838:	40 f4       	brcc	.+16     	; 0x184a <.L3^B1>
    183a:	bf 2b       	or	r27, r31
    183c:	11 f4       	brne	.+4      	; 0x1842 <.L2^B1>
    183e:	60 ff       	sbrs	r22, 0
    1840:	04 c0       	rjmp	.+8      	; 0x184a <.L3^B1>

00001842 <.L2^B1>:
    1842:	6f 5f       	subi	r22, 0xFF	; 255
    1844:	7f 4f       	sbci	r23, 0xFF	; 255
    1846:	8f 4f       	sbci	r24, 0xFF	; 255
    1848:	9f 4f       	sbci	r25, 0xFF	; 255

0000184a <.L3^B1>:
    184a:	08 95       	ret

0000184c <__fp_split3>:
    184c:	57 fd       	sbrc	r21, 7
    184e:	90 58       	subi	r25, 0x80	; 128
    1850:	44 0f       	add	r20, r20
    1852:	55 1f       	adc	r21, r21
    1854:	59 f0       	breq	.+22     	; 0x186c <.L4^B1>
    1856:	5f 3f       	cpi	r21, 0xFF	; 255
    1858:	71 f0       	breq	.+28     	; 0x1876 <.L5^B1>

0000185a <.L1^B1>:
    185a:	47 95       	ror	r20

0000185c <__fp_splitA>:
    185c:	88 0f       	add	r24, r24
    185e:	97 fb       	bst	r25, 7
    1860:	99 1f       	adc	r25, r25
    1862:	61 f0       	breq	.+24     	; 0x187c <.L6^B1>
    1864:	9f 3f       	cpi	r25, 0xFF	; 255
    1866:	79 f0       	breq	.+30     	; 0x1886 <.L7^B1>

00001868 <.L3^B1>:
    1868:	87 95       	ror	r24
    186a:	08 95       	ret

0000186c <.L4^B1>:
    186c:	12 16       	cp	r1, r18
    186e:	13 06       	cpc	r1, r19
    1870:	14 06       	cpc	r1, r20
    1872:	55 1f       	adc	r21, r21
    1874:	f2 cf       	rjmp	.-28     	; 0x185a <.L1^B1>

00001876 <.L5^B1>:
    1876:	46 95       	lsr	r20
    1878:	f1 df       	rcall	.-30     	; 0x185c <__fp_splitA>
    187a:	08 c0       	rjmp	.+16     	; 0x188c <.L8^B1>

0000187c <.L6^B1>:
    187c:	16 16       	cp	r1, r22
    187e:	17 06       	cpc	r1, r23
    1880:	18 06       	cpc	r1, r24
    1882:	99 1f       	adc	r25, r25
    1884:	f1 cf       	rjmp	.-30     	; 0x1868 <.L3^B1>

00001886 <.L7^B1>:
    1886:	86 95       	lsr	r24
    1888:	71 05       	cpc	r23, r1
    188a:	61 05       	cpc	r22, r1

0000188c <.L8^B1>:
    188c:	08 94       	sec
    188e:	08 95       	ret

00001890 <__fp_zero>:
    1890:	e8 94       	clt

00001892 <__fp_szero>:
    1892:	bb 27       	eor	r27, r27
    1894:	66 27       	eor	r22, r22
    1896:	77 27       	eor	r23, r23
    1898:	cb 01       	movw	r24, r22
    189a:	97 f9       	bld	r25, 7
    189c:	08 95       	ret

0000189e <__gesf2>:
    189e:	0e 94 da 0b 	call	0x17b4	; 0x17b4 <__fp_cmp>
    18a2:	08 f4       	brcc	.+2      	; 0x18a6 <.L1^B1>
    18a4:	8f ef       	ldi	r24, 0xFF	; 255

000018a6 <.L1^B1>:
    18a6:	08 95       	ret

000018a8 <__mulsf3>:
    18a8:	0e 94 67 0c 	call	0x18ce	; 0x18ce <__mulsf3x>
    18ac:	0c 94 15 0c 	jmp	0x182a	; 0x182a <__fp_round>

000018b0 <.L^B1>:
    18b0:	0e 94 07 0c 	call	0x180e	; 0x180e <__fp_pscA>
    18b4:	38 f0       	brcs	.+14     	; 0x18c4 <.L1^B1>
    18b6:	0e 94 0e 0c 	call	0x181c	; 0x181c <__fp_pscB>
    18ba:	20 f0       	brcs	.+8      	; 0x18c4 <.L1^B1>
    18bc:	95 23       	and	r25, r21
    18be:	11 f0       	breq	.+4      	; 0x18c4 <.L1^B1>
    18c0:	0c 94 fe 0b 	jmp	0x17fc	; 0x17fc <__fp_inf>

000018c4 <.L1^B1>:
    18c4:	0c 94 04 0c 	jmp	0x1808	; 0x1808 <__fp_nan>

000018c8 <.L2^B1>:
    18c8:	11 24       	eor	r1, r1
    18ca:	0c 94 49 0c 	jmp	0x1892	; 0x1892 <__fp_szero>

000018ce <__mulsf3x>:
    18ce:	0e 94 26 0c 	call	0x184c	; 0x184c <__fp_split3>
    18d2:	70 f3       	brcs	.-36     	; 0x18b0 <.L^B1>

000018d4 <__mulsf3_pse>:
    18d4:	95 9f       	mul	r25, r21
    18d6:	c1 f3       	breq	.-16     	; 0x18c8 <.L2^B1>
    18d8:	95 0f       	add	r25, r21
    18da:	50 e0       	ldi	r21, 0x00	; 0
    18dc:	55 1f       	adc	r21, r21
    18de:	62 9f       	mul	r22, r18
    18e0:	f0 01       	movw	r30, r0
    18e2:	72 9f       	mul	r23, r18
    18e4:	bb 27       	eor	r27, r27
    18e6:	f0 0d       	add	r31, r0
    18e8:	b1 1d       	adc	r27, r1
    18ea:	63 9f       	mul	r22, r19
    18ec:	aa 27       	eor	r26, r26
    18ee:	f0 0d       	add	r31, r0
    18f0:	b1 1d       	adc	r27, r1
    18f2:	aa 1f       	adc	r26, r26
    18f4:	64 9f       	mul	r22, r20
    18f6:	66 27       	eor	r22, r22
    18f8:	b0 0d       	add	r27, r0
    18fa:	a1 1d       	adc	r26, r1
    18fc:	66 1f       	adc	r22, r22
    18fe:	82 9f       	mul	r24, r18
    1900:	22 27       	eor	r18, r18
    1902:	b0 0d       	add	r27, r0
    1904:	a1 1d       	adc	r26, r1
    1906:	62 1f       	adc	r22, r18
    1908:	73 9f       	mul	r23, r19
    190a:	b0 0d       	add	r27, r0
    190c:	a1 1d       	adc	r26, r1
    190e:	62 1f       	adc	r22, r18
    1910:	83 9f       	mul	r24, r19
    1912:	a0 0d       	add	r26, r0
    1914:	61 1d       	adc	r22, r1
    1916:	22 1f       	adc	r18, r18
    1918:	74 9f       	mul	r23, r20
    191a:	33 27       	eor	r19, r19
    191c:	a0 0d       	add	r26, r0
    191e:	61 1d       	adc	r22, r1
    1920:	23 1f       	adc	r18, r19
    1922:	84 9f       	mul	r24, r20
    1924:	60 0d       	add	r22, r0
    1926:	21 1d       	adc	r18, r1
    1928:	82 2f       	mov	r24, r18
    192a:	76 2f       	mov	r23, r22
    192c:	6a 2f       	mov	r22, r26
    192e:	11 24       	eor	r1, r1
    1930:	9f 57       	subi	r25, 0x7F	; 127
    1932:	50 40       	sbci	r21, 0x00	; 0
    1934:	9a f0       	brmi	.+38     	; 0x195c <.L13^B1>
    1936:	f1 f0       	breq	.+60     	; 0x1974 <.L15^B1>

00001938 <.L10^B1>:
    1938:	88 23       	and	r24, r24
    193a:	4a f0       	brmi	.+18     	; 0x194e <.L11^B1>
    193c:	ee 0f       	add	r30, r30
    193e:	ff 1f       	adc	r31, r31
    1940:	bb 1f       	adc	r27, r27
    1942:	66 1f       	adc	r22, r22
    1944:	77 1f       	adc	r23, r23
    1946:	88 1f       	adc	r24, r24
    1948:	91 50       	subi	r25, 0x01	; 1
    194a:	50 40       	sbci	r21, 0x00	; 0
    194c:	a9 f7       	brne	.-22     	; 0x1938 <.L10^B1>

0000194e <.L11^B1>:
    194e:	9e 3f       	cpi	r25, 0xFE	; 254
    1950:	51 05       	cpc	r21, r1
    1952:	80 f0       	brcs	.+32     	; 0x1974 <.L15^B1>
    1954:	0c 94 fe 0b 	jmp	0x17fc	; 0x17fc <__fp_inf>

00001958 <.L12^B1>:
    1958:	0c 94 49 0c 	jmp	0x1892	; 0x1892 <__fp_szero>

0000195c <.L13^B1>:
    195c:	5f 3f       	cpi	r21, 0xFF	; 255
    195e:	e4 f3       	brlt	.-8      	; 0x1958 <.L12^B1>
    1960:	98 3e       	cpi	r25, 0xE8	; 232
    1962:	d4 f3       	brlt	.-12     	; 0x1958 <.L12^B1>

00001964 <.L14^B1>:
    1964:	86 95       	lsr	r24
    1966:	77 95       	ror	r23
    1968:	67 95       	ror	r22
    196a:	b7 95       	ror	r27
    196c:	f7 95       	ror	r31
    196e:	e7 95       	ror	r30
    1970:	9f 5f       	subi	r25, 0xFF	; 255
    1972:	c1 f7       	brne	.-16     	; 0x1964 <.L14^B1>

00001974 <.L15^B1>:
    1974:	fe 2b       	or	r31, r30
    1976:	88 0f       	add	r24, r24
    1978:	91 1d       	adc	r25, r1
    197a:	96 95       	lsr	r25
    197c:	87 95       	ror	r24
    197e:	97 f9       	bld	r25, 7
    1980:	08 95       	ret

00001982 <_exit>:
    1982:	f8 94       	cli

00001984 <__stop_program>:
    1984:	ff cf       	rjmp	.-2      	; 0x1984 <__stop_program>

00001986 <L0^A>:
    1986:	74 05       	cpc	r23, r4
    1988:	99 05       	cpc	r25, r9
    198a:	be 05       	cpc	r27, r14
    198c:	dd 05       	cpc	r29, r13
    198e:	12 06       	cpc	r1, r18
    1990:	48 06       	cpc	r4, r24
    1992:	77 06       	cpc	r7, r23
    1994:	b1 06       	cpc	r11, r17
    1996:	60 07       	cpc	r22, r16
    1998:	6d 07       	cpc	r22, r29
