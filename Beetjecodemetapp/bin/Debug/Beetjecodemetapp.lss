
bin\Debug\Beetjecodemetapp.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000020  00800200  0000229c  00002350  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000229c  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000010  00800220  00800220  00002370  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  00002370  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      00000012  00000000  00000000  00002373  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002388  2**2
                  CONTENTS, READONLY, OCTETS
  6 .debug_aranges 00000178  00000000  00000000  000023c8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_info   000017e4  00000000  00000000  00002540  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_abbrev 000010af  00000000  00000000  00003d24  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line   00001abf  00000000  00000000  00004dd3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_frame  00000488  00000000  00000000  00006894  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_str    00000746  00000000  00000000  00006d1c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_line_str 0000017a  00000000  00000000  00007462  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__ctors_end>
       4:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
       8:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
       c:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      10:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      14:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      18:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      1c:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      20:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      24:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      28:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      2c:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      30:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      34:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      38:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      3c:	0c 94 45 0d 	jmp	0x1a8a	; 0x1a8a <__vector_15>
      40:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      44:	0c 94 ca 03 	jmp	0x794	; 0x794 <__vector_17>
      48:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      4c:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      50:	0c 94 9f 03 	jmp	0x73e	; 0x73e <__vector_20>
      54:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      58:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      5c:	0c 94 45 04 	jmp	0x88a	; 0x88a <__vector_23>
      60:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      64:	0c 94 a9 00 	jmp	0x152	; 0x152 <__vector_25>
      68:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      6c:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      70:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      74:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      78:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      7c:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      80:	0c 94 1d 04 	jmp	0x83a	; 0x83a <__vector_32>
      84:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      88:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      8c:	0c 94 f2 03 	jmp	0x7e4	; 0x7e4 <__vector_35>
      90:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      94:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      98:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      9c:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      a0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      a4:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      a8:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      ac:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      b0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      b4:	0c 94 63 04 	jmp	0x8c6	; 0x8c6 <__vector_45>
      b8:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      bc:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      c0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      c4:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      c8:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      cc:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      d0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      d4:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      d8:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      dc:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
      e0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>

000000e4 <__trampolines_start>:
      e4:	0c 94 a7 06 	jmp	0xd4e	; 0xd4e <.L11>
      e8:	0c 94 8f 05 	jmp	0xb1e	; 0xb1e <.L17>
      ec:	0c 94 57 07 	jmp	0xeae	; 0xeae <.L10>
      f0:	0c 94 34 08 	jmp	0x1068	; 0x1068 <.L8>
      f4:	0c 94 6d 06 	jmp	0xcda	; 0xcda <.L12>
      f8:	0c 94 d3 05 	jmp	0xba6	; 0xba6 <.L15>
      fc:	0c 94 6a 05 	jmp	0xad4	; 0xad4 <.L18>
     100:	0c 94 b4 05 	jmp	0xb68	; 0xb68 <.L16>
     104:	0c 94 3e 06 	jmp	0xc7c	; 0xc7c <.L13>
     108:	0c 94 08 06 	jmp	0xc10	; 0xc10 <.L14>

0000010c <__ctors_end>:
     10c:	11 24       	eor	r1, r1
     10e:	1f be       	out	0x3f, r1	; 63
     110:	cf ef       	ldi	r28, 0xFF	; 255
     112:	d1 e2       	ldi	r29, 0x21	; 33
     114:	de bf       	out	0x3e, r29	; 62
     116:	cd bf       	out	0x3d, r28	; 61
     118:	00 e0       	ldi	r16, 0x00	; 0
     11a:	0c bf       	out	0x3c, r16	; 60

0000011c <__do_copy_data>:
     11c:	12 e0       	ldi	r17, 0x02	; 2

0000011e <.Loc.1>:
     11e:	a0 e0       	ldi	r26, 0x00	; 0

00000120 <.Loc.2>:
     120:	b2 e0       	ldi	r27, 0x02	; 2

00000122 <.Loc.3>:
     122:	ec e9       	ldi	r30, 0x9C	; 156

00000124 <.Loc.4>:
     124:	f2 e2       	ldi	r31, 0x22	; 34

00000126 <.Loc.5>:
     126:	00 e0       	ldi	r16, 0x00	; 0

00000128 <.Loc.6>:
     128:	0b bf       	out	0x3b, r16	; 59

0000012a <.Loc.7>:
     12a:	02 c0       	rjmp	.+4      	; 0x130 <.L__do_copy_data_start>

0000012c <.L__do_copy_data_loop>:
     12c:	07 90       	elpm	r0, Z+

0000012e <.Loc.9>:
     12e:	0d 92       	st	X+, r0

00000130 <.L__do_copy_data_start>:
     130:	a0 32       	cpi	r26, 0x20	; 32

00000132 <.Loc.11>:
     132:	b1 07       	cpc	r27, r17

00000134 <.Loc.12>:
     134:	d9 f7       	brne	.-10     	; 0x12c <.L__do_copy_data_loop>

00000136 <__do_clear_bss>:
     136:	22 e0       	ldi	r18, 0x02	; 2

00000138 <.Loc.1>:
     138:	a0 e2       	ldi	r26, 0x20	; 32

0000013a <.Loc.2>:
     13a:	b2 e0       	ldi	r27, 0x02	; 2

0000013c <.Loc.3>:
     13c:	01 c0       	rjmp	.+2      	; 0x140 <.Loc.5>

0000013e <.Loc.4>:
     13e:	1d 92       	st	X+, r1

00000140 <.Loc.5>:
     140:	a0 33       	cpi	r26, 0x30	; 48

00000142 <.Loc.6>:
     142:	b2 07       	cpc	r27, r18

00000144 <.Loc.7>:
     144:	e1 f7       	brne	.-8      	; 0x13e <.Loc.4>

00000146 <L0^A>:
     146:	0e 94 9d 04 	call	0x93a	; 0x93a <main>
     14a:	0c 94 42 11 	jmp	0x2284	; 0x2284 <_exit>

0000014e <__bad_interrupt>:
     14e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000152 <__vector_25>:
int Bluetooth_Getal = 0;//BLUETOOTH GETAL
int verandergetal = 0;//ONNODIG
int veranderandergetal = 0;//ONNODIG

ISR(USART0_RX_vect)
{
     152:	1f 92       	push	r1
     154:	0f 92       	push	r0
     156:	0f b6       	in	r0, 0x3f	; 63
     158:	0f 92       	push	r0
     15a:	11 24       	eor	r1, r1
     15c:	0b b6       	in	r0, 0x3b	; 59
     15e:	0f 92       	push	r0
     160:	8f 93       	push	r24
     162:	9f 93       	push	r25
     164:	ef 93       	push	r30
     166:	ff 93       	push	r31
     168:	cf 93       	push	r28
     16a:	df 93       	push	r29
     16c:	cd b7       	in	r28, 0x3d	; 61
     16e:	de b7       	in	r29, 0x3e	; 62

00000170 <.Loc.1>:
    Bluetooth_Getal = UDR0;
     170:	86 ec       	ldi	r24, 0xC6	; 198
     172:	90 e0       	ldi	r25, 0x00	; 0
     174:	fc 01       	movw	r30, r24
     176:	80 81       	ld	r24, Z
     178:	88 2f       	mov	r24, r24
     17a:	90 e0       	ldi	r25, 0x00	; 0

0000017c <.Loc.2>:
     17c:	90 93 21 02 	sts	0x0221, r25	; 0x800221 <Bluetooth_Getal+0x1>
     180:	80 93 20 02 	sts	0x0220, r24	; 0x800220 <Bluetooth_Getal>

00000184 <.Loc.3>:
    if (verandergetal == 0)//ONNODIG
     184:	80 91 22 02 	lds	r24, 0x0222	; 0x800222 <verandergetal>
     188:	90 91 23 02 	lds	r25, 0x0223	; 0x800223 <verandergetal+0x1>

0000018c <.Loc.4>:
     18c:	00 97       	sbiw	r24, 0x00	; 0
     18e:	51 f4       	brne	.+20     	; 0x1a4 <.L2>

00000190 <.Loc.5>:
    {//ONNODIG
        verandergetal++;//ONNODIG
     190:	80 91 22 02 	lds	r24, 0x0222	; 0x800222 <verandergetal>
     194:	90 91 23 02 	lds	r25, 0x0223	; 0x800223 <verandergetal+0x1>
     198:	01 96       	adiw	r24, 0x01	; 1
     19a:	90 93 23 02 	sts	0x0223, r25	; 0x800223 <verandergetal+0x1>
     19e:	80 93 22 02 	sts	0x0222, r24	; 0x800222 <verandergetal>

000001a2 <.Loc.6>:
    }//ONNODIG
    else//ONNODIG
    {//ONNODIG
        verandergetal = 0;//ONNODIG
    }//ONNODIG
}
     1a2:	04 c0       	rjmp	.+8      	; 0x1ac <.L4>

000001a4 <.L2>:
        verandergetal = 0;//ONNODIG
     1a4:	10 92 23 02 	sts	0x0223, r1	; 0x800223 <verandergetal+0x1>
     1a8:	10 92 22 02 	sts	0x0222, r1	; 0x800222 <verandergetal>

000001ac <.L4>:
}
     1ac:	00 00       	nop
     1ae:	df 91       	pop	r29
     1b0:	cf 91       	pop	r28
     1b2:	ff 91       	pop	r31
     1b4:	ef 91       	pop	r30
     1b6:	9f 91       	pop	r25
     1b8:	8f 91       	pop	r24
     1ba:	0f 90       	pop	r0
     1bc:	0b be       	out	0x3b, r0	; 59
     1be:	0f 90       	pop	r0
     1c0:	0f be       	out	0x3f, r0	; 63
     1c2:	0f 90       	pop	r0
     1c4:	1f 90       	pop	r1
     1c6:	18 95       	reti

000001c8 <initBluetooth>:

void initBluetooth(void)
{
     1c8:	cf 93       	push	r28
     1ca:	df 93       	push	r29
     1cc:	cd b7       	in	r28, 0x3d	; 61
     1ce:	de b7       	in	r29, 0x3e	; 62

000001d0 <.Loc.10>:
    //Bluetooth
    UBRR0H = (BRC >> 8);
     1d0:	85 ec       	ldi	r24, 0xC5	; 197
     1d2:	90 e0       	ldi	r25, 0x00	; 0

000001d4 <.Loc.11>:
     1d4:	fc 01       	movw	r30, r24
     1d6:	10 82       	st	Z, r1

000001d8 <.Loc.12>:
    UBRR0L = BRC;
     1d8:	84 ec       	ldi	r24, 0xC4	; 196
     1da:	90 e0       	ldi	r25, 0x00	; 0

000001dc <.Loc.13>:
     1dc:	27 e6       	ldi	r18, 0x67	; 103
     1de:	fc 01       	movw	r30, r24
     1e0:	20 83       	st	Z, r18

000001e2 <.Loc.14>:

    UCSR0B = (1 << RXEN0) |(1 << RXCIE0) |(1 << TXEN0) | (1 << TXCIE0);
     1e2:	81 ec       	ldi	r24, 0xC1	; 193
     1e4:	90 e0       	ldi	r25, 0x00	; 0

000001e6 <.Loc.15>:
     1e6:	28 ed       	ldi	r18, 0xD8	; 216
     1e8:	fc 01       	movw	r30, r24
     1ea:	20 83       	st	Z, r18

000001ec <.Loc.16>:
    UCSR0C = (1 << UCSZ01) | (1 << UCSZ00);
     1ec:	82 ec       	ldi	r24, 0xC2	; 194
     1ee:	90 e0       	ldi	r25, 0x00	; 0

000001f0 <.Loc.17>:
     1f0:	26 e0       	ldi	r18, 0x06	; 6
     1f2:	fc 01       	movw	r30, r24
     1f4:	20 83       	st	Z, r18

000001f6 <.Loc.18>:

    sei();
     1f6:	78 94       	sei

000001f8 <.Loc.19>:
}
     1f8:	00 00       	nop
     1fa:	df 91       	pop	r29
     1fc:	cf 91       	pop	r28
     1fe:	08 95       	ret

00000200 <rechtdoorrijden>:
volatile int timerteller = 0;
volatile int timertellerbak = 0;
volatile int bakvar = 0;

void rechtdoorrijden()
{
     200:	cf 93       	push	r28
     202:	df 93       	push	r29
     204:	cd b7       	in	r28, 0x3d	; 61
     206:	de b7       	in	r29, 0x3e	; 62

00000208 <.Loc.1>:
    PORT &= ~(1 << PIN11);
     208:	82 e2       	ldi	r24, 0x22	; 34
     20a:	90 e0       	ldi	r25, 0x00	; 0
     20c:	fc 01       	movw	r30, r24
     20e:	20 81       	ld	r18, Z

00000210 <.Loc.2>:
     210:	82 e2       	ldi	r24, 0x22	; 34
     212:	90 e0       	ldi	r25, 0x00	; 0

00000214 <.Loc.3>:
     214:	2f 7b       	andi	r18, 0xBF	; 191
     216:	fc 01       	movw	r30, r24
     218:	20 83       	st	Z, r18

0000021a <.Loc.4>:
    PORT |= (1 << PIN12);
     21a:	82 e2       	ldi	r24, 0x22	; 34
     21c:	90 e0       	ldi	r25, 0x00	; 0
     21e:	fc 01       	movw	r30, r24
     220:	20 81       	ld	r18, Z
     222:	82 e2       	ldi	r24, 0x22	; 34
     224:	90 e0       	ldi	r25, 0x00	; 0

00000226 <.Loc.5>:
     226:	20 62       	ori	r18, 0x20	; 32
     228:	fc 01       	movw	r30, r24
     22a:	20 83       	st	Z, r18

0000022c <.Loc.6>:
    PORT |= (1 << PIN21);
     22c:	82 e2       	ldi	r24, 0x22	; 34
     22e:	90 e0       	ldi	r25, 0x00	; 0
     230:	fc 01       	movw	r30, r24
     232:	20 81       	ld	r18, Z
     234:	82 e2       	ldi	r24, 0x22	; 34
     236:	90 e0       	ldi	r25, 0x00	; 0

00000238 <.Loc.7>:
     238:	20 61       	ori	r18, 0x10	; 16
     23a:	fc 01       	movw	r30, r24
     23c:	20 83       	st	Z, r18

0000023e <.Loc.8>:
    PORT &= ~(1 << PIN22);
     23e:	82 e2       	ldi	r24, 0x22	; 34
     240:	90 e0       	ldi	r25, 0x00	; 0
     242:	fc 01       	movw	r30, r24
     244:	20 81       	ld	r18, Z

00000246 <.Loc.9>:
     246:	82 e2       	ldi	r24, 0x22	; 34
     248:	90 e0       	ldi	r25, 0x00	; 0

0000024a <.Loc.10>:
     24a:	27 7f       	andi	r18, 0xF7	; 247
     24c:	fc 01       	movw	r30, r24
     24e:	20 83       	st	Z, r18

00000250 <.Loc.11>:
}
     250:	00 00       	nop
     252:	df 91       	pop	r29
     254:	cf 91       	pop	r28
     256:	08 95       	ret

00000258 <achteruitrijden>:

void achteruitrijden()
{
     258:	cf 93       	push	r28
     25a:	df 93       	push	r29
     25c:	cd b7       	in	r28, 0x3d	; 61
     25e:	de b7       	in	r29, 0x3e	; 62

00000260 <.Loc.13>:
    PORT |= (1 << PIN11);
     260:	82 e2       	ldi	r24, 0x22	; 34
     262:	90 e0       	ldi	r25, 0x00	; 0
     264:	fc 01       	movw	r30, r24
     266:	20 81       	ld	r18, Z
     268:	82 e2       	ldi	r24, 0x22	; 34
     26a:	90 e0       	ldi	r25, 0x00	; 0

0000026c <.Loc.14>:
     26c:	20 64       	ori	r18, 0x40	; 64
     26e:	fc 01       	movw	r30, r24
     270:	20 83       	st	Z, r18

00000272 <.Loc.15>:
    PORT &= ~(1 << PIN12);
     272:	82 e2       	ldi	r24, 0x22	; 34
     274:	90 e0       	ldi	r25, 0x00	; 0
     276:	fc 01       	movw	r30, r24
     278:	20 81       	ld	r18, Z

0000027a <.Loc.16>:
     27a:	82 e2       	ldi	r24, 0x22	; 34
     27c:	90 e0       	ldi	r25, 0x00	; 0

0000027e <.Loc.17>:
     27e:	2f 7d       	andi	r18, 0xDF	; 223
     280:	fc 01       	movw	r30, r24
     282:	20 83       	st	Z, r18

00000284 <.Loc.18>:
    PORT &= ~(1 << PIN21);
     284:	82 e2       	ldi	r24, 0x22	; 34
     286:	90 e0       	ldi	r25, 0x00	; 0
     288:	fc 01       	movw	r30, r24
     28a:	20 81       	ld	r18, Z

0000028c <.Loc.19>:
     28c:	82 e2       	ldi	r24, 0x22	; 34
     28e:	90 e0       	ldi	r25, 0x00	; 0

00000290 <.Loc.20>:
     290:	2f 7e       	andi	r18, 0xEF	; 239
     292:	fc 01       	movw	r30, r24
     294:	20 83       	st	Z, r18

00000296 <.Loc.21>:
    PORT |= (1 << PIN22);
     296:	82 e2       	ldi	r24, 0x22	; 34
     298:	90 e0       	ldi	r25, 0x00	; 0
     29a:	fc 01       	movw	r30, r24
     29c:	20 81       	ld	r18, Z
     29e:	82 e2       	ldi	r24, 0x22	; 34
     2a0:	90 e0       	ldi	r25, 0x00	; 0

000002a2 <.Loc.22>:
     2a2:	28 60       	ori	r18, 0x08	; 8
     2a4:	fc 01       	movw	r30, r24
     2a6:	20 83       	st	Z, r18

000002a8 <.Loc.23>:
}
     2a8:	00 00       	nop
     2aa:	df 91       	pop	r29
     2ac:	cf 91       	pop	r28
     2ae:	08 95       	ret

000002b0 <naarrechtsrijden>:

void naarrechtsrijden()
{
     2b0:	cf 93       	push	r28
     2b2:	df 93       	push	r29
     2b4:	cd b7       	in	r28, 0x3d	; 61
     2b6:	de b7       	in	r29, 0x3e	; 62

000002b8 <.Loc.25>:
    PORT &= ~(1 << PIN12);
     2b8:	82 e2       	ldi	r24, 0x22	; 34
     2ba:	90 e0       	ldi	r25, 0x00	; 0
     2bc:	fc 01       	movw	r30, r24
     2be:	20 81       	ld	r18, Z

000002c0 <.Loc.26>:
     2c0:	82 e2       	ldi	r24, 0x22	; 34
     2c2:	90 e0       	ldi	r25, 0x00	; 0

000002c4 <.Loc.27>:
     2c4:	2f 7d       	andi	r18, 0xDF	; 223
     2c6:	fc 01       	movw	r30, r24
     2c8:	20 83       	st	Z, r18

000002ca <.Loc.28>:
    PORT |= (1 << PIN11);
     2ca:	82 e2       	ldi	r24, 0x22	; 34
     2cc:	90 e0       	ldi	r25, 0x00	; 0
     2ce:	fc 01       	movw	r30, r24
     2d0:	20 81       	ld	r18, Z
     2d2:	82 e2       	ldi	r24, 0x22	; 34
     2d4:	90 e0       	ldi	r25, 0x00	; 0

000002d6 <.Loc.29>:
     2d6:	20 64       	ori	r18, 0x40	; 64
     2d8:	fc 01       	movw	r30, r24
     2da:	20 83       	st	Z, r18

000002dc <.Loc.30>:
    PORT &= ~(1 << PIN22);
     2dc:	82 e2       	ldi	r24, 0x22	; 34
     2de:	90 e0       	ldi	r25, 0x00	; 0
     2e0:	fc 01       	movw	r30, r24
     2e2:	20 81       	ld	r18, Z

000002e4 <.Loc.31>:
     2e4:	82 e2       	ldi	r24, 0x22	; 34
     2e6:	90 e0       	ldi	r25, 0x00	; 0

000002e8 <.Loc.32>:
     2e8:	27 7f       	andi	r18, 0xF7	; 247
     2ea:	fc 01       	movw	r30, r24
     2ec:	20 83       	st	Z, r18

000002ee <.Loc.33>:
    PORT |= (1 << PIN21);
     2ee:	82 e2       	ldi	r24, 0x22	; 34
     2f0:	90 e0       	ldi	r25, 0x00	; 0
     2f2:	fc 01       	movw	r30, r24
     2f4:	20 81       	ld	r18, Z
     2f6:	82 e2       	ldi	r24, 0x22	; 34
     2f8:	90 e0       	ldi	r25, 0x00	; 0

000002fa <.Loc.34>:
     2fa:	20 61       	ori	r18, 0x10	; 16
     2fc:	fc 01       	movw	r30, r24
     2fe:	20 83       	st	Z, r18

00000300 <.Loc.35>:
}
     300:	00 00       	nop
     302:	df 91       	pop	r29
     304:	cf 91       	pop	r28
     306:	08 95       	ret

00000308 <naarlinkssrijden>:

void naarlinkssrijden()
{
     308:	cf 93       	push	r28
     30a:	df 93       	push	r29
     30c:	cd b7       	in	r28, 0x3d	; 61
     30e:	de b7       	in	r29, 0x3e	; 62

00000310 <.Loc.37>:
    PORT |= (1 << PIN12);
     310:	82 e2       	ldi	r24, 0x22	; 34
     312:	90 e0       	ldi	r25, 0x00	; 0
     314:	fc 01       	movw	r30, r24
     316:	20 81       	ld	r18, Z
     318:	82 e2       	ldi	r24, 0x22	; 34
     31a:	90 e0       	ldi	r25, 0x00	; 0

0000031c <.Loc.38>:
     31c:	20 62       	ori	r18, 0x20	; 32
     31e:	fc 01       	movw	r30, r24
     320:	20 83       	st	Z, r18

00000322 <.Loc.39>:
    PORT &= ~(1 << PIN11);
     322:	82 e2       	ldi	r24, 0x22	; 34
     324:	90 e0       	ldi	r25, 0x00	; 0
     326:	fc 01       	movw	r30, r24
     328:	20 81       	ld	r18, Z

0000032a <.Loc.40>:
     32a:	82 e2       	ldi	r24, 0x22	; 34
     32c:	90 e0       	ldi	r25, 0x00	; 0

0000032e <.Loc.41>:
     32e:	2f 7b       	andi	r18, 0xBF	; 191
     330:	fc 01       	movw	r30, r24
     332:	20 83       	st	Z, r18

00000334 <.Loc.42>:
    PORT |= (1 << PIN22);
     334:	82 e2       	ldi	r24, 0x22	; 34
     336:	90 e0       	ldi	r25, 0x00	; 0
     338:	fc 01       	movw	r30, r24
     33a:	20 81       	ld	r18, Z
     33c:	82 e2       	ldi	r24, 0x22	; 34
     33e:	90 e0       	ldi	r25, 0x00	; 0

00000340 <.Loc.43>:
     340:	28 60       	ori	r18, 0x08	; 8
     342:	fc 01       	movw	r30, r24
     344:	20 83       	st	Z, r18

00000346 <.Loc.44>:
    PORT &= ~(1 << PIN21);
     346:	82 e2       	ldi	r24, 0x22	; 34
     348:	90 e0       	ldi	r25, 0x00	; 0
     34a:	fc 01       	movw	r30, r24
     34c:	20 81       	ld	r18, Z

0000034e <.Loc.45>:
     34e:	82 e2       	ldi	r24, 0x22	; 34
     350:	90 e0       	ldi	r25, 0x00	; 0

00000352 <.Loc.46>:
     352:	2f 7e       	andi	r18, 0xEF	; 239
     354:	fc 01       	movw	r30, r24
     356:	20 83       	st	Z, r18

00000358 <.Loc.47>:
}
     358:	00 00       	nop
     35a:	df 91       	pop	r29
     35c:	cf 91       	pop	r28
     35e:	08 95       	ret

00000360 <signaal_geven>:

void signaal_geven()
{
     360:	cf 93       	push	r28
     362:	df 93       	push	r29
     364:	cd b7       	in	r28, 0x3d	; 61
     366:	de b7       	in	r29, 0x3e	; 62
     368:	c4 54       	subi	r28, 0x44	; 68
     36a:	d1 09       	sbc	r29, r1
     36c:	0f b6       	in	r0, 0x3f	; 63
     36e:	f8 94       	cli
     370:	de bf       	out	0x3e, r29	; 62
     372:	0f be       	out	0x3f, r0	; 63
     374:	cd bf       	out	0x3d, r28	; 61

00000376 <.Loc.49>:
    PORT_LED |= (1<<LED_1);         // LED 1 aan
     376:	82 e0       	ldi	r24, 0x02	; 2
     378:	91 e0       	ldi	r25, 0x01	; 1
     37a:	dc 01       	movw	r26, r24
     37c:	2c 91       	ld	r18, X
     37e:	82 e0       	ldi	r24, 0x02	; 2
     380:	91 e0       	ldi	r25, 0x01	; 1

00000382 <.Loc.50>:
     382:	20 61       	ori	r18, 0x10	; 16
     384:	fc 01       	movw	r30, r24
     386:	20 83       	st	Z, r18

00000388 <.Loc.51>:
    PORT_LED &= ~(1<<LED_2);        // LED 2 uit
     388:	82 e0       	ldi	r24, 0x02	; 2
     38a:	91 e0       	ldi	r25, 0x01	; 1
     38c:	dc 01       	movw	r26, r24
     38e:	2c 91       	ld	r18, X

00000390 <.Loc.52>:
     390:	82 e0       	ldi	r24, 0x02	; 2
     392:	91 e0       	ldi	r25, 0x01	; 1

00000394 <.Loc.53>:
     394:	2f 7d       	andi	r18, 0xDF	; 223
     396:	fc 01       	movw	r30, r24
     398:	20 83       	st	Z, r18

0000039a <.Loc.54>:
    PORT_buzzer |= (1<<buzzer);     // buzzer aan
     39a:	82 e0       	ldi	r24, 0x02	; 2
     39c:	91 e0       	ldi	r25, 0x01	; 1
     39e:	dc 01       	movw	r26, r24
     3a0:	2c 91       	ld	r18, X
     3a2:	82 e0       	ldi	r24, 0x02	; 2
     3a4:	91 e0       	ldi	r25, 0x01	; 1

000003a6 <.Loc.55>:
     3a6:	28 60       	ori	r18, 0x08	; 8
     3a8:	fc 01       	movw	r30, r24
     3aa:	20 83       	st	Z, r18
     3ac:	80 e0       	ldi	r24, 0x00	; 0
     3ae:	90 e0       	ldi	r25, 0x00	; 0
     3b0:	aa ef       	ldi	r26, 0xFA	; 250
     3b2:	b3 e4       	ldi	r27, 0x43	; 67
     3b4:	8f 87       	std	Y+15, r24	; 0x0f
     3b6:	98 8b       	std	Y+16, r25	; 0x10
     3b8:	a9 8b       	std	Y+17, r26	; 0x11
     3ba:	ba 8b       	std	Y+18, r27	; 0x12

000003bc <.LBB18>:

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     3bc:	20 e0       	ldi	r18, 0x00	; 0
     3be:	30 e0       	ldi	r19, 0x00	; 0
     3c0:	4a e7       	ldi	r20, 0x7A	; 122
     3c2:	55 e4       	ldi	r21, 0x45	; 69
     3c4:	6f 85       	ldd	r22, Y+15	; 0x0f
     3c6:	78 89       	ldd	r23, Y+16	; 0x10
     3c8:	89 89       	ldd	r24, Y+17	; 0x11
     3ca:	9a 89       	ldd	r25, Y+18	; 0x12
     3cc:	0e 94 d5 10 	call	0x21aa	; 0x21aa <__mulsf3>
     3d0:	6d a3       	std	Y+37, r22	; 0x25
     3d2:	7e a3       	std	Y+38, r23	; 0x26
     3d4:	8f a3       	std	Y+39, r24	; 0x27
     3d6:	98 a7       	std	Y+40, r25	; 0x28
     3d8:	8d a1       	ldd	r24, Y+37	; 0x25
     3da:	9e a1       	ldd	r25, Y+38	; 0x26
     3dc:	af a1       	ldd	r26, Y+39	; 0x27
     3de:	b8 a5       	ldd	r27, Y+40	; 0x28
     3e0:	8b 8b       	std	Y+19, r24	; 0x13
     3e2:	9c 8b       	std	Y+20, r25	; 0x14
     3e4:	ad 8b       	std	Y+21, r26	; 0x15
     3e6:	be 8b       	std	Y+22, r27	; 0x16

000003e8 <.Loc.57>:
	if (__tmp < 1.0)
     3e8:	20 e0       	ldi	r18, 0x00	; 0
     3ea:	30 e0       	ldi	r19, 0x00	; 0
     3ec:	40 e8       	ldi	r20, 0x80	; 128
     3ee:	5f e3       	ldi	r21, 0x3F	; 63
     3f0:	6b 89       	ldd	r22, Y+19	; 0x13
     3f2:	7c 89       	ldd	r23, Y+20	; 0x14
     3f4:	8d 89       	ldd	r24, Y+21	; 0x15
     3f6:	9e 89       	ldd	r25, Y+22	; 0x16
     3f8:	0e 94 71 0f 	call	0x1ee2	; 0x1ee2 <__cmpsf2>
     3fc:	88 23       	and	r24, r24
     3fe:	2c f4       	brge	.+10     	; 0x40a <.L26>

00000400 <.Loc.58>:
		__ticks = 1;
     400:	81 e0       	ldi	r24, 0x01	; 1
     402:	90 e0       	ldi	r25, 0x00	; 0
     404:	98 8f       	std	Y+24, r25	; 0x18
     406:	8f 8b       	std	Y+23, r24	; 0x17
     408:	55 c0       	rjmp	.+170    	; 0x4b4 <.L8>

0000040a <.L26>:
	else if (__tmp > 65535)
     40a:	20 e0       	ldi	r18, 0x00	; 0
     40c:	3f ef       	ldi	r19, 0xFF	; 255
     40e:	4f e7       	ldi	r20, 0x7F	; 127
     410:	57 e4       	ldi	r21, 0x47	; 71
     412:	6b 89       	ldd	r22, Y+19	; 0x13
     414:	7c 89       	ldd	r23, Y+20	; 0x14
     416:	8d 89       	ldd	r24, Y+21	; 0x15
     418:	9e 89       	ldd	r25, Y+22	; 0x16
     41a:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <__gesf2>
     41e:	88 23       	and	r24, r24
     420:	d9 f1       	breq	.+118    	; 0x498 <.L27>
     422:	d4 f1       	brlt	.+116    	; 0x498 <.L27>

00000424 <.Loc.60>:
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     424:	20 e0       	ldi	r18, 0x00	; 0
     426:	30 e0       	ldi	r19, 0x00	; 0
     428:	40 e2       	ldi	r20, 0x20	; 32
     42a:	51 e4       	ldi	r21, 0x41	; 65
     42c:	6f 85       	ldd	r22, Y+15	; 0x0f
     42e:	78 89       	ldd	r23, Y+16	; 0x10
     430:	89 89       	ldd	r24, Y+17	; 0x11
     432:	9a 89       	ldd	r25, Y+18	; 0x12
     434:	0e 94 d5 10 	call	0x21aa	; 0x21aa <__mulsf3>
     438:	69 a7       	std	Y+41, r22	; 0x29
     43a:	7a a7       	std	Y+42, r23	; 0x2a
     43c:	8b a7       	std	Y+43, r24	; 0x2b
     43e:	9c a7       	std	Y+44, r25	; 0x2c
     440:	89 a5       	ldd	r24, Y+41	; 0x29
     442:	9a a5       	ldd	r25, Y+42	; 0x2a
     444:	ab a5       	ldd	r26, Y+43	; 0x2b
     446:	bc a5       	ldd	r27, Y+44	; 0x2c
     448:	89 a3       	std	Y+33, r24	; 0x21
     44a:	9a a3       	std	Y+34, r25	; 0x22
     44c:	ab a3       	std	Y+35, r26	; 0x23
     44e:	bc a3       	std	Y+36, r27	; 0x24

00000450 <.Loc.61>:
     450:	69 a1       	ldd	r22, Y+33	; 0x21
     452:	7a a1       	ldd	r23, Y+34	; 0x22
     454:	8b a1       	ldd	r24, Y+35	; 0x23
     456:	9c a1       	ldd	r25, Y+36	; 0x24
     458:	0e 94 ef 0f 	call	0x1fde	; 0x1fde <__fixunssfsi>
     45c:	6d a7       	std	Y+45, r22	; 0x2d
     45e:	7e a7       	std	Y+46, r23	; 0x2e
     460:	8f a7       	std	Y+47, r24	; 0x2f
     462:	98 ab       	std	Y+48, r25	; 0x30
     464:	ad a5       	ldd	r26, Y+45	; 0x2d
     466:	be a5       	ldd	r27, Y+46	; 0x2e
     468:	b8 8f       	std	Y+24, r27	; 0x18
     46a:	af 8b       	std	Y+23, r26	; 0x17

0000046c <.Loc.62>:
		while(__ticks)
     46c:	10 c0       	rjmp	.+32     	; 0x48e <.L11>

0000046e <.L12>:
     46e:	80 e9       	ldi	r24, 0x90	; 144
     470:	91 e0       	ldi	r25, 0x01	; 1
     472:	9a 8f       	std	Y+26, r25	; 0x1a
     474:	89 8f       	std	Y+25, r24	; 0x19

00000476 <.LBB20>:
		"sbc %B0,__zero_reg__"    "\n\t"
		"brne 1b"
		: "+d" (__count)
	);
#else
	__asm__ volatile (
     476:	89 8d       	ldd	r24, Y+25	; 0x19
     478:	9a 8d       	ldd	r25, Y+26	; 0x1a

0000047a <.L1^B1>:
     47a:	01 97       	sbiw	r24, 0x01	; 1
     47c:	f1 f7       	brne	.-4      	; 0x47a <.L1^B1>
     47e:	9a 8f       	std	Y+26, r25	; 0x1a
     480:	89 8f       	std	Y+25, r24	; 0x19

00000482 <.Loc.64>:
	...

00000484 <.LBE20>:
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     484:	8f 89       	ldd	r24, Y+23	; 0x17
     486:	98 8d       	ldd	r25, Y+24	; 0x18
     488:	01 97       	sbiw	r24, 0x01	; 1
     48a:	98 8f       	std	Y+24, r25	; 0x18
     48c:	8f 8b       	std	Y+23, r24	; 0x17

0000048e <.L11>:
		while(__ticks)
     48e:	8f 89       	ldd	r24, Y+23	; 0x17
     490:	98 8d       	ldd	r25, Y+24	; 0x18
     492:	00 97       	sbiw	r24, 0x00	; 0
     494:	61 f7       	brne	.-40     	; 0x46e <.L12>

00000496 <.Loc.67>:
		}
		return;
     496:	19 c0       	rjmp	.+50     	; 0x4ca <.L13>

00000498 <.L27>:
	}
	else
		__ticks = (uint16_t)__tmp;
     498:	6b 89       	ldd	r22, Y+19	; 0x13
     49a:	7c 89       	ldd	r23, Y+20	; 0x14
     49c:	8d 89       	ldd	r24, Y+21	; 0x15
     49e:	9e 89       	ldd	r25, Y+22	; 0x16
     4a0:	0e 94 ef 0f 	call	0x1fde	; 0x1fde <__fixunssfsi>
     4a4:	69 ab       	std	Y+49, r22	; 0x31
     4a6:	7a ab       	std	Y+50, r23	; 0x32
     4a8:	8b ab       	std	Y+51, r24	; 0x33
     4aa:	9c ab       	std	Y+52, r25	; 0x34
     4ac:	e9 a9       	ldd	r30, Y+49	; 0x31
     4ae:	fa a9       	ldd	r31, Y+50	; 0x32
     4b0:	f8 8f       	std	Y+24, r31	; 0x18
     4b2:	ef 8b       	std	Y+23, r30	; 0x17

000004b4 <.L8>:
     4b4:	8f 89       	ldd	r24, Y+23	; 0x17
     4b6:	98 8d       	ldd	r25, Y+24	; 0x18
     4b8:	9c 8f       	std	Y+28, r25	; 0x1c
     4ba:	8b 8f       	std	Y+27, r24	; 0x1b

000004bc <.LBB22>:
     4bc:	8b 8d       	ldd	r24, Y+27	; 0x1b
     4be:	9c 8d       	ldd	r25, Y+28	; 0x1c

000004c0 <.L1^B2>:
     4c0:	01 97       	sbiw	r24, 0x01	; 1
     4c2:	f1 f7       	brne	.-4      	; 0x4c0 <.L1^B2>
     4c4:	9c 8f       	std	Y+28, r25	; 0x1c
     4c6:	8b 8f       	std	Y+27, r24	; 0x1b

000004c8 <.Loc.70>:
	...

000004ca <.L13>:
    _delay_ms(500);
    PORT_LED |= (1<<LED_2);         // LED 2 aan
     4ca:	82 e0       	ldi	r24, 0x02	; 2
     4cc:	91 e0       	ldi	r25, 0x01	; 1
     4ce:	dc 01       	movw	r26, r24
     4d0:	2c 91       	ld	r18, X
     4d2:	82 e0       	ldi	r24, 0x02	; 2
     4d4:	91 e0       	ldi	r25, 0x01	; 1

000004d6 <.Loc.72>:
     4d6:	20 62       	ori	r18, 0x20	; 32
     4d8:	fc 01       	movw	r30, r24
     4da:	20 83       	st	Z, r18

000004dc <.Loc.73>:
    PORT_LED &= ~(1<<LED_1);        // LED 1 uit
     4dc:	82 e0       	ldi	r24, 0x02	; 2
     4de:	91 e0       	ldi	r25, 0x01	; 1
     4e0:	dc 01       	movw	r26, r24
     4e2:	2c 91       	ld	r18, X

000004e4 <.Loc.74>:
     4e4:	82 e0       	ldi	r24, 0x02	; 2
     4e6:	91 e0       	ldi	r25, 0x01	; 1

000004e8 <.Loc.75>:
     4e8:	2f 7e       	andi	r18, 0xEF	; 239
     4ea:	fc 01       	movw	r30, r24
     4ec:	20 83       	st	Z, r18

000004ee <.Loc.76>:
    PORT_buzzer &= ~(1<<buzzer);    // buzzer uit
     4ee:	82 e0       	ldi	r24, 0x02	; 2
     4f0:	91 e0       	ldi	r25, 0x01	; 1
     4f2:	dc 01       	movw	r26, r24
     4f4:	2c 91       	ld	r18, X

000004f6 <.Loc.77>:
     4f6:	82 e0       	ldi	r24, 0x02	; 2
     4f8:	91 e0       	ldi	r25, 0x01	; 1

000004fa <.Loc.78>:
     4fa:	27 7f       	andi	r18, 0xF7	; 247
     4fc:	fc 01       	movw	r30, r24
     4fe:	20 83       	st	Z, r18
     500:	80 e0       	ldi	r24, 0x00	; 0
     502:	90 e0       	ldi	r25, 0x00	; 0
     504:	aa ef       	ldi	r26, 0xFA	; 250
     506:	b3 e4       	ldi	r27, 0x43	; 67
     508:	89 83       	std	Y+1, r24	; 0x01
     50a:	9a 83       	std	Y+2, r25	; 0x02
     50c:	ab 83       	std	Y+3, r26	; 0x03
     50e:	bc 83       	std	Y+4, r27	; 0x04

00000510 <.LBB24>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     510:	20 e0       	ldi	r18, 0x00	; 0
     512:	30 e0       	ldi	r19, 0x00	; 0
     514:	4a e7       	ldi	r20, 0x7A	; 122
     516:	55 e4       	ldi	r21, 0x45	; 69
     518:	69 81       	ldd	r22, Y+1	; 0x01
     51a:	7a 81       	ldd	r23, Y+2	; 0x02
     51c:	8b 81       	ldd	r24, Y+3	; 0x03
     51e:	9c 81       	ldd	r25, Y+4	; 0x04
     520:	0e 94 d5 10 	call	0x21aa	; 0x21aa <__mulsf3>
     524:	6d ab       	std	Y+53, r22	; 0x35
     526:	7e ab       	std	Y+54, r23	; 0x36
     528:	8f ab       	std	Y+55, r24	; 0x37
     52a:	98 af       	std	Y+56, r25	; 0x38
     52c:	8d a9       	ldd	r24, Y+53	; 0x35
     52e:	9e a9       	ldd	r25, Y+54	; 0x36
     530:	af a9       	ldd	r26, Y+55	; 0x37
     532:	b8 ad       	ldd	r27, Y+56	; 0x38
     534:	8d 83       	std	Y+5, r24	; 0x05
     536:	9e 83       	std	Y+6, r25	; 0x06
     538:	af 83       	std	Y+7, r26	; 0x07
     53a:	b8 87       	std	Y+8, r27	; 0x08

0000053c <.Loc.80>:
	if (__tmp < 1.0)
     53c:	20 e0       	ldi	r18, 0x00	; 0
     53e:	30 e0       	ldi	r19, 0x00	; 0
     540:	40 e8       	ldi	r20, 0x80	; 128
     542:	5f e3       	ldi	r21, 0x3F	; 63
     544:	6d 81       	ldd	r22, Y+5	; 0x05
     546:	7e 81       	ldd	r23, Y+6	; 0x06
     548:	8f 81       	ldd	r24, Y+7	; 0x07
     54a:	98 85       	ldd	r25, Y+8	; 0x08
     54c:	0e 94 71 0f 	call	0x1ee2	; 0x1ee2 <__cmpsf2>
     550:	88 23       	and	r24, r24
     552:	2c f4       	brge	.+10     	; 0x55e <.L28>

00000554 <.Loc.81>:
		__ticks = 1;
     554:	81 e0       	ldi	r24, 0x01	; 1
     556:	90 e0       	ldi	r25, 0x00	; 0
     558:	9a 87       	std	Y+10, r25	; 0x0a
     55a:	89 87       	std	Y+9, r24	; 0x09
     55c:	5c c0       	rjmp	.+184    	; 0x616 <.L16>

0000055e <.L28>:
	else if (__tmp > 65535)
     55e:	20 e0       	ldi	r18, 0x00	; 0
     560:	3f ef       	ldi	r19, 0xFF	; 255
     562:	4f e7       	ldi	r20, 0x7F	; 127
     564:	57 e4       	ldi	r21, 0x47	; 71
     566:	6d 81       	ldd	r22, Y+5	; 0x05
     568:	7e 81       	ldd	r23, Y+6	; 0x06
     56a:	8f 81       	ldd	r24, Y+7	; 0x07
     56c:	98 85       	ldd	r25, Y+8	; 0x08
     56e:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <__gesf2>
     572:	88 23       	and	r24, r24
     574:	09 f0       	breq	.+2      	; 0x578 <L0^A>

00000576 <L0^A>:
     576:	0c f4       	brge	.+2      	; 0x57a <.Loc.83>

00000578 <L0^A>:
     578:	3c c0       	rjmp	.+120    	; 0x5f2 <.L29>

0000057a <.Loc.83>:
		__ticks = (uint16_t) (__ms * 10.0);
     57a:	20 e0       	ldi	r18, 0x00	; 0
     57c:	30 e0       	ldi	r19, 0x00	; 0
     57e:	40 e2       	ldi	r20, 0x20	; 32
     580:	51 e4       	ldi	r21, 0x41	; 65
     582:	69 81       	ldd	r22, Y+1	; 0x01
     584:	7a 81       	ldd	r23, Y+2	; 0x02
     586:	8b 81       	ldd	r24, Y+3	; 0x03
     588:	9c 81       	ldd	r25, Y+4	; 0x04
     58a:	0e 94 d5 10 	call	0x21aa	; 0x21aa <__mulsf3>
     58e:	69 af       	std	Y+57, r22	; 0x39
     590:	7a af       	std	Y+58, r23	; 0x3a
     592:	8b af       	std	Y+59, r24	; 0x3b
     594:	9c af       	std	Y+60, r25	; 0x3c
     596:	89 ad       	ldd	r24, Y+57	; 0x39
     598:	9a ad       	ldd	r25, Y+58	; 0x3a
     59a:	ab ad       	ldd	r26, Y+59	; 0x3b
     59c:	bc ad       	ldd	r27, Y+60	; 0x3c
     59e:	8d 8f       	std	Y+29, r24	; 0x1d
     5a0:	9e 8f       	std	Y+30, r25	; 0x1e
     5a2:	af 8f       	std	Y+31, r26	; 0x1f
     5a4:	b8 a3       	std	Y+32, r27	; 0x20

000005a6 <.Loc.84>:
     5a6:	6d 8d       	ldd	r22, Y+29	; 0x1d
     5a8:	7e 8d       	ldd	r23, Y+30	; 0x1e
     5aa:	8f 8d       	ldd	r24, Y+31	; 0x1f
     5ac:	98 a1       	ldd	r25, Y+32	; 0x20
     5ae:	0e 94 ef 0f 	call	0x1fde	; 0x1fde <__fixunssfsi>
     5b2:	21 96       	adiw	r28, 0x01	; 1
     5b4:	6c af       	std	Y+60, r22	; 0x3c
     5b6:	7d af       	std	Y+61, r23	; 0x3d
     5b8:	8e af       	std	Y+62, r24	; 0x3e
     5ba:	9f af       	std	Y+63, r25	; 0x3f
     5bc:	21 97       	sbiw	r28, 0x01	; 1
     5be:	ad ad       	ldd	r26, Y+61	; 0x3d
     5c0:	be ad       	ldd	r27, Y+62	; 0x3e
     5c2:	ba 87       	std	Y+10, r27	; 0x0a
     5c4:	a9 87       	std	Y+9, r26	; 0x09

000005c6 <.Loc.85>:
		while(__ticks)
     5c6:	10 c0       	rjmp	.+32     	; 0x5e8 <.L19>

000005c8 <.L20>:
     5c8:	80 e9       	ldi	r24, 0x90	; 144
     5ca:	91 e0       	ldi	r25, 0x01	; 1
     5cc:	9c 87       	std	Y+12, r25	; 0x0c
     5ce:	8b 87       	std	Y+11, r24	; 0x0b

000005d0 <.LBB26>:
     5d0:	8b 85       	ldd	r24, Y+11	; 0x0b
     5d2:	9c 85       	ldd	r25, Y+12	; 0x0c

000005d4 <.L1^B3>:
     5d4:	01 97       	sbiw	r24, 0x01	; 1
     5d6:	f1 f7       	brne	.-4      	; 0x5d4 <.L1^B3>
     5d8:	9c 87       	std	Y+12, r25	; 0x0c
     5da:	8b 87       	std	Y+11, r24	; 0x0b

000005dc <.Loc.87>:
	...

000005de <.LBE26>:
			__ticks --;
     5de:	89 85       	ldd	r24, Y+9	; 0x09
     5e0:	9a 85       	ldd	r25, Y+10	; 0x0a
     5e2:	01 97       	sbiw	r24, 0x01	; 1
     5e4:	9a 87       	std	Y+10, r25	; 0x0a
     5e6:	89 87       	std	Y+9, r24	; 0x09

000005e8 <.L19>:
		while(__ticks)
     5e8:	89 85       	ldd	r24, Y+9	; 0x09
     5ea:	9a 85       	ldd	r25, Y+10	; 0x0a
     5ec:	00 97       	sbiw	r24, 0x00	; 0
     5ee:	61 f7       	brne	.-40     	; 0x5c8 <.L20>

000005f0 <.Loc.90>:
		return;
     5f0:	1d c0       	rjmp	.+58     	; 0x62c <.L21>

000005f2 <.L29>:
		__ticks = (uint16_t)__tmp;
     5f2:	6d 81       	ldd	r22, Y+5	; 0x05
     5f4:	7e 81       	ldd	r23, Y+6	; 0x06
     5f6:	8f 81       	ldd	r24, Y+7	; 0x07
     5f8:	98 85       	ldd	r25, Y+8	; 0x08
     5fa:	0e 94 ef 0f 	call	0x1fde	; 0x1fde <__fixunssfsi>
     5fe:	25 96       	adiw	r28, 0x05	; 5
     600:	6c af       	std	Y+60, r22	; 0x3c
     602:	7d af       	std	Y+61, r23	; 0x3d
     604:	8e af       	std	Y+62, r24	; 0x3e
     606:	9f af       	std	Y+63, r25	; 0x3f
     608:	25 97       	sbiw	r28, 0x05	; 5
     60a:	23 96       	adiw	r28, 0x03	; 3
     60c:	ee ad       	ldd	r30, Y+62	; 0x3e
     60e:	ff ad       	ldd	r31, Y+63	; 0x3f
     610:	23 97       	sbiw	r28, 0x03	; 3
     612:	fa 87       	std	Y+10, r31	; 0x0a
     614:	e9 87       	std	Y+9, r30	; 0x09

00000616 <.L16>:
     616:	89 85       	ldd	r24, Y+9	; 0x09
     618:	9a 85       	ldd	r25, Y+10	; 0x0a
     61a:	9e 87       	std	Y+14, r25	; 0x0e
     61c:	8d 87       	std	Y+13, r24	; 0x0d

0000061e <.LBB28>:
     61e:	8d 85       	ldd	r24, Y+13	; 0x0d
     620:	9e 85       	ldd	r25, Y+14	; 0x0e

00000622 <.L1^B4>:
     622:	01 97       	sbiw	r24, 0x01	; 1
     624:	f1 f7       	brne	.-4      	; 0x622 <.L1^B4>
     626:	9e 87       	std	Y+14, r25	; 0x0e
     628:	8d 87       	std	Y+13, r24	; 0x0d

0000062a <.Loc.93>:
	...

0000062c <.L21>:
    _delay_ms(500);
}
     62c:	00 00       	nop
     62e:	cc 5b       	subi	r28, 0xBC	; 188
     630:	df 4f       	sbci	r29, 0xFF	; 255
     632:	0f b6       	in	r0, 0x3f	; 63
     634:	f8 94       	cli
     636:	de bf       	out	0x3e, r29	; 62
     638:	0f be       	out	0x3f, r0	; 63
     63a:	cd bf       	out	0x3d, r28	; 61
     63c:	df 91       	pop	r29
     63e:	cf 91       	pop	r28
     640:	08 95       	ret

00000642 <h_bridgeR_set_percentage>:

void h_bridgeR_set_percentage(signed char percentage)
{
     642:	0f 93       	push	r16
     644:	1f 93       	push	r17
     646:	cf 93       	push	r28
     648:	df 93       	push	r29
     64a:	00 d0       	rcall	.+0      	; 0x64c <L0^A>

0000064c <L0^A>:
     64c:	0f 92       	push	r0
     64e:	0f 92       	push	r0
     650:	cd b7       	in	r28, 0x3d	; 61
     652:	de b7       	in	r29, 0x3e	; 62
     654:	89 83       	std	Y+1, r24	; 0x01

00000656 <.Loc.96>:
	if (percentage >= 0 && percentage <= 100)
     656:	89 81       	ldd	r24, Y+1	; 0x01
     658:	88 23       	and	r24, r24
     65a:	3c f1       	brlt	.+78     	; 0x6aa <.L32>

0000065c <.Loc.97>:
     65c:	89 81       	ldd	r24, Y+1	; 0x01
     65e:	84 36       	cpi	r24, 0x64	; 100
     660:	09 f0       	breq	.+2      	; 0x664 <.Loc.98>

00000662 <L0^A>:
     662:	1c f5       	brge	.+70     	; 0x6aa <.L32>

00000664 <.Loc.98>:
	{
			OCR1A = (65536*percentage)/100;
     664:	89 81       	ldd	r24, Y+1	; 0x01
     666:	08 2e       	mov	r0, r24
     668:	00 0c       	add	r0, r0
     66a:	99 0b       	sbc	r25, r25
     66c:	aa 0b       	sbc	r26, r26
     66e:	bb 0b       	sbc	r27, r27
     670:	ac 01       	movw	r20, r24
     672:	33 27       	eor	r19, r19
     674:	22 27       	eor	r18, r18
     676:	2a 83       	std	Y+2, r18	; 0x02
     678:	3b 83       	std	Y+3, r19	; 0x03
     67a:	4c 83       	std	Y+4, r20	; 0x04
     67c:	5d 83       	std	Y+5, r21	; 0x05

0000067e <.Loc.99>:
     67e:	04 e6       	ldi	r16, 0x64	; 100
     680:	10 e0       	ldi	r17, 0x00	; 0
     682:	20 e0       	ldi	r18, 0x00	; 0
     684:	30 e0       	ldi	r19, 0x00	; 0
     686:	6a 81       	ldd	r22, Y+2	; 0x02
     688:	7b 81       	ldd	r23, Y+3	; 0x03
     68a:	8c 81       	ldd	r24, Y+4	; 0x04
     68c:	9d 81       	ldd	r25, Y+5	; 0x05
     68e:	a9 01       	movw	r20, r18
     690:	98 01       	movw	r18, r16
     692:	0e 94 19 0f 	call	0x1e32	; 0x1e32 <__divmodsi4>
     696:	da 01       	movw	r26, r20
     698:	c9 01       	movw	r24, r18
     69a:	ac 01       	movw	r20, r24
     69c:	bd 01       	movw	r22, r26

0000069e <.Loc.100>:
     69e:	88 e8       	ldi	r24, 0x88	; 136
     6a0:	90 e0       	ldi	r25, 0x00	; 0

000006a2 <.Loc.101>:
     6a2:	9a 01       	movw	r18, r20
     6a4:	fc 01       	movw	r30, r24
     6a6:	31 83       	std	Z+1, r19	; 0x01
     6a8:	20 83       	st	Z, r18

000006aa <.L32>:
	}
}
     6aa:	00 00       	nop
     6ac:	0f 90       	pop	r0
     6ae:	0f 90       	pop	r0
     6b0:	0f 90       	pop	r0
     6b2:	0f 90       	pop	r0
     6b4:	0f 90       	pop	r0
     6b6:	df 91       	pop	r29
     6b8:	cf 91       	pop	r28
     6ba:	1f 91       	pop	r17
     6bc:	0f 91       	pop	r16
     6be:	08 95       	ret

000006c0 <h_bridgeL_set_percentage>:

void h_bridgeL_set_percentage(signed char percentage)
{
     6c0:	0f 93       	push	r16
     6c2:	1f 93       	push	r17
     6c4:	cf 93       	push	r28
     6c6:	df 93       	push	r29
     6c8:	00 d0       	rcall	.+0      	; 0x6ca <L0^A>

000006ca <L0^A>:
     6ca:	0f 92       	push	r0
     6cc:	0f 92       	push	r0
     6ce:	cd b7       	in	r28, 0x3d	; 61
     6d0:	de b7       	in	r29, 0x3e	; 62
     6d2:	89 83       	std	Y+1, r24	; 0x01

000006d4 <.Loc.104>:
	if (percentage >= 0 && percentage <= 100)
     6d4:	89 81       	ldd	r24, Y+1	; 0x01
     6d6:	88 23       	and	r24, r24
     6d8:	3c f1       	brlt	.+78     	; 0x728 <.L35>

000006da <.Loc.105>:
     6da:	89 81       	ldd	r24, Y+1	; 0x01
     6dc:	84 36       	cpi	r24, 0x64	; 100
     6de:	09 f0       	breq	.+2      	; 0x6e2 <.Loc.106>

000006e0 <L0^A>:
     6e0:	1c f5       	brge	.+70     	; 0x728 <.L35>

000006e2 <.Loc.106>:
	{
			OCR3A = (65536*percentage)/100;
     6e2:	89 81       	ldd	r24, Y+1	; 0x01
     6e4:	08 2e       	mov	r0, r24
     6e6:	00 0c       	add	r0, r0
     6e8:	99 0b       	sbc	r25, r25
     6ea:	aa 0b       	sbc	r26, r26
     6ec:	bb 0b       	sbc	r27, r27
     6ee:	ac 01       	movw	r20, r24
     6f0:	33 27       	eor	r19, r19
     6f2:	22 27       	eor	r18, r18
     6f4:	2a 83       	std	Y+2, r18	; 0x02
     6f6:	3b 83       	std	Y+3, r19	; 0x03
     6f8:	4c 83       	std	Y+4, r20	; 0x04
     6fa:	5d 83       	std	Y+5, r21	; 0x05

000006fc <.Loc.107>:
     6fc:	04 e6       	ldi	r16, 0x64	; 100
     6fe:	10 e0       	ldi	r17, 0x00	; 0
     700:	20 e0       	ldi	r18, 0x00	; 0
     702:	30 e0       	ldi	r19, 0x00	; 0
     704:	6a 81       	ldd	r22, Y+2	; 0x02
     706:	7b 81       	ldd	r23, Y+3	; 0x03
     708:	8c 81       	ldd	r24, Y+4	; 0x04
     70a:	9d 81       	ldd	r25, Y+5	; 0x05
     70c:	a9 01       	movw	r20, r18
     70e:	98 01       	movw	r18, r16
     710:	0e 94 19 0f 	call	0x1e32	; 0x1e32 <__divmodsi4>
     714:	da 01       	movw	r26, r20
     716:	c9 01       	movw	r24, r18
     718:	ac 01       	movw	r20, r24
     71a:	bd 01       	movw	r22, r26

0000071c <.Loc.108>:
     71c:	88 e9       	ldi	r24, 0x98	; 152
     71e:	90 e0       	ldi	r25, 0x00	; 0

00000720 <.Loc.109>:
     720:	9a 01       	movw	r18, r20
     722:	fc 01       	movw	r30, r24
     724:	31 83       	std	Z+1, r19	; 0x01
     726:	20 83       	st	Z, r18

00000728 <.L35>:
	}
}
     728:	00 00       	nop
     72a:	0f 90       	pop	r0
     72c:	0f 90       	pop	r0
     72e:	0f 90       	pop	r0
     730:	0f 90       	pop	r0
     732:	0f 90       	pop	r0
     734:	df 91       	pop	r29
     736:	cf 91       	pop	r28
     738:	1f 91       	pop	r17
     73a:	0f 91       	pop	r16
     73c:	08 95       	ret

0000073e <__vector_20>:

//H-brug PWMR
ISR(TIMER1_OVF_vect)
{
     73e:	1f 92       	push	r1
     740:	0f 92       	push	r0
     742:	0f b6       	in	r0, 0x3f	; 63
     744:	0f 92       	push	r0
     746:	11 24       	eor	r1, r1
     748:	0b b6       	in	r0, 0x3b	; 59
     74a:	0f 92       	push	r0
     74c:	2f 93       	push	r18
     74e:	3f 93       	push	r19
     750:	8f 93       	push	r24
     752:	9f 93       	push	r25
     754:	ef 93       	push	r30
     756:	ff 93       	push	r31
     758:	cf 93       	push	r28
     75a:	df 93       	push	r29
     75c:	cd b7       	in	r28, 0x3d	; 61
     75e:	de b7       	in	r29, 0x3e	; 62

00000760 <.Loc.112>:
    PORT ^= (1 << PEN1);
     760:	82 e2       	ldi	r24, 0x22	; 34
     762:	90 e0       	ldi	r25, 0x00	; 0
     764:	fc 01       	movw	r30, r24
     766:	30 81       	ld	r19, Z
     768:	82 e2       	ldi	r24, 0x22	; 34
     76a:	90 e0       	ldi	r25, 0x00	; 0

0000076c <.Loc.113>:
     76c:	20 e8       	ldi	r18, 0x80	; 128
     76e:	23 27       	eor	r18, r19
     770:	fc 01       	movw	r30, r24
     772:	20 83       	st	Z, r18

00000774 <.Loc.114>:
}
     774:	00 00       	nop
     776:	df 91       	pop	r29
     778:	cf 91       	pop	r28
     77a:	ff 91       	pop	r31
     77c:	ef 91       	pop	r30
     77e:	9f 91       	pop	r25
     780:	8f 91       	pop	r24
     782:	3f 91       	pop	r19
     784:	2f 91       	pop	r18
     786:	0f 90       	pop	r0
     788:	0b be       	out	0x3b, r0	; 59
     78a:	0f 90       	pop	r0
     78c:	0f be       	out	0x3f, r0	; 63
     78e:	0f 90       	pop	r0
     790:	1f 90       	pop	r1
     792:	18 95       	reti

00000794 <__vector_17>:
//H-brug PWMR
ISR(TIMER1_COMPA_vect)
{
     794:	1f 92       	push	r1
     796:	0f 92       	push	r0
     798:	0f b6       	in	r0, 0x3f	; 63
     79a:	0f 92       	push	r0
     79c:	11 24       	eor	r1, r1
     79e:	0b b6       	in	r0, 0x3b	; 59
     7a0:	0f 92       	push	r0
     7a2:	2f 93       	push	r18
     7a4:	8f 93       	push	r24
     7a6:	9f 93       	push	r25
     7a8:	ef 93       	push	r30
     7aa:	ff 93       	push	r31
     7ac:	cf 93       	push	r28
     7ae:	df 93       	push	r29
     7b0:	cd b7       	in	r28, 0x3d	; 61
     7b2:	de b7       	in	r29, 0x3e	; 62

000007b4 <.Loc.116>:
    PORT |= (1 << PEN1);
     7b4:	82 e2       	ldi	r24, 0x22	; 34
     7b6:	90 e0       	ldi	r25, 0x00	; 0
     7b8:	fc 01       	movw	r30, r24
     7ba:	20 81       	ld	r18, Z
     7bc:	82 e2       	ldi	r24, 0x22	; 34
     7be:	90 e0       	ldi	r25, 0x00	; 0

000007c0 <.Loc.117>:
     7c0:	20 68       	ori	r18, 0x80	; 128
     7c2:	fc 01       	movw	r30, r24
     7c4:	20 83       	st	Z, r18

000007c6 <.Loc.118>:
}
     7c6:	00 00       	nop
     7c8:	df 91       	pop	r29
     7ca:	cf 91       	pop	r28
     7cc:	ff 91       	pop	r31
     7ce:	ef 91       	pop	r30
     7d0:	9f 91       	pop	r25
     7d2:	8f 91       	pop	r24
     7d4:	2f 91       	pop	r18
     7d6:	0f 90       	pop	r0
     7d8:	0b be       	out	0x3b, r0	; 59
     7da:	0f 90       	pop	r0
     7dc:	0f be       	out	0x3f, r0	; 63
     7de:	0f 90       	pop	r0
     7e0:	1f 90       	pop	r1
     7e2:	18 95       	reti

000007e4 <__vector_35>:

//H-brug PWML
ISR(TIMER3_OVF_vect)
{
     7e4:	1f 92       	push	r1
     7e6:	0f 92       	push	r0
     7e8:	0f b6       	in	r0, 0x3f	; 63
     7ea:	0f 92       	push	r0
     7ec:	11 24       	eor	r1, r1
     7ee:	0b b6       	in	r0, 0x3b	; 59
     7f0:	0f 92       	push	r0
     7f2:	2f 93       	push	r18
     7f4:	3f 93       	push	r19
     7f6:	8f 93       	push	r24
     7f8:	9f 93       	push	r25
     7fa:	ef 93       	push	r30
     7fc:	ff 93       	push	r31
     7fe:	cf 93       	push	r28
     800:	df 93       	push	r29
     802:	cd b7       	in	r28, 0x3d	; 61
     804:	de b7       	in	r29, 0x3e	; 62

00000806 <.Loc.120>:
    PORT ^= (1 << PEN2);
     806:	82 e2       	ldi	r24, 0x22	; 34
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	fc 01       	movw	r30, r24
     80c:	30 81       	ld	r19, Z
     80e:	82 e2       	ldi	r24, 0x22	; 34
     810:	90 e0       	ldi	r25, 0x00	; 0

00000812 <.Loc.121>:
     812:	24 e0       	ldi	r18, 0x04	; 4
     814:	23 27       	eor	r18, r19
     816:	fc 01       	movw	r30, r24
     818:	20 83       	st	Z, r18

0000081a <.Loc.122>:
}
     81a:	00 00       	nop
     81c:	df 91       	pop	r29
     81e:	cf 91       	pop	r28
     820:	ff 91       	pop	r31
     822:	ef 91       	pop	r30
     824:	9f 91       	pop	r25
     826:	8f 91       	pop	r24
     828:	3f 91       	pop	r19
     82a:	2f 91       	pop	r18
     82c:	0f 90       	pop	r0
     82e:	0b be       	out	0x3b, r0	; 59
     830:	0f 90       	pop	r0
     832:	0f be       	out	0x3f, r0	; 63
     834:	0f 90       	pop	r0
     836:	1f 90       	pop	r1
     838:	18 95       	reti

0000083a <__vector_32>:
//H-brug PWML
ISR(TIMER3_COMPA_vect)
{
     83a:	1f 92       	push	r1
     83c:	0f 92       	push	r0
     83e:	0f b6       	in	r0, 0x3f	; 63
     840:	0f 92       	push	r0
     842:	11 24       	eor	r1, r1
     844:	0b b6       	in	r0, 0x3b	; 59
     846:	0f 92       	push	r0
     848:	2f 93       	push	r18
     84a:	8f 93       	push	r24
     84c:	9f 93       	push	r25
     84e:	ef 93       	push	r30
     850:	ff 93       	push	r31
     852:	cf 93       	push	r28
     854:	df 93       	push	r29
     856:	cd b7       	in	r28, 0x3d	; 61
     858:	de b7       	in	r29, 0x3e	; 62

0000085a <.Loc.124>:
    PORT |= (1 << PEN2);
     85a:	82 e2       	ldi	r24, 0x22	; 34
     85c:	90 e0       	ldi	r25, 0x00	; 0
     85e:	fc 01       	movw	r30, r24
     860:	20 81       	ld	r18, Z
     862:	82 e2       	ldi	r24, 0x22	; 34
     864:	90 e0       	ldi	r25, 0x00	; 0

00000866 <.Loc.125>:
     866:	24 60       	ori	r18, 0x04	; 4
     868:	fc 01       	movw	r30, r24
     86a:	20 83       	st	Z, r18

0000086c <.Loc.126>:
}
     86c:	00 00       	nop
     86e:	df 91       	pop	r29
     870:	cf 91       	pop	r28
     872:	ff 91       	pop	r31
     874:	ef 91       	pop	r30
     876:	9f 91       	pop	r25
     878:	8f 91       	pop	r24
     87a:	2f 91       	pop	r18
     87c:	0f 90       	pop	r0
     87e:	0b be       	out	0x3b, r0	; 59
     880:	0f 90       	pop	r0
     882:	0f be       	out	0x3f, r0	; 63
     884:	0f 90       	pop	r0
     886:	1f 90       	pop	r1
     888:	18 95       	reti

0000088a <__vector_23>:

//Timer Noodtoestand
ISR(TIMER0_OVF_vect)
{
     88a:	1f 92       	push	r1
     88c:	0f 92       	push	r0
     88e:	0f b6       	in	r0, 0x3f	; 63
     890:	0f 92       	push	r0
     892:	11 24       	eor	r1, r1
     894:	8f 93       	push	r24
     896:	9f 93       	push	r25
     898:	cf 93       	push	r28
     89a:	df 93       	push	r29
     89c:	cd b7       	in	r28, 0x3d	; 61
     89e:	de b7       	in	r29, 0x3e	; 62

000008a0 <.Loc.128>:
    timerteller ++;
     8a0:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <timerteller>
     8a4:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <timerteller+0x1>
     8a8:	01 96       	adiw	r24, 0x01	; 1
     8aa:	90 93 27 02 	sts	0x0227, r25	; 0x800227 <timerteller+0x1>
     8ae:	80 93 26 02 	sts	0x0226, r24	; 0x800226 <timerteller>

000008b2 <.Loc.129>:
}
     8b2:	00 00       	nop
     8b4:	df 91       	pop	r29
     8b6:	cf 91       	pop	r28
     8b8:	9f 91       	pop	r25
     8ba:	8f 91       	pop	r24
     8bc:	0f 90       	pop	r0
     8be:	0f be       	out	0x3f, r0	; 63
     8c0:	0f 90       	pop	r0
     8c2:	1f 90       	pop	r1
     8c4:	18 95       	reti

000008c6 <__vector_45>:

//Timer Bak detectie
ISR(TIMER4_OVF_vect)
{
     8c6:	1f 92       	push	r1
     8c8:	0f 92       	push	r0
     8ca:	0f b6       	in	r0, 0x3f	; 63
     8cc:	0f 92       	push	r0
     8ce:	11 24       	eor	r1, r1
     8d0:	0b b6       	in	r0, 0x3b	; 59
     8d2:	0f 92       	push	r0
     8d4:	8f 93       	push	r24
     8d6:	9f 93       	push	r25
     8d8:	ef 93       	push	r30
     8da:	ff 93       	push	r31
     8dc:	cf 93       	push	r28
     8de:	df 93       	push	r29
     8e0:	cd b7       	in	r28, 0x3d	; 61
     8e2:	de b7       	in	r29, 0x3e	; 62

000008e4 <.Loc.131>:
    if(timertellerbak >= 3)
     8e4:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <timertellerbak>
     8e8:	90 91 29 02 	lds	r25, 0x0229	; 0x800229 <timertellerbak+0x1>

000008ec <.Loc.132>:
     8ec:	82 30       	cpi	r24, 0x02	; 2
     8ee:	91 05       	cpc	r25, r1
     8f0:	69 f0       	breq	.+26     	; 0x90c <.L42>
     8f2:	64 f0       	brlt	.+24     	; 0x90c <.L42>

000008f4 <.Loc.133>:
    {
        timertellerbak = 0;
     8f4:	10 92 29 02 	sts	0x0229, r1	; 0x800229 <timertellerbak+0x1>
     8f8:	10 92 28 02 	sts	0x0228, r1	; 0x800228 <timertellerbak>

000008fc <.Loc.134>:
        bakvar = 0;
     8fc:	10 92 2b 02 	sts	0x022B, r1	; 0x80022b <bakvar+0x1>
     900:	10 92 2a 02 	sts	0x022A, r1	; 0x80022a <bakvar>

00000904 <.Loc.135>:
        TCCR4B = 0;
     904:	81 ea       	ldi	r24, 0xA1	; 161
     906:	90 e0       	ldi	r25, 0x00	; 0

00000908 <.Loc.136>:
     908:	fc 01       	movw	r30, r24
     90a:	10 82       	st	Z, r1

0000090c <.L42>:
    }
    timertellerbak ++;
     90c:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <timertellerbak>
     910:	90 91 29 02 	lds	r25, 0x0229	; 0x800229 <timertellerbak+0x1>
     914:	01 96       	adiw	r24, 0x01	; 1
     916:	90 93 29 02 	sts	0x0229, r25	; 0x800229 <timertellerbak+0x1>
     91a:	80 93 28 02 	sts	0x0228, r24	; 0x800228 <timertellerbak>

0000091e <.Loc.138>:
}
     91e:	00 00       	nop
     920:	df 91       	pop	r29
     922:	cf 91       	pop	r28
     924:	ff 91       	pop	r31
     926:	ef 91       	pop	r30
     928:	9f 91       	pop	r25
     92a:	8f 91       	pop	r24
     92c:	0f 90       	pop	r0
     92e:	0b be       	out	0x3b, r0	; 59
     930:	0f 90       	pop	r0
     932:	0f be       	out	0x3f, r0	; 63
     934:	0f 90       	pop	r0
     936:	1f 90       	pop	r1
     938:	18 95       	reti

0000093a <main>:
7: Noodknop ingedrukt
8: Noodknop uitgedrukt
*/

int main(void)
{
     93a:	cf 93       	push	r28
     93c:	df 93       	push	r29
     93e:	cd b7       	in	r28, 0x3d	; 61
     940:	de b7       	in	r29, 0x3e	; 62
     942:	c8 54       	subi	r28, 0x48	; 72
     944:	d1 09       	sbc	r29, r1
     946:	0f b6       	in	r0, 0x3f	; 63
     948:	f8 94       	cli
     94a:	de bf       	out	0x3e, r29	; 62
     94c:	0f be       	out	0x3f, r0	; 63
     94e:	cd bf       	out	0x3d, r28	; 61

00000950 <.Loc.1>:
    init();
     950:	0e 94 8f 08 	call	0x111e	; 0x111e <init>

00000954 <.Loc.2>:
    init_display_meneer();
     954:	0e 94 63 0d 	call	0x1ac6	; 0x1ac6 <init_display_meneer>

00000958 <.Loc.3>:
    initTimer();
     958:	0e 94 96 09 	call	0x132c	; 0x132c <initTimer>

0000095c <.Loc.4>:
    int waarde;

    int toestand = 0;
     95c:	1a 82       	std	Y+2, r1	; 0x02
     95e:	19 82       	std	Y+1, r1	; 0x01

00000960 <.L51>:

    while(1)
    {
        waarde = GetDistance();
     960:	0e 94 cb 09 	call	0x1396	; 0x1396 <GetDistance>
     964:	9c 83       	std	Y+4, r25	; 0x04
     966:	8b 83       	std	Y+3, r24	; 0x03

00000968 <.Loc.6>:
        display_getal(waarde);
     968:	8b 81       	ldd	r24, Y+3	; 0x03
     96a:	9c 81       	ldd	r25, Y+4	; 0x04
     96c:	0e 94 2c 0e 	call	0x1c58	; 0x1c58 <display_getal>

00000970 <.Loc.7>:

        if(Bluetooth_Getal == 2)//Bluetooth verbroken
     970:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <Bluetooth_Getal>
     974:	90 91 21 02 	lds	r25, 0x0221	; 0x800221 <Bluetooth_Getal+0x1>

00000978 <.Loc.8>:
     978:	82 30       	cpi	r24, 0x02	; 2
     97a:	91 05       	cpc	r25, r1
     97c:	11 f4       	brne	.+4      	; 0x982 <.L2>

0000097e <.Loc.9>:
        {
            toestand = 0;
     97e:	1a 82       	std	Y+2, r1	; 0x02
     980:	19 82       	std	Y+1, r1	; 0x01

00000982 <.L2>:
        }
        if(Bluetooth_Getal == 6)//Uitknop ingedrukt
     982:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <Bluetooth_Getal>
     986:	90 91 21 02 	lds	r25, 0x0221	; 0x800221 <Bluetooth_Getal+0x1>

0000098a <.Loc.11>:
     98a:	86 30       	cpi	r24, 0x06	; 6
     98c:	91 05       	cpc	r25, r1
     98e:	21 f4       	brne	.+8      	; 0x998 <.L3>

00000990 <.Loc.12>:
        {
            toestand = 1;
     990:	81 e0       	ldi	r24, 0x01	; 1
     992:	90 e0       	ldi	r25, 0x00	; 0
     994:	9a 83       	std	Y+2, r25	; 0x02
     996:	89 83       	std	Y+1, r24	; 0x01

00000998 <.L3>:
        }
        if(Bluetooth_Getal == 7)// || (Noodknopport & (1<<Noodknoppin)) == 0))
     998:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <Bluetooth_Getal>
     99c:	90 91 21 02 	lds	r25, 0x0221	; 0x800221 <Bluetooth_Getal+0x1>

000009a0 <.Loc.14>:
     9a0:	87 30       	cpi	r24, 0x07	; 7
     9a2:	91 05       	cpc	r25, r1
     9a4:	21 f4       	brne	.+8      	; 0x9ae <.L4>

000009a6 <.Loc.15>:
        {
            toestand = 99;
     9a6:	83 e6       	ldi	r24, 0x63	; 99
     9a8:	90 e0       	ldi	r25, 0x00	; 0
     9aa:	9a 83       	std	Y+2, r25	; 0x02
     9ac:	89 83       	std	Y+1, r24	; 0x01

000009ae <.L4>:
//            else
//            {
//                toestand = 4;
//            }
//        }
        if(waarde <= 100)//Voorultrasoon ziet object
     9ae:	8b 81       	ldd	r24, Y+3	; 0x03
     9b0:	9c 81       	ldd	r25, Y+4	; 0x04
     9b2:	84 36       	cpi	r24, 0x64	; 100
     9b4:	91 05       	cpc	r25, r1
     9b6:	09 f0       	breq	.+2      	; 0x9ba <.Loc.17>

000009b8 <L0^A>:
     9b8:	24 f4       	brge	.+8      	; 0x9c2 <.L5>

000009ba <.Loc.17>:
        {
            toestand = 9;
     9ba:	89 e0       	ldi	r24, 0x09	; 9
     9bc:	90 e0       	ldi	r25, 0x00	; 0
     9be:	9a 83       	std	Y+2, r25	; 0x02
     9c0:	89 83       	std	Y+1, r24	; 0x01

000009c2 <.L5>:
        }
        switch(toestand)
     9c2:	89 81       	ldd	r24, Y+1	; 0x01
     9c4:	9a 81       	ldd	r25, Y+2	; 0x02
     9c6:	89 30       	cpi	r24, 0x09	; 9
     9c8:	91 05       	cpc	r25, r1
     9ca:	09 f0       	breq	.+2      	; 0x9ce <L0^A+0x2>

000009cc <L0^A>:
     9cc:	c4 f4       	brge	.+48     	; 0x9fe <.L6>
     9ce:	89 81       	ldd	r24, Y+1	; 0x01
     9d0:	9a 81       	ldd	r25, Y+2	; 0x02
     9d2:	99 23       	and	r25, r25
     9d4:	2c f2       	brlt	.-118    	; 0x960 <.L51>
     9d6:	89 81       	ldd	r24, Y+1	; 0x01
     9d8:	9a 81       	ldd	r25, Y+2	; 0x02
     9da:	09 2e       	mov	r0, r25
     9dc:	00 0c       	add	r0, r0
     9de:	aa 0b       	sbc	r26, r26
     9e0:	bb 0b       	sbc	r27, r27
     9e2:	89 30       	cpi	r24, 0x09	; 9
     9e4:	91 05       	cpc	r25, r1
     9e6:	a1 05       	cpc	r26, r1
     9e8:	b1 05       	cpc	r27, r1
     9ea:	11 f0       	breq	.+4      	; 0x9f0 <L0^A+0x2>

000009ec <L0^A>:
     9ec:	08 f0       	brcs	.+2      	; 0x9f0 <L0^A+0x2>

000009ee <L0^A>:
     9ee:	b8 cf       	rjmp	.-144    	; 0x960 <.L51>
     9f0:	fc 01       	movw	r30, r24
     9f2:	88 27       	eor	r24, r24
     9f4:	ec 5b       	subi	r30, 0xBC	; 188
     9f6:	fe 4e       	sbci	r31, 0xEE	; 238
     9f8:	8f 4f       	sbci	r24, 0xFF	; 255
     9fa:	0c 94 38 0f 	jmp	0x1e70	; 0x1e70 <__tablejump2__>

000009fe <.L6>:
     9fe:	89 81       	ldd	r24, Y+1	; 0x01
     a00:	9a 81       	ldd	r25, Y+2	; 0x02
     a02:	83 36       	cpi	r24, 0x63	; 99
     a04:	91 05       	cpc	r25, r1
     a06:	09 f0       	breq	.+2      	; 0xa0a <.Loc.19>

00000a08 <L0^A>:
     a08:	ab cf       	rjmp	.-170    	; 0x960 <.L51>

00000a0a <.Loc.19>:
        {
        case 99://Noodtoestand
            h_bridgeR_set_percentage(snelheiduit);//motoren uit
     a0a:	83 e6       	ldi	r24, 0x63	; 99
     a0c:	0e 94 21 03 	call	0x642	; 0x642 <h_bridgeR_set_percentage>

00000a10 <.Loc.20>:
            h_bridgeL_set_percentage(snelheiduit);
     a10:	83 e6       	ldi	r24, 0x63	; 99
     a12:	0e 94 60 03 	call	0x6c0	; 0x6c0 <h_bridgeL_set_percentage>

00000a16 <.Loc.21>:
            if(timerteller <= 30)
     a16:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <timerteller>
     a1a:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <timerteller+0x1>

00000a1e <.Loc.22>:
     a1e:	8e 31       	cpi	r24, 0x1E	; 30
     a20:	91 05       	cpc	r25, r1
     a22:	09 f0       	breq	.+2      	; 0xa26 <.Loc.23>

00000a24 <L0^A>:
     a24:	dc f4       	brge	.+54     	; 0xa5c <.L19>

00000a26 <.Loc.23>:
            {
                PORT_buzzer &= ~(1<<buzzer);//buzzer
     a26:	82 e0       	ldi	r24, 0x02	; 2
     a28:	91 e0       	ldi	r25, 0x01	; 1
     a2a:	dc 01       	movw	r26, r24
     a2c:	2c 91       	ld	r18, X

00000a2e <.Loc.24>:
     a2e:	82 e0       	ldi	r24, 0x02	; 2
     a30:	91 e0       	ldi	r25, 0x01	; 1

00000a32 <.Loc.25>:
     a32:	27 7f       	andi	r18, 0xF7	; 247
     a34:	fc 01       	movw	r30, r24
     a36:	20 83       	st	Z, r18

00000a38 <.Loc.26>:
                PORT_LED &= ~(1<<LED_1);//LED
     a38:	82 e0       	ldi	r24, 0x02	; 2
     a3a:	91 e0       	ldi	r25, 0x01	; 1
     a3c:	dc 01       	movw	r26, r24
     a3e:	2c 91       	ld	r18, X

00000a40 <.Loc.27>:
     a40:	82 e0       	ldi	r24, 0x02	; 2
     a42:	91 e0       	ldi	r25, 0x01	; 1

00000a44 <.Loc.28>:
     a44:	2f 7e       	andi	r18, 0xEF	; 239
     a46:	fc 01       	movw	r30, r24
     a48:	20 83       	st	Z, r18

00000a4a <.Loc.29>:
                PORT_LED &= ~(1<<LED_2);//LED
     a4a:	82 e0       	ldi	r24, 0x02	; 2
     a4c:	91 e0       	ldi	r25, 0x01	; 1
     a4e:	dc 01       	movw	r26, r24
     a50:	2c 91       	ld	r18, X

00000a52 <.Loc.30>:
     a52:	82 e0       	ldi	r24, 0x02	; 2
     a54:	91 e0       	ldi	r25, 0x01	; 1

00000a56 <.Loc.31>:
     a56:	2f 7d       	andi	r18, 0xDF	; 223
     a58:	fc 01       	movw	r30, r24
     a5a:	20 83       	st	Z, r18

00000a5c <.L19>:
            }
            if(timerteller >= 30)
     a5c:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <timerteller>
     a60:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <timerteller+0x1>

00000a64 <.Loc.33>:
     a64:	8d 31       	cpi	r24, 0x1D	; 29
     a66:	91 05       	cpc	r25, r1
     a68:	41 f1       	breq	.+80     	; 0xaba <.L20>
     a6a:	3c f1       	brlt	.+78     	; 0xaba <.L20>

00000a6c <.Loc.34>:
            {
                PORT_buzzer |= (1<<buzzer);//buzzer
     a6c:	82 e0       	ldi	r24, 0x02	; 2
     a6e:	91 e0       	ldi	r25, 0x01	; 1
     a70:	dc 01       	movw	r26, r24
     a72:	2c 91       	ld	r18, X
     a74:	82 e0       	ldi	r24, 0x02	; 2
     a76:	91 e0       	ldi	r25, 0x01	; 1

00000a78 <.Loc.35>:
     a78:	28 60       	ori	r18, 0x08	; 8
     a7a:	fc 01       	movw	r30, r24
     a7c:	20 83       	st	Z, r18

00000a7e <.Loc.36>:
                PORT_LED |= (1<<LED_1);//LED
     a7e:	82 e0       	ldi	r24, 0x02	; 2
     a80:	91 e0       	ldi	r25, 0x01	; 1
     a82:	dc 01       	movw	r26, r24
     a84:	2c 91       	ld	r18, X
     a86:	82 e0       	ldi	r24, 0x02	; 2
     a88:	91 e0       	ldi	r25, 0x01	; 1

00000a8a <.Loc.37>:
     a8a:	20 61       	ori	r18, 0x10	; 16
     a8c:	fc 01       	movw	r30, r24
     a8e:	20 83       	st	Z, r18

00000a90 <.Loc.38>:
                PORT_LED |= (1<<LED_2);//LED
     a90:	82 e0       	ldi	r24, 0x02	; 2
     a92:	91 e0       	ldi	r25, 0x01	; 1
     a94:	dc 01       	movw	r26, r24
     a96:	2c 91       	ld	r18, X
     a98:	82 e0       	ldi	r24, 0x02	; 2
     a9a:	91 e0       	ldi	r25, 0x01	; 1

00000a9c <.Loc.39>:
     a9c:	20 62       	ori	r18, 0x20	; 32
     a9e:	fc 01       	movw	r30, r24
     aa0:	20 83       	st	Z, r18

00000aa2 <.Loc.40>:
                if(timerteller >= 60)
     aa2:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <timerteller>
     aa6:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <timerteller+0x1>

00000aaa <.Loc.41>:
     aaa:	8b 33       	cpi	r24, 0x3B	; 59
     aac:	91 05       	cpc	r25, r1
     aae:	29 f0       	breq	.+10     	; 0xaba <.L20>
     ab0:	24 f0       	brlt	.+8      	; 0xaba <.L20>

00000ab2 <.Loc.42>:
                {
                    timerteller = 0;
     ab2:	10 92 27 02 	sts	0x0227, r1	; 0x800227 <timerteller+0x1>
     ab6:	10 92 26 02 	sts	0x0226, r1	; 0x800226 <timerteller>

00000aba <.L20>:
                }
            }
            if((Bluetooth_Getal == 8))// && ((Noodknopport & (1<<Noodknoppin)) != 0))
     aba:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <Bluetooth_Getal>
     abe:	90 91 21 02 	lds	r25, 0x0221	; 0x800221 <Bluetooth_Getal+0x1>

00000ac2 <.Loc.44>:
     ac2:	88 30       	cpi	r24, 0x08	; 8
     ac4:	91 05       	cpc	r25, r1
     ac6:	09 f0       	breq	.+2      	; 0xaca <.Loc.45>

00000ac8 <L0^A>:
     ac8:	16 c3       	rjmp	.+1580   	; 0x10f6 <.L60>

00000aca <.Loc.45>:
            {
                toestand = 2;
     aca:	82 e0       	ldi	r24, 0x02	; 2
     acc:	90 e0       	ldi	r25, 0x00	; 0
     ace:	9a 83       	std	Y+2, r25	; 0x02
     ad0:	89 83       	std	Y+1, r24	; 0x01

00000ad2 <.Loc.46>:
            }
            break;
     ad2:	11 c3       	rjmp	.+1570   	; 0x10f6 <.L60>

00000ad4 <.L18>:
        case 0:
            PORT_LED |= (1<<LED_2);
     ad4:	82 e0       	ldi	r24, 0x02	; 2
     ad6:	91 e0       	ldi	r25, 0x01	; 1
     ad8:	dc 01       	movw	r26, r24
     ada:	2c 91       	ld	r18, X
     adc:	82 e0       	ldi	r24, 0x02	; 2
     ade:	91 e0       	ldi	r25, 0x01	; 1

00000ae0 <.Loc.48>:
     ae0:	20 62       	ori	r18, 0x20	; 32
     ae2:	fc 01       	movw	r30, r24
     ae4:	20 83       	st	Z, r18

00000ae6 <.Loc.49>:
            PORT_LED &= ~(1<<LED_1);
     ae6:	82 e0       	ldi	r24, 0x02	; 2
     ae8:	91 e0       	ldi	r25, 0x01	; 1
     aea:	dc 01       	movw	r26, r24
     aec:	2c 91       	ld	r18, X

00000aee <.Loc.50>:
     aee:	82 e0       	ldi	r24, 0x02	; 2
     af0:	91 e0       	ldi	r25, 0x01	; 1

00000af2 <.Loc.51>:
     af2:	2f 7e       	andi	r18, 0xEF	; 239
     af4:	fc 01       	movw	r30, r24
     af6:	20 83       	st	Z, r18

00000af8 <.Loc.52>:
            h_bridgeL_set_percentage(snelheiduit);//motoren uit
     af8:	83 e6       	ldi	r24, 0x63	; 99
     afa:	0e 94 60 03 	call	0x6c0	; 0x6c0 <h_bridgeL_set_percentage>

00000afe <.Loc.53>:
            h_bridgeR_set_percentage(snelheiduit);
     afe:	83 e6       	ldi	r24, 0x63	; 99
     b00:	0e 94 21 03 	call	0x642	; 0x642 <h_bridgeR_set_percentage>

00000b04 <.Loc.54>:
            if(Bluetooth_Getal == 1)//Bluetooth verbonden
     b04:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <Bluetooth_Getal>
     b08:	90 91 21 02 	lds	r25, 0x0221	; 0x800221 <Bluetooth_Getal+0x1>

00000b0c <.Loc.55>:
     b0c:	81 30       	cpi	r24, 0x01	; 1
     b0e:	91 05       	cpc	r25, r1
     b10:	09 f0       	breq	.+2      	; 0xb14 <.Loc.56>

00000b12 <L0^A>:
     b12:	f3 c2       	rjmp	.+1510   	; 0x10fa <.L61>

00000b14 <.Loc.56>:
            {
                toestand = 1;
     b14:	81 e0       	ldi	r24, 0x01	; 1
     b16:	90 e0       	ldi	r25, 0x00	; 0
     b18:	9a 83       	std	Y+2, r25	; 0x02
     b1a:	89 83       	std	Y+1, r24	; 0x01

00000b1c <.Loc.57>:
            }
            break;
     b1c:	ee c2       	rjmp	.+1500   	; 0x10fa <.L61>

00000b1e <.L17>:
        case 1://wachten op aan knop
            PORT_LED |= (1<<LED_2);
     b1e:	82 e0       	ldi	r24, 0x02	; 2
     b20:	91 e0       	ldi	r25, 0x01	; 1
     b22:	dc 01       	movw	r26, r24
     b24:	2c 91       	ld	r18, X
     b26:	82 e0       	ldi	r24, 0x02	; 2
     b28:	91 e0       	ldi	r25, 0x01	; 1

00000b2a <.Loc.59>:
     b2a:	20 62       	ori	r18, 0x20	; 32
     b2c:	fc 01       	movw	r30, r24
     b2e:	20 83       	st	Z, r18

00000b30 <.Loc.60>:
            PORT_LED |= (1<<LED_1);
     b30:	82 e0       	ldi	r24, 0x02	; 2
     b32:	91 e0       	ldi	r25, 0x01	; 1
     b34:	dc 01       	movw	r26, r24
     b36:	2c 91       	ld	r18, X
     b38:	82 e0       	ldi	r24, 0x02	; 2
     b3a:	91 e0       	ldi	r25, 0x01	; 1

00000b3c <.Loc.61>:
     b3c:	20 61       	ori	r18, 0x10	; 16
     b3e:	fc 01       	movw	r30, r24
     b40:	20 83       	st	Z, r18

00000b42 <.Loc.62>:
            h_bridgeL_set_percentage(snelheiduit);//motoren uit
     b42:	83 e6       	ldi	r24, 0x63	; 99
     b44:	0e 94 60 03 	call	0x6c0	; 0x6c0 <h_bridgeL_set_percentage>

00000b48 <.Loc.63>:
            h_bridgeR_set_percentage(snelheiduit);
     b48:	83 e6       	ldi	r24, 0x63	; 99
     b4a:	0e 94 21 03 	call	0x642	; 0x642 <h_bridgeR_set_percentage>

00000b4e <.Loc.64>:
            if(Bluetooth_Getal == 3)//Aanknop
     b4e:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <Bluetooth_Getal>
     b52:	90 91 21 02 	lds	r25, 0x0221	; 0x800221 <Bluetooth_Getal+0x1>

00000b56 <.Loc.65>:
     b56:	83 30       	cpi	r24, 0x03	; 3
     b58:	91 05       	cpc	r25, r1
     b5a:	09 f0       	breq	.+2      	; 0xb5e <.Loc.66>

00000b5c <L0^A>:
     b5c:	d0 c2       	rjmp	.+1440   	; 0x10fe <.L62>

00000b5e <.Loc.66>:
            {
                toestand = 2;
     b5e:	82 e0       	ldi	r24, 0x02	; 2
     b60:	90 e0       	ldi	r25, 0x00	; 0
     b62:	9a 83       	std	Y+2, r25	; 0x02
     b64:	89 83       	std	Y+1, r24	; 0x01

00000b66 <.Loc.67>:
            }
            break;
     b66:	cb c2       	rjmp	.+1430   	; 0x10fe <.L62>

00000b68 <.L16>:
        case 2://toestand keuze case
            PORT_LED &= ~(1<<LED_2);
     b68:	82 e0       	ldi	r24, 0x02	; 2
     b6a:	91 e0       	ldi	r25, 0x01	; 1
     b6c:	dc 01       	movw	r26, r24
     b6e:	2c 91       	ld	r18, X

00000b70 <.Loc.69>:
     b70:	82 e0       	ldi	r24, 0x02	; 2
     b72:	91 e0       	ldi	r25, 0x01	; 1

00000b74 <.Loc.70>:
     b74:	2f 7d       	andi	r18, 0xDF	; 223
     b76:	fc 01       	movw	r30, r24
     b78:	20 83       	st	Z, r18

00000b7a <.Loc.71>:
            PORT_LED |= (1<<LED_1);
     b7a:	82 e0       	ldi	r24, 0x02	; 2
     b7c:	91 e0       	ldi	r25, 0x01	; 1
     b7e:	dc 01       	movw	r26, r24
     b80:	2c 91       	ld	r18, X
     b82:	82 e0       	ldi	r24, 0x02	; 2
     b84:	91 e0       	ldi	r25, 0x01	; 1

00000b86 <.Loc.72>:
     b86:	20 61       	ori	r18, 0x10	; 16
     b88:	fc 01       	movw	r30, r24
     b8a:	20 83       	st	Z, r18

00000b8c <.Loc.73>:
            if(Bluetooth_Getal == 4)//Autonoomknop
     b8c:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <Bluetooth_Getal>
     b90:	90 91 21 02 	lds	r25, 0x0221	; 0x800221 <Bluetooth_Getal+0x1>

00000b94 <.Loc.74>:
     b94:	84 30       	cpi	r24, 0x04	; 4
     b96:	91 05       	cpc	r25, r1
     b98:	09 f0       	breq	.+2      	; 0xb9c <.Loc.75>

00000b9a <L0^A>:
     b9a:	b3 c2       	rjmp	.+1382   	; 0x1102 <.L63>

00000b9c <.Loc.75>:
            {
                toestand = 3;
     b9c:	83 e0       	ldi	r24, 0x03	; 3
     b9e:	90 e0       	ldi	r25, 0x00	; 0
     ba0:	9a 83       	std	Y+2, r25	; 0x02
     ba2:	89 83       	std	Y+1, r24	; 0x01

00000ba4 <.Loc.76>:
            }
            break;
     ba4:	ae c2       	rjmp	.+1372   	; 0x1102 <.L63>

00000ba6 <.L15>:
        case 3://rijstrook inrijden
            PORT_LED &= ~(1<<LED_2);
     ba6:	82 e0       	ldi	r24, 0x02	; 2
     ba8:	91 e0       	ldi	r25, 0x01	; 1
     baa:	dc 01       	movw	r26, r24
     bac:	2c 91       	ld	r18, X

00000bae <.Loc.78>:
     bae:	82 e0       	ldi	r24, 0x02	; 2
     bb0:	91 e0       	ldi	r25, 0x01	; 1

00000bb2 <.Loc.79>:
     bb2:	2f 7d       	andi	r18, 0xDF	; 223
     bb4:	fc 01       	movw	r30, r24
     bb6:	20 83       	st	Z, r18

00000bb8 <.Loc.80>:
            PORT_LED &= ~(1<<LED_1);
     bb8:	82 e0       	ldi	r24, 0x02	; 2
     bba:	91 e0       	ldi	r25, 0x01	; 1
     bbc:	dc 01       	movw	r26, r24
     bbe:	2c 91       	ld	r18, X

00000bc0 <.Loc.81>:
     bc0:	82 e0       	ldi	r24, 0x02	; 2
     bc2:	91 e0       	ldi	r25, 0x01	; 1

00000bc4 <.Loc.82>:
     bc4:	2f 7e       	andi	r18, 0xEF	; 239
     bc6:	fc 01       	movw	r30, r24
     bc8:	20 83       	st	Z, r18

00000bca <.Loc.83>:
            h_bridgeR_set_percentage(snelheidrechtdoor);
     bca:	81 e4       	ldi	r24, 0x41	; 65
     bcc:	0e 94 21 03 	call	0x642	; 0x642 <h_bridgeR_set_percentage>

00000bd0 <.Loc.84>:
            h_bridgeL_set_percentage(snelheidrechtdoor);
     bd0:	81 e4       	ldi	r24, 0x41	; 65
     bd2:	0e 94 60 03 	call	0x6c0	; 0x6c0 <h_bridgeL_set_percentage>

00000bd6 <.Loc.85>:
            rechtdoorrijden();
     bd6:	0e 94 00 01 	call	0x200	; 0x200 <rechtdoorrijden>

00000bda <.Loc.86>:
            if(((IRregister & (1 << IRonderrechts)) == 0) && ((IRregister & (1 << IRonderlinks)) == 0))
     bda:	86 e2       	ldi	r24, 0x26	; 38
     bdc:	90 e0       	ldi	r25, 0x00	; 0
     bde:	dc 01       	movw	r26, r24
     be0:	8c 91       	ld	r24, X

00000be2 <.Loc.87>:
     be2:	88 2f       	mov	r24, r24
     be4:	90 e0       	ldi	r25, 0x00	; 0
     be6:	84 70       	andi	r24, 0x04	; 4
     be8:	99 27       	eor	r25, r25

00000bea <.Loc.88>:
     bea:	00 97       	sbiw	r24, 0x00	; 0
     bec:	09 f0       	breq	.+2      	; 0xbf0 <.Loc.89>

00000bee <L0^A>:
     bee:	8b c2       	rjmp	.+1302   	; 0x1106 <.L64>

00000bf0 <.Loc.89>:
     bf0:	86 e2       	ldi	r24, 0x26	; 38
     bf2:	90 e0       	ldi	r25, 0x00	; 0
     bf4:	fc 01       	movw	r30, r24
     bf6:	80 81       	ld	r24, Z

00000bf8 <.Loc.90>:
     bf8:	88 2f       	mov	r24, r24
     bfa:	90 e0       	ldi	r25, 0x00	; 0
     bfc:	88 70       	andi	r24, 0x08	; 8
     bfe:	99 27       	eor	r25, r25

00000c00 <.Loc.91>:
     c00:	00 97       	sbiw	r24, 0x00	; 0
     c02:	09 f0       	breq	.+2      	; 0xc06 <.Loc.92>

00000c04 <L0^A>:
     c04:	80 c2       	rjmp	.+1280   	; 0x1106 <.L64>

00000c06 <.Loc.92>:
            {
                toestand = 4;
     c06:	84 e0       	ldi	r24, 0x04	; 4
     c08:	90 e0       	ldi	r25, 0x00	; 0
     c0a:	9a 83       	std	Y+2, r25	; 0x02
     c0c:	89 83       	std	Y+1, r24	; 0x01

00000c0e <.Loc.93>:
            }
            break;
     c0e:	7b c2       	rjmp	.+1270   	; 0x1106 <.L64>

00000c10 <.L14>:
        case 4://Tussen de balken rechtdoor
            //Motoren naar rechtdoor
            rechtdoorrijden();
     c10:	0e 94 00 01 	call	0x200	; 0x200 <rechtdoorrijden>

00000c14 <.Loc.95>:
            h_bridgeR_set_percentage(snelheidrechtdoor);
     c14:	81 e4       	ldi	r24, 0x41	; 65
     c16:	0e 94 21 03 	call	0x642	; 0x642 <h_bridgeR_set_percentage>

00000c1a <.Loc.96>:
            h_bridgeL_set_percentage(snelheidrechtdoor);
     c1a:	81 e4       	ldi	r24, 0x41	; 65
     c1c:	0e 94 60 03 	call	0x6c0	; 0x6c0 <h_bridgeL_set_percentage>

00000c20 <.Loc.97>:
            if(IRregister & (1 << IRonderrechts))
     c20:	86 e2       	ldi	r24, 0x26	; 38
     c22:	90 e0       	ldi	r25, 0x00	; 0
     c24:	dc 01       	movw	r26, r24
     c26:	8c 91       	ld	r24, X

00000c28 <.Loc.98>:
     c28:	88 2f       	mov	r24, r24
     c2a:	90 e0       	ldi	r25, 0x00	; 0
     c2c:	84 70       	andi	r24, 0x04	; 4
     c2e:	99 27       	eor	r25, r25

00000c30 <.Loc.99>:
     c30:	00 97       	sbiw	r24, 0x00	; 0
     c32:	29 f0       	breq	.+10     	; 0xc3e <.L26>

00000c34 <.Loc.100>:
            {
                toestand = 5;
     c34:	85 e0       	ldi	r24, 0x05	; 5
     c36:	90 e0       	ldi	r25, 0x00	; 0
     c38:	9a 83       	std	Y+2, r25	; 0x02
     c3a:	89 83       	std	Y+1, r24	; 0x01

00000c3c <.Loc.101>:
            }
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
            {
                //toestand = 7;
            }
            break;
     c3c:	66 c2       	rjmp	.+1228   	; 0x110a <.L65>

00000c3e <.L26>:
            else if(IRregister & (1 << IRonderlinks))
     c3e:	86 e2       	ldi	r24, 0x26	; 38
     c40:	90 e0       	ldi	r25, 0x00	; 0
     c42:	fc 01       	movw	r30, r24
     c44:	80 81       	ld	r24, Z

00000c46 <.Loc.103>:
     c46:	88 2f       	mov	r24, r24
     c48:	90 e0       	ldi	r25, 0x00	; 0
     c4a:	88 70       	andi	r24, 0x08	; 8
     c4c:	99 27       	eor	r25, r25

00000c4e <.Loc.104>:
     c4e:	00 97       	sbiw	r24, 0x00	; 0
     c50:	29 f0       	breq	.+10     	; 0xc5c <.L28>

00000c52 <.Loc.105>:
                toestand = 6;
     c52:	86 e0       	ldi	r24, 0x06	; 6
     c54:	90 e0       	ldi	r25, 0x00	; 0
     c56:	9a 83       	std	Y+2, r25	; 0x02
     c58:	89 83       	std	Y+1, r24	; 0x01

00000c5a <.Loc.106>:
            break;
     c5a:	57 c2       	rjmp	.+1198   	; 0x110a <.L65>

00000c5c <.L28>:
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
     c5c:	86 e2       	ldi	r24, 0x26	; 38
     c5e:	90 e0       	ldi	r25, 0x00	; 0
     c60:	dc 01       	movw	r26, r24
     c62:	8c 91       	ld	r24, X

00000c64 <.Loc.108>:
     c64:	88 2f       	mov	r24, r24
     c66:	90 e0       	ldi	r25, 0x00	; 0
     c68:	84 70       	andi	r24, 0x04	; 4
     c6a:	99 27       	eor	r25, r25

00000c6c <.Loc.109>:
     c6c:	00 97       	sbiw	r24, 0x00	; 0
     c6e:	09 f4       	brne	.+2      	; 0xc72 <.Loc.110>

00000c70 <L0^A>:
     c70:	4c c2       	rjmp	.+1176   	; 0x110a <.L65>

00000c72 <.Loc.110>:
     c72:	86 e2       	ldi	r24, 0x26	; 38
     c74:	90 e0       	ldi	r25, 0x00	; 0
     c76:	fc 01       	movw	r30, r24
     c78:	80 81       	ld	r24, Z

00000c7a <.Loc.111>:
            break;
     c7a:	47 c2       	rjmp	.+1166   	; 0x110a <.L65>

00000c7c <.L13>:
        case 5://Naar links rijden
            //Motoren naar rechts
            h_bridgeR_set_percentage(snelheidhard);
     c7c:	8c e3       	ldi	r24, 0x3C	; 60
     c7e:	0e 94 21 03 	call	0x642	; 0x642 <h_bridgeR_set_percentage>

00000c82 <.Loc.113>:
            h_bridgeL_set_percentage(snelheidzacht);
     c82:	86 e4       	ldi	r24, 0x46	; 70
     c84:	0e 94 60 03 	call	0x6c0	; 0x6c0 <h_bridgeL_set_percentage>

00000c88 <.Loc.114>:
            if(((IRregister & (1 << IRonderrechts)) == 0) && ((IRregister & (1 << IRonderlinks)) == 0))
     c88:	86 e2       	ldi	r24, 0x26	; 38
     c8a:	90 e0       	ldi	r25, 0x00	; 0
     c8c:	dc 01       	movw	r26, r24
     c8e:	8c 91       	ld	r24, X

00000c90 <.Loc.115>:
     c90:	88 2f       	mov	r24, r24
     c92:	90 e0       	ldi	r25, 0x00	; 0
     c94:	84 70       	andi	r24, 0x04	; 4
     c96:	99 27       	eor	r25, r25

00000c98 <.Loc.116>:
     c98:	00 97       	sbiw	r24, 0x00	; 0
     c9a:	79 f4       	brne	.+30     	; 0xcba <.L29>

00000c9c <.Loc.117>:
     c9c:	86 e2       	ldi	r24, 0x26	; 38
     c9e:	90 e0       	ldi	r25, 0x00	; 0
     ca0:	fc 01       	movw	r30, r24
     ca2:	80 81       	ld	r24, Z

00000ca4 <.Loc.118>:
     ca4:	88 2f       	mov	r24, r24
     ca6:	90 e0       	ldi	r25, 0x00	; 0
     ca8:	88 70       	andi	r24, 0x08	; 8
     caa:	99 27       	eor	r25, r25

00000cac <.Loc.119>:
     cac:	00 97       	sbiw	r24, 0x00	; 0
     cae:	29 f4       	brne	.+10     	; 0xcba <.L29>

00000cb0 <.Loc.120>:
            {
                toestand = 4;
     cb0:	84 e0       	ldi	r24, 0x04	; 4
     cb2:	90 e0       	ldi	r25, 0x00	; 0
     cb4:	9a 83       	std	Y+2, r25	; 0x02
     cb6:	89 83       	std	Y+1, r24	; 0x01

00000cb8 <.Loc.121>:
            }
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
            {
                //toestand = 7;
            }
            break;
     cb8:	2a c2       	rjmp	.+1108   	; 0x110e <.L66>

00000cba <.L29>:
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
     cba:	86 e2       	ldi	r24, 0x26	; 38
     cbc:	90 e0       	ldi	r25, 0x00	; 0
     cbe:	dc 01       	movw	r26, r24
     cc0:	8c 91       	ld	r24, X

00000cc2 <.Loc.123>:
     cc2:	88 2f       	mov	r24, r24
     cc4:	90 e0       	ldi	r25, 0x00	; 0
     cc6:	84 70       	andi	r24, 0x04	; 4
     cc8:	99 27       	eor	r25, r25

00000cca <.Loc.124>:
     cca:	00 97       	sbiw	r24, 0x00	; 0
     ccc:	09 f4       	brne	.+2      	; 0xcd0 <.Loc.125>

00000cce <L0^A>:
     cce:	1f c2       	rjmp	.+1086   	; 0x110e <.L66>

00000cd0 <.Loc.125>:
     cd0:	86 e2       	ldi	r24, 0x26	; 38
     cd2:	90 e0       	ldi	r25, 0x00	; 0
     cd4:	fc 01       	movw	r30, r24
     cd6:	80 81       	ld	r24, Z

00000cd8 <.Loc.126>:
            break;
     cd8:	1a c2       	rjmp	.+1076   	; 0x110e <.L66>

00000cda <.L12>:
        case 6://Naar rechts rijden
            //Motoren naar links
            h_bridgeR_set_percentage(snelheidzacht);
     cda:	86 e4       	ldi	r24, 0x46	; 70
     cdc:	0e 94 21 03 	call	0x642	; 0x642 <h_bridgeR_set_percentage>

00000ce0 <.Loc.128>:
            h_bridgeL_set_percentage(snelheidhard);
     ce0:	8c e3       	ldi	r24, 0x3C	; 60
     ce2:	0e 94 60 03 	call	0x6c0	; 0x6c0 <h_bridgeL_set_percentage>

00000ce6 <.Loc.129>:
            if(((IRregister & (1 << IRonderrechts)) == 0) && ((IRregister & (1 << IRonderlinks)) == 0))
     ce6:	86 e2       	ldi	r24, 0x26	; 38
     ce8:	90 e0       	ldi	r25, 0x00	; 0
     cea:	dc 01       	movw	r26, r24
     cec:	8c 91       	ld	r24, X

00000cee <.Loc.130>:
     cee:	88 2f       	mov	r24, r24
     cf0:	90 e0       	ldi	r25, 0x00	; 0
     cf2:	84 70       	andi	r24, 0x04	; 4
     cf4:	99 27       	eor	r25, r25

00000cf6 <.Loc.131>:
     cf6:	00 97       	sbiw	r24, 0x00	; 0
     cf8:	79 f4       	brne	.+30     	; 0xd18 <.L31>

00000cfa <.Loc.132>:
     cfa:	86 e2       	ldi	r24, 0x26	; 38
     cfc:	90 e0       	ldi	r25, 0x00	; 0
     cfe:	fc 01       	movw	r30, r24
     d00:	80 81       	ld	r24, Z

00000d02 <.Loc.133>:
     d02:	88 2f       	mov	r24, r24
     d04:	90 e0       	ldi	r25, 0x00	; 0
     d06:	88 70       	andi	r24, 0x08	; 8
     d08:	99 27       	eor	r25, r25

00000d0a <.Loc.134>:
     d0a:	00 97       	sbiw	r24, 0x00	; 0
     d0c:	29 f4       	brne	.+10     	; 0xd18 <.L31>

00000d0e <.Loc.135>:
            {
                toestand = 4;
     d0e:	84 e0       	ldi	r24, 0x04	; 4
     d10:	90 e0       	ldi	r25, 0x00	; 0
     d12:	9a 83       	std	Y+2, r25	; 0x02
     d14:	89 83       	std	Y+1, r24	; 0x01

00000d16 <.Loc.136>:
            }
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
            {
                toestand = 7;
            }
            break;
     d16:	fd c1       	rjmp	.+1018   	; 0x1112 <.L67>

00000d18 <.L31>:
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
     d18:	86 e2       	ldi	r24, 0x26	; 38
     d1a:	90 e0       	ldi	r25, 0x00	; 0
     d1c:	dc 01       	movw	r26, r24
     d1e:	8c 91       	ld	r24, X

00000d20 <.Loc.138>:
     d20:	88 2f       	mov	r24, r24
     d22:	90 e0       	ldi	r25, 0x00	; 0
     d24:	84 70       	andi	r24, 0x04	; 4
     d26:	99 27       	eor	r25, r25

00000d28 <.Loc.139>:
     d28:	00 97       	sbiw	r24, 0x00	; 0
     d2a:	09 f4       	brne	.+2      	; 0xd2e <.Loc.140>

00000d2c <L0^A>:
     d2c:	f2 c1       	rjmp	.+996    	; 0x1112 <.L67>

00000d2e <.Loc.140>:
     d2e:	86 e2       	ldi	r24, 0x26	; 38
     d30:	90 e0       	ldi	r25, 0x00	; 0
     d32:	fc 01       	movw	r30, r24
     d34:	80 81       	ld	r24, Z

00000d36 <.Loc.141>:
     d36:	88 2f       	mov	r24, r24
     d38:	90 e0       	ldi	r25, 0x00	; 0
     d3a:	88 70       	andi	r24, 0x08	; 8
     d3c:	99 27       	eor	r25, r25

00000d3e <.Loc.142>:
     d3e:	00 97       	sbiw	r24, 0x00	; 0
     d40:	09 f4       	brne	.+2      	; 0xd44 <.Loc.143>

00000d42 <L0^A>:
     d42:	e7 c1       	rjmp	.+974    	; 0x1112 <.L67>

00000d44 <.Loc.143>:
                toestand = 7;
     d44:	87 e0       	ldi	r24, 0x07	; 7
     d46:	90 e0       	ldi	r25, 0x00	; 0
     d48:	9a 83       	std	Y+2, r25	; 0x02
     d4a:	89 83       	std	Y+1, r24	; 0x01

00000d4c <.Loc.144>:
            break;
     d4c:	e2 c1       	rjmp	.+964    	; 0x1112 <.L67>

00000d4e <.L11>:
     d4e:	80 e0       	ldi	r24, 0x00	; 0
     d50:	90 e0       	ldi	r25, 0x00	; 0
     d52:	aa ef       	ldi	r26, 0xFA	; 250
     d54:	b4 e4       	ldi	r27, 0x44	; 68
     d56:	8d 83       	std	Y+5, r24	; 0x05
     d58:	9e 83       	std	Y+6, r25	; 0x06
     d5a:	af 83       	std	Y+7, r26	; 0x07
     d5c:	b8 87       	std	Y+8, r27	; 0x08

00000d5e <.LBB64>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     d5e:	20 e0       	ldi	r18, 0x00	; 0
     d60:	30 e0       	ldi	r19, 0x00	; 0
     d62:	4a e7       	ldi	r20, 0x7A	; 122
     d64:	55 e4       	ldi	r21, 0x45	; 69
     d66:	6d 81       	ldd	r22, Y+5	; 0x05
     d68:	7e 81       	ldd	r23, Y+6	; 0x06
     d6a:	8f 81       	ldd	r24, Y+7	; 0x07
     d6c:	98 85       	ldd	r25, Y+8	; 0x08
     d6e:	0e 94 d5 10 	call	0x21aa	; 0x21aa <__mulsf3>
     d72:	69 a7       	std	Y+41, r22	; 0x29
     d74:	7a a7       	std	Y+42, r23	; 0x2a
     d76:	8b a7       	std	Y+43, r24	; 0x2b
     d78:	9c a7       	std	Y+44, r25	; 0x2c
     d7a:	89 a5       	ldd	r24, Y+41	; 0x29
     d7c:	9a a5       	ldd	r25, Y+42	; 0x2a
     d7e:	ab a5       	ldd	r26, Y+43	; 0x2b
     d80:	bc a5       	ldd	r27, Y+44	; 0x2c
     d82:	89 87       	std	Y+9, r24	; 0x09
     d84:	9a 87       	std	Y+10, r25	; 0x0a
     d86:	ab 87       	std	Y+11, r26	; 0x0b
     d88:	bc 87       	std	Y+12, r27	; 0x0c

00000d8a <.Loc.146>:
	if (__tmp < 1.0)
     d8a:	20 e0       	ldi	r18, 0x00	; 0
     d8c:	30 e0       	ldi	r19, 0x00	; 0
     d8e:	40 e8       	ldi	r20, 0x80	; 128
     d90:	5f e3       	ldi	r21, 0x3F	; 63
     d92:	69 85       	ldd	r22, Y+9	; 0x09
     d94:	7a 85       	ldd	r23, Y+10	; 0x0a
     d96:	8b 85       	ldd	r24, Y+11	; 0x0b
     d98:	9c 85       	ldd	r25, Y+12	; 0x0c
     d9a:	0e 94 71 0f 	call	0x1ee2	; 0x1ee2 <__cmpsf2>
     d9e:	88 23       	and	r24, r24
     da0:	2c f4       	brge	.+10     	; 0xdac <.L56>

00000da2 <.Loc.147>:
		__ticks = 1;
     da2:	81 e0       	ldi	r24, 0x01	; 1
     da4:	90 e0       	ldi	r25, 0x00	; 0
     da6:	9e 87       	std	Y+14, r25	; 0x0e
     da8:	8d 87       	std	Y+13, r24	; 0x0d
     daa:	55 c0       	rjmp	.+170    	; 0xe56 <.L35>

00000dac <.L56>:
	else if (__tmp > 65535)
     dac:	20 e0       	ldi	r18, 0x00	; 0
     dae:	3f ef       	ldi	r19, 0xFF	; 255
     db0:	4f e7       	ldi	r20, 0x7F	; 127
     db2:	57 e4       	ldi	r21, 0x47	; 71
     db4:	69 85       	ldd	r22, Y+9	; 0x09
     db6:	7a 85       	ldd	r23, Y+10	; 0x0a
     db8:	8b 85       	ldd	r24, Y+11	; 0x0b
     dba:	9c 85       	ldd	r25, Y+12	; 0x0c
     dbc:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <__gesf2>
     dc0:	88 23       	and	r24, r24
     dc2:	d9 f1       	breq	.+118    	; 0xe3a <.L57>
     dc4:	d4 f1       	brlt	.+116    	; 0xe3a <.L57>

00000dc6 <.Loc.149>:
		__ticks = (uint16_t) (__ms * 10.0);
     dc6:	20 e0       	ldi	r18, 0x00	; 0
     dc8:	30 e0       	ldi	r19, 0x00	; 0
     dca:	40 e2       	ldi	r20, 0x20	; 32
     dcc:	51 e4       	ldi	r21, 0x41	; 65
     dce:	6d 81       	ldd	r22, Y+5	; 0x05
     dd0:	7e 81       	ldd	r23, Y+6	; 0x06
     dd2:	8f 81       	ldd	r24, Y+7	; 0x07
     dd4:	98 85       	ldd	r25, Y+8	; 0x08
     dd6:	0e 94 d5 10 	call	0x21aa	; 0x21aa <__mulsf3>
     dda:	6d a7       	std	Y+45, r22	; 0x2d
     ddc:	7e a7       	std	Y+46, r23	; 0x2e
     dde:	8f a7       	std	Y+47, r24	; 0x2f
     de0:	98 ab       	std	Y+48, r25	; 0x30
     de2:	8d a5       	ldd	r24, Y+45	; 0x2d
     de4:	9e a5       	ldd	r25, Y+46	; 0x2e
     de6:	af a5       	ldd	r26, Y+47	; 0x2f
     de8:	b8 a9       	ldd	r27, Y+48	; 0x30
     dea:	89 a3       	std	Y+33, r24	; 0x21
     dec:	9a a3       	std	Y+34, r25	; 0x22
     dee:	ab a3       	std	Y+35, r26	; 0x23
     df0:	bc a3       	std	Y+36, r27	; 0x24

00000df2 <.Loc.150>:
     df2:	69 a1       	ldd	r22, Y+33	; 0x21
     df4:	7a a1       	ldd	r23, Y+34	; 0x22
     df6:	8b a1       	ldd	r24, Y+35	; 0x23
     df8:	9c a1       	ldd	r25, Y+36	; 0x24
     dfa:	0e 94 ef 0f 	call	0x1fde	; 0x1fde <__fixunssfsi>
     dfe:	69 ab       	std	Y+49, r22	; 0x31
     e00:	7a ab       	std	Y+50, r23	; 0x32
     e02:	8b ab       	std	Y+51, r24	; 0x33
     e04:	9c ab       	std	Y+52, r25	; 0x34
     e06:	a9 a9       	ldd	r26, Y+49	; 0x31
     e08:	ba a9       	ldd	r27, Y+50	; 0x32
     e0a:	be 87       	std	Y+14, r27	; 0x0e
     e0c:	ad 87       	std	Y+13, r26	; 0x0d

00000e0e <.Loc.151>:
		while(__ticks)
     e0e:	10 c0       	rjmp	.+32     	; 0xe30 <.L38>

00000e10 <.L39>:
     e10:	80 e9       	ldi	r24, 0x90	; 144
     e12:	91 e0       	ldi	r25, 0x01	; 1
     e14:	98 8b       	std	Y+16, r25	; 0x10
     e16:	8f 87       	std	Y+15, r24	; 0x0f

00000e18 <.LBB66>:
     e18:	8f 85       	ldd	r24, Y+15	; 0x0f
     e1a:	98 89       	ldd	r25, Y+16	; 0x10

00000e1c <.L1^B1>:
     e1c:	01 97       	sbiw	r24, 0x01	; 1
     e1e:	f1 f7       	brne	.-4      	; 0xe1c <.L1^B1>
     e20:	98 8b       	std	Y+16, r25	; 0x10
     e22:	8f 87       	std	Y+15, r24	; 0x0f

00000e24 <.Loc.153>:
	...

00000e26 <.LBE66>:
			__ticks --;
     e26:	8d 85       	ldd	r24, Y+13	; 0x0d
     e28:	9e 85       	ldd	r25, Y+14	; 0x0e
     e2a:	01 97       	sbiw	r24, 0x01	; 1
     e2c:	9e 87       	std	Y+14, r25	; 0x0e
     e2e:	8d 87       	std	Y+13, r24	; 0x0d

00000e30 <.L38>:
		while(__ticks)
     e30:	8d 85       	ldd	r24, Y+13	; 0x0d
     e32:	9e 85       	ldd	r25, Y+14	; 0x0e
     e34:	00 97       	sbiw	r24, 0x00	; 0
     e36:	61 f7       	brne	.-40     	; 0xe10 <.L39>

00000e38 <.Loc.156>:
		return;
     e38:	19 c0       	rjmp	.+50     	; 0xe6c <.L40>

00000e3a <.L57>:
		__ticks = (uint16_t)__tmp;
     e3a:	69 85       	ldd	r22, Y+9	; 0x09
     e3c:	7a 85       	ldd	r23, Y+10	; 0x0a
     e3e:	8b 85       	ldd	r24, Y+11	; 0x0b
     e40:	9c 85       	ldd	r25, Y+12	; 0x0c
     e42:	0e 94 ef 0f 	call	0x1fde	; 0x1fde <__fixunssfsi>
     e46:	6d ab       	std	Y+53, r22	; 0x35
     e48:	7e ab       	std	Y+54, r23	; 0x36
     e4a:	8f ab       	std	Y+55, r24	; 0x37
     e4c:	98 af       	std	Y+56, r25	; 0x38
     e4e:	ed a9       	ldd	r30, Y+53	; 0x35
     e50:	fe a9       	ldd	r31, Y+54	; 0x36
     e52:	fe 87       	std	Y+14, r31	; 0x0e
     e54:	ed 87       	std	Y+13, r30	; 0x0d

00000e56 <.L35>:
     e56:	8d 85       	ldd	r24, Y+13	; 0x0d
     e58:	9e 85       	ldd	r25, Y+14	; 0x0e
     e5a:	9a 8b       	std	Y+18, r25	; 0x12
     e5c:	89 8b       	std	Y+17, r24	; 0x11

00000e5e <.LBB68>:
     e5e:	89 89       	ldd	r24, Y+17	; 0x11
     e60:	9a 89       	ldd	r25, Y+18	; 0x12

00000e62 <.L1^B2>:
     e62:	01 97       	sbiw	r24, 0x01	; 1
     e64:	f1 f7       	brne	.-4      	; 0xe62 <.L1^B2>
     e66:	9a 8b       	std	Y+18, r25	; 0x12
     e68:	89 8b       	std	Y+17, r24	; 0x11

00000e6a <.Loc.159>:
	...

00000e6c <.L40>:
        case 7://Balken niet meer in zicht en bocht maken
            _delay_ms(2000);
            h_bridgeR_set_percentage(snelheidhard);
     e6c:	8c e3       	ldi	r24, 0x3C	; 60
     e6e:	0e 94 21 03 	call	0x642	; 0x642 <h_bridgeR_set_percentage>

00000e72 <.Loc.161>:
            h_bridgeL_set_percentage(snelheidzacht);
     e72:	86 e4       	ldi	r24, 0x46	; 70
     e74:	0e 94 60 03 	call	0x6c0	; 0x6c0 <h_bridgeL_set_percentage>

00000e78 <.Loc.162>:
            if(((IRregister & (1 << IRonderlinks)) == 0) && ((IRregister & (1 << IRonderrechts)) == 0))
     e78:	86 e2       	ldi	r24, 0x26	; 38
     e7a:	90 e0       	ldi	r25, 0x00	; 0
     e7c:	dc 01       	movw	r26, r24
     e7e:	8c 91       	ld	r24, X

00000e80 <.Loc.163>:
     e80:	88 2f       	mov	r24, r24
     e82:	90 e0       	ldi	r25, 0x00	; 0
     e84:	88 70       	andi	r24, 0x08	; 8
     e86:	99 27       	eor	r25, r25

00000e88 <.Loc.164>:
     e88:	00 97       	sbiw	r24, 0x00	; 0
     e8a:	09 f0       	breq	.+2      	; 0xe8e <.Loc.165>

00000e8c <L0^A>:
     e8c:	44 c1       	rjmp	.+648    	; 0x1116 <.L68>

00000e8e <.Loc.165>:
     e8e:	86 e2       	ldi	r24, 0x26	; 38
     e90:	90 e0       	ldi	r25, 0x00	; 0
     e92:	fc 01       	movw	r30, r24
     e94:	80 81       	ld	r24, Z

00000e96 <.Loc.166>:
     e96:	88 2f       	mov	r24, r24
     e98:	90 e0       	ldi	r25, 0x00	; 0
     e9a:	84 70       	andi	r24, 0x04	; 4
     e9c:	99 27       	eor	r25, r25

00000e9e <.Loc.167>:
     e9e:	00 97       	sbiw	r24, 0x00	; 0
     ea0:	09 f0       	breq	.+2      	; 0xea4 <.Loc.168>

00000ea2 <L0^A>:
     ea2:	39 c1       	rjmp	.+626    	; 0x1116 <.L68>

00000ea4 <.Loc.168>:
            {
                toestand = 4;
     ea4:	84 e0       	ldi	r24, 0x04	; 4
     ea6:	90 e0       	ldi	r25, 0x00	; 0
     ea8:	9a 83       	std	Y+2, r25	; 0x02
     eaa:	89 83       	std	Y+1, r24	; 0x01

00000eac <.Loc.169>:
            }
            break;
     eac:	34 c1       	rjmp	.+616    	; 0x1116 <.L68>

00000eae <.L10>:
        case 8://signaleren
            h_bridgeR_set_percentage(snelheiduit);
     eae:	83 e6       	ldi	r24, 0x63	; 99
     eb0:	0e 94 21 03 	call	0x642	; 0x642 <h_bridgeR_set_percentage>

00000eb4 <.Loc.171>:
            h_bridgeL_set_percentage(snelheiduit);
     eb4:	83 e6       	ldi	r24, 0x63	; 99
     eb6:	0e 94 60 03 	call	0x6c0	; 0x6c0 <h_bridgeL_set_percentage>

00000eba <.Loc.172>:
            PORT_LED |= (1<<LED_1);         // LED 1 aan
     eba:	82 e0       	ldi	r24, 0x02	; 2
     ebc:	91 e0       	ldi	r25, 0x01	; 1
     ebe:	dc 01       	movw	r26, r24
     ec0:	2c 91       	ld	r18, X
     ec2:	82 e0       	ldi	r24, 0x02	; 2
     ec4:	91 e0       	ldi	r25, 0x01	; 1

00000ec6 <.Loc.173>:
     ec6:	20 61       	ori	r18, 0x10	; 16
     ec8:	fc 01       	movw	r30, r24
     eca:	20 83       	st	Z, r18

00000ecc <.Loc.174>:
            PORT_LED |= (1<<LED_2);        // LED 2 uit
     ecc:	82 e0       	ldi	r24, 0x02	; 2
     ece:	91 e0       	ldi	r25, 0x01	; 1
     ed0:	dc 01       	movw	r26, r24
     ed2:	2c 91       	ld	r18, X
     ed4:	82 e0       	ldi	r24, 0x02	; 2
     ed6:	91 e0       	ldi	r25, 0x01	; 1

00000ed8 <.Loc.175>:
     ed8:	20 62       	ori	r18, 0x20	; 32
     eda:	fc 01       	movw	r30, r24
     edc:	20 83       	st	Z, r18

00000ede <.Loc.176>:
            PORT_buzzer |= (1<<buzzer);     // buzzer aan
     ede:	82 e0       	ldi	r24, 0x02	; 2
     ee0:	91 e0       	ldi	r25, 0x01	; 1
     ee2:	dc 01       	movw	r26, r24
     ee4:	2c 91       	ld	r18, X
     ee6:	82 e0       	ldi	r24, 0x02	; 2
     ee8:	91 e0       	ldi	r25, 0x01	; 1

00000eea <.Loc.177>:
     eea:	28 60       	ori	r18, 0x08	; 8
     eec:	fc 01       	movw	r30, r24
     eee:	20 83       	st	Z, r18
     ef0:	80 e0       	ldi	r24, 0x00	; 0
     ef2:	90 e0       	ldi	r25, 0x00	; 0
     ef4:	aa ef       	ldi	r26, 0xFA	; 250
     ef6:	b3 e4       	ldi	r27, 0x43	; 67
     ef8:	8b 8b       	std	Y+19, r24	; 0x13
     efa:	9c 8b       	std	Y+20, r25	; 0x14
     efc:	ad 8b       	std	Y+21, r26	; 0x15
     efe:	be 8b       	std	Y+22, r27	; 0x16

00000f00 <.LBB70>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     f00:	20 e0       	ldi	r18, 0x00	; 0
     f02:	30 e0       	ldi	r19, 0x00	; 0
     f04:	4a e7       	ldi	r20, 0x7A	; 122
     f06:	55 e4       	ldi	r21, 0x45	; 69
     f08:	6b 89       	ldd	r22, Y+19	; 0x13
     f0a:	7c 89       	ldd	r23, Y+20	; 0x14
     f0c:	8d 89       	ldd	r24, Y+21	; 0x15
     f0e:	9e 89       	ldd	r25, Y+22	; 0x16
     f10:	0e 94 d5 10 	call	0x21aa	; 0x21aa <__mulsf3>
     f14:	69 af       	std	Y+57, r22	; 0x39
     f16:	7a af       	std	Y+58, r23	; 0x3a
     f18:	8b af       	std	Y+59, r24	; 0x3b
     f1a:	9c af       	std	Y+60, r25	; 0x3c
     f1c:	89 ad       	ldd	r24, Y+57	; 0x39
     f1e:	9a ad       	ldd	r25, Y+58	; 0x3a
     f20:	ab ad       	ldd	r26, Y+59	; 0x3b
     f22:	bc ad       	ldd	r27, Y+60	; 0x3c
     f24:	8f 8b       	std	Y+23, r24	; 0x17
     f26:	98 8f       	std	Y+24, r25	; 0x18
     f28:	a9 8f       	std	Y+25, r26	; 0x19
     f2a:	ba 8f       	std	Y+26, r27	; 0x1a

00000f2c <.Loc.179>:
	if (__tmp < 1.0)
     f2c:	20 e0       	ldi	r18, 0x00	; 0
     f2e:	30 e0       	ldi	r19, 0x00	; 0
     f30:	40 e8       	ldi	r20, 0x80	; 128
     f32:	5f e3       	ldi	r21, 0x3F	; 63
     f34:	6f 89       	ldd	r22, Y+23	; 0x17
     f36:	78 8d       	ldd	r23, Y+24	; 0x18
     f38:	89 8d       	ldd	r24, Y+25	; 0x19
     f3a:	9a 8d       	ldd	r25, Y+26	; 0x1a
     f3c:	0e 94 71 0f 	call	0x1ee2	; 0x1ee2 <__cmpsf2>
     f40:	88 23       	and	r24, r24
     f42:	2c f4       	brge	.+10     	; 0xf4e <.L58>

00000f44 <.Loc.180>:
		__ticks = 1;
     f44:	81 e0       	ldi	r24, 0x01	; 1
     f46:	90 e0       	ldi	r25, 0x00	; 0
     f48:	9c 8f       	std	Y+28, r25	; 0x1c
     f4a:	8b 8f       	std	Y+27, r24	; 0x1b
     f4c:	62 c0       	rjmp	.+196    	; 0x1012 <.L44>

00000f4e <.L58>:
	else if (__tmp > 65535)
     f4e:	20 e0       	ldi	r18, 0x00	; 0
     f50:	3f ef       	ldi	r19, 0xFF	; 255
     f52:	4f e7       	ldi	r20, 0x7F	; 127
     f54:	57 e4       	ldi	r21, 0x47	; 71
     f56:	6f 89       	ldd	r22, Y+23	; 0x17
     f58:	78 8d       	ldd	r23, Y+24	; 0x18
     f5a:	89 8d       	ldd	r24, Y+25	; 0x19
     f5c:	9a 8d       	ldd	r25, Y+26	; 0x1a
     f5e:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <__gesf2>
     f62:	88 23       	and	r24, r24
     f64:	09 f0       	breq	.+2      	; 0xf68 <L0^A>

00000f66 <L0^A>:
     f66:	0c f4       	brge	.+2      	; 0xf6a <.Loc.182>

00000f68 <L0^A>:
     f68:	42 c0       	rjmp	.+132    	; 0xfee <.L59>

00000f6a <.Loc.182>:
		__ticks = (uint16_t) (__ms * 10.0);
     f6a:	20 e0       	ldi	r18, 0x00	; 0
     f6c:	30 e0       	ldi	r19, 0x00	; 0
     f6e:	40 e2       	ldi	r20, 0x20	; 32
     f70:	51 e4       	ldi	r21, 0x41	; 65
     f72:	6b 89       	ldd	r22, Y+19	; 0x13
     f74:	7c 89       	ldd	r23, Y+20	; 0x14
     f76:	8d 89       	ldd	r24, Y+21	; 0x15
     f78:	9e 89       	ldd	r25, Y+22	; 0x16
     f7a:	0e 94 d5 10 	call	0x21aa	; 0x21aa <__mulsf3>
     f7e:	21 96       	adiw	r28, 0x01	; 1
     f80:	6c af       	std	Y+60, r22	; 0x3c
     f82:	7d af       	std	Y+61, r23	; 0x3d
     f84:	8e af       	std	Y+62, r24	; 0x3e
     f86:	9f af       	std	Y+63, r25	; 0x3f
     f88:	21 97       	sbiw	r28, 0x01	; 1
     f8a:	21 96       	adiw	r28, 0x01	; 1
     f8c:	8c ad       	ldd	r24, Y+60	; 0x3c
     f8e:	9d ad       	ldd	r25, Y+61	; 0x3d
     f90:	ae ad       	ldd	r26, Y+62	; 0x3e
     f92:	bf ad       	ldd	r27, Y+63	; 0x3f
     f94:	21 97       	sbiw	r28, 0x01	; 1
     f96:	8d a3       	std	Y+37, r24	; 0x25
     f98:	9e a3       	std	Y+38, r25	; 0x26
     f9a:	af a3       	std	Y+39, r26	; 0x27
     f9c:	b8 a7       	std	Y+40, r27	; 0x28

00000f9e <.Loc.183>:
     f9e:	6d a1       	ldd	r22, Y+37	; 0x25
     fa0:	7e a1       	ldd	r23, Y+38	; 0x26
     fa2:	8f a1       	ldd	r24, Y+39	; 0x27
     fa4:	98 a5       	ldd	r25, Y+40	; 0x28
     fa6:	0e 94 ef 0f 	call	0x1fde	; 0x1fde <__fixunssfsi>
     faa:	25 96       	adiw	r28, 0x05	; 5
     fac:	6c af       	std	Y+60, r22	; 0x3c
     fae:	7d af       	std	Y+61, r23	; 0x3d
     fb0:	8e af       	std	Y+62, r24	; 0x3e
     fb2:	9f af       	std	Y+63, r25	; 0x3f
     fb4:	25 97       	sbiw	r28, 0x05	; 5
     fb6:	23 96       	adiw	r28, 0x03	; 3
     fb8:	ae ad       	ldd	r26, Y+62	; 0x3e
     fba:	bf ad       	ldd	r27, Y+63	; 0x3f
     fbc:	23 97       	sbiw	r28, 0x03	; 3
     fbe:	bc 8f       	std	Y+28, r27	; 0x1c
     fc0:	ab 8f       	std	Y+27, r26	; 0x1b

00000fc2 <.Loc.184>:
		while(__ticks)
     fc2:	10 c0       	rjmp	.+32     	; 0xfe4 <.L47>

00000fc4 <.L48>:
     fc4:	80 e9       	ldi	r24, 0x90	; 144
     fc6:	91 e0       	ldi	r25, 0x01	; 1
     fc8:	9e 8f       	std	Y+30, r25	; 0x1e
     fca:	8d 8f       	std	Y+29, r24	; 0x1d

00000fcc <.LBB72>:
     fcc:	8d 8d       	ldd	r24, Y+29	; 0x1d
     fce:	9e 8d       	ldd	r25, Y+30	; 0x1e

00000fd0 <.L1^B3>:
     fd0:	01 97       	sbiw	r24, 0x01	; 1
     fd2:	f1 f7       	brne	.-4      	; 0xfd0 <.L1^B3>
     fd4:	9e 8f       	std	Y+30, r25	; 0x1e
     fd6:	8d 8f       	std	Y+29, r24	; 0x1d

00000fd8 <.Loc.186>:
	...

00000fda <.LBE72>:
			__ticks --;
     fda:	8b 8d       	ldd	r24, Y+27	; 0x1b
     fdc:	9c 8d       	ldd	r25, Y+28	; 0x1c
     fde:	01 97       	sbiw	r24, 0x01	; 1
     fe0:	9c 8f       	std	Y+28, r25	; 0x1c
     fe2:	8b 8f       	std	Y+27, r24	; 0x1b

00000fe4 <.L47>:
		while(__ticks)
     fe4:	8b 8d       	ldd	r24, Y+27	; 0x1b
     fe6:	9c 8d       	ldd	r25, Y+28	; 0x1c
     fe8:	00 97       	sbiw	r24, 0x00	; 0
     fea:	61 f7       	brne	.-40     	; 0xfc4 <.L48>

00000fec <.Loc.189>:
		return;
     fec:	1d c0       	rjmp	.+58     	; 0x1028 <.L49>

00000fee <.L59>:
		__ticks = (uint16_t)__tmp;
     fee:	6f 89       	ldd	r22, Y+23	; 0x17
     ff0:	78 8d       	ldd	r23, Y+24	; 0x18
     ff2:	89 8d       	ldd	r24, Y+25	; 0x19
     ff4:	9a 8d       	ldd	r25, Y+26	; 0x1a
     ff6:	0e 94 ef 0f 	call	0x1fde	; 0x1fde <__fixunssfsi>
     ffa:	29 96       	adiw	r28, 0x09	; 9
     ffc:	6c af       	std	Y+60, r22	; 0x3c
     ffe:	7d af       	std	Y+61, r23	; 0x3d
    1000:	8e af       	std	Y+62, r24	; 0x3e
    1002:	9f af       	std	Y+63, r25	; 0x3f
    1004:	29 97       	sbiw	r28, 0x09	; 9
    1006:	27 96       	adiw	r28, 0x07	; 7
    1008:	ee ad       	ldd	r30, Y+62	; 0x3e
    100a:	ff ad       	ldd	r31, Y+63	; 0x3f
    100c:	27 97       	sbiw	r28, 0x07	; 7
    100e:	fc 8f       	std	Y+28, r31	; 0x1c
    1010:	eb 8f       	std	Y+27, r30	; 0x1b

00001012 <.L44>:
    1012:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1014:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1016:	98 a3       	std	Y+32, r25	; 0x20
    1018:	8f 8f       	std	Y+31, r24	; 0x1f

0000101a <.LBB74>:
    101a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    101c:	98 a1       	ldd	r25, Y+32	; 0x20

0000101e <.L1^B4>:
    101e:	01 97       	sbiw	r24, 0x01	; 1
    1020:	f1 f7       	brne	.-4      	; 0x101e <.L1^B4>
    1022:	98 a3       	std	Y+32, r25	; 0x20
    1024:	8f 8f       	std	Y+31, r24	; 0x1f

00001026 <.Loc.192>:
	...

00001028 <.L49>:
            _delay_ms(500);
            PORT_LED &= ~(1<<LED_2);         // LED 2 aan
    1028:	82 e0       	ldi	r24, 0x02	; 2
    102a:	91 e0       	ldi	r25, 0x01	; 1
    102c:	dc 01       	movw	r26, r24
    102e:	2c 91       	ld	r18, X

00001030 <.Loc.194>:
    1030:	82 e0       	ldi	r24, 0x02	; 2
    1032:	91 e0       	ldi	r25, 0x01	; 1

00001034 <.Loc.195>:
    1034:	2f 7d       	andi	r18, 0xDF	; 223
    1036:	fc 01       	movw	r30, r24
    1038:	20 83       	st	Z, r18

0000103a <.Loc.196>:
            PORT_LED &= ~(1<<LED_1);        // LED 1 uit
    103a:	82 e0       	ldi	r24, 0x02	; 2
    103c:	91 e0       	ldi	r25, 0x01	; 1
    103e:	dc 01       	movw	r26, r24
    1040:	2c 91       	ld	r18, X

00001042 <.Loc.197>:
    1042:	82 e0       	ldi	r24, 0x02	; 2
    1044:	91 e0       	ldi	r25, 0x01	; 1

00001046 <.Loc.198>:
    1046:	2f 7e       	andi	r18, 0xEF	; 239
    1048:	fc 01       	movw	r30, r24
    104a:	20 83       	st	Z, r18

0000104c <.Loc.199>:
            PORT_buzzer &= ~(1<<buzzer);    // buzzer uit
    104c:	82 e0       	ldi	r24, 0x02	; 2
    104e:	91 e0       	ldi	r25, 0x01	; 1
    1050:	dc 01       	movw	r26, r24
    1052:	2c 91       	ld	r18, X

00001054 <.Loc.200>:
    1054:	82 e0       	ldi	r24, 0x02	; 2
    1056:	91 e0       	ldi	r25, 0x01	; 1

00001058 <.Loc.201>:
    1058:	27 7f       	andi	r18, 0xF7	; 247
    105a:	fc 01       	movw	r30, r24
    105c:	20 83       	st	Z, r18

0000105e <.Loc.202>:
            //signaal_geven();
            toestand = 4;
    105e:	84 e0       	ldi	r24, 0x04	; 4
    1060:	90 e0       	ldi	r25, 0x00	; 0
    1062:	9a 83       	std	Y+2, r25	; 0x02
    1064:	89 83       	std	Y+1, r24	; 0x01

00001066 <.Loc.203>:
            break;
    1066:	5a c0       	rjmp	.+180    	; 0x111c <.L7>

00001068 <.L8>:
        case 9://Voorultrasoon ziet iets
            h_bridgeR_set_percentage(snelheiduit);
    1068:	83 e6       	ldi	r24, 0x63	; 99
    106a:	0e 94 21 03 	call	0x642	; 0x642 <h_bridgeR_set_percentage>

0000106e <.Loc.205>:
            h_bridgeL_set_percentage(snelheiduit);
    106e:	83 e6       	ldi	r24, 0x63	; 99
    1070:	0e 94 60 03 	call	0x6c0	; 0x6c0 <h_bridgeL_set_percentage>

00001074 <.Loc.206>:
            PORT_LED |= (1<<LED_1);
    1074:	82 e0       	ldi	r24, 0x02	; 2
    1076:	91 e0       	ldi	r25, 0x01	; 1
    1078:	dc 01       	movw	r26, r24
    107a:	2c 91       	ld	r18, X
    107c:	82 e0       	ldi	r24, 0x02	; 2
    107e:	91 e0       	ldi	r25, 0x01	; 1

00001080 <.Loc.207>:
    1080:	20 61       	ori	r18, 0x10	; 16
    1082:	fc 01       	movw	r30, r24
    1084:	20 83       	st	Z, r18

00001086 <.Loc.208>:
            PORT_LED |= (1<<LED_2);
    1086:	82 e0       	ldi	r24, 0x02	; 2
    1088:	91 e0       	ldi	r25, 0x01	; 1
    108a:	dc 01       	movw	r26, r24
    108c:	2c 91       	ld	r18, X
    108e:	82 e0       	ldi	r24, 0x02	; 2
    1090:	91 e0       	ldi	r25, 0x01	; 1

00001092 <.Loc.209>:
    1092:	20 62       	ori	r18, 0x20	; 32
    1094:	fc 01       	movw	r30, r24
    1096:	20 83       	st	Z, r18

00001098 <.Loc.210>:
            PORT_buzzer |= (1<<buzzer);
    1098:	82 e0       	ldi	r24, 0x02	; 2
    109a:	91 e0       	ldi	r25, 0x01	; 1
    109c:	dc 01       	movw	r26, r24
    109e:	2c 91       	ld	r18, X
    10a0:	82 e0       	ldi	r24, 0x02	; 2
    10a2:	91 e0       	ldi	r25, 0x01	; 1

000010a4 <.Loc.211>:
    10a4:	28 60       	ori	r18, 0x08	; 8
    10a6:	fc 01       	movw	r30, r24
    10a8:	20 83       	st	Z, r18

000010aa <.Loc.212>:
            PORTB &= ~(1 << PB7);
    10aa:	85 e2       	ldi	r24, 0x25	; 37
    10ac:	90 e0       	ldi	r25, 0x00	; 0
    10ae:	dc 01       	movw	r26, r24
    10b0:	2c 91       	ld	r18, X

000010b2 <.Loc.213>:
    10b2:	85 e2       	ldi	r24, 0x25	; 37
    10b4:	90 e0       	ldi	r25, 0x00	; 0

000010b6 <.Loc.214>:
    10b6:	2f 77       	andi	r18, 0x7F	; 127
    10b8:	fc 01       	movw	r30, r24
    10ba:	20 83       	st	Z, r18

000010bc <.Loc.215>:
            if(waarde > 60)
    10bc:	8b 81       	ldd	r24, Y+3	; 0x03
    10be:	9c 81       	ldd	r25, Y+4	; 0x04
    10c0:	8c 33       	cpi	r24, 0x3C	; 60
    10c2:	91 05       	cpc	r25, r1
    10c4:	51 f1       	breq	.+84     	; 0x111a <.L69>
    10c6:	4c f1       	brlt	.+82     	; 0x111a <.L69>

000010c8 <.Loc.216>:
            {
                PORTB |= (1 << PB7);
    10c8:	85 e2       	ldi	r24, 0x25	; 37
    10ca:	90 e0       	ldi	r25, 0x00	; 0
    10cc:	dc 01       	movw	r26, r24
    10ce:	2c 91       	ld	r18, X
    10d0:	85 e2       	ldi	r24, 0x25	; 37
    10d2:	90 e0       	ldi	r25, 0x00	; 0

000010d4 <.Loc.217>:
    10d4:	20 68       	ori	r18, 0x80	; 128
    10d6:	fc 01       	movw	r30, r24
    10d8:	20 83       	st	Z, r18

000010da <.Loc.218>:
                PORT_buzzer &= ~(1<<buzzer);
    10da:	82 e0       	ldi	r24, 0x02	; 2
    10dc:	91 e0       	ldi	r25, 0x01	; 1
    10de:	dc 01       	movw	r26, r24
    10e0:	2c 91       	ld	r18, X

000010e2 <.Loc.219>:
    10e2:	82 e0       	ldi	r24, 0x02	; 2
    10e4:	91 e0       	ldi	r25, 0x01	; 1

000010e6 <.Loc.220>:
    10e6:	27 7f       	andi	r18, 0xF7	; 247
    10e8:	fc 01       	movw	r30, r24
    10ea:	20 83       	st	Z, r18

000010ec <.Loc.221>:
                toestand = 4;
    10ec:	84 e0       	ldi	r24, 0x04	; 4
    10ee:	90 e0       	ldi	r25, 0x00	; 0
    10f0:	9a 83       	std	Y+2, r25	; 0x02
    10f2:	89 83       	std	Y+1, r24	; 0x01

000010f4 <.Loc.222>:
            }
            break;
    10f4:	12 c0       	rjmp	.+36     	; 0x111a <.L69>

000010f6 <.L60>:
            break;
    10f6:	00 00       	nop
    10f8:	33 cc       	rjmp	.-1946   	; 0x960 <.L51>

000010fa <.L61>:
            break;
    10fa:	00 00       	nop
    10fc:	31 cc       	rjmp	.-1950   	; 0x960 <.L51>

000010fe <.L62>:
            break;
    10fe:	00 00       	nop
    1100:	2f cc       	rjmp	.-1954   	; 0x960 <.L51>

00001102 <.L63>:
            break;
    1102:	00 00       	nop
    1104:	2d cc       	rjmp	.-1958   	; 0x960 <.L51>

00001106 <.L64>:
            break;
    1106:	00 00       	nop
    1108:	2b cc       	rjmp	.-1962   	; 0x960 <.L51>

0000110a <.L65>:
            break;
    110a:	00 00       	nop
    110c:	29 cc       	rjmp	.-1966   	; 0x960 <.L51>

0000110e <.L66>:
            break;
    110e:	00 00       	nop
    1110:	27 cc       	rjmp	.-1970   	; 0x960 <.L51>

00001112 <.L67>:
            break;
    1112:	00 00       	nop
    1114:	25 cc       	rjmp	.-1974   	; 0x960 <.L51>

00001116 <.L68>:
            break;
    1116:	00 00       	nop
    1118:	23 cc       	rjmp	.-1978   	; 0x960 <.L51>

0000111a <.L69>:
	...

0000111c <.L7>:
    {
    111c:	21 cc       	rjmp	.-1982   	; 0x960 <.L51>

0000111e <init>:

    return 0;
}

void init()
{
    111e:	cf 93       	push	r28
    1120:	df 93       	push	r29
    1122:	cd b7       	in	r28, 0x3d	; 61
    1124:	de b7       	in	r29, 0x3e	; 62

00001126 <.Loc.235>:
    initBluetooth();
    1126:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <initBluetooth>

0000112a <.Loc.236>:
    sei();
    112a:	78 94       	sei

0000112c <.Loc.237>:

    //timer PWM motorenR
    TCCR1B = (0 << CS12) | (0 << CS11) | (1 << CS10);
    112c:	81 e8       	ldi	r24, 0x81	; 129
    112e:	90 e0       	ldi	r25, 0x00	; 0

00001130 <.Loc.238>:
    1130:	21 e0       	ldi	r18, 0x01	; 1
    1132:	fc 01       	movw	r30, r24
    1134:	20 83       	st	Z, r18

00001136 <.Loc.239>:
    TIMSK1 = (1 << OCIE1A) | (1 << TOIE1);
    1136:	8f e6       	ldi	r24, 0x6F	; 111
    1138:	90 e0       	ldi	r25, 0x00	; 0

0000113a <.Loc.240>:
    113a:	23 e0       	ldi	r18, 0x03	; 3
    113c:	fc 01       	movw	r30, r24
    113e:	20 83       	st	Z, r18

00001140 <.Loc.241>:

    OCR1A = 0;
    1140:	88 e8       	ldi	r24, 0x88	; 136
    1142:	90 e0       	ldi	r25, 0x00	; 0

00001144 <.Loc.242>:
    1144:	fc 01       	movw	r30, r24
    1146:	11 82       	std	Z+1, r1	; 0x01
    1148:	10 82       	st	Z, r1

0000114a <.Loc.243>:
    //timer PWM motorenL
    TCCR3B = (0 << CS32) | (0 << CS31) | (1 << CS30);
    114a:	81 e9       	ldi	r24, 0x91	; 145
    114c:	90 e0       	ldi	r25, 0x00	; 0

0000114e <.Loc.244>:
    114e:	21 e0       	ldi	r18, 0x01	; 1
    1150:	fc 01       	movw	r30, r24
    1152:	20 83       	st	Z, r18

00001154 <.Loc.245>:
    TIMSK3 = (1 << OCIE3A) | (1 << TOIE3);
    1154:	81 e7       	ldi	r24, 0x71	; 113
    1156:	90 e0       	ldi	r25, 0x00	; 0

00001158 <.Loc.246>:
    1158:	23 e0       	ldi	r18, 0x03	; 3
    115a:	fc 01       	movw	r30, r24
    115c:	20 83       	st	Z, r18

0000115e <.Loc.247>:

    OCR3A = 0;
    115e:	88 e9       	ldi	r24, 0x98	; 152
    1160:	90 e0       	ldi	r25, 0x00	; 0

00001162 <.Loc.248>:
    1162:	fc 01       	movw	r30, r24
    1164:	11 82       	std	Z+1, r1	; 0x01
    1166:	10 82       	st	Z, r1

00001168 <.Loc.249>:

    //timer noodtoestand
    TCCR0B = (1 << CS02) | (1 << CS00);
    1168:	85 e4       	ldi	r24, 0x45	; 69
    116a:	90 e0       	ldi	r25, 0x00	; 0

0000116c <.Loc.250>:
    116c:	25 e0       	ldi	r18, 0x05	; 5
    116e:	fc 01       	movw	r30, r24
    1170:	20 83       	st	Z, r18

00001172 <.Loc.251>:
    TIMSK0 |= (1 << TOIE0);
    1172:	8e e6       	ldi	r24, 0x6E	; 110
    1174:	90 e0       	ldi	r25, 0x00	; 0
    1176:	fc 01       	movw	r30, r24
    1178:	20 81       	ld	r18, Z
    117a:	8e e6       	ldi	r24, 0x6E	; 110
    117c:	90 e0       	ldi	r25, 0x00	; 0

0000117e <.Loc.252>:
    117e:	21 60       	ori	r18, 0x01	; 1
    1180:	fc 01       	movw	r30, r24
    1182:	20 83       	st	Z, r18

00001184 <.Loc.253>:

    //timer noodtoestand
    //TCCR4B = (1 << CS42) | (1 << CS40);
    TIMSK4 |= (1 << TOIE4);
    1184:	82 e7       	ldi	r24, 0x72	; 114
    1186:	90 e0       	ldi	r25, 0x00	; 0
    1188:	fc 01       	movw	r30, r24
    118a:	20 81       	ld	r18, Z
    118c:	82 e7       	ldi	r24, 0x72	; 114
    118e:	90 e0       	ldi	r25, 0x00	; 0

00001190 <.Loc.254>:
    1190:	21 60       	ori	r18, 0x01	; 1
    1192:	fc 01       	movw	r30, r24
    1194:	20 83       	st	Z, r18

00001196 <.Loc.255>:

    //pinout h-brug
    DDR |= (1 << PEN1);
    1196:	81 e2       	ldi	r24, 0x21	; 33
    1198:	90 e0       	ldi	r25, 0x00	; 0
    119a:	fc 01       	movw	r30, r24
    119c:	20 81       	ld	r18, Z
    119e:	81 e2       	ldi	r24, 0x21	; 33
    11a0:	90 e0       	ldi	r25, 0x00	; 0

000011a2 <.Loc.256>:
    11a2:	20 68       	ori	r18, 0x80	; 128
    11a4:	fc 01       	movw	r30, r24
    11a6:	20 83       	st	Z, r18

000011a8 <.Loc.257>:
    DDR |= (1 << PIN11);
    11a8:	81 e2       	ldi	r24, 0x21	; 33
    11aa:	90 e0       	ldi	r25, 0x00	; 0
    11ac:	fc 01       	movw	r30, r24
    11ae:	20 81       	ld	r18, Z
    11b0:	81 e2       	ldi	r24, 0x21	; 33
    11b2:	90 e0       	ldi	r25, 0x00	; 0

000011b4 <.Loc.258>:
    11b4:	20 64       	ori	r18, 0x40	; 64
    11b6:	fc 01       	movw	r30, r24
    11b8:	20 83       	st	Z, r18

000011ba <.Loc.259>:
    DDR |= (1 << PIN12);
    11ba:	81 e2       	ldi	r24, 0x21	; 33
    11bc:	90 e0       	ldi	r25, 0x00	; 0
    11be:	fc 01       	movw	r30, r24
    11c0:	20 81       	ld	r18, Z
    11c2:	81 e2       	ldi	r24, 0x21	; 33
    11c4:	90 e0       	ldi	r25, 0x00	; 0

000011c6 <.Loc.260>:
    11c6:	20 62       	ori	r18, 0x20	; 32
    11c8:	fc 01       	movw	r30, r24
    11ca:	20 83       	st	Z, r18

000011cc <.Loc.261>:
    DDR |= (1 << PIN21);
    11cc:	81 e2       	ldi	r24, 0x21	; 33
    11ce:	90 e0       	ldi	r25, 0x00	; 0
    11d0:	fc 01       	movw	r30, r24
    11d2:	20 81       	ld	r18, Z
    11d4:	81 e2       	ldi	r24, 0x21	; 33
    11d6:	90 e0       	ldi	r25, 0x00	; 0

000011d8 <.Loc.262>:
    11d8:	20 61       	ori	r18, 0x10	; 16
    11da:	fc 01       	movw	r30, r24
    11dc:	20 83       	st	Z, r18

000011de <.Loc.263>:
    DDR |= (1 << PIN22);
    11de:	81 e2       	ldi	r24, 0x21	; 33
    11e0:	90 e0       	ldi	r25, 0x00	; 0
    11e2:	fc 01       	movw	r30, r24
    11e4:	20 81       	ld	r18, Z
    11e6:	81 e2       	ldi	r24, 0x21	; 33
    11e8:	90 e0       	ldi	r25, 0x00	; 0

000011ea <.Loc.264>:
    11ea:	28 60       	ori	r18, 0x08	; 8
    11ec:	fc 01       	movw	r30, r24
    11ee:	20 83       	st	Z, r18

000011f0 <.Loc.265>:
    DDR |= (1 << PEN2);
    11f0:	81 e2       	ldi	r24, 0x21	; 33
    11f2:	90 e0       	ldi	r25, 0x00	; 0
    11f4:	fc 01       	movw	r30, r24
    11f6:	20 81       	ld	r18, Z
    11f8:	81 e2       	ldi	r24, 0x21	; 33
    11fa:	90 e0       	ldi	r25, 0x00	; 0

000011fc <.Loc.266>:
    11fc:	24 60       	ori	r18, 0x04	; 4
    11fe:	fc 01       	movw	r30, r24
    1200:	20 83       	st	Z, r18

00001202 <.Loc.267>:

    //H-brug pinnen LOW
    PORT &= ~(1 << PEN1);
    1202:	82 e2       	ldi	r24, 0x22	; 34
    1204:	90 e0       	ldi	r25, 0x00	; 0
    1206:	fc 01       	movw	r30, r24
    1208:	20 81       	ld	r18, Z

0000120a <.Loc.268>:
    120a:	82 e2       	ldi	r24, 0x22	; 34
    120c:	90 e0       	ldi	r25, 0x00	; 0

0000120e <.Loc.269>:
    120e:	2f 77       	andi	r18, 0x7F	; 127
    1210:	fc 01       	movw	r30, r24
    1212:	20 83       	st	Z, r18

00001214 <.Loc.270>:
	PORT &= ~(1 << PIN11);
    1214:	82 e2       	ldi	r24, 0x22	; 34
    1216:	90 e0       	ldi	r25, 0x00	; 0
    1218:	fc 01       	movw	r30, r24
    121a:	20 81       	ld	r18, Z

0000121c <.Loc.271>:
    121c:	82 e2       	ldi	r24, 0x22	; 34
    121e:	90 e0       	ldi	r25, 0x00	; 0

00001220 <.Loc.272>:
    1220:	2f 7b       	andi	r18, 0xBF	; 191
    1222:	fc 01       	movw	r30, r24
    1224:	20 83       	st	Z, r18

00001226 <.Loc.273>:
	PORT &= ~(1 << PIN12);
    1226:	82 e2       	ldi	r24, 0x22	; 34
    1228:	90 e0       	ldi	r25, 0x00	; 0
    122a:	fc 01       	movw	r30, r24
    122c:	20 81       	ld	r18, Z

0000122e <.Loc.274>:
    122e:	82 e2       	ldi	r24, 0x22	; 34
    1230:	90 e0       	ldi	r25, 0x00	; 0

00001232 <.Loc.275>:
    1232:	2f 7d       	andi	r18, 0xDF	; 223
    1234:	fc 01       	movw	r30, r24
    1236:	20 83       	st	Z, r18

00001238 <.Loc.276>:
	PORT &= ~(1 << PIN21);
    1238:	82 e2       	ldi	r24, 0x22	; 34
    123a:	90 e0       	ldi	r25, 0x00	; 0
    123c:	fc 01       	movw	r30, r24
    123e:	20 81       	ld	r18, Z

00001240 <.Loc.277>:
    1240:	82 e2       	ldi	r24, 0x22	; 34
    1242:	90 e0       	ldi	r25, 0x00	; 0

00001244 <.Loc.278>:
    1244:	2f 7e       	andi	r18, 0xEF	; 239
    1246:	fc 01       	movw	r30, r24
    1248:	20 83       	st	Z, r18

0000124a <.Loc.279>:
	PORT &= ~(1 << PIN22);
    124a:	82 e2       	ldi	r24, 0x22	; 34
    124c:	90 e0       	ldi	r25, 0x00	; 0
    124e:	fc 01       	movw	r30, r24
    1250:	20 81       	ld	r18, Z

00001252 <.Loc.280>:
    1252:	82 e2       	ldi	r24, 0x22	; 34
    1254:	90 e0       	ldi	r25, 0x00	; 0

00001256 <.Loc.281>:
    1256:	27 7f       	andi	r18, 0xF7	; 247
    1258:	fc 01       	movw	r30, r24
    125a:	20 83       	st	Z, r18

0000125c <.Loc.282>:
	PORT &= ~(1 << PEN2);
    125c:	82 e2       	ldi	r24, 0x22	; 34
    125e:	90 e0       	ldi	r25, 0x00	; 0
    1260:	fc 01       	movw	r30, r24
    1262:	20 81       	ld	r18, Z

00001264 <.Loc.283>:
    1264:	82 e2       	ldi	r24, 0x22	; 34
    1266:	90 e0       	ldi	r25, 0x00	; 0

00001268 <.Loc.284>:
    1268:	2b 7f       	andi	r18, 0xFB	; 251
    126a:	fc 01       	movw	r30, r24
    126c:	20 83       	st	Z, r18

0000126e <.Loc.285>:

	//LEDS
    DDR_LED |= (1<<LED_1) | (1<<LED_2);     // enable pins as output
    126e:	81 e0       	ldi	r24, 0x01	; 1
    1270:	91 e0       	ldi	r25, 0x01	; 1
    1272:	fc 01       	movw	r30, r24
    1274:	20 81       	ld	r18, Z
    1276:	81 e0       	ldi	r24, 0x01	; 1
    1278:	91 e0       	ldi	r25, 0x01	; 1

0000127a <.Loc.286>:
    127a:	20 63       	ori	r18, 0x30	; 48
    127c:	fc 01       	movw	r30, r24
    127e:	20 83       	st	Z, r18

00001280 <.Loc.287>:
    PORT_LED &= ~(1<<LED_1) & ~(1<<LED_2);  // put pins low
    1280:	82 e0       	ldi	r24, 0x02	; 2
    1282:	91 e0       	ldi	r25, 0x01	; 1
    1284:	fc 01       	movw	r30, r24
    1286:	20 81       	ld	r18, Z

00001288 <.Loc.288>:
    1288:	82 e0       	ldi	r24, 0x02	; 2
    128a:	91 e0       	ldi	r25, 0x01	; 1

0000128c <.Loc.289>:
    128c:	2f 7c       	andi	r18, 0xCF	; 207
    128e:	fc 01       	movw	r30, r24
    1290:	20 83       	st	Z, r18

00001292 <.Loc.290>:
    DDRB |= (1 << PB7);
    1292:	84 e2       	ldi	r24, 0x24	; 36
    1294:	90 e0       	ldi	r25, 0x00	; 0
    1296:	fc 01       	movw	r30, r24
    1298:	20 81       	ld	r18, Z
    129a:	84 e2       	ldi	r24, 0x24	; 36
    129c:	90 e0       	ldi	r25, 0x00	; 0

0000129e <.Loc.291>:
    129e:	20 68       	ori	r18, 0x80	; 128
    12a0:	fc 01       	movw	r30, r24
    12a2:	20 83       	st	Z, r18

000012a4 <.Loc.292>:
    PORTB |= ~(1 << PB7);
    12a4:	85 e2       	ldi	r24, 0x25	; 37
    12a6:	90 e0       	ldi	r25, 0x00	; 0
    12a8:	fc 01       	movw	r30, r24
    12aa:	80 81       	ld	r24, Z

000012ac <.Loc.293>:
    12ac:	28 2f       	mov	r18, r24
    12ae:	2f 67       	ori	r18, 0x7F	; 127

000012b0 <.Loc.294>:
    12b0:	85 e2       	ldi	r24, 0x25	; 37
    12b2:	90 e0       	ldi	r25, 0x00	; 0

000012b4 <.Loc.295>:
    12b4:	fc 01       	movw	r30, r24
    12b6:	20 83       	st	Z, r18

000012b8 <.Loc.296>:
    //PORT_LED |= (1<<LED_2);

    //Buzzer
    DDR_buzzer |= (1<<buzzer);              // enable pins as output
    12b8:	81 e0       	ldi	r24, 0x01	; 1
    12ba:	91 e0       	ldi	r25, 0x01	; 1
    12bc:	fc 01       	movw	r30, r24
    12be:	20 81       	ld	r18, Z
    12c0:	81 e0       	ldi	r24, 0x01	; 1
    12c2:	91 e0       	ldi	r25, 0x01	; 1

000012c4 <.Loc.297>:
    12c4:	28 60       	ori	r18, 0x08	; 8
    12c6:	fc 01       	movw	r30, r24
    12c8:	20 83       	st	Z, r18

000012ca <.Loc.298>:
    PORT_buzzer &= ~(1<<buzzer);            // put pins low
    12ca:	82 e0       	ldi	r24, 0x02	; 2
    12cc:	91 e0       	ldi	r25, 0x01	; 1
    12ce:	fc 01       	movw	r30, r24
    12d0:	20 81       	ld	r18, Z

000012d2 <.Loc.299>:
    12d2:	82 e0       	ldi	r24, 0x02	; 2
    12d4:	91 e0       	ldi	r25, 0x01	; 1

000012d6 <.Loc.300>:
    12d6:	27 7f       	andi	r18, 0xF7	; 247
    12d8:	fc 01       	movw	r30, r24
    12da:	20 83       	st	Z, r18

000012dc <.Loc.301>:

    //knoppen
	DDRF &= ~(1<<Noodknoppin);
    12dc:	80 e3       	ldi	r24, 0x30	; 48
    12de:	90 e0       	ldi	r25, 0x00	; 0
    12e0:	fc 01       	movw	r30, r24
    12e2:	20 81       	ld	r18, Z

000012e4 <.Loc.302>:
    12e4:	80 e3       	ldi	r24, 0x30	; 48
    12e6:	90 e0       	ldi	r25, 0x00	; 0

000012e8 <.Loc.303>:
    12e8:	2d 7f       	andi	r18, 0xFD	; 253
    12ea:	fc 01       	movw	r30, r24
    12ec:	20 83       	st	Z, r18

000012ee <.Loc.304>:
	PORTF |= (1<<Noodknoppin);   		// enAble alle knoppen voor input
    12ee:	81 e3       	ldi	r24, 0x31	; 49
    12f0:	90 e0       	ldi	r25, 0x00	; 0
    12f2:	fc 01       	movw	r30, r24
    12f4:	20 81       	ld	r18, Z
    12f6:	81 e3       	ldi	r24, 0x31	; 49
    12f8:	90 e0       	ldi	r25, 0x00	; 0

000012fa <.Loc.305>:
    12fa:	22 60       	ori	r18, 0x02	; 2
    12fc:	fc 01       	movw	r30, r24
    12fe:	20 83       	st	Z, r18

00001300 <.Loc.306>:

	//trigger ultra voor
    Ultraregister |= (1<<Voorultrasoontrig);
    1300:	83 e2       	ldi	r24, 0x23	; 35
    1302:	90 e0       	ldi	r25, 0x00	; 0
    1304:	fc 01       	movw	r30, r24
    1306:	20 81       	ld	r18, Z
    1308:	83 e2       	ldi	r24, 0x23	; 35
    130a:	90 e0       	ldi	r25, 0x00	; 0

0000130c <.Loc.307>:
    130c:	20 62       	ori	r18, 0x20	; 32
    130e:	fc 01       	movw	r30, r24
    1310:	20 83       	st	Z, r18

00001312 <.Loc.308>:
    UltraPort &= ~(1<<Voorultrasoontrig);
    1312:	85 e2       	ldi	r24, 0x25	; 37
    1314:	90 e0       	ldi	r25, 0x00	; 0
    1316:	fc 01       	movw	r30, r24
    1318:	20 81       	ld	r18, Z

0000131a <.Loc.309>:
    131a:	85 e2       	ldi	r24, 0x25	; 37
    131c:	90 e0       	ldi	r25, 0x00	; 0

0000131e <.Loc.310>:
    131e:	2f 7d       	andi	r18, 0xDF	; 223
    1320:	fc 01       	movw	r30, r24
    1322:	20 83       	st	Z, r18

00001324 <.Loc.311>:
}
    1324:	00 00       	nop
    1326:	df 91       	pop	r29
    1328:	cf 91       	pop	r28
    132a:	08 95       	ret

0000132c <initTimer>:

void initTimer(void){
    132c:	cf 93       	push	r28
    132e:	df 93       	push	r29
    1330:	cd b7       	in	r28, 0x3d	; 61
    1332:	de b7       	in	r29, 0x3e	; 62

00001334 <.Loc.313>:
    TCCR2A = 0;
    1334:	80 eb       	ldi	r24, 0xB0	; 176
    1336:	90 e0       	ldi	r25, 0x00	; 0

00001338 <.Loc.314>:
    1338:	fc 01       	movw	r30, r24
    133a:	10 82       	st	Z, r1

0000133c <.Loc.315>:
    TCCR2B |= (1<<CS20);
    133c:	81 eb       	ldi	r24, 0xB1	; 177
    133e:	90 e0       	ldi	r25, 0x00	; 0
    1340:	fc 01       	movw	r30, r24
    1342:	20 81       	ld	r18, Z
    1344:	81 eb       	ldi	r24, 0xB1	; 177
    1346:	90 e0       	ldi	r25, 0x00	; 0

00001348 <.Loc.316>:
    1348:	21 60       	ori	r18, 0x01	; 1
    134a:	fc 01       	movw	r30, r24
    134c:	20 83       	st	Z, r18

0000134e <.Loc.317>:
    //16000000 / 256 = 62,500
    //1 / 62500 = 0.000016s
    //62500x/sec
    TIMSK2 = (1<<TOIE2);
    134e:	80 e7       	ldi	r24, 0x70	; 112
    1350:	90 e0       	ldi	r25, 0x00	; 0

00001352 <.Loc.318>:
    1352:	21 e0       	ldi	r18, 0x01	; 1
    1354:	fc 01       	movw	r30, r24
    1356:	20 83       	st	Z, r18

00001358 <.Loc.319>:

    DDRF &= ~(1<<PF7);
    1358:	80 e3       	ldi	r24, 0x30	; 48
    135a:	90 e0       	ldi	r25, 0x00	; 0
    135c:	fc 01       	movw	r30, r24
    135e:	20 81       	ld	r18, Z

00001360 <.Loc.320>:
    1360:	80 e3       	ldi	r24, 0x30	; 48
    1362:	90 e0       	ldi	r25, 0x00	; 0

00001364 <.Loc.321>:
    1364:	2f 77       	andi	r18, 0x7F	; 127
    1366:	fc 01       	movw	r30, r24
    1368:	20 83       	st	Z, r18

0000136a <.Loc.322>:
//    DDRB |= (1<<PB7) | (1<<PB6) | (1<<PB5) | (1<<PB4);
//    PORTB |= (1<<PB7) | (1<<PB6) | (1<<PB5) | (1<<PB4);
    DDRL |= (1<<PL6);
    136a:	8a e0       	ldi	r24, 0x0A	; 10
    136c:	91 e0       	ldi	r25, 0x01	; 1
    136e:	fc 01       	movw	r30, r24
    1370:	20 81       	ld	r18, Z
    1372:	8a e0       	ldi	r24, 0x0A	; 10
    1374:	91 e0       	ldi	r25, 0x01	; 1

00001376 <.Loc.323>:
    1376:	20 64       	ori	r18, 0x40	; 64
    1378:	fc 01       	movw	r30, r24
    137a:	20 83       	st	Z, r18

0000137c <.Loc.324>:
    PORTL &= ~(1<<PL6);
    137c:	8b e0       	ldi	r24, 0x0B	; 11
    137e:	91 e0       	ldi	r25, 0x01	; 1
    1380:	fc 01       	movw	r30, r24
    1382:	20 81       	ld	r18, Z

00001384 <.Loc.325>:
    1384:	8b e0       	ldi	r24, 0x0B	; 11
    1386:	91 e0       	ldi	r25, 0x01	; 1

00001388 <.Loc.326>:
    1388:	2f 7b       	andi	r18, 0xBF	; 191
    138a:	fc 01       	movw	r30, r24
    138c:	20 83       	st	Z, r18

0000138e <.Loc.327>:
}
    138e:	00 00       	nop
    1390:	df 91       	pop	r29
    1392:	cf 91       	pop	r28
    1394:	08 95       	ret

00001396 <GetDistance>:

int GetDistance(void){
    1396:	cf 93       	push	r28
    1398:	df 93       	push	r29
    139a:	cd b7       	in	r28, 0x3d	; 61
    139c:	de b7       	in	r29, 0x3e	; 62
    139e:	6e 97       	sbiw	r28, 0x1e	; 30
    13a0:	0f b6       	in	r0, 0x3f	; 63
    13a2:	f8 94       	cli
    13a4:	de bf       	out	0x3e, r29	; 62
    13a6:	0f be       	out	0x3f, r0	; 63
    13a8:	cd bf       	out	0x3d, r28	; 61

000013aa <.Loc.329>:

    int Distance;

    TriggerPulse();
    13aa:	0e 94 51 0a 	call	0x14a2	; 0x14a2 <TriggerPulse>

000013ae <.Loc.330>:
	...

000013b0 <.L73>:

    while ((PINF & (1<<PF7)) == 0){
    13b0:	8f e2       	ldi	r24, 0x2F	; 47
    13b2:	90 e0       	ldi	r25, 0x00	; 0
    13b4:	dc 01       	movw	r26, r24
    13b6:	8c 91       	ld	r24, X

000013b8 <.Loc.332>:
    13b8:	88 23       	and	r24, r24
    13ba:	d4 f7       	brge	.-12     	; 0x13b0 <.L73>

000013bc <.Loc.333>:

    }
    TCNT2 = 0;
    13bc:	82 eb       	ldi	r24, 0xB2	; 178
    13be:	90 e0       	ldi	r25, 0x00	; 0

000013c0 <.Loc.334>:
    13c0:	fc 01       	movw	r30, r24
    13c2:	10 82       	st	Z, r1

000013c4 <.Loc.335>:
    TIFR2 = 1<<TOV2;
    13c4:	87 e3       	ldi	r24, 0x37	; 55
    13c6:	90 e0       	ldi	r25, 0x00	; 0

000013c8 <.Loc.336>:
    13c8:	21 e0       	ldi	r18, 0x01	; 1
    13ca:	dc 01       	movw	r26, r24
    13cc:	2c 93       	st	X, r18

000013ce <.Loc.337>:
    count = 0;
    13ce:	10 92 2f 02 	sts	0x022F, r1	; 0x80022f <count+0x1>
    13d2:	10 92 2e 02 	sts	0x022E, r1	; 0x80022e <count>

000013d6 <.Loc.338>:
	...

000013d8 <.L74>:

    while ((PINF & (1<<PF7)) != 0){
    13d8:	8f e2       	ldi	r24, 0x2F	; 47
    13da:	90 e0       	ldi	r25, 0x00	; 0
    13dc:	fc 01       	movw	r30, r24
    13de:	80 81       	ld	r24, Z

000013e0 <.Loc.340>:
    13e0:	88 23       	and	r24, r24
    13e2:	d4 f3       	brlt	.-12     	; 0x13d8 <.L74>

000013e4 <.Loc.341>:

    }
    Distance = count;
    13e4:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <count>
    13e8:	90 91 2f 02 	lds	r25, 0x022F	; 0x80022f <count+0x1>
    13ec:	9a 83       	std	Y+2, r25	; 0x02
    13ee:	89 83       	std	Y+1, r24	; 0x01

000013f0 <.Loc.342>:

    Distance = Distance * 0.008 * 343;
    13f0:	89 81       	ldd	r24, Y+1	; 0x01
    13f2:	9a 81       	ldd	r25, Y+2	; 0x02
    13f4:	9c 01       	movw	r18, r24
    13f6:	99 0f       	add	r25, r25
    13f8:	44 0b       	sbc	r20, r20
    13fa:	55 0b       	sbc	r21, r21
    13fc:	2f 87       	std	Y+15, r18	; 0x0f
    13fe:	38 8b       	std	Y+16, r19	; 0x10
    1400:	49 8b       	std	Y+17, r20	; 0x11
    1402:	5a 8b       	std	Y+18, r21	; 0x12
    1404:	6f 85       	ldd	r22, Y+15	; 0x0f
    1406:	78 89       	ldd	r23, Y+16	; 0x10
    1408:	89 89       	ldd	r24, Y+17	; 0x11
    140a:	9a 89       	ldd	r25, Y+18	; 0x12
    140c:	0e 94 20 10 	call	0x2040	; 0x2040 <__floatsisf>
    1410:	6b 83       	std	Y+3, r22	; 0x03
    1412:	7c 83       	std	Y+4, r23	; 0x04
    1414:	8d 83       	std	Y+5, r24	; 0x05
    1416:	9e 83       	std	Y+6, r25	; 0x06
    1418:	2f e6       	ldi	r18, 0x6F	; 111
    141a:	32 e1       	ldi	r19, 0x12	; 18
    141c:	43 e0       	ldi	r20, 0x03	; 3
    141e:	5c e3       	ldi	r21, 0x3C	; 60
    1420:	6b 81       	ldd	r22, Y+3	; 0x03
    1422:	7c 81       	ldd	r23, Y+4	; 0x04
    1424:	8d 81       	ldd	r24, Y+5	; 0x05
    1426:	9e 81       	ldd	r25, Y+6	; 0x06
    1428:	0e 94 d5 10 	call	0x21aa	; 0x21aa <__mulsf3>
    142c:	6b 8b       	std	Y+19, r22	; 0x13
    142e:	7c 8b       	std	Y+20, r23	; 0x14
    1430:	8d 8b       	std	Y+21, r24	; 0x15
    1432:	9e 8b       	std	Y+22, r25	; 0x16
    1434:	8b 89       	ldd	r24, Y+19	; 0x13
    1436:	9c 89       	ldd	r25, Y+20	; 0x14
    1438:	ad 89       	ldd	r26, Y+21	; 0x15
    143a:	be 89       	ldd	r27, Y+22	; 0x16
    143c:	8f 83       	std	Y+7, r24	; 0x07
    143e:	98 87       	std	Y+8, r25	; 0x08
    1440:	a9 87       	std	Y+9, r26	; 0x09
    1442:	ba 87       	std	Y+10, r27	; 0x0a

00001444 <.Loc.343>:
    1444:	20 e0       	ldi	r18, 0x00	; 0
    1446:	30 e8       	ldi	r19, 0x80	; 128
    1448:	4b ea       	ldi	r20, 0xAB	; 171
    144a:	53 e4       	ldi	r21, 0x43	; 67
    144c:	6f 81       	ldd	r22, Y+7	; 0x07
    144e:	78 85       	ldd	r23, Y+8	; 0x08
    1450:	89 85       	ldd	r24, Y+9	; 0x09
    1452:	9a 85       	ldd	r25, Y+10	; 0x0a
    1454:	0e 94 d5 10 	call	0x21aa	; 0x21aa <__mulsf3>
    1458:	6f 8b       	std	Y+23, r22	; 0x17
    145a:	78 8f       	std	Y+24, r23	; 0x18
    145c:	89 8f       	std	Y+25, r24	; 0x19
    145e:	9a 8f       	std	Y+26, r25	; 0x1a
    1460:	2f 89       	ldd	r18, Y+23	; 0x17
    1462:	38 8d       	ldd	r19, Y+24	; 0x18
    1464:	49 8d       	ldd	r20, Y+25	; 0x19
    1466:	5a 8d       	ldd	r21, Y+26	; 0x1a
    1468:	2b 87       	std	Y+11, r18	; 0x0b
    146a:	3c 87       	std	Y+12, r19	; 0x0c
    146c:	4d 87       	std	Y+13, r20	; 0x0d
    146e:	5e 87       	std	Y+14, r21	; 0x0e

00001470 <.Loc.344>:
    1470:	6b 85       	ldd	r22, Y+11	; 0x0b
    1472:	7c 85       	ldd	r23, Y+12	; 0x0c
    1474:	8d 85       	ldd	r24, Y+13	; 0x0d
    1476:	9e 85       	ldd	r25, Y+14	; 0x0e
    1478:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <__fixsfsi>
    147c:	6b 8f       	std	Y+27, r22	; 0x1b
    147e:	7c 8f       	std	Y+28, r23	; 0x1c
    1480:	8d 8f       	std	Y+29, r24	; 0x1d
    1482:	9e 8f       	std	Y+30, r25	; 0x1e
    1484:	4b 8d       	ldd	r20, Y+27	; 0x1b
    1486:	5c 8d       	ldd	r21, Y+28	; 0x1c
    1488:	5a 83       	std	Y+2, r21	; 0x02
    148a:	49 83       	std	Y+1, r20	; 0x01

0000148c <.Loc.345>:
    //34 cm / ms
    //340   mm / ms
    //0.34  mm / us
    //5.44 * count geeft distance in mm

    return Distance;
    148c:	89 81       	ldd	r24, Y+1	; 0x01
    148e:	9a 81       	ldd	r25, Y+2	; 0x02

00001490 <.Loc.346>:
}
    1490:	6e 96       	adiw	r28, 0x1e	; 30
    1492:	0f b6       	in	r0, 0x3f	; 63
    1494:	f8 94       	cli
    1496:	de bf       	out	0x3e, r29	; 62
    1498:	0f be       	out	0x3f, r0	; 63
    149a:	cd bf       	out	0x3d, r28	; 61
    149c:	df 91       	pop	r29
    149e:	cf 91       	pop	r28
    14a0:	08 95       	ret

000014a2 <TriggerPulse>:
void TriggerPulse (void){
    14a2:	cf 93       	push	r28
    14a4:	df 93       	push	r29
    14a6:	cd b7       	in	r28, 0x3d	; 61
    14a8:	de b7       	in	r29, 0x3e	; 62
    14aa:	c0 59       	subi	r28, 0x90	; 144
    14ac:	d1 09       	sbc	r29, r1
    14ae:	0f b6       	in	r0, 0x3f	; 63
    14b0:	f8 94       	cli
    14b2:	de bf       	out	0x3e, r29	; 62
    14b4:	0f be       	out	0x3f, r0	; 63
    14b6:	cd bf       	out	0x3d, r28	; 61

000014b8 <.Loc.348>:
    PORTL &= (~(1<<PL6));
    14b8:	8b e0       	ldi	r24, 0x0B	; 11
    14ba:	91 e0       	ldi	r25, 0x01	; 1
    14bc:	dc 01       	movw	r26, r24
    14be:	2c 91       	ld	r18, X

000014c0 <.Loc.349>:
    14c0:	8b e0       	ldi	r24, 0x0B	; 11
    14c2:	91 e0       	ldi	r25, 0x01	; 1

000014c4 <.Loc.350>:
    14c4:	2f 7b       	andi	r18, 0xBF	; 191
    14c6:	fc 01       	movw	r30, r24
    14c8:	20 83       	st	Z, r18
    14ca:	80 e0       	ldi	r24, 0x00	; 0
    14cc:	90 e0       	ldi	r25, 0x00	; 0
    14ce:	a0 e0       	ldi	r26, 0x00	; 0
    14d0:	b0 e4       	ldi	r27, 0x40	; 64
    14d2:	89 a3       	std	Y+33, r24	; 0x21
    14d4:	9a a3       	std	Y+34, r25	; 0x22
    14d6:	ab a3       	std	Y+35, r26	; 0x23
    14d8:	bc a3       	std	Y+36, r27	; 0x24

000014da <.LBB76>:
	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint8_t __ticks;
	double __tmp2 ;
	__tmp = ((F_CPU) / 3e6) * __us;
    14da:	2b ea       	ldi	r18, 0xAB	; 171
    14dc:	3a ea       	ldi	r19, 0xAA	; 170
    14de:	4a ea       	ldi	r20, 0xAA	; 170
    14e0:	50 e4       	ldi	r21, 0x40	; 64
    14e2:	69 a1       	ldd	r22, Y+33	; 0x21
    14e4:	7a a1       	ldd	r23, Y+34	; 0x22
    14e6:	8b a1       	ldd	r24, Y+35	; 0x23
    14e8:	9c a1       	ldd	r25, Y+36	; 0x24
    14ea:	0e 94 d5 10 	call	0x21aa	; 0x21aa <__mulsf3>
    14ee:	2d 96       	adiw	r28, 0x0d	; 13
    14f0:	6c af       	std	Y+60, r22	; 0x3c
    14f2:	7d af       	std	Y+61, r23	; 0x3d
    14f4:	8e af       	std	Y+62, r24	; 0x3e
    14f6:	9f af       	std	Y+63, r25	; 0x3f
    14f8:	2d 97       	sbiw	r28, 0x0d	; 13
    14fa:	2d 96       	adiw	r28, 0x0d	; 13
    14fc:	8c ad       	ldd	r24, Y+60	; 0x3c
    14fe:	9d ad       	ldd	r25, Y+61	; 0x3d
    1500:	ae ad       	ldd	r26, Y+62	; 0x3e
    1502:	bf ad       	ldd	r27, Y+63	; 0x3f
    1504:	2d 97       	sbiw	r28, 0x0d	; 13
    1506:	8d a3       	std	Y+37, r24	; 0x25
    1508:	9e a3       	std	Y+38, r25	; 0x26
    150a:	af a3       	std	Y+39, r26	; 0x27
    150c:	b8 a7       	std	Y+40, r27	; 0x28

0000150e <.Loc.352>:
	__tmp2 = ((F_CPU) / 4e6) * __us;
    150e:	20 e0       	ldi	r18, 0x00	; 0
    1510:	30 e0       	ldi	r19, 0x00	; 0
    1512:	40 e8       	ldi	r20, 0x80	; 128
    1514:	50 e4       	ldi	r21, 0x40	; 64
    1516:	69 a1       	ldd	r22, Y+33	; 0x21
    1518:	7a a1       	ldd	r23, Y+34	; 0x22
    151a:	8b a1       	ldd	r24, Y+35	; 0x23
    151c:	9c a1       	ldd	r25, Y+36	; 0x24
    151e:	0e 94 d5 10 	call	0x21aa	; 0x21aa <__mulsf3>
    1522:	61 96       	adiw	r28, 0x11	; 17
    1524:	6c af       	std	Y+60, r22	; 0x3c
    1526:	7d af       	std	Y+61, r23	; 0x3d
    1528:	8e af       	std	Y+62, r24	; 0x3e
    152a:	9f af       	std	Y+63, r25	; 0x3f
    152c:	61 97       	sbiw	r28, 0x11	; 17
    152e:	61 96       	adiw	r28, 0x11	; 17
    1530:	8c ad       	ldd	r24, Y+60	; 0x3c
    1532:	9d ad       	ldd	r25, Y+61	; 0x3d
    1534:	ae ad       	ldd	r26, Y+62	; 0x3e
    1536:	bf ad       	ldd	r27, Y+63	; 0x3f
    1538:	61 97       	sbiw	r28, 0x11	; 17
    153a:	89 a7       	std	Y+41, r24	; 0x29
    153c:	9a a7       	std	Y+42, r25	; 0x2a
    153e:	ab a7       	std	Y+43, r26	; 0x2b
    1540:	bc a7       	std	Y+44, r27	; 0x2c

00001542 <.Loc.353>:
	if (__tmp < 1.0)
    1542:	20 e0       	ldi	r18, 0x00	; 0
    1544:	30 e0       	ldi	r19, 0x00	; 0
    1546:	40 e8       	ldi	r20, 0x80	; 128
    1548:	5f e3       	ldi	r21, 0x3F	; 63
    154a:	6d a1       	ldd	r22, Y+37	; 0x25
    154c:	7e a1       	ldd	r23, Y+38	; 0x26
    154e:	8f a1       	ldd	r24, Y+39	; 0x27
    1550:	98 a5       	ldd	r25, Y+40	; 0x28
    1552:	0e 94 71 0f 	call	0x1ee2	; 0x1ee2 <__cmpsf2>
    1556:	88 23       	and	r24, r24
    1558:	1c f4       	brge	.+6      	; 0x1560 <.L119>

0000155a <.Loc.354>:
		__ticks = 1;
    155a:	81 e0       	ldi	r24, 0x01	; 1
    155c:	8d a7       	std	Y+45, r24	; 0x2d
    155e:	ff c0       	rjmp	.+510    	; 0x175e <.L79>

00001560 <.L119>:
	else if (__tmp2 > 65535)
    1560:	20 e0       	ldi	r18, 0x00	; 0
    1562:	3f ef       	ldi	r19, 0xFF	; 255
    1564:	4f e7       	ldi	r20, 0x7F	; 127
    1566:	57 e4       	ldi	r21, 0x47	; 71
    1568:	69 a5       	ldd	r22, Y+41	; 0x29
    156a:	7a a5       	ldd	r23, Y+42	; 0x2a
    156c:	8b a5       	ldd	r24, Y+43	; 0x2b
    156e:	9c a5       	ldd	r25, Y+44	; 0x2c
    1570:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <__gesf2>
    1574:	88 23       	and	r24, r24
    1576:	09 f0       	breq	.+2      	; 0x157a <L0^A>

00001578 <L0^A>:
    1578:	0c f4       	brge	.+2      	; 0x157c <.Loc.356>

0000157a <L0^A>:
    157a:	b6 c0       	rjmp	.+364    	; 0x16e8 <.L120>

0000157c <.Loc.356>:
	{
		_delay_ms(__us / 1000.0);
    157c:	20 e0       	ldi	r18, 0x00	; 0
    157e:	30 e0       	ldi	r19, 0x00	; 0
    1580:	4a e7       	ldi	r20, 0x7A	; 122
    1582:	54 e4       	ldi	r21, 0x44	; 68
    1584:	69 a1       	ldd	r22, Y+33	; 0x21
    1586:	7a a1       	ldd	r23, Y+34	; 0x22
    1588:	8b a1       	ldd	r24, Y+35	; 0x23
    158a:	9c a1       	ldd	r25, Y+36	; 0x24
    158c:	0e 94 76 0f 	call	0x1eec	; 0x1eec <__divsf3>
    1590:	65 96       	adiw	r28, 0x15	; 21
    1592:	6c af       	std	Y+60, r22	; 0x3c
    1594:	7d af       	std	Y+61, r23	; 0x3d
    1596:	8e af       	std	Y+62, r24	; 0x3e
    1598:	9f af       	std	Y+63, r25	; 0x3f
    159a:	65 97       	sbiw	r28, 0x15	; 21
    159c:	65 96       	adiw	r28, 0x15	; 21
    159e:	8c ad       	ldd	r24, Y+60	; 0x3c
    15a0:	9d ad       	ldd	r25, Y+61	; 0x3d
    15a2:	ae ad       	ldd	r26, Y+62	; 0x3e
    15a4:	bf ad       	ldd	r27, Y+63	; 0x3f
    15a6:	65 97       	sbiw	r28, 0x15	; 21
    15a8:	8e a7       	std	Y+46, r24	; 0x2e
    15aa:	9f a7       	std	Y+47, r25	; 0x2f
    15ac:	a8 ab       	std	Y+48, r26	; 0x30
    15ae:	b9 ab       	std	Y+49, r27	; 0x31

000015b0 <.LBB78>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    15b0:	20 e0       	ldi	r18, 0x00	; 0
    15b2:	30 e0       	ldi	r19, 0x00	; 0
    15b4:	4a e7       	ldi	r20, 0x7A	; 122
    15b6:	55 e4       	ldi	r21, 0x45	; 69
    15b8:	6e a5       	ldd	r22, Y+46	; 0x2e
    15ba:	7f a5       	ldd	r23, Y+47	; 0x2f
    15bc:	88 a9       	ldd	r24, Y+48	; 0x30
    15be:	99 a9       	ldd	r25, Y+49	; 0x31
    15c0:	0e 94 d5 10 	call	0x21aa	; 0x21aa <__mulsf3>
    15c4:	69 96       	adiw	r28, 0x19	; 25
    15c6:	6c af       	std	Y+60, r22	; 0x3c
    15c8:	7d af       	std	Y+61, r23	; 0x3d
    15ca:	8e af       	std	Y+62, r24	; 0x3e
    15cc:	9f af       	std	Y+63, r25	; 0x3f
    15ce:	69 97       	sbiw	r28, 0x19	; 25
    15d0:	69 96       	adiw	r28, 0x19	; 25
    15d2:	8c ad       	ldd	r24, Y+60	; 0x3c
    15d4:	9d ad       	ldd	r25, Y+61	; 0x3d
    15d6:	ae ad       	ldd	r26, Y+62	; 0x3e
    15d8:	bf ad       	ldd	r27, Y+63	; 0x3f
    15da:	69 97       	sbiw	r28, 0x19	; 25
    15dc:	8a ab       	std	Y+50, r24	; 0x32
    15de:	9b ab       	std	Y+51, r25	; 0x33
    15e0:	ac ab       	std	Y+52, r26	; 0x34
    15e2:	bd ab       	std	Y+53, r27	; 0x35

000015e4 <.Loc.358>:
	if (__tmp < 1.0)
    15e4:	20 e0       	ldi	r18, 0x00	; 0
    15e6:	30 e0       	ldi	r19, 0x00	; 0
    15e8:	40 e8       	ldi	r20, 0x80	; 128
    15ea:	5f e3       	ldi	r21, 0x3F	; 63
    15ec:	6a a9       	ldd	r22, Y+50	; 0x32
    15ee:	7b a9       	ldd	r23, Y+51	; 0x33
    15f0:	8c a9       	ldd	r24, Y+52	; 0x34
    15f2:	9d a9       	ldd	r25, Y+53	; 0x35
    15f4:	0e 94 71 0f 	call	0x1ee2	; 0x1ee2 <__cmpsf2>
    15f8:	88 23       	and	r24, r24
    15fa:	2c f4       	brge	.+10     	; 0x1606 <.L121>

000015fc <.Loc.359>:
		__ticks = 1;
    15fc:	81 e0       	ldi	r24, 0x01	; 1
    15fe:	90 e0       	ldi	r25, 0x00	; 0
    1600:	9f ab       	std	Y+55, r25	; 0x37
    1602:	8e ab       	std	Y+54, r24	; 0x36
    1604:	66 c0       	rjmp	.+204    	; 0x16d2 <.L84>

00001606 <.L121>:
	else if (__tmp > 65535)
    1606:	20 e0       	ldi	r18, 0x00	; 0
    1608:	3f ef       	ldi	r19, 0xFF	; 255
    160a:	4f e7       	ldi	r20, 0x7F	; 127
    160c:	57 e4       	ldi	r21, 0x47	; 71
    160e:	6a a9       	ldd	r22, Y+50	; 0x32
    1610:	7b a9       	ldd	r23, Y+51	; 0x33
    1612:	8c a9       	ldd	r24, Y+52	; 0x34
    1614:	9d a9       	ldd	r25, Y+53	; 0x35
    1616:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <__gesf2>
    161a:	88 23       	and	r24, r24
    161c:	09 f0       	breq	.+2      	; 0x1620 <L0^A>

0000161e <L0^A>:
    161e:	0c f4       	brge	.+2      	; 0x1622 <.Loc.361>

00001620 <L0^A>:
    1620:	46 c0       	rjmp	.+140    	; 0x16ae <.L122>

00001622 <.Loc.361>:
		__ticks = (uint16_t) (__ms * 10.0);
    1622:	20 e0       	ldi	r18, 0x00	; 0
    1624:	30 e0       	ldi	r19, 0x00	; 0
    1626:	40 e2       	ldi	r20, 0x20	; 32
    1628:	51 e4       	ldi	r21, 0x41	; 65
    162a:	6e a5       	ldd	r22, Y+46	; 0x2e
    162c:	7f a5       	ldd	r23, Y+47	; 0x2f
    162e:	88 a9       	ldd	r24, Y+48	; 0x30
    1630:	99 a9       	ldd	r25, Y+49	; 0x31
    1632:	0e 94 d5 10 	call	0x21aa	; 0x21aa <__mulsf3>
    1636:	6d 96       	adiw	r28, 0x1d	; 29
    1638:	6c af       	std	Y+60, r22	; 0x3c
    163a:	7d af       	std	Y+61, r23	; 0x3d
    163c:	8e af       	std	Y+62, r24	; 0x3e
    163e:	9f af       	std	Y+63, r25	; 0x3f
    1640:	6d 97       	sbiw	r28, 0x1d	; 29
    1642:	6d 96       	adiw	r28, 0x1d	; 29
    1644:	8c ad       	ldd	r24, Y+60	; 0x3c
    1646:	9d ad       	ldd	r25, Y+61	; 0x3d
    1648:	ae ad       	ldd	r26, Y+62	; 0x3e
    164a:	bf ad       	ldd	r27, Y+63	; 0x3f
    164c:	6d 97       	sbiw	r28, 0x1d	; 29
    164e:	29 96       	adiw	r28, 0x09	; 9
    1650:	8c af       	std	Y+60, r24	; 0x3c
    1652:	9d af       	std	Y+61, r25	; 0x3d
    1654:	ae af       	std	Y+62, r26	; 0x3e
    1656:	bf af       	std	Y+63, r27	; 0x3f
    1658:	29 97       	sbiw	r28, 0x09	; 9

0000165a <.Loc.362>:
    165a:	29 96       	adiw	r28, 0x09	; 9
    165c:	6c ad       	ldd	r22, Y+60	; 0x3c
    165e:	7d ad       	ldd	r23, Y+61	; 0x3d
    1660:	8e ad       	ldd	r24, Y+62	; 0x3e
    1662:	9f ad       	ldd	r25, Y+63	; 0x3f
    1664:	29 97       	sbiw	r28, 0x09	; 9
    1666:	0e 94 ef 0f 	call	0x1fde	; 0x1fde <__fixunssfsi>
    166a:	a1 96       	adiw	r28, 0x21	; 33
    166c:	6c af       	std	Y+60, r22	; 0x3c
    166e:	7d af       	std	Y+61, r23	; 0x3d
    1670:	8e af       	std	Y+62, r24	; 0x3e
    1672:	9f af       	std	Y+63, r25	; 0x3f
    1674:	a1 97       	sbiw	r28, 0x21	; 33
    1676:	6f 96       	adiw	r28, 0x1f	; 31
    1678:	ae ad       	ldd	r26, Y+62	; 0x3e
    167a:	bf ad       	ldd	r27, Y+63	; 0x3f
    167c:	6f 97       	sbiw	r28, 0x1f	; 31
    167e:	bf ab       	std	Y+55, r27	; 0x37
    1680:	ae ab       	std	Y+54, r26	; 0x36

00001682 <.Loc.363>:
		while(__ticks)
    1682:	10 c0       	rjmp	.+32     	; 0x16a4 <.L87>

00001684 <.L88>:
    1684:	80 e9       	ldi	r24, 0x90	; 144
    1686:	91 e0       	ldi	r25, 0x01	; 1
    1688:	99 af       	std	Y+57, r25	; 0x39
    168a:	88 af       	std	Y+56, r24	; 0x38

0000168c <.LBB80>:
    168c:	88 ad       	ldd	r24, Y+56	; 0x38
    168e:	99 ad       	ldd	r25, Y+57	; 0x39

00001690 <.L1^B5>:
    1690:	01 97       	sbiw	r24, 0x01	; 1
    1692:	f1 f7       	brne	.-4      	; 0x1690 <.L1^B5>
    1694:	99 af       	std	Y+57, r25	; 0x39
    1696:	88 af       	std	Y+56, r24	; 0x38

00001698 <.Loc.365>:
	...

0000169a <.LBE80>:
			__ticks --;
    169a:	8e a9       	ldd	r24, Y+54	; 0x36
    169c:	9f a9       	ldd	r25, Y+55	; 0x37
    169e:	01 97       	sbiw	r24, 0x01	; 1
    16a0:	9f ab       	std	Y+55, r25	; 0x37
    16a2:	8e ab       	std	Y+54, r24	; 0x36

000016a4 <.L87>:
		while(__ticks)
    16a4:	8e a9       	ldd	r24, Y+54	; 0x36
    16a6:	9f a9       	ldd	r25, Y+55	; 0x37
    16a8:	00 97       	sbiw	r24, 0x00	; 0
    16aa:	61 f7       	brne	.-40     	; 0x1684 <.L88>

000016ac <.Loc.368>:
		return;
    16ac:	58 c0       	rjmp	.+176    	; 0x175e <.L79>

000016ae <.L122>:
		__ticks = (uint16_t)__tmp;
    16ae:	6a a9       	ldd	r22, Y+50	; 0x32
    16b0:	7b a9       	ldd	r23, Y+51	; 0x33
    16b2:	8c a9       	ldd	r24, Y+52	; 0x34
    16b4:	9d a9       	ldd	r25, Y+53	; 0x35
    16b6:	0e 94 ef 0f 	call	0x1fde	; 0x1fde <__fixunssfsi>
    16ba:	a5 96       	adiw	r28, 0x25	; 37
    16bc:	6c af       	std	Y+60, r22	; 0x3c
    16be:	7d af       	std	Y+61, r23	; 0x3d
    16c0:	8e af       	std	Y+62, r24	; 0x3e
    16c2:	9f af       	std	Y+63, r25	; 0x3f
    16c4:	a5 97       	sbiw	r28, 0x25	; 37
    16c6:	a3 96       	adiw	r28, 0x23	; 35
    16c8:	ee ad       	ldd	r30, Y+62	; 0x3e
    16ca:	ff ad       	ldd	r31, Y+63	; 0x3f
    16cc:	a3 97       	sbiw	r28, 0x23	; 35
    16ce:	ff ab       	std	Y+55, r31	; 0x37
    16d0:	ee ab       	std	Y+54, r30	; 0x36

000016d2 <.L84>:
    16d2:	8e a9       	ldd	r24, Y+54	; 0x36
    16d4:	9f a9       	ldd	r25, Y+55	; 0x37
    16d6:	9b af       	std	Y+59, r25	; 0x3b
    16d8:	8a af       	std	Y+58, r24	; 0x3a

000016da <.LBB82>:
    16da:	8a ad       	ldd	r24, Y+58	; 0x3a
    16dc:	9b ad       	ldd	r25, Y+59	; 0x3b

000016de <.L1^B6>:
    16de:	01 97       	sbiw	r24, 0x01	; 1
    16e0:	f1 f7       	brne	.-4      	; 0x16de <.L1^B6>
    16e2:	9b af       	std	Y+59, r25	; 0x3b
    16e4:	8a af       	std	Y+58, r24	; 0x3a

000016e6 <.Loc.371>:
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
#endif /* __AVR_TINY__ */
}
    16e6:	3b c0       	rjmp	.+118    	; 0x175e <.L79>

000016e8 <.L120>:
	}
	else if (__tmp > 255)
    16e8:	20 e0       	ldi	r18, 0x00	; 0
    16ea:	30 e0       	ldi	r19, 0x00	; 0
    16ec:	4f e7       	ldi	r20, 0x7F	; 127
    16ee:	53 e4       	ldi	r21, 0x43	; 67
    16f0:	6d a1       	ldd	r22, Y+37	; 0x25
    16f2:	7e a1       	ldd	r23, Y+38	; 0x26
    16f4:	8f a1       	ldd	r24, Y+39	; 0x27
    16f6:	98 a5       	ldd	r25, Y+40	; 0x28
    16f8:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <__gesf2>
    16fc:	88 23       	and	r24, r24
    16fe:	f9 f0       	breq	.+62     	; 0x173e <.L123>
    1700:	f4 f0       	brlt	.+60     	; 0x173e <.L123>

00001702 <.LBB84>:
	{
		uint16_t __ticks=(uint16_t)__tmp2;
    1702:	69 a5       	ldd	r22, Y+41	; 0x29
    1704:	7a a5       	ldd	r23, Y+42	; 0x2a
    1706:	8b a5       	ldd	r24, Y+43	; 0x2b
    1708:	9c a5       	ldd	r25, Y+44	; 0x2c
    170a:	0e 94 ef 0f 	call	0x1fde	; 0x1fde <__fixunssfsi>
    170e:	a9 96       	adiw	r28, 0x29	; 41
    1710:	6c af       	std	Y+60, r22	; 0x3c
    1712:	7d af       	std	Y+61, r23	; 0x3d
    1714:	8e af       	std	Y+62, r24	; 0x3e
    1716:	9f af       	std	Y+63, r25	; 0x3f
    1718:	a9 97       	sbiw	r28, 0x29	; 41
    171a:	a7 96       	adiw	r28, 0x27	; 39
    171c:	8e ad       	ldd	r24, Y+62	; 0x3e
    171e:	9f ad       	ldd	r25, Y+63	; 0x3f
    1720:	a7 97       	sbiw	r28, 0x27	; 39
    1722:	9d af       	std	Y+61, r25	; 0x3d
    1724:	8c af       	std	Y+60, r24	; 0x3c
    1726:	8c ad       	ldd	r24, Y+60	; 0x3c
    1728:	9d ad       	ldd	r25, Y+61	; 0x3d
    172a:	9f af       	std	Y+63, r25	; 0x3f
    172c:	8e af       	std	Y+62, r24	; 0x3e

0000172e <.LBB85>:
	__asm__ volatile (
    172e:	8e ad       	ldd	r24, Y+62	; 0x3e
    1730:	9f ad       	ldd	r25, Y+63	; 0x3f

00001732 <.L1^B7>:
    1732:	01 97       	sbiw	r24, 0x01	; 1
    1734:	f1 f7       	brne	.-4      	; 0x1732 <.L1^B7>
    1736:	9f af       	std	Y+63, r25	; 0x3f
    1738:	8e af       	std	Y+62, r24	; 0x3e

0000173a <.Loc.375>:
	...

0000173c <.LBE85>:
		_delay_loop_2(__ticks);
		return;
    173c:	24 c0       	rjmp	.+72     	; 0x1786 <.L92>

0000173e <.L123>:
	}
	else
		__ticks = (uint8_t)__tmp;
    173e:	6d a1       	ldd	r22, Y+37	; 0x25
    1740:	7e a1       	ldd	r23, Y+38	; 0x26
    1742:	8f a1       	ldd	r24, Y+39	; 0x27
    1744:	98 a5       	ldd	r25, Y+40	; 0x28
    1746:	0e 94 ef 0f 	call	0x1fde	; 0x1fde <__fixunssfsi>
    174a:	ad 96       	adiw	r28, 0x2d	; 45
    174c:	6c af       	std	Y+60, r22	; 0x3c
    174e:	7d af       	std	Y+61, r23	; 0x3d
    1750:	8e af       	std	Y+62, r24	; 0x3e
    1752:	9f af       	std	Y+63, r25	; 0x3f
    1754:	ad 97       	sbiw	r28, 0x2d	; 45
    1756:	aa 96       	adiw	r28, 0x2a	; 42
    1758:	9f ad       	ldd	r25, Y+63	; 0x3f
    175a:	aa 97       	sbiw	r28, 0x2a	; 42
    175c:	9d a7       	std	Y+45, r25	; 0x2d

0000175e <.L79>:
    175e:	2d a5       	ldd	r18, Y+45	; 0x2d
    1760:	ce 01       	movw	r24, r28
    1762:	80 5c       	subi	r24, 0xC0	; 192
    1764:	9f 4f       	sbci	r25, 0xFF	; 255
    1766:	dc 01       	movw	r26, r24
    1768:	2c 93       	st	X, r18

0000176a <.LBB87>:
	__asm__ volatile (
    176a:	ce 01       	movw	r24, r28
    176c:	80 5c       	subi	r24, 0xC0	; 192
    176e:	9f 4f       	sbci	r25, 0xFF	; 255
    1770:	fc 01       	movw	r30, r24
    1772:	80 81       	ld	r24, Z
    1774:	28 2f       	mov	r18, r24

00001776 <.L1^B8>:
    1776:	2a 95       	dec	r18
    1778:	f1 f7       	brne	.-4      	; 0x1776 <.L1^B8>
    177a:	ce 01       	movw	r24, r28
    177c:	80 5c       	subi	r24, 0xC0	; 192
    177e:	9f 4f       	sbci	r25, 0xFF	; 255
    1780:	dc 01       	movw	r26, r24
    1782:	2c 93       	st	X, r18

00001784 <.Loc.379>:
	...

00001786 <.L92>:
    _delay_us(2);
    PORTL |= (1<<PL6);
    1786:	8b e0       	ldi	r24, 0x0B	; 11
    1788:	91 e0       	ldi	r25, 0x01	; 1
    178a:	fc 01       	movw	r30, r24
    178c:	20 81       	ld	r18, Z
    178e:	8b e0       	ldi	r24, 0x0B	; 11
    1790:	91 e0       	ldi	r25, 0x01	; 1

00001792 <.Loc.381>:
    1792:	20 64       	ori	r18, 0x40	; 64
    1794:	dc 01       	movw	r26, r24
    1796:	2c 93       	st	X, r18
    1798:	80 e0       	ldi	r24, 0x00	; 0
    179a:	90 e0       	ldi	r25, 0x00	; 0
    179c:	a0 e2       	ldi	r26, 0x20	; 32
    179e:	b1 e4       	ldi	r27, 0x41	; 65
    17a0:	89 83       	std	Y+1, r24	; 0x01
    17a2:	9a 83       	std	Y+2, r25	; 0x02
    17a4:	ab 83       	std	Y+3, r26	; 0x03
    17a6:	bc 83       	std	Y+4, r27	; 0x04

000017a8 <.LBB89>:
	__tmp = ((F_CPU) / 3e6) * __us;
    17a8:	2b ea       	ldi	r18, 0xAB	; 171
    17aa:	3a ea       	ldi	r19, 0xAA	; 170
    17ac:	4a ea       	ldi	r20, 0xAA	; 170
    17ae:	50 e4       	ldi	r21, 0x40	; 64
    17b0:	69 81       	ldd	r22, Y+1	; 0x01
    17b2:	7a 81       	ldd	r23, Y+2	; 0x02
    17b4:	8b 81       	ldd	r24, Y+3	; 0x03
    17b6:	9c 81       	ldd	r25, Y+4	; 0x04
    17b8:	0e 94 d5 10 	call	0x21aa	; 0x21aa <__mulsf3>
    17bc:	e1 96       	adiw	r28, 0x31	; 49
    17be:	6c af       	std	Y+60, r22	; 0x3c
    17c0:	7d af       	std	Y+61, r23	; 0x3d
    17c2:	8e af       	std	Y+62, r24	; 0x3e
    17c4:	9f af       	std	Y+63, r25	; 0x3f
    17c6:	e1 97       	sbiw	r28, 0x31	; 49
    17c8:	e1 96       	adiw	r28, 0x31	; 49
    17ca:	8c ad       	ldd	r24, Y+60	; 0x3c
    17cc:	9d ad       	ldd	r25, Y+61	; 0x3d
    17ce:	ae ad       	ldd	r26, Y+62	; 0x3e
    17d0:	bf ad       	ldd	r27, Y+63	; 0x3f
    17d2:	e1 97       	sbiw	r28, 0x31	; 49
    17d4:	8d 83       	std	Y+5, r24	; 0x05
    17d6:	9e 83       	std	Y+6, r25	; 0x06
    17d8:	af 83       	std	Y+7, r26	; 0x07
    17da:	b8 87       	std	Y+8, r27	; 0x08

000017dc <.Loc.383>:
	__tmp2 = ((F_CPU) / 4e6) * __us;
    17dc:	20 e0       	ldi	r18, 0x00	; 0
    17de:	30 e0       	ldi	r19, 0x00	; 0
    17e0:	40 e8       	ldi	r20, 0x80	; 128
    17e2:	50 e4       	ldi	r21, 0x40	; 64
    17e4:	69 81       	ldd	r22, Y+1	; 0x01
    17e6:	7a 81       	ldd	r23, Y+2	; 0x02
    17e8:	8b 81       	ldd	r24, Y+3	; 0x03
    17ea:	9c 81       	ldd	r25, Y+4	; 0x04
    17ec:	0e 94 d5 10 	call	0x21aa	; 0x21aa <__mulsf3>
    17f0:	e5 96       	adiw	r28, 0x35	; 53
    17f2:	6c af       	std	Y+60, r22	; 0x3c
    17f4:	7d af       	std	Y+61, r23	; 0x3d
    17f6:	8e af       	std	Y+62, r24	; 0x3e
    17f8:	9f af       	std	Y+63, r25	; 0x3f
    17fa:	e5 97       	sbiw	r28, 0x35	; 53
    17fc:	e5 96       	adiw	r28, 0x35	; 53
    17fe:	8c ad       	ldd	r24, Y+60	; 0x3c
    1800:	9d ad       	ldd	r25, Y+61	; 0x3d
    1802:	ae ad       	ldd	r26, Y+62	; 0x3e
    1804:	bf ad       	ldd	r27, Y+63	; 0x3f
    1806:	e5 97       	sbiw	r28, 0x35	; 53
    1808:	89 87       	std	Y+9, r24	; 0x09
    180a:	9a 87       	std	Y+10, r25	; 0x0a
    180c:	ab 87       	std	Y+11, r26	; 0x0b
    180e:	bc 87       	std	Y+12, r27	; 0x0c

00001810 <.Loc.384>:
	if (__tmp < 1.0)
    1810:	20 e0       	ldi	r18, 0x00	; 0
    1812:	30 e0       	ldi	r19, 0x00	; 0
    1814:	40 e8       	ldi	r20, 0x80	; 128
    1816:	5f e3       	ldi	r21, 0x3F	; 63
    1818:	6d 81       	ldd	r22, Y+5	; 0x05
    181a:	7e 81       	ldd	r23, Y+6	; 0x06
    181c:	8f 81       	ldd	r24, Y+7	; 0x07
    181e:	98 85       	ldd	r25, Y+8	; 0x08
    1820:	0e 94 71 0f 	call	0x1ee2	; 0x1ee2 <__cmpsf2>
    1824:	88 23       	and	r24, r24
    1826:	1c f4       	brge	.+6      	; 0x182e <.L124>

00001828 <.Loc.385>:
		__ticks = 1;
    1828:	81 e0       	ldi	r24, 0x01	; 1
    182a:	8d 87       	std	Y+13, r24	; 0x0d
    182c:	13 c1       	rjmp	.+550    	; 0x1a54 <.L95>

0000182e <.L124>:
	else if (__tmp2 > 65535)
    182e:	20 e0       	ldi	r18, 0x00	; 0
    1830:	3f ef       	ldi	r19, 0xFF	; 255
    1832:	4f e7       	ldi	r20, 0x7F	; 127
    1834:	57 e4       	ldi	r21, 0x47	; 71
    1836:	69 85       	ldd	r22, Y+9	; 0x09
    1838:	7a 85       	ldd	r23, Y+10	; 0x0a
    183a:	8b 85       	ldd	r24, Y+11	; 0x0b
    183c:	9c 85       	ldd	r25, Y+12	; 0x0c
    183e:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <__gesf2>
    1842:	88 23       	and	r24, r24
    1844:	09 f0       	breq	.+2      	; 0x1848 <L0^A>

00001846 <L0^A>:
    1846:	0c f4       	brge	.+2      	; 0x184a <.Loc.387>

00001848 <L0^A>:
    1848:	c2 c0       	rjmp	.+388    	; 0x19ce <.L125>

0000184a <.Loc.387>:
		_delay_ms(__us / 1000.0);
    184a:	20 e0       	ldi	r18, 0x00	; 0
    184c:	30 e0       	ldi	r19, 0x00	; 0
    184e:	4a e7       	ldi	r20, 0x7A	; 122
    1850:	54 e4       	ldi	r21, 0x44	; 68
    1852:	69 81       	ldd	r22, Y+1	; 0x01
    1854:	7a 81       	ldd	r23, Y+2	; 0x02
    1856:	8b 81       	ldd	r24, Y+3	; 0x03
    1858:	9c 81       	ldd	r25, Y+4	; 0x04
    185a:	0e 94 76 0f 	call	0x1eec	; 0x1eec <__divsf3>
    185e:	e9 96       	adiw	r28, 0x39	; 57
    1860:	6c af       	std	Y+60, r22	; 0x3c
    1862:	7d af       	std	Y+61, r23	; 0x3d
    1864:	8e af       	std	Y+62, r24	; 0x3e
    1866:	9f af       	std	Y+63, r25	; 0x3f
    1868:	e9 97       	sbiw	r28, 0x39	; 57
    186a:	e9 96       	adiw	r28, 0x39	; 57
    186c:	8c ad       	ldd	r24, Y+60	; 0x3c
    186e:	9d ad       	ldd	r25, Y+61	; 0x3d
    1870:	ae ad       	ldd	r26, Y+62	; 0x3e
    1872:	bf ad       	ldd	r27, Y+63	; 0x3f
    1874:	e9 97       	sbiw	r28, 0x39	; 57
    1876:	8e 87       	std	Y+14, r24	; 0x0e
    1878:	9f 87       	std	Y+15, r25	; 0x0f
    187a:	a8 8b       	std	Y+16, r26	; 0x10
    187c:	b9 8b       	std	Y+17, r27	; 0x11

0000187e <.LBB91>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    187e:	20 e0       	ldi	r18, 0x00	; 0
    1880:	30 e0       	ldi	r19, 0x00	; 0
    1882:	4a e7       	ldi	r20, 0x7A	; 122
    1884:	55 e4       	ldi	r21, 0x45	; 69
    1886:	6e 85       	ldd	r22, Y+14	; 0x0e
    1888:	7f 85       	ldd	r23, Y+15	; 0x0f
    188a:	88 89       	ldd	r24, Y+16	; 0x10
    188c:	99 89       	ldd	r25, Y+17	; 0x11
    188e:	0e 94 d5 10 	call	0x21aa	; 0x21aa <__mulsf3>
    1892:	ed 96       	adiw	r28, 0x3d	; 61
    1894:	6c af       	std	Y+60, r22	; 0x3c
    1896:	7d af       	std	Y+61, r23	; 0x3d
    1898:	8e af       	std	Y+62, r24	; 0x3e
    189a:	9f af       	std	Y+63, r25	; 0x3f
    189c:	ed 97       	sbiw	r28, 0x3d	; 61
    189e:	ed 96       	adiw	r28, 0x3d	; 61
    18a0:	8c ad       	ldd	r24, Y+60	; 0x3c
    18a2:	9d ad       	ldd	r25, Y+61	; 0x3d
    18a4:	ae ad       	ldd	r26, Y+62	; 0x3e
    18a6:	bf ad       	ldd	r27, Y+63	; 0x3f
    18a8:	ed 97       	sbiw	r28, 0x3d	; 61
    18aa:	8a 8b       	std	Y+18, r24	; 0x12
    18ac:	9b 8b       	std	Y+19, r25	; 0x13
    18ae:	ac 8b       	std	Y+20, r26	; 0x14
    18b0:	bd 8b       	std	Y+21, r27	; 0x15

000018b2 <.Loc.389>:
	if (__tmp < 1.0)
    18b2:	20 e0       	ldi	r18, 0x00	; 0
    18b4:	30 e0       	ldi	r19, 0x00	; 0
    18b6:	40 e8       	ldi	r20, 0x80	; 128
    18b8:	5f e3       	ldi	r21, 0x3F	; 63
    18ba:	6a 89       	ldd	r22, Y+18	; 0x12
    18bc:	7b 89       	ldd	r23, Y+19	; 0x13
    18be:	8c 89       	ldd	r24, Y+20	; 0x14
    18c0:	9d 89       	ldd	r25, Y+21	; 0x15
    18c2:	0e 94 71 0f 	call	0x1ee2	; 0x1ee2 <__cmpsf2>
    18c6:	88 23       	and	r24, r24
    18c8:	2c f4       	brge	.+10     	; 0x18d4 <.L126>

000018ca <.Loc.390>:
		__ticks = 1;
    18ca:	81 e0       	ldi	r24, 0x01	; 1
    18cc:	90 e0       	ldi	r25, 0x00	; 0
    18ce:	9f 8b       	std	Y+23, r25	; 0x17
    18d0:	8e 8b       	std	Y+22, r24	; 0x16
    18d2:	72 c0       	rjmp	.+228    	; 0x19b8 <.L100>

000018d4 <.L126>:
	else if (__tmp > 65535)
    18d4:	20 e0       	ldi	r18, 0x00	; 0
    18d6:	3f ef       	ldi	r19, 0xFF	; 255
    18d8:	4f e7       	ldi	r20, 0x7F	; 127
    18da:	57 e4       	ldi	r21, 0x47	; 71
    18dc:	6a 89       	ldd	r22, Y+18	; 0x12
    18de:	7b 89       	ldd	r23, Y+19	; 0x13
    18e0:	8c 89       	ldd	r24, Y+20	; 0x14
    18e2:	9d 89       	ldd	r25, Y+21	; 0x15
    18e4:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <__gesf2>
    18e8:	88 23       	and	r24, r24
    18ea:	09 f0       	breq	.+2      	; 0x18ee <L0^A>

000018ec <L0^A>:
    18ec:	0c f4       	brge	.+2      	; 0x18f0 <.Loc.392>

000018ee <L0^A>:
    18ee:	4e c0       	rjmp	.+156    	; 0x198c <.L127>

000018f0 <.Loc.392>:
		__ticks = (uint16_t) (__ms * 10.0);
    18f0:	20 e0       	ldi	r18, 0x00	; 0
    18f2:	30 e0       	ldi	r19, 0x00	; 0
    18f4:	40 e2       	ldi	r20, 0x20	; 32
    18f6:	51 e4       	ldi	r21, 0x41	; 65
    18f8:	6e 85       	ldd	r22, Y+14	; 0x0e
    18fa:	7f 85       	ldd	r23, Y+15	; 0x0f
    18fc:	88 89       	ldd	r24, Y+16	; 0x10
    18fe:	99 89       	ldd	r25, Y+17	; 0x11
    1900:	0e 94 d5 10 	call	0x21aa	; 0x21aa <__mulsf3>
    1904:	c3 58       	subi	r28, 0x83	; 131
    1906:	df 4f       	sbci	r29, 0xFF	; 255
    1908:	68 83       	st	Y, r22
    190a:	79 83       	std	Y+1, r23	; 0x01
    190c:	8a 83       	std	Y+2, r24	; 0x02
    190e:	9b 83       	std	Y+3, r25	; 0x03
    1910:	cd 57       	subi	r28, 0x7D	; 125
    1912:	d0 40       	sbci	r29, 0x00	; 0
    1914:	c3 58       	subi	r28, 0x83	; 131
    1916:	df 4f       	sbci	r29, 0xFF	; 255
    1918:	88 81       	ld	r24, Y
    191a:	99 81       	ldd	r25, Y+1	; 0x01
    191c:	aa 81       	ldd	r26, Y+2	; 0x02
    191e:	bb 81       	ldd	r27, Y+3	; 0x03
    1920:	cd 57       	subi	r28, 0x7D	; 125
    1922:	d0 40       	sbci	r29, 0x00	; 0
    1924:	25 96       	adiw	r28, 0x05	; 5
    1926:	8c af       	std	Y+60, r24	; 0x3c
    1928:	9d af       	std	Y+61, r25	; 0x3d
    192a:	ae af       	std	Y+62, r26	; 0x3e
    192c:	bf af       	std	Y+63, r27	; 0x3f
    192e:	25 97       	sbiw	r28, 0x05	; 5

00001930 <.Loc.393>:
    1930:	25 96       	adiw	r28, 0x05	; 5
    1932:	6c ad       	ldd	r22, Y+60	; 0x3c
    1934:	7d ad       	ldd	r23, Y+61	; 0x3d
    1936:	8e ad       	ldd	r24, Y+62	; 0x3e
    1938:	9f ad       	ldd	r25, Y+63	; 0x3f
    193a:	25 97       	sbiw	r28, 0x05	; 5
    193c:	0e 94 ef 0f 	call	0x1fde	; 0x1fde <__fixunssfsi>
    1940:	cf 57       	subi	r28, 0x7F	; 127
    1942:	df 4f       	sbci	r29, 0xFF	; 255
    1944:	68 83       	st	Y, r22
    1946:	79 83       	std	Y+1, r23	; 0x01
    1948:	8a 83       	std	Y+2, r24	; 0x02
    194a:	9b 83       	std	Y+3, r25	; 0x03
    194c:	c1 58       	subi	r28, 0x81	; 129
    194e:	d0 40       	sbci	r29, 0x00	; 0
    1950:	cf 57       	subi	r28, 0x7F	; 127
    1952:	df 4f       	sbci	r29, 0xFF	; 255
    1954:	a8 81       	ld	r26, Y
    1956:	b9 81       	ldd	r27, Y+1	; 0x01
    1958:	c1 58       	subi	r28, 0x81	; 129
    195a:	d0 40       	sbci	r29, 0x00	; 0
    195c:	bf 8b       	std	Y+23, r27	; 0x17
    195e:	ae 8b       	std	Y+22, r26	; 0x16

00001960 <.Loc.394>:
		while(__ticks)
    1960:	10 c0       	rjmp	.+32     	; 0x1982 <.L103>

00001962 <.L104>:
    1962:	80 e9       	ldi	r24, 0x90	; 144
    1964:	91 e0       	ldi	r25, 0x01	; 1
    1966:	99 8f       	std	Y+25, r25	; 0x19
    1968:	88 8f       	std	Y+24, r24	; 0x18

0000196a <.LBB93>:
	__asm__ volatile (
    196a:	88 8d       	ldd	r24, Y+24	; 0x18
    196c:	99 8d       	ldd	r25, Y+25	; 0x19

0000196e <.L1^B9>:
    196e:	01 97       	sbiw	r24, 0x01	; 1
    1970:	f1 f7       	brne	.-4      	; 0x196e <.L1^B9>
    1972:	99 8f       	std	Y+25, r25	; 0x19
    1974:	88 8f       	std	Y+24, r24	; 0x18

00001976 <.Loc.396>:
	...

00001978 <.LBE93>:
			__ticks --;
    1978:	8e 89       	ldd	r24, Y+22	; 0x16
    197a:	9f 89       	ldd	r25, Y+23	; 0x17
    197c:	01 97       	sbiw	r24, 0x01	; 1
    197e:	9f 8b       	std	Y+23, r25	; 0x17
    1980:	8e 8b       	std	Y+22, r24	; 0x16

00001982 <.L103>:
		while(__ticks)
    1982:	8e 89       	ldd	r24, Y+22	; 0x16
    1984:	9f 89       	ldd	r25, Y+23	; 0x17
    1986:	00 97       	sbiw	r24, 0x00	; 0
    1988:	61 f7       	brne	.-40     	; 0x1962 <.L104>

0000198a <.Loc.399>:
		return;
    198a:	64 c0       	rjmp	.+200    	; 0x1a54 <.L95>

0000198c <.L127>:
		__ticks = (uint16_t)__tmp;
    198c:	6a 89       	ldd	r22, Y+18	; 0x12
    198e:	7b 89       	ldd	r23, Y+19	; 0x13
    1990:	8c 89       	ldd	r24, Y+20	; 0x14
    1992:	9d 89       	ldd	r25, Y+21	; 0x15
    1994:	0e 94 ef 0f 	call	0x1fde	; 0x1fde <__fixunssfsi>
    1998:	cb 57       	subi	r28, 0x7B	; 123
    199a:	df 4f       	sbci	r29, 0xFF	; 255
    199c:	68 83       	st	Y, r22
    199e:	79 83       	std	Y+1, r23	; 0x01
    19a0:	8a 83       	std	Y+2, r24	; 0x02
    19a2:	9b 83       	std	Y+3, r25	; 0x03
    19a4:	c5 58       	subi	r28, 0x85	; 133
    19a6:	d0 40       	sbci	r29, 0x00	; 0
    19a8:	cb 57       	subi	r28, 0x7B	; 123
    19aa:	df 4f       	sbci	r29, 0xFF	; 255
    19ac:	e8 81       	ld	r30, Y
    19ae:	f9 81       	ldd	r31, Y+1	; 0x01
    19b0:	c5 58       	subi	r28, 0x85	; 133
    19b2:	d0 40       	sbci	r29, 0x00	; 0
    19b4:	ff 8b       	std	Y+23, r31	; 0x17
    19b6:	ee 8b       	std	Y+22, r30	; 0x16

000019b8 <.L100>:
    19b8:	8e 89       	ldd	r24, Y+22	; 0x16
    19ba:	9f 89       	ldd	r25, Y+23	; 0x17
    19bc:	9b 8f       	std	Y+27, r25	; 0x1b
    19be:	8a 8f       	std	Y+26, r24	; 0x1a

000019c0 <.LBB95>:
    19c0:	8a 8d       	ldd	r24, Y+26	; 0x1a
    19c2:	9b 8d       	ldd	r25, Y+27	; 0x1b

000019c4 <.L1^B10>:
    19c4:	01 97       	sbiw	r24, 0x01	; 1
    19c6:	f1 f7       	brne	.-4      	; 0x19c4 <.L1^B10>
    19c8:	9b 8f       	std	Y+27, r25	; 0x1b
    19ca:	8a 8f       	std	Y+26, r24	; 0x1a

000019cc <.Loc.402>:
}
    19cc:	43 c0       	rjmp	.+134    	; 0x1a54 <.L95>

000019ce <.L125>:
	else if (__tmp > 255)
    19ce:	20 e0       	ldi	r18, 0x00	; 0
    19d0:	30 e0       	ldi	r19, 0x00	; 0
    19d2:	4f e7       	ldi	r20, 0x7F	; 127
    19d4:	53 e4       	ldi	r21, 0x43	; 67
    19d6:	6d 81       	ldd	r22, Y+5	; 0x05
    19d8:	7e 81       	ldd	r23, Y+6	; 0x06
    19da:	8f 81       	ldd	r24, Y+7	; 0x07
    19dc:	98 85       	ldd	r25, Y+8	; 0x08
    19de:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <__gesf2>
    19e2:	88 23       	and	r24, r24
    19e4:	19 f1       	breq	.+70     	; 0x1a2c <.L128>
    19e6:	14 f1       	brlt	.+68     	; 0x1a2c <.L128>

000019e8 <.LBB97>:
		uint16_t __ticks=(uint16_t)__tmp2;
    19e8:	69 85       	ldd	r22, Y+9	; 0x09
    19ea:	7a 85       	ldd	r23, Y+10	; 0x0a
    19ec:	8b 85       	ldd	r24, Y+11	; 0x0b
    19ee:	9c 85       	ldd	r25, Y+12	; 0x0c
    19f0:	0e 94 ef 0f 	call	0x1fde	; 0x1fde <__fixunssfsi>
    19f4:	c7 57       	subi	r28, 0x77	; 119
    19f6:	df 4f       	sbci	r29, 0xFF	; 255
    19f8:	68 83       	st	Y, r22
    19fa:	79 83       	std	Y+1, r23	; 0x01
    19fc:	8a 83       	std	Y+2, r24	; 0x02
    19fe:	9b 83       	std	Y+3, r25	; 0x03
    1a00:	c9 58       	subi	r28, 0x89	; 137
    1a02:	d0 40       	sbci	r29, 0x00	; 0
    1a04:	c7 57       	subi	r28, 0x77	; 119
    1a06:	df 4f       	sbci	r29, 0xFF	; 255
    1a08:	88 81       	ld	r24, Y
    1a0a:	99 81       	ldd	r25, Y+1	; 0x01
    1a0c:	c9 58       	subi	r28, 0x89	; 137
    1a0e:	d0 40       	sbci	r29, 0x00	; 0
    1a10:	9d 8f       	std	Y+29, r25	; 0x1d
    1a12:	8c 8f       	std	Y+28, r24	; 0x1c
    1a14:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1a16:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1a18:	9f 8f       	std	Y+31, r25	; 0x1f
    1a1a:	8e 8f       	std	Y+30, r24	; 0x1e

00001a1c <.LBB98>:
	__asm__ volatile (
    1a1c:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1a1e:	9f 8d       	ldd	r25, Y+31	; 0x1f

00001a20 <.L1^B11>:
    1a20:	01 97       	sbiw	r24, 0x01	; 1
    1a22:	f1 f7       	brne	.-4      	; 0x1a20 <.L1^B11>
    1a24:	9f 8f       	std	Y+31, r25	; 0x1f
    1a26:	8e 8f       	std	Y+30, r24	; 0x1e

00001a28 <.Loc.406>:
	...

00001a2a <.LBE98>:
		return;
    1a2a:	1b c0       	rjmp	.+54     	; 0x1a62 <.L108>

00001a2c <.L128>:
		__ticks = (uint8_t)__tmp;
    1a2c:	6d 81       	ldd	r22, Y+5	; 0x05
    1a2e:	7e 81       	ldd	r23, Y+6	; 0x06
    1a30:	8f 81       	ldd	r24, Y+7	; 0x07
    1a32:	98 85       	ldd	r25, Y+8	; 0x08
    1a34:	0e 94 ef 0f 	call	0x1fde	; 0x1fde <__fixunssfsi>
    1a38:	c3 57       	subi	r28, 0x73	; 115
    1a3a:	df 4f       	sbci	r29, 0xFF	; 255
    1a3c:	68 83       	st	Y, r22
    1a3e:	79 83       	std	Y+1, r23	; 0x01
    1a40:	8a 83       	std	Y+2, r24	; 0x02
    1a42:	9b 83       	std	Y+3, r25	; 0x03
    1a44:	cd 58       	subi	r28, 0x8D	; 141
    1a46:	d0 40       	sbci	r29, 0x00	; 0
    1a48:	c3 57       	subi	r28, 0x73	; 115
    1a4a:	df 4f       	sbci	r29, 0xFF	; 255
    1a4c:	98 81       	ld	r25, Y
    1a4e:	cd 58       	subi	r28, 0x8D	; 141
    1a50:	d0 40       	sbci	r29, 0x00	; 0
    1a52:	9d 87       	std	Y+13, r25	; 0x0d

00001a54 <.L95>:
    1a54:	8d 85       	ldd	r24, Y+13	; 0x0d
    1a56:	88 a3       	std	Y+32, r24	; 0x20

00001a58 <.LBB100>:
	__asm__ volatile (
    1a58:	88 a1       	ldd	r24, Y+32	; 0x20

00001a5a <.L1^B12>:
    1a5a:	8a 95       	dec	r24
    1a5c:	f1 f7       	brne	.-4      	; 0x1a5a <.L1^B12>
    1a5e:	88 a3       	std	Y+32, r24	; 0x20

00001a60 <.Loc.410>:
	...

00001a62 <.L108>:
    _delay_us(10);
    PORTL &= (~(1<<PL6));
    1a62:	8b e0       	ldi	r24, 0x0B	; 11
    1a64:	91 e0       	ldi	r25, 0x01	; 1
    1a66:	dc 01       	movw	r26, r24
    1a68:	2c 91       	ld	r18, X

00001a6a <.Loc.412>:
    1a6a:	8b e0       	ldi	r24, 0x0B	; 11
    1a6c:	91 e0       	ldi	r25, 0x01	; 1

00001a6e <.Loc.413>:
    1a6e:	2f 7b       	andi	r18, 0xBF	; 191
    1a70:	fc 01       	movw	r30, r24
    1a72:	20 83       	st	Z, r18

00001a74 <.Loc.414>:
}
    1a74:	00 00       	nop
    1a76:	c0 57       	subi	r28, 0x70	; 112
    1a78:	df 4f       	sbci	r29, 0xFF	; 255
    1a7a:	0f b6       	in	r0, 0x3f	; 63
    1a7c:	f8 94       	cli
    1a7e:	de bf       	out	0x3e, r29	; 62
    1a80:	0f be       	out	0x3f, r0	; 63
    1a82:	cd bf       	out	0x3d, r28	; 61
    1a84:	df 91       	pop	r29
    1a86:	cf 91       	pop	r28
    1a88:	08 95       	ret

00001a8a <__vector_15>:
ISR(TIMER2_OVF_vect){
    1a8a:	1f 92       	push	r1
    1a8c:	0f 92       	push	r0
    1a8e:	0f b6       	in	r0, 0x3f	; 63
    1a90:	0f 92       	push	r0
    1a92:	11 24       	eor	r1, r1
    1a94:	8f 93       	push	r24
    1a96:	9f 93       	push	r25
    1a98:	cf 93       	push	r28
    1a9a:	df 93       	push	r29
    1a9c:	cd b7       	in	r28, 0x3d	; 61
    1a9e:	de b7       	in	r29, 0x3e	; 62

00001aa0 <.Loc.416>:
    count++;
    1aa0:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <count>
    1aa4:	90 91 2f 02 	lds	r25, 0x022F	; 0x80022f <count+0x1>
    1aa8:	01 96       	adiw	r24, 0x01	; 1
    1aaa:	90 93 2f 02 	sts	0x022F, r25	; 0x80022f <count+0x1>
    1aae:	80 93 2e 02 	sts	0x022E, r24	; 0x80022e <count>

00001ab2 <.Loc.417>:
}
    1ab2:	00 00       	nop
    1ab4:	df 91       	pop	r29
    1ab6:	cf 91       	pop	r28
    1ab8:	9f 91       	pop	r25
    1aba:	8f 91       	pop	r24
    1abc:	0f 90       	pop	r0
    1abe:	0f be       	out	0x3f, r0	; 63
    1ac0:	0f 90       	pop	r0
    1ac2:	1f 90       	pop	r1
    1ac4:	18 95       	reti

00001ac6 <init_display_meneer>:
	~0x66, ~0xB6, ~0xBE, ~0xE0,
	~0xFE, ~0xF6, ~0xEE, ~0x3E,
	~0x9C, ~0x7A, ~0x9E, ~0x8E };

void init_display_meneer (void)
{
    1ac6:	cf 93       	push	r28
    1ac8:	df 93       	push	r29
    1aca:	cd b7       	in	r28, 0x3d	; 61
    1acc:	de b7       	in	r29, 0x3e	; 62

00001ace <.Loc.419>:
	// Initialiseer de pinnen voor datain, shiftclk en latchclk als output
	DDR_SDI    |= (1 << SDI_BIT);
    1ace:	81 e0       	ldi	r24, 0x01	; 1
    1ad0:	91 e0       	ldi	r25, 0x01	; 1
    1ad2:	fc 01       	movw	r30, r24
    1ad4:	20 81       	ld	r18, Z
    1ad6:	81 e0       	ldi	r24, 0x01	; 1
    1ad8:	91 e0       	ldi	r25, 0x01	; 1

00001ada <.Loc.420>:
    1ada:	20 62       	ori	r18, 0x20	; 32
    1adc:	fc 01       	movw	r30, r24
    1ade:	20 83       	st	Z, r18

00001ae0 <.Loc.421>:
	DDR_SFTCLK |= (1 << SFTCLK_BIT);
    1ae0:	81 e0       	ldi	r24, 0x01	; 1
    1ae2:	91 e0       	ldi	r25, 0x01	; 1
    1ae4:	fc 01       	movw	r30, r24
    1ae6:	20 81       	ld	r18, Z
    1ae8:	81 e0       	ldi	r24, 0x01	; 1
    1aea:	91 e0       	ldi	r25, 0x01	; 1

00001aec <.Loc.422>:
    1aec:	20 61       	ori	r18, 0x10	; 16
    1aee:	fc 01       	movw	r30, r24
    1af0:	20 83       	st	Z, r18

00001af2 <.Loc.423>:
	DDR_LCHCLK |= (1 << LCHCLK_BIT);
    1af2:	83 e3       	ldi	r24, 0x33	; 51
    1af4:	90 e0       	ldi	r25, 0x00	; 0
    1af6:	fc 01       	movw	r30, r24
    1af8:	20 81       	ld	r18, Z
    1afa:	83 e3       	ldi	r24, 0x33	; 51
    1afc:	90 e0       	ldi	r25, 0x00	; 0

00001afe <.Loc.424>:
    1afe:	20 62       	ori	r18, 0x20	; 32
    1b00:	fc 01       	movw	r30, r24
    1b02:	20 83       	st	Z, r18

00001b04 <.Loc.425>:

	// Maak shiftclk en latchclk laag
	PORT_SFTCLK &= ~(1 << SFTCLK_BIT);
    1b04:	82 e0       	ldi	r24, 0x02	; 2
    1b06:	91 e0       	ldi	r25, 0x01	; 1
    1b08:	fc 01       	movw	r30, r24
    1b0a:	20 81       	ld	r18, Z

00001b0c <.Loc.426>:
    1b0c:	82 e0       	ldi	r24, 0x02	; 2
    1b0e:	91 e0       	ldi	r25, 0x01	; 1

00001b10 <.Loc.427>:
    1b10:	2f 7e       	andi	r18, 0xEF	; 239
    1b12:	fc 01       	movw	r30, r24
    1b14:	20 83       	st	Z, r18

00001b16 <.Loc.428>:
	PORT_LCHCLK &= ~(1 << LCHCLK_BIT);
    1b16:	84 e3       	ldi	r24, 0x34	; 52
    1b18:	90 e0       	ldi	r25, 0x00	; 0
    1b1a:	fc 01       	movw	r30, r24
    1b1c:	20 81       	ld	r18, Z

00001b1e <.Loc.429>:
    1b1e:	84 e3       	ldi	r24, 0x34	; 52
    1b20:	90 e0       	ldi	r25, 0x00	; 0

00001b22 <.Loc.430>:
    1b22:	2f 7d       	andi	r18, 0xDF	; 223
    1b24:	fc 01       	movw	r30, r24
    1b26:	20 83       	st	Z, r18

00001b28 <.Loc.431>:
}
    1b28:	00 00       	nop
    1b2a:	df 91       	pop	r29
    1b2c:	cf 91       	pop	r28
    1b2e:	08 95       	ret

00001b30 <send_data>:

void send_data(char data)
{
    1b30:	cf 93       	push	r28
    1b32:	df 93       	push	r29
    1b34:	00 d0       	rcall	.+0      	; 0x1b36 <L0^A>

00001b36 <L0^A>:
    1b36:	0f 92       	push	r0
    1b38:	0f 92       	push	r0
    1b3a:	cd b7       	in	r28, 0x3d	; 61
    1b3c:	de b7       	in	r29, 0x3e	; 62
    1b3e:	8d 83       	std	Y+5, r24	; 0x05

00001b40 <.LBB102>:
	for (unsigned i = 0; i < 8; i++)
    1b40:	1a 82       	std	Y+2, r1	; 0x02
    1b42:	19 82       	std	Y+1, r1	; 0x01

00001b44 <.Loc.434>:
    1b44:	39 c0       	rjmp	.+114    	; 0x1bb8 <.L132>

00001b46 <.L135>:
	// Herhaal voor alle bits in een char
	{
		// Bepaal de waarde van de bit die je naar het schuifregister
		// wil sturen
		int bit = data & 1;
    1b46:	8d 81       	ldd	r24, Y+5	; 0x05
    1b48:	08 2e       	mov	r0, r24
    1b4a:	00 0c       	add	r0, r0
    1b4c:	99 0b       	sbc	r25, r25

00001b4e <.Loc.436>:
    1b4e:	81 70       	andi	r24, 0x01	; 1
    1b50:	99 27       	eor	r25, r25
    1b52:	9c 83       	std	Y+4, r25	; 0x04
    1b54:	8b 83       	std	Y+3, r24	; 0x03

00001b56 <.Loc.437>:
		data >>= 1;
    1b56:	8d 81       	ldd	r24, Y+5	; 0x05
    1b58:	85 95       	asr	r24
    1b5a:	8d 83       	std	Y+5, r24	; 0x05

00001b5c <.Loc.438>:

		// Maak de juiste pin hoog of laag op basis van de bepaalde waarde
		// van het bit
		if (bit)
    1b5c:	8b 81       	ldd	r24, Y+3	; 0x03
    1b5e:	9c 81       	ldd	r25, Y+4	; 0x04
    1b60:	00 97       	sbiw	r24, 0x00	; 0
    1b62:	51 f0       	breq	.+20     	; 0x1b78 <.L133>

00001b64 <.Loc.439>:
		{
			PORT_SDI |= (1 << SDI_BIT);
    1b64:	82 e0       	ldi	r24, 0x02	; 2
    1b66:	91 e0       	ldi	r25, 0x01	; 1
    1b68:	fc 01       	movw	r30, r24
    1b6a:	20 81       	ld	r18, Z
    1b6c:	82 e0       	ldi	r24, 0x02	; 2
    1b6e:	91 e0       	ldi	r25, 0x01	; 1

00001b70 <.Loc.440>:
    1b70:	20 62       	ori	r18, 0x20	; 32
    1b72:	fc 01       	movw	r30, r24
    1b74:	20 83       	st	Z, r18
    1b76:	09 c0       	rjmp	.+18     	; 0x1b8a <.L134>

00001b78 <.L133>:
		}
		else
		{
			PORT_SDI &= ~(1 << SDI_BIT);
    1b78:	82 e0       	ldi	r24, 0x02	; 2
    1b7a:	91 e0       	ldi	r25, 0x01	; 1
    1b7c:	fc 01       	movw	r30, r24
    1b7e:	20 81       	ld	r18, Z

00001b80 <.Loc.442>:
    1b80:	82 e0       	ldi	r24, 0x02	; 2
    1b82:	91 e0       	ldi	r25, 0x01	; 1

00001b84 <.Loc.443>:
    1b84:	2f 7d       	andi	r18, 0xDF	; 223
    1b86:	fc 01       	movw	r30, r24
    1b88:	20 83       	st	Z, r18

00001b8a <.L134>:
		}

		// Toggle shiftclk (hoeveel tijd moest het signaal minimaal hoog zijn?)
		// Puls moet minimaal 13 ns hoog zijn. Een clk cycle op de Arduino duurt
		// 62 ns, dus signaal kan hoog en de volgende cycle weer omlaag
		PORT_SFTCLK |= (1 << SFTCLK_BIT);
    1b8a:	82 e0       	ldi	r24, 0x02	; 2
    1b8c:	91 e0       	ldi	r25, 0x01	; 1
    1b8e:	fc 01       	movw	r30, r24
    1b90:	20 81       	ld	r18, Z
    1b92:	82 e0       	ldi	r24, 0x02	; 2
    1b94:	91 e0       	ldi	r25, 0x01	; 1

00001b96 <.Loc.445>:
    1b96:	20 61       	ori	r18, 0x10	; 16
    1b98:	fc 01       	movw	r30, r24
    1b9a:	20 83       	st	Z, r18

00001b9c <.Loc.446>:
		PORT_SFTCLK &= ~(1 << SFTCLK_BIT);
    1b9c:	82 e0       	ldi	r24, 0x02	; 2
    1b9e:	91 e0       	ldi	r25, 0x01	; 1
    1ba0:	fc 01       	movw	r30, r24
    1ba2:	20 81       	ld	r18, Z

00001ba4 <.Loc.447>:
    1ba4:	82 e0       	ldi	r24, 0x02	; 2
    1ba6:	91 e0       	ldi	r25, 0x01	; 1

00001ba8 <.Loc.448>:
    1ba8:	2f 7e       	andi	r18, 0xEF	; 239
    1baa:	fc 01       	movw	r30, r24
    1bac:	20 83       	st	Z, r18

00001bae <.LBE103>:
	for (unsigned i = 0; i < 8; i++)
    1bae:	89 81       	ldd	r24, Y+1	; 0x01
    1bb0:	9a 81       	ldd	r25, Y+2	; 0x02
    1bb2:	01 96       	adiw	r24, 0x01	; 1
    1bb4:	9a 83       	std	Y+2, r25	; 0x02
    1bb6:	89 83       	std	Y+1, r24	; 0x01

00001bb8 <.L132>:
    1bb8:	89 81       	ldd	r24, Y+1	; 0x01
    1bba:	9a 81       	ldd	r25, Y+2	; 0x02
    1bbc:	87 30       	cpi	r24, 0x07	; 7
    1bbe:	91 05       	cpc	r25, r1
    1bc0:	11 f2       	breq	.-124    	; 0x1b46 <.L135>
    1bc2:	08 f2       	brcs	.-126    	; 0x1b46 <.L135>

00001bc4 <.LBE102>:
	}
}
    1bc4:	00 00       	nop
    1bc6:	00 00       	nop
    1bc8:	0f 90       	pop	r0
    1bca:	0f 90       	pop	r0
    1bcc:	0f 90       	pop	r0
    1bce:	0f 90       	pop	r0
    1bd0:	0f 90       	pop	r0
    1bd2:	df 91       	pop	r29
    1bd4:	cf 91       	pop	r28
    1bd6:	08 95       	ret

00001bd8 <send_enable>:

void send_enable(int display_nummer)
{
    1bd8:	cf 93       	push	r28
    1bda:	df 93       	push	r29
    1bdc:	0f 92       	push	r0
    1bde:	0f 92       	push	r0
    1be0:	cd b7       	in	r28, 0x3d	; 61
    1be2:	de b7       	in	r29, 0x3e	; 62
    1be4:	9a 83       	std	Y+2, r25	; 0x02
    1be6:	89 83       	std	Y+1, r24	; 0x01

00001be8 <.Loc.453>:
	send_data(0x10 << display_nummer);
    1be8:	80 e1       	ldi	r24, 0x10	; 16
    1bea:	90 e0       	ldi	r25, 0x00	; 0
    1bec:	09 80       	ldd	r0, Y+1	; 0x01
    1bee:	02 c0       	rjmp	.+4      	; 0x1bf4 <.L2^B1>

00001bf0 <.L1^B13>:
    1bf0:	88 0f       	add	r24, r24
    1bf2:	99 1f       	adc	r25, r25

00001bf4 <.L2^B1>:
    1bf4:	0a 94       	dec	r0
    1bf6:	e2 f7       	brpl	.-8      	; 0x1bf0 <.L1^B13>

00001bf8 <.Loc.454>:
    1bf8:	0e 94 98 0d 	call	0x1b30	; 0x1b30 <send_data>

00001bfc <.Loc.455>:
}
    1bfc:	00 00       	nop
    1bfe:	0f 90       	pop	r0
    1c00:	0f 90       	pop	r0
    1c02:	df 91       	pop	r29
    1c04:	cf 91       	pop	r28
    1c06:	08 95       	ret

00001c08 <display>:

void display(char data, int display_nummer)
{
    1c08:	cf 93       	push	r28
    1c0a:	df 93       	push	r29
    1c0c:	00 d0       	rcall	.+0      	; 0x1c0e <L0^A>

00001c0e <L0^A>:
    1c0e:	cd b7       	in	r28, 0x3d	; 61
    1c10:	de b7       	in	r29, 0x3e	; 62
    1c12:	89 83       	std	Y+1, r24	; 0x01
    1c14:	7b 83       	std	Y+3, r23	; 0x03
    1c16:	6a 83       	std	Y+2, r22	; 0x02

00001c18 <.Loc.457>:
	send_data(data);
    1c18:	89 81       	ldd	r24, Y+1	; 0x01
    1c1a:	0e 94 98 0d 	call	0x1b30	; 0x1b30 <send_data>

00001c1e <.Loc.458>:
	send_enable(display_nummer);
    1c1e:	8a 81       	ldd	r24, Y+2	; 0x02
    1c20:	9b 81       	ldd	r25, Y+3	; 0x03
    1c22:	0e 94 ec 0d 	call	0x1bd8	; 0x1bd8 <send_enable>

00001c26 <.Loc.459>:

	// Toggle latchclk (hoeveel tijd moest het signaal minimaal hoog zijn?)
	// Puls moet minimaal 13 ns hoog zijn. Een clk cycle op de Arduino duurt
	// 62 ns, dus signaal kan hoog en de volgende cycle weer omlaag
	PORT_LCHCLK |= (1 << LCHCLK_BIT);
    1c26:	84 e3       	ldi	r24, 0x34	; 52
    1c28:	90 e0       	ldi	r25, 0x00	; 0
    1c2a:	fc 01       	movw	r30, r24
    1c2c:	20 81       	ld	r18, Z
    1c2e:	84 e3       	ldi	r24, 0x34	; 52
    1c30:	90 e0       	ldi	r25, 0x00	; 0

00001c32 <.Loc.460>:
    1c32:	20 62       	ori	r18, 0x20	; 32
    1c34:	fc 01       	movw	r30, r24
    1c36:	20 83       	st	Z, r18

00001c38 <.Loc.461>:
	PORT_LCHCLK &= ~(1 << LCHCLK_BIT);
    1c38:	84 e3       	ldi	r24, 0x34	; 52
    1c3a:	90 e0       	ldi	r25, 0x00	; 0
    1c3c:	fc 01       	movw	r30, r24
    1c3e:	20 81       	ld	r18, Z

00001c40 <.Loc.462>:
    1c40:	84 e3       	ldi	r24, 0x34	; 52
    1c42:	90 e0       	ldi	r25, 0x00	; 0

00001c44 <.Loc.463>:
    1c44:	2f 7d       	andi	r18, 0xDF	; 223
    1c46:	fc 01       	movw	r30, r24
    1c48:	20 83       	st	Z, r18

00001c4a <.Loc.464>:
}
    1c4a:	00 00       	nop
    1c4c:	0f 90       	pop	r0
    1c4e:	0f 90       	pop	r0
    1c50:	0f 90       	pop	r0
    1c52:	df 91       	pop	r29
    1c54:	cf 91       	pop	r28
    1c56:	08 95       	ret

00001c58 <display_getal>:

void display_getal(unsigned int getal)
{
    1c58:	cf 93       	push	r28
    1c5a:	df 93       	push	r29
    1c5c:	cd b7       	in	r28, 0x3d	; 61
    1c5e:	de b7       	in	r29, 0x3e	; 62
    1c60:	a6 97       	sbiw	r28, 0x26	; 38
    1c62:	0f b6       	in	r0, 0x3f	; 63
    1c64:	f8 94       	cli
    1c66:	de bf       	out	0x3e, r29	; 62
    1c68:	0f be       	out	0x3f, r0	; 63
    1c6a:	cd bf       	out	0x3d, r28	; 61
    1c6c:	9a 8b       	std	Y+18, r25	; 0x12
    1c6e:	89 8b       	std	Y+17, r24	; 0x11

00001c70 <.LBB104>:
	for (int i = 0; i < 4; i++)
    1c70:	1a 82       	std	Y+2, r1	; 0x02
    1c72:	19 82       	std	Y+1, r1	; 0x01

00001c74 <.Loc.467>:
    1c74:	cc c0       	rjmp	.+408    	; 0x1e0e <.L139>

00001c76 <.L148>:
	{
		display(segmentcodes[getal%10], i);
    1c76:	49 89       	ldd	r20, Y+17	; 0x11
    1c78:	5a 89       	ldd	r21, Y+18	; 0x12
    1c7a:	9a 01       	movw	r18, r20
    1c7c:	ad ec       	ldi	r26, 0xCD	; 205
    1c7e:	bc ec       	ldi	r27, 0xCC	; 204
    1c80:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <__umulhisi3>
    1c84:	9c 01       	movw	r18, r24
    1c86:	36 95       	lsr	r19
    1c88:	27 95       	ror	r18
    1c8a:	36 95       	lsr	r19
    1c8c:	27 95       	ror	r18
    1c8e:	36 95       	lsr	r19
    1c90:	27 95       	ror	r18
    1c92:	c9 01       	movw	r24, r18
    1c94:	88 0f       	add	r24, r24
    1c96:	99 1f       	adc	r25, r25
    1c98:	88 0f       	add	r24, r24
    1c9a:	99 1f       	adc	r25, r25
    1c9c:	82 0f       	add	r24, r18
    1c9e:	93 1f       	adc	r25, r19
    1ca0:	88 0f       	add	r24, r24
    1ca2:	99 1f       	adc	r25, r25
    1ca4:	9a 01       	movw	r18, r20
    1ca6:	28 1b       	sub	r18, r24
    1ca8:	39 0b       	sbc	r19, r25

00001caa <.Loc.469>:
    1caa:	c9 01       	movw	r24, r18
    1cac:	88 0f       	add	r24, r24
    1cae:	99 1f       	adc	r25, r25
    1cb0:	80 50       	subi	r24, 0x00	; 0
    1cb2:	9e 4f       	sbci	r25, 0xFE	; 254
    1cb4:	dc 01       	movw	r26, r24
    1cb6:	8d 91       	ld	r24, X+
    1cb8:	9c 91       	ld	r25, X

00001cba <.Loc.470>:
    1cba:	28 2f       	mov	r18, r24
    1cbc:	89 81       	ldd	r24, Y+1	; 0x01
    1cbe:	9a 81       	ldd	r25, Y+2	; 0x02
    1cc0:	bc 01       	movw	r22, r24
    1cc2:	82 2f       	mov	r24, r18
    1cc4:	0e 94 04 0e 	call	0x1c08	; 0x1c08 <display>

00001cc8 <.Loc.471>:
		getal /= 10;
    1cc8:	89 89       	ldd	r24, Y+17	; 0x11
    1cca:	9a 89       	ldd	r25, Y+18	; 0x12
    1ccc:	9c 01       	movw	r18, r24
    1cce:	ad ec       	ldi	r26, 0xCD	; 205
    1cd0:	bc ec       	ldi	r27, 0xCC	; 204
    1cd2:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <__umulhisi3>
    1cd6:	96 95       	lsr	r25
    1cd8:	87 95       	ror	r24
    1cda:	96 95       	lsr	r25
    1cdc:	87 95       	ror	r24
    1cde:	96 95       	lsr	r25
    1ce0:	87 95       	ror	r24
    1ce2:	9a 8b       	std	Y+18, r25	; 0x12
    1ce4:	89 8b       	std	Y+17, r24	; 0x11
    1ce6:	80 e0       	ldi	r24, 0x00	; 0
    1ce8:	90 e0       	ldi	r25, 0x00	; 0
    1cea:	a0 e8       	ldi	r26, 0x80	; 128
    1cec:	bf e3       	ldi	r27, 0x3F	; 63
    1cee:	8b 83       	std	Y+3, r24	; 0x03
    1cf0:	9c 83       	std	Y+4, r25	; 0x04
    1cf2:	ad 83       	std	Y+5, r26	; 0x05
    1cf4:	be 83       	std	Y+6, r27	; 0x06

00001cf6 <.LBB105>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    1cf6:	20 e0       	ldi	r18, 0x00	; 0
    1cf8:	30 e0       	ldi	r19, 0x00	; 0
    1cfa:	4a e7       	ldi	r20, 0x7A	; 122
    1cfc:	55 e4       	ldi	r21, 0x45	; 69
    1cfe:	6b 81       	ldd	r22, Y+3	; 0x03
    1d00:	7c 81       	ldd	r23, Y+4	; 0x04
    1d02:	8d 81       	ldd	r24, Y+5	; 0x05
    1d04:	9e 81       	ldd	r25, Y+6	; 0x06
    1d06:	0e 94 d5 10 	call	0x21aa	; 0x21aa <__mulsf3>
    1d0a:	6f 8b       	std	Y+23, r22	; 0x17
    1d0c:	78 8f       	std	Y+24, r23	; 0x18
    1d0e:	89 8f       	std	Y+25, r24	; 0x19
    1d10:	9a 8f       	std	Y+26, r25	; 0x1a
    1d12:	8f 89       	ldd	r24, Y+23	; 0x17
    1d14:	98 8d       	ldd	r25, Y+24	; 0x18
    1d16:	a9 8d       	ldd	r26, Y+25	; 0x19
    1d18:	ba 8d       	ldd	r27, Y+26	; 0x1a
    1d1a:	8f 83       	std	Y+7, r24	; 0x07
    1d1c:	98 87       	std	Y+8, r25	; 0x08
    1d1e:	a9 87       	std	Y+9, r26	; 0x09
    1d20:	ba 87       	std	Y+10, r27	; 0x0a

00001d22 <.Loc.473>:
	if (__tmp < 1.0)
    1d22:	20 e0       	ldi	r18, 0x00	; 0
    1d24:	30 e0       	ldi	r19, 0x00	; 0
    1d26:	40 e8       	ldi	r20, 0x80	; 128
    1d28:	5f e3       	ldi	r21, 0x3F	; 63
    1d2a:	6f 81       	ldd	r22, Y+7	; 0x07
    1d2c:	78 85       	ldd	r23, Y+8	; 0x08
    1d2e:	89 85       	ldd	r24, Y+9	; 0x09
    1d30:	9a 85       	ldd	r25, Y+10	; 0x0a
    1d32:	0e 94 71 0f 	call	0x1ee2	; 0x1ee2 <__cmpsf2>
    1d36:	88 23       	and	r24, r24
    1d38:	2c f4       	brge	.+10     	; 0x1d44 <.L151>

00001d3a <.Loc.474>:
		__ticks = 1;
    1d3a:	81 e0       	ldi	r24, 0x01	; 1
    1d3c:	90 e0       	ldi	r25, 0x00	; 0
    1d3e:	9c 87       	std	Y+12, r25	; 0x0c
    1d40:	8b 87       	std	Y+11, r24	; 0x0b
    1d42:	55 c0       	rjmp	.+170    	; 0x1dee <.L142>

00001d44 <.L151>:
	else if (__tmp > 65535)
    1d44:	20 e0       	ldi	r18, 0x00	; 0
    1d46:	3f ef       	ldi	r19, 0xFF	; 255
    1d48:	4f e7       	ldi	r20, 0x7F	; 127
    1d4a:	57 e4       	ldi	r21, 0x47	; 71
    1d4c:	6f 81       	ldd	r22, Y+7	; 0x07
    1d4e:	78 85       	ldd	r23, Y+8	; 0x08
    1d50:	89 85       	ldd	r24, Y+9	; 0x09
    1d52:	9a 85       	ldd	r25, Y+10	; 0x0a
    1d54:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <__gesf2>
    1d58:	88 23       	and	r24, r24
    1d5a:	d9 f1       	breq	.+118    	; 0x1dd2 <.L152>
    1d5c:	d4 f1       	brlt	.+116    	; 0x1dd2 <.L152>

00001d5e <.Loc.476>:
		__ticks = (uint16_t) (__ms * 10.0);
    1d5e:	20 e0       	ldi	r18, 0x00	; 0
    1d60:	30 e0       	ldi	r19, 0x00	; 0
    1d62:	40 e2       	ldi	r20, 0x20	; 32
    1d64:	51 e4       	ldi	r21, 0x41	; 65
    1d66:	6b 81       	ldd	r22, Y+3	; 0x03
    1d68:	7c 81       	ldd	r23, Y+4	; 0x04
    1d6a:	8d 81       	ldd	r24, Y+5	; 0x05
    1d6c:	9e 81       	ldd	r25, Y+6	; 0x06
    1d6e:	0e 94 d5 10 	call	0x21aa	; 0x21aa <__mulsf3>
    1d72:	6b 8f       	std	Y+27, r22	; 0x1b
    1d74:	7c 8f       	std	Y+28, r23	; 0x1c
    1d76:	8d 8f       	std	Y+29, r24	; 0x1d
    1d78:	9e 8f       	std	Y+30, r25	; 0x1e
    1d7a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1d7c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1d7e:	ad 8d       	ldd	r26, Y+29	; 0x1d
    1d80:	be 8d       	ldd	r27, Y+30	; 0x1e
    1d82:	8b 8b       	std	Y+19, r24	; 0x13
    1d84:	9c 8b       	std	Y+20, r25	; 0x14
    1d86:	ad 8b       	std	Y+21, r26	; 0x15
    1d88:	be 8b       	std	Y+22, r27	; 0x16

00001d8a <.Loc.477>:
    1d8a:	6b 89       	ldd	r22, Y+19	; 0x13
    1d8c:	7c 89       	ldd	r23, Y+20	; 0x14
    1d8e:	8d 89       	ldd	r24, Y+21	; 0x15
    1d90:	9e 89       	ldd	r25, Y+22	; 0x16
    1d92:	0e 94 ef 0f 	call	0x1fde	; 0x1fde <__fixunssfsi>
    1d96:	6f 8f       	std	Y+31, r22	; 0x1f
    1d98:	78 a3       	std	Y+32, r23	; 0x20
    1d9a:	89 a3       	std	Y+33, r24	; 0x21
    1d9c:	9a a3       	std	Y+34, r25	; 0x22
    1d9e:	af 8d       	ldd	r26, Y+31	; 0x1f
    1da0:	b8 a1       	ldd	r27, Y+32	; 0x20
    1da2:	bc 87       	std	Y+12, r27	; 0x0c
    1da4:	ab 87       	std	Y+11, r26	; 0x0b

00001da6 <.Loc.478>:
		while(__ticks)
    1da6:	10 c0       	rjmp	.+32     	; 0x1dc8 <.L145>

00001da8 <.L146>:
    1da8:	80 e9       	ldi	r24, 0x90	; 144
    1daa:	91 e0       	ldi	r25, 0x01	; 1
    1dac:	9e 87       	std	Y+14, r25	; 0x0e
    1dae:	8d 87       	std	Y+13, r24	; 0x0d

00001db0 <.LBB107>:
	__asm__ volatile (
    1db0:	8d 85       	ldd	r24, Y+13	; 0x0d
    1db2:	9e 85       	ldd	r25, Y+14	; 0x0e

00001db4 <.L1^B14>:
    1db4:	01 97       	sbiw	r24, 0x01	; 1
    1db6:	f1 f7       	brne	.-4      	; 0x1db4 <.L1^B14>
    1db8:	9e 87       	std	Y+14, r25	; 0x0e
    1dba:	8d 87       	std	Y+13, r24	; 0x0d

00001dbc <.Loc.480>:
	...

00001dbe <.LBE107>:
			__ticks --;
    1dbe:	8b 85       	ldd	r24, Y+11	; 0x0b
    1dc0:	9c 85       	ldd	r25, Y+12	; 0x0c
    1dc2:	01 97       	sbiw	r24, 0x01	; 1
    1dc4:	9c 87       	std	Y+12, r25	; 0x0c
    1dc6:	8b 87       	std	Y+11, r24	; 0x0b

00001dc8 <.L145>:
		while(__ticks)
    1dc8:	8b 85       	ldd	r24, Y+11	; 0x0b
    1dca:	9c 85       	ldd	r25, Y+12	; 0x0c
    1dcc:	00 97       	sbiw	r24, 0x00	; 0
    1dce:	61 f7       	brne	.-40     	; 0x1da8 <.L146>

00001dd0 <.Loc.483>:
		return;
    1dd0:	19 c0       	rjmp	.+50     	; 0x1e04 <.L147>

00001dd2 <.L152>:
		__ticks = (uint16_t)__tmp;
    1dd2:	6f 81       	ldd	r22, Y+7	; 0x07
    1dd4:	78 85       	ldd	r23, Y+8	; 0x08
    1dd6:	89 85       	ldd	r24, Y+9	; 0x09
    1dd8:	9a 85       	ldd	r25, Y+10	; 0x0a
    1dda:	0e 94 ef 0f 	call	0x1fde	; 0x1fde <__fixunssfsi>
    1dde:	6b a3       	std	Y+35, r22	; 0x23
    1de0:	7c a3       	std	Y+36, r23	; 0x24
    1de2:	8d a3       	std	Y+37, r24	; 0x25
    1de4:	9e a3       	std	Y+38, r25	; 0x26
    1de6:	eb a1       	ldd	r30, Y+35	; 0x23
    1de8:	fc a1       	ldd	r31, Y+36	; 0x24
    1dea:	fc 87       	std	Y+12, r31	; 0x0c
    1dec:	eb 87       	std	Y+11, r30	; 0x0b

00001dee <.L142>:
    1dee:	8b 85       	ldd	r24, Y+11	; 0x0b
    1df0:	9c 85       	ldd	r25, Y+12	; 0x0c
    1df2:	98 8b       	std	Y+16, r25	; 0x10
    1df4:	8f 87       	std	Y+15, r24	; 0x0f

00001df6 <.LBB109>:
    1df6:	8f 85       	ldd	r24, Y+15	; 0x0f
    1df8:	98 89       	ldd	r25, Y+16	; 0x10

00001dfa <.L1^B15>:
    1dfa:	01 97       	sbiw	r24, 0x01	; 1
    1dfc:	f1 f7       	brne	.-4      	; 0x1dfa <.L1^B15>
    1dfe:	98 8b       	std	Y+16, r25	; 0x10
    1e00:	8f 87       	std	Y+15, r24	; 0x0f

00001e02 <.Loc.486>:
	...

00001e04 <.L147>:
	for (int i = 0; i < 4; i++)
    1e04:	89 81       	ldd	r24, Y+1	; 0x01
    1e06:	9a 81       	ldd	r25, Y+2	; 0x02
    1e08:	01 96       	adiw	r24, 0x01	; 1
    1e0a:	9a 83       	std	Y+2, r25	; 0x02
    1e0c:	89 83       	std	Y+1, r24	; 0x01

00001e0e <.L139>:
    1e0e:	89 81       	ldd	r24, Y+1	; 0x01
    1e10:	9a 81       	ldd	r25, Y+2	; 0x02
    1e12:	83 30       	cpi	r24, 0x03	; 3
    1e14:	91 05       	cpc	r25, r1
    1e16:	09 f0       	breq	.+2      	; 0x1e1a <L0^A>

00001e18 <L0^A>:
    1e18:	0c f4       	brge	.+2      	; 0x1e1c <.LBE104>

00001e1a <L0^A>:
    1e1a:	2d cf       	rjmp	.-422    	; 0x1c76 <.L148>

00001e1c <.LBE104>:
		_delay_ms(1);   // 1 kHz
	}
}
    1e1c:	00 00       	nop
    1e1e:	00 00       	nop
    1e20:	a6 96       	adiw	r28, 0x26	; 38
    1e22:	0f b6       	in	r0, 0x3f	; 63
    1e24:	f8 94       	cli
    1e26:	de bf       	out	0x3e, r29	; 62
    1e28:	0f be       	out	0x3f, r0	; 63
    1e2a:	cd bf       	out	0x3d, r28	; 61
    1e2c:	df 91       	pop	r29
    1e2e:	cf 91       	pop	r28
    1e30:	08 95       	ret

00001e32 <__divmodsi4>:
    1e32:	05 2e       	mov	r0, r21

00001e34 <.Loc.1>:
    1e34:	97 fb       	bst	r25, 7

00001e36 <.Loc.2>:
    1e36:	1e f4       	brtc	.+6      	; 0x1e3e <.L^B1>

00001e38 <.Loc.3>:
    1e38:	00 94       	com	r0

00001e3a <.Loc.4>:
    1e3a:	0e 94 30 0f 	call	0x1e60	; 0x1e60 <__negsi2>

00001e3e <.L^B1>:
    1e3e:	57 fd       	sbrc	r21, 7

00001e40 <.Loc.6>:
    1e40:	07 d0       	rcall	.+14     	; 0x1e50 <__divmodsi4_neg2>

00001e42 <.Loc.7>:
    1e42:	0e 94 4f 0f 	call	0x1e9e	; 0x1e9e <__udivmodsi4>

00001e46 <.Loc.8>:
    1e46:	07 fc       	sbrc	r0, 7

00001e48 <.Loc.9>:
    1e48:	03 d0       	rcall	.+6      	; 0x1e50 <__divmodsi4_neg2>

00001e4a <.Loc.10>:
    1e4a:	4e f4       	brtc	.+18     	; 0x1e5e <__divmodsi4_exit>

00001e4c <.Loc.11>:
    1e4c:	0c 94 30 0f 	jmp	0x1e60	; 0x1e60 <__negsi2>

00001e50 <__divmodsi4_neg2>:
    1e50:	50 95       	com	r21

00001e52 <.Loc.13>:
    1e52:	40 95       	com	r20

00001e54 <.Loc.14>:
    1e54:	30 95       	com	r19

00001e56 <.Loc.15>:
    1e56:	21 95       	neg	r18

00001e58 <.Loc.16>:
    1e58:	3f 4f       	sbci	r19, 0xFF	; 255

00001e5a <.Loc.17>:
    1e5a:	4f 4f       	sbci	r20, 0xFF	; 255

00001e5c <.Loc.18>:
    1e5c:	5f 4f       	sbci	r21, 0xFF	; 255

00001e5e <__divmodsi4_exit>:
    1e5e:	08 95       	ret

00001e60 <__negsi2>:
    1e60:	90 95       	com	r25
    1e62:	80 95       	com	r24
    1e64:	70 95       	com	r23
    1e66:	61 95       	neg	r22
    1e68:	7f 4f       	sbci	r23, 0xFF	; 255
    1e6a:	8f 4f       	sbci	r24, 0xFF	; 255
    1e6c:	9f 4f       	sbci	r25, 0xFF	; 255

00001e6e <.Loc.1>:
    1e6e:	08 95       	ret

00001e70 <__tablejump2__>:
    1e70:	ee 0f       	add	r30, r30

00001e72 <.Loc.1>:
    1e72:	ff 1f       	adc	r31, r31

00001e74 <.Loc.2>:
    1e74:	88 1f       	adc	r24, r24

00001e76 <.Loc.3>:
    1e76:	8b bf       	out	0x3b, r24	; 59

00001e78 <.Loc.4>:
    1e78:	07 90       	elpm	r0, Z+

00001e7a <.Loc.5>:
    1e7a:	f6 91       	elpm	r31, Z

00001e7c <.Loc.6>:
    1e7c:	e0 2d       	mov	r30, r0

00001e7e <.Loc.7>:
    1e7e:	19 94       	eijmp

00001e80 <__umulhisi3>:
    1e80:	a2 9f       	mul	r26, r18

00001e82 <.Loc.1>:
    1e82:	b0 01       	movw	r22, r0

00001e84 <.Loc.2>:
    1e84:	b3 9f       	mul	r27, r19

00001e86 <.Loc.3>:
    1e86:	c0 01       	movw	r24, r0

00001e88 <.Loc.4>:
    1e88:	a3 9f       	mul	r26, r19

00001e8a <.Loc.5>:
    1e8a:	70 0d       	add	r23, r0

00001e8c <.Loc.6>:
    1e8c:	81 1d       	adc	r24, r1

00001e8e <.Loc.7>:
    1e8e:	11 24       	eor	r1, r1

00001e90 <.Loc.8>:
    1e90:	91 1d       	adc	r25, r1

00001e92 <.Loc.9>:
    1e92:	b2 9f       	mul	r27, r18

00001e94 <.Loc.10>:
    1e94:	70 0d       	add	r23, r0

00001e96 <.Loc.11>:
    1e96:	81 1d       	adc	r24, r1

00001e98 <.Loc.12>:
    1e98:	11 24       	eor	r1, r1

00001e9a <.Loc.13>:
    1e9a:	91 1d       	adc	r25, r1

00001e9c <.Loc.14>:
    1e9c:	08 95       	ret

00001e9e <__udivmodsi4>:
    1e9e:	a1 e2       	ldi	r26, 0x21	; 33

00001ea0 <.Loc.1>:
    1ea0:	1a 2e       	mov	r1, r26

00001ea2 <.Loc.2>:
    1ea2:	aa 1b       	sub	r26, r26

00001ea4 <.Loc.3>:
    1ea4:	bb 1b       	sub	r27, r27

00001ea6 <.Loc.4>:
    1ea6:	fd 01       	movw	r30, r26

00001ea8 <.Loc.5>:
    1ea8:	0d c0       	rjmp	.+26     	; 0x1ec4 <__udivmodsi4_ep>

00001eaa <__udivmodsi4_loop>:
    1eaa:	aa 1f       	adc	r26, r26

00001eac <.Loc.7>:
    1eac:	bb 1f       	adc	r27, r27

00001eae <.Loc.8>:
    1eae:	ee 1f       	adc	r30, r30

00001eb0 <.Loc.9>:
    1eb0:	ff 1f       	adc	r31, r31

00001eb2 <.Loc.10>:
    1eb2:	a2 17       	cp	r26, r18

00001eb4 <.Loc.11>:
    1eb4:	b3 07       	cpc	r27, r19

00001eb6 <.Loc.12>:
    1eb6:	e4 07       	cpc	r30, r20

00001eb8 <.Loc.13>:
    1eb8:	f5 07       	cpc	r31, r21

00001eba <.Loc.14>:
    1eba:	20 f0       	brcs	.+8      	; 0x1ec4 <__udivmodsi4_ep>

00001ebc <.Loc.15>:
    1ebc:	a2 1b       	sub	r26, r18

00001ebe <.Loc.16>:
    1ebe:	b3 0b       	sbc	r27, r19

00001ec0 <.Loc.17>:
    1ec0:	e4 0b       	sbc	r30, r20

00001ec2 <.Loc.18>:
    1ec2:	f5 0b       	sbc	r31, r21

00001ec4 <__udivmodsi4_ep>:
    1ec4:	66 1f       	adc	r22, r22

00001ec6 <.Loc.20>:
    1ec6:	77 1f       	adc	r23, r23

00001ec8 <.Loc.21>:
    1ec8:	88 1f       	adc	r24, r24

00001eca <.Loc.22>:
    1eca:	99 1f       	adc	r25, r25

00001ecc <.Loc.23>:
    1ecc:	1a 94       	dec	r1

00001ece <.Loc.24>:
    1ece:	69 f7       	brne	.-38     	; 0x1eaa <__udivmodsi4_loop>

00001ed0 <.Loc.25>:
    1ed0:	60 95       	com	r22

00001ed2 <.Loc.26>:
    1ed2:	70 95       	com	r23

00001ed4 <.Loc.27>:
    1ed4:	80 95       	com	r24

00001ed6 <.Loc.28>:
    1ed6:	90 95       	com	r25

00001ed8 <.Loc.29>:
    1ed8:	9b 01       	movw	r18, r22

00001eda <.Loc.30>:
    1eda:	ac 01       	movw	r20, r24

00001edc <.Loc.31>:
    1edc:	bd 01       	movw	r22, r26

00001ede <.Loc.32>:
    1ede:	cf 01       	movw	r24, r30

00001ee0 <.Loc.33>:
    1ee0:	08 95       	ret

00001ee2 <__cmpsf2>:
    1ee2:	0e 94 5b 10 	call	0x20b6	; 0x20b6 <__fp_cmp>
    1ee6:	08 f4       	brcc	.+2      	; 0x1eea <.L1^B1>
    1ee8:	81 e0       	ldi	r24, 0x01	; 1

00001eea <.L1^B1>:
    1eea:	08 95       	ret

00001eec <__divsf3>:
    1eec:	0e 94 8a 0f 	call	0x1f14	; 0x1f14 <__divsf3x>
    1ef0:	0c 94 96 10 	jmp	0x212c	; 0x212c <__fp_round>

00001ef4 <.L^B1>:
    1ef4:	0e 94 8f 10 	call	0x211e	; 0x211e <__fp_pscB>
    1ef8:	58 f0       	brcs	.+22     	; 0x1f10 <.L_nan>
    1efa:	0e 94 88 10 	call	0x2110	; 0x2110 <__fp_pscA>
    1efe:	40 f0       	brcs	.+16     	; 0x1f10 <.L_nan>
    1f00:	29 f4       	brne	.+10     	; 0x1f0c <.L_zr>
    1f02:	5f 3f       	cpi	r21, 0xFF	; 255
    1f04:	29 f0       	breq	.+10     	; 0x1f10 <.L_nan>

00001f06 <.L_inf>:
    1f06:	0c 94 7f 10 	jmp	0x20fe	; 0x20fe <__fp_inf>

00001f0a <.L1^B1>:
    1f0a:	51 11       	cpse	r21, r1

00001f0c <.L_zr>:
    1f0c:	0c 94 ca 10 	jmp	0x2194	; 0x2194 <__fp_szero>

00001f10 <.L_nan>:
    1f10:	0c 94 85 10 	jmp	0x210a	; 0x210a <__fp_nan>

00001f14 <__divsf3x>:
    1f14:	0e 94 a7 10 	call	0x214e	; 0x214e <__fp_split3>
    1f18:	68 f3       	brcs	.-38     	; 0x1ef4 <.L^B1>

00001f1a <__divsf3_pse>:
    1f1a:	99 23       	and	r25, r25
    1f1c:	b1 f3       	breq	.-20     	; 0x1f0a <.L1^B1>
    1f1e:	55 23       	and	r21, r21
    1f20:	91 f3       	breq	.-28     	; 0x1f06 <.L_inf>
    1f22:	95 1b       	sub	r25, r21
    1f24:	55 0b       	sbc	r21, r21
    1f26:	bb 27       	eor	r27, r27
    1f28:	aa 27       	eor	r26, r26

00001f2a <.L2^B1>:
    1f2a:	62 17       	cp	r22, r18
    1f2c:	73 07       	cpc	r23, r19
    1f2e:	84 07       	cpc	r24, r20
    1f30:	38 f0       	brcs	.+14     	; 0x1f40 <.L3^B1>
    1f32:	9f 5f       	subi	r25, 0xFF	; 255
    1f34:	5f 4f       	sbci	r21, 0xFF	; 255
    1f36:	22 0f       	add	r18, r18
    1f38:	33 1f       	adc	r19, r19
    1f3a:	44 1f       	adc	r20, r20
    1f3c:	aa 1f       	adc	r26, r26
    1f3e:	a9 f3       	breq	.-22     	; 0x1f2a <.L2^B1>

00001f40 <.L3^B1>:
    1f40:	35 d0       	rcall	.+106    	; 0x1fac <.L_div>
    1f42:	0e 2e       	mov	r0, r30
    1f44:	3a f0       	brmi	.+14     	; 0x1f54 <.L5^B1>

00001f46 <.L4^B1>:
    1f46:	e0 e8       	ldi	r30, 0x80	; 128
    1f48:	32 d0       	rcall	.+100    	; 0x1fae <.L_div1>
    1f4a:	91 50       	subi	r25, 0x01	; 1
    1f4c:	50 40       	sbci	r21, 0x00	; 0
    1f4e:	e6 95       	lsr	r30
    1f50:	00 1c       	adc	r0, r0
    1f52:	ca f7       	brpl	.-14     	; 0x1f46 <.L4^B1>

00001f54 <.L5^B1>:
    1f54:	2b d0       	rcall	.+86     	; 0x1fac <.L_div>
    1f56:	fe 2f       	mov	r31, r30
    1f58:	29 d0       	rcall	.+82     	; 0x1fac <.L_div>
    1f5a:	66 0f       	add	r22, r22
    1f5c:	77 1f       	adc	r23, r23
    1f5e:	88 1f       	adc	r24, r24
    1f60:	bb 1f       	adc	r27, r27
    1f62:	26 17       	cp	r18, r22
    1f64:	37 07       	cpc	r19, r23
    1f66:	48 07       	cpc	r20, r24
    1f68:	ab 07       	cpc	r26, r27
    1f6a:	b0 e8       	ldi	r27, 0x80	; 128
    1f6c:	09 f0       	breq	.+2      	; 0x1f70 <.L4^B2>
    1f6e:	bb 0b       	sbc	r27, r27

00001f70 <.L4^B2>:
    1f70:	80 2d       	mov	r24, r0
    1f72:	bf 01       	movw	r22, r30
    1f74:	ff 27       	eor	r31, r31
    1f76:	93 58       	subi	r25, 0x83	; 131
    1f78:	5f 4f       	sbci	r21, 0xFF	; 255
    1f7a:	3a f0       	brmi	.+14     	; 0x1f8a <.L13^B1>
    1f7c:	9e 3f       	cpi	r25, 0xFE	; 254
    1f7e:	51 05       	cpc	r21, r1
    1f80:	78 f0       	brcs	.+30     	; 0x1fa0 <.L15^B1>
    1f82:	0c 94 7f 10 	jmp	0x20fe	; 0x20fe <__fp_inf>

00001f86 <.L12^B1>:
    1f86:	0c 94 ca 10 	jmp	0x2194	; 0x2194 <__fp_szero>

00001f8a <.L13^B1>:
    1f8a:	5f 3f       	cpi	r21, 0xFF	; 255
    1f8c:	e4 f3       	brlt	.-8      	; 0x1f86 <.L12^B1>
    1f8e:	98 3e       	cpi	r25, 0xE8	; 232
    1f90:	d4 f3       	brlt	.-12     	; 0x1f86 <.L12^B1>

00001f92 <.L14^B1>:
    1f92:	86 95       	lsr	r24
    1f94:	77 95       	ror	r23
    1f96:	67 95       	ror	r22
    1f98:	b7 95       	ror	r27
    1f9a:	f7 95       	ror	r31
    1f9c:	9f 5f       	subi	r25, 0xFF	; 255
    1f9e:	c9 f7       	brne	.-14     	; 0x1f92 <.L14^B1>

00001fa0 <.L15^B1>:
    1fa0:	88 0f       	add	r24, r24
    1fa2:	91 1d       	adc	r25, r1
    1fa4:	96 95       	lsr	r25
    1fa6:	87 95       	ror	r24
    1fa8:	97 f9       	bld	r25, 7
    1faa:	08 95       	ret

00001fac <.L_div>:
    1fac:	e1 e0       	ldi	r30, 0x01	; 1

00001fae <.L_div1>:
    1fae:	66 0f       	add	r22, r22
    1fb0:	77 1f       	adc	r23, r23
    1fb2:	88 1f       	adc	r24, r24
    1fb4:	bb 1f       	adc	r27, r27
    1fb6:	62 17       	cp	r22, r18
    1fb8:	73 07       	cpc	r23, r19
    1fba:	84 07       	cpc	r24, r20
    1fbc:	ba 07       	cpc	r27, r26
    1fbe:	20 f0       	brcs	.+8      	; 0x1fc8 <.L2^B2>
    1fc0:	62 1b       	sub	r22, r18
    1fc2:	73 0b       	sbc	r23, r19
    1fc4:	84 0b       	sbc	r24, r20
    1fc6:	ba 0b       	sbc	r27, r26

00001fc8 <.L2^B2>:
    1fc8:	ee 1f       	adc	r30, r30
    1fca:	88 f7       	brcc	.-30     	; 0x1fae <.L_div1>
    1fcc:	e0 95       	com	r30
    1fce:	08 95       	ret

00001fd0 <__fixsfsi>:
    1fd0:	0e 94 ef 0f 	call	0x1fde	; 0x1fde <__fixunssfsi>
    1fd4:	68 94       	set
    1fd6:	b1 11       	cpse	r27, r1
    1fd8:	0c 94 ca 10 	jmp	0x2194	; 0x2194 <__fp_szero>
    1fdc:	08 95       	ret

00001fde <__fixunssfsi>:
    1fde:	0e 94 af 10 	call	0x215e	; 0x215e <__fp_splitA>
    1fe2:	88 f0       	brcs	.+34     	; 0x2006 <.L_err>
    1fe4:	9f 57       	subi	r25, 0x7F	; 127
    1fe6:	98 f0       	brcs	.+38     	; 0x200e <.L_zr>
    1fe8:	b9 2f       	mov	r27, r25
    1fea:	99 27       	eor	r25, r25
    1fec:	b7 51       	subi	r27, 0x17	; 23
    1fee:	b0 f0       	brcs	.+44     	; 0x201c <.L4^B1>
    1ff0:	e1 f0       	breq	.+56     	; 0x202a <.L_sign>

00001ff2 <.L1^B1>:
    1ff2:	66 0f       	add	r22, r22
    1ff4:	77 1f       	adc	r23, r23
    1ff6:	88 1f       	adc	r24, r24
    1ff8:	99 1f       	adc	r25, r25
    1ffa:	1a f0       	brmi	.+6      	; 0x2002 <.L2^B1>
    1ffc:	ba 95       	dec	r27
    1ffe:	c9 f7       	brne	.-14     	; 0x1ff2 <.L1^B1>
    2000:	14 c0       	rjmp	.+40     	; 0x202a <.L_sign>

00002002 <.L2^B1>:
    2002:	b1 30       	cpi	r27, 0x01	; 1
    2004:	91 f0       	breq	.+36     	; 0x202a <.L_sign>

00002006 <.L_err>:
    2006:	0e 94 c9 10 	call	0x2192	; 0x2192 <__fp_zero>
    200a:	b1 e0       	ldi	r27, 0x01	; 1
    200c:	08 95       	ret

0000200e <.L_zr>:
    200e:	0c 94 c9 10 	jmp	0x2192	; 0x2192 <__fp_zero>

00002012 <.L3^B1>:
    2012:	67 2f       	mov	r22, r23
    2014:	78 2f       	mov	r23, r24
    2016:	88 27       	eor	r24, r24
    2018:	b8 5f       	subi	r27, 0xF8	; 248
    201a:	39 f0       	breq	.+14     	; 0x202a <.L_sign>

0000201c <.L4^B1>:
    201c:	b9 3f       	cpi	r27, 0xF9	; 249
    201e:	cc f3       	brlt	.-14     	; 0x2012 <.L3^B1>

00002020 <.L5^B1>:
    2020:	86 95       	lsr	r24
    2022:	77 95       	ror	r23
    2024:	67 95       	ror	r22
    2026:	b3 95       	inc	r27
    2028:	d9 f7       	brne	.-10     	; 0x2020 <.L5^B1>

0000202a <.L_sign>:
    202a:	3e f4       	brtc	.+14     	; 0x203a <.L6^B1>
    202c:	90 95       	com	r25
    202e:	80 95       	com	r24
    2030:	70 95       	com	r23
    2032:	61 95       	neg	r22
    2034:	7f 4f       	sbci	r23, 0xFF	; 255
    2036:	8f 4f       	sbci	r24, 0xFF	; 255
    2038:	9f 4f       	sbci	r25, 0xFF	; 255

0000203a <.L6^B1>:
    203a:	08 95       	ret

0000203c <__floatunsisf>:
    203c:	e8 94       	clt
    203e:	09 c0       	rjmp	.+18     	; 0x2052 <.L1^B1>

00002040 <__floatsisf>:
    2040:	97 fb       	bst	r25, 7
    2042:	3e f4       	brtc	.+14     	; 0x2052 <.L1^B1>
    2044:	90 95       	com	r25
    2046:	80 95       	com	r24
    2048:	70 95       	com	r23
    204a:	61 95       	neg	r22
    204c:	7f 4f       	sbci	r23, 0xFF	; 255
    204e:	8f 4f       	sbci	r24, 0xFF	; 255
    2050:	9f 4f       	sbci	r25, 0xFF	; 255

00002052 <.L1^B1>:
    2052:	99 23       	and	r25, r25
    2054:	a9 f0       	breq	.+42     	; 0x2080 <.L4^B1>
    2056:	f9 2f       	mov	r31, r25
    2058:	96 e9       	ldi	r25, 0x96	; 150
    205a:	bb 27       	eor	r27, r27

0000205c <.L2^B1>:
    205c:	93 95       	inc	r25
    205e:	f6 95       	lsr	r31
    2060:	87 95       	ror	r24
    2062:	77 95       	ror	r23
    2064:	67 95       	ror	r22
    2066:	b7 95       	ror	r27
    2068:	f1 11       	cpse	r31, r1
    206a:	f8 cf       	rjmp	.-16     	; 0x205c <.L2^B1>
    206c:	fa f4       	brpl	.+62     	; 0x20ac <.L_pack>
    206e:	bb 0f       	add	r27, r27
    2070:	11 f4       	brne	.+4      	; 0x2076 <.L3^B1>
    2072:	60 ff       	sbrs	r22, 0
    2074:	1b c0       	rjmp	.+54     	; 0x20ac <.L_pack>

00002076 <.L3^B1>:
    2076:	6f 5f       	subi	r22, 0xFF	; 255
    2078:	7f 4f       	sbci	r23, 0xFF	; 255
    207a:	8f 4f       	sbci	r24, 0xFF	; 255
    207c:	9f 4f       	sbci	r25, 0xFF	; 255
    207e:	16 c0       	rjmp	.+44     	; 0x20ac <.L_pack>

00002080 <.L4^B1>:
    2080:	88 23       	and	r24, r24
    2082:	11 f0       	breq	.+4      	; 0x2088 <.L5^B1>
    2084:	96 e9       	ldi	r25, 0x96	; 150
    2086:	11 c0       	rjmp	.+34     	; 0x20aa <.L8^B1>

00002088 <.L5^B1>:
    2088:	77 23       	and	r23, r23
    208a:	21 f0       	breq	.+8      	; 0x2094 <.L6^B1>
    208c:	9e e8       	ldi	r25, 0x8E	; 142
    208e:	87 2f       	mov	r24, r23
    2090:	76 2f       	mov	r23, r22
    2092:	05 c0       	rjmp	.+10     	; 0x209e <.L7^B1>

00002094 <.L6^B1>:
    2094:	66 23       	and	r22, r22
    2096:	71 f0       	breq	.+28     	; 0x20b4 <.L9^B1>
    2098:	96 e8       	ldi	r25, 0x86	; 134
    209a:	86 2f       	mov	r24, r22
    209c:	70 e0       	ldi	r23, 0x00	; 0

0000209e <.L7^B1>:
    209e:	60 e0       	ldi	r22, 0x00	; 0
    20a0:	2a f0       	brmi	.+10     	; 0x20ac <.L_pack>

000020a2 <.L10^B1>:
    20a2:	9a 95       	dec	r25
    20a4:	66 0f       	add	r22, r22
    20a6:	77 1f       	adc	r23, r23
    20a8:	88 1f       	adc	r24, r24

000020aa <.L8^B1>:
    20aa:	da f7       	brpl	.-10     	; 0x20a2 <.L10^B1>

000020ac <.L_pack>:
    20ac:	88 0f       	add	r24, r24
    20ae:	96 95       	lsr	r25
    20b0:	87 95       	ror	r24
    20b2:	97 f9       	bld	r25, 7

000020b4 <.L9^B1>:
    20b4:	08 95       	ret

000020b6 <__fp_cmp>:
    20b6:	99 0f       	add	r25, r25
    20b8:	00 08       	sbc	r0, r0
    20ba:	55 0f       	add	r21, r21
    20bc:	aa 0b       	sbc	r26, r26
    20be:	e0 e8       	ldi	r30, 0x80	; 128
    20c0:	fe ef       	ldi	r31, 0xFE	; 254
    20c2:	16 16       	cp	r1, r22
    20c4:	17 06       	cpc	r1, r23
    20c6:	e8 07       	cpc	r30, r24
    20c8:	f9 07       	cpc	r31, r25
    20ca:	c0 f0       	brcs	.+48     	; 0x20fc <.L9^B1>
    20cc:	12 16       	cp	r1, r18
    20ce:	13 06       	cpc	r1, r19
    20d0:	e4 07       	cpc	r30, r20
    20d2:	f5 07       	cpc	r31, r21
    20d4:	98 f0       	brcs	.+38     	; 0x20fc <.L9^B1>
    20d6:	62 1b       	sub	r22, r18
    20d8:	73 0b       	sbc	r23, r19
    20da:	84 0b       	sbc	r24, r20
    20dc:	95 0b       	sbc	r25, r21
    20de:	39 f4       	brne	.+14     	; 0x20ee <.L1^B1>
    20e0:	0a 26       	eor	r0, r26
    20e2:	61 f0       	breq	.+24     	; 0x20fc <.L9^B1>
    20e4:	23 2b       	or	r18, r19
    20e6:	24 2b       	or	r18, r20
    20e8:	25 2b       	or	r18, r21
    20ea:	21 f4       	brne	.+8      	; 0x20f4 <.L2^B1>
    20ec:	08 95       	ret

000020ee <.L1^B1>:
    20ee:	0a 26       	eor	r0, r26
    20f0:	09 f4       	brne	.+2      	; 0x20f4 <.L2^B1>
    20f2:	a1 40       	sbci	r26, 0x01	; 1

000020f4 <.L2^B1>:
    20f4:	a6 95       	lsr	r26
    20f6:	8f ef       	ldi	r24, 0xFF	; 255
    20f8:	81 1d       	adc	r24, r1
    20fa:	81 1d       	adc	r24, r1

000020fc <.L9^B1>:
    20fc:	08 95       	ret

000020fe <__fp_inf>:
    20fe:	97 f9       	bld	r25, 7
    2100:	9f 67       	ori	r25, 0x7F	; 127
    2102:	80 e8       	ldi	r24, 0x80	; 128
    2104:	70 e0       	ldi	r23, 0x00	; 0
    2106:	60 e0       	ldi	r22, 0x00	; 0
    2108:	08 95       	ret

0000210a <__fp_nan>:
    210a:	9f ef       	ldi	r25, 0xFF	; 255
    210c:	80 ec       	ldi	r24, 0xC0	; 192
    210e:	08 95       	ret

00002110 <__fp_pscA>:
    2110:	00 24       	eor	r0, r0
    2112:	0a 94       	dec	r0
    2114:	16 16       	cp	r1, r22
    2116:	17 06       	cpc	r1, r23
    2118:	18 06       	cpc	r1, r24
    211a:	09 06       	cpc	r0, r25
    211c:	08 95       	ret

0000211e <__fp_pscB>:
    211e:	00 24       	eor	r0, r0
    2120:	0a 94       	dec	r0
    2122:	12 16       	cp	r1, r18
    2124:	13 06       	cpc	r1, r19
    2126:	14 06       	cpc	r1, r20
    2128:	05 06       	cpc	r0, r21
    212a:	08 95       	ret

0000212c <__fp_round>:
    212c:	09 2e       	mov	r0, r25
    212e:	03 94       	inc	r0
    2130:	00 0c       	add	r0, r0
    2132:	11 f4       	brne	.+4      	; 0x2138 <.L1^B1>
    2134:	88 23       	and	r24, r24
    2136:	52 f0       	brmi	.+20     	; 0x214c <.L3^B1>

00002138 <.L1^B1>:
    2138:	bb 0f       	add	r27, r27
    213a:	40 f4       	brcc	.+16     	; 0x214c <.L3^B1>
    213c:	bf 2b       	or	r27, r31
    213e:	11 f4       	brne	.+4      	; 0x2144 <.L2^B1>
    2140:	60 ff       	sbrs	r22, 0
    2142:	04 c0       	rjmp	.+8      	; 0x214c <.L3^B1>

00002144 <.L2^B1>:
    2144:	6f 5f       	subi	r22, 0xFF	; 255
    2146:	7f 4f       	sbci	r23, 0xFF	; 255
    2148:	8f 4f       	sbci	r24, 0xFF	; 255
    214a:	9f 4f       	sbci	r25, 0xFF	; 255

0000214c <.L3^B1>:
    214c:	08 95       	ret

0000214e <__fp_split3>:
    214e:	57 fd       	sbrc	r21, 7
    2150:	90 58       	subi	r25, 0x80	; 128
    2152:	44 0f       	add	r20, r20
    2154:	55 1f       	adc	r21, r21
    2156:	59 f0       	breq	.+22     	; 0x216e <.L4^B1>
    2158:	5f 3f       	cpi	r21, 0xFF	; 255
    215a:	71 f0       	breq	.+28     	; 0x2178 <.L5^B1>

0000215c <.L1^B1>:
    215c:	47 95       	ror	r20

0000215e <__fp_splitA>:
    215e:	88 0f       	add	r24, r24
    2160:	97 fb       	bst	r25, 7
    2162:	99 1f       	adc	r25, r25
    2164:	61 f0       	breq	.+24     	; 0x217e <.L6^B1>
    2166:	9f 3f       	cpi	r25, 0xFF	; 255
    2168:	79 f0       	breq	.+30     	; 0x2188 <.L7^B1>

0000216a <.L3^B1>:
    216a:	87 95       	ror	r24
    216c:	08 95       	ret

0000216e <.L4^B1>:
    216e:	12 16       	cp	r1, r18
    2170:	13 06       	cpc	r1, r19
    2172:	14 06       	cpc	r1, r20
    2174:	55 1f       	adc	r21, r21
    2176:	f2 cf       	rjmp	.-28     	; 0x215c <.L1^B1>

00002178 <.L5^B1>:
    2178:	46 95       	lsr	r20
    217a:	f1 df       	rcall	.-30     	; 0x215e <__fp_splitA>
    217c:	08 c0       	rjmp	.+16     	; 0x218e <.L8^B1>

0000217e <.L6^B1>:
    217e:	16 16       	cp	r1, r22
    2180:	17 06       	cpc	r1, r23
    2182:	18 06       	cpc	r1, r24
    2184:	99 1f       	adc	r25, r25
    2186:	f1 cf       	rjmp	.-30     	; 0x216a <.L3^B1>

00002188 <.L7^B1>:
    2188:	86 95       	lsr	r24
    218a:	71 05       	cpc	r23, r1
    218c:	61 05       	cpc	r22, r1

0000218e <.L8^B1>:
    218e:	08 94       	sec
    2190:	08 95       	ret

00002192 <__fp_zero>:
    2192:	e8 94       	clt

00002194 <__fp_szero>:
    2194:	bb 27       	eor	r27, r27
    2196:	66 27       	eor	r22, r22
    2198:	77 27       	eor	r23, r23
    219a:	cb 01       	movw	r24, r22
    219c:	97 f9       	bld	r25, 7
    219e:	08 95       	ret

000021a0 <__gesf2>:
    21a0:	0e 94 5b 10 	call	0x20b6	; 0x20b6 <__fp_cmp>
    21a4:	08 f4       	brcc	.+2      	; 0x21a8 <.L1^B1>
    21a6:	8f ef       	ldi	r24, 0xFF	; 255

000021a8 <.L1^B1>:
    21a8:	08 95       	ret

000021aa <__mulsf3>:
    21aa:	0e 94 e8 10 	call	0x21d0	; 0x21d0 <__mulsf3x>
    21ae:	0c 94 96 10 	jmp	0x212c	; 0x212c <__fp_round>

000021b2 <.L^B1>:
    21b2:	0e 94 88 10 	call	0x2110	; 0x2110 <__fp_pscA>
    21b6:	38 f0       	brcs	.+14     	; 0x21c6 <.L1^B1>
    21b8:	0e 94 8f 10 	call	0x211e	; 0x211e <__fp_pscB>
    21bc:	20 f0       	brcs	.+8      	; 0x21c6 <.L1^B1>
    21be:	95 23       	and	r25, r21
    21c0:	11 f0       	breq	.+4      	; 0x21c6 <.L1^B1>
    21c2:	0c 94 7f 10 	jmp	0x20fe	; 0x20fe <__fp_inf>

000021c6 <.L1^B1>:
    21c6:	0c 94 85 10 	jmp	0x210a	; 0x210a <__fp_nan>

000021ca <.L2^B1>:
    21ca:	11 24       	eor	r1, r1
    21cc:	0c 94 ca 10 	jmp	0x2194	; 0x2194 <__fp_szero>

000021d0 <__mulsf3x>:
    21d0:	0e 94 a7 10 	call	0x214e	; 0x214e <__fp_split3>
    21d4:	70 f3       	brcs	.-36     	; 0x21b2 <.L^B1>

000021d6 <__mulsf3_pse>:
    21d6:	95 9f       	mul	r25, r21
    21d8:	c1 f3       	breq	.-16     	; 0x21ca <.L2^B1>
    21da:	95 0f       	add	r25, r21
    21dc:	50 e0       	ldi	r21, 0x00	; 0
    21de:	55 1f       	adc	r21, r21
    21e0:	62 9f       	mul	r22, r18
    21e2:	f0 01       	movw	r30, r0
    21e4:	72 9f       	mul	r23, r18
    21e6:	bb 27       	eor	r27, r27
    21e8:	f0 0d       	add	r31, r0
    21ea:	b1 1d       	adc	r27, r1
    21ec:	63 9f       	mul	r22, r19
    21ee:	aa 27       	eor	r26, r26
    21f0:	f0 0d       	add	r31, r0
    21f2:	b1 1d       	adc	r27, r1
    21f4:	aa 1f       	adc	r26, r26
    21f6:	64 9f       	mul	r22, r20
    21f8:	66 27       	eor	r22, r22
    21fa:	b0 0d       	add	r27, r0
    21fc:	a1 1d       	adc	r26, r1
    21fe:	66 1f       	adc	r22, r22
    2200:	82 9f       	mul	r24, r18
    2202:	22 27       	eor	r18, r18
    2204:	b0 0d       	add	r27, r0
    2206:	a1 1d       	adc	r26, r1
    2208:	62 1f       	adc	r22, r18
    220a:	73 9f       	mul	r23, r19
    220c:	b0 0d       	add	r27, r0
    220e:	a1 1d       	adc	r26, r1
    2210:	62 1f       	adc	r22, r18
    2212:	83 9f       	mul	r24, r19
    2214:	a0 0d       	add	r26, r0
    2216:	61 1d       	adc	r22, r1
    2218:	22 1f       	adc	r18, r18
    221a:	74 9f       	mul	r23, r20
    221c:	33 27       	eor	r19, r19
    221e:	a0 0d       	add	r26, r0
    2220:	61 1d       	adc	r22, r1
    2222:	23 1f       	adc	r18, r19
    2224:	84 9f       	mul	r24, r20
    2226:	60 0d       	add	r22, r0
    2228:	21 1d       	adc	r18, r1
    222a:	82 2f       	mov	r24, r18
    222c:	76 2f       	mov	r23, r22
    222e:	6a 2f       	mov	r22, r26
    2230:	11 24       	eor	r1, r1
    2232:	9f 57       	subi	r25, 0x7F	; 127
    2234:	50 40       	sbci	r21, 0x00	; 0
    2236:	9a f0       	brmi	.+38     	; 0x225e <.L13^B1>
    2238:	f1 f0       	breq	.+60     	; 0x2276 <.L15^B1>

0000223a <.L10^B1>:
    223a:	88 23       	and	r24, r24
    223c:	4a f0       	brmi	.+18     	; 0x2250 <.L11^B1>
    223e:	ee 0f       	add	r30, r30
    2240:	ff 1f       	adc	r31, r31
    2242:	bb 1f       	adc	r27, r27
    2244:	66 1f       	adc	r22, r22
    2246:	77 1f       	adc	r23, r23
    2248:	88 1f       	adc	r24, r24
    224a:	91 50       	subi	r25, 0x01	; 1
    224c:	50 40       	sbci	r21, 0x00	; 0
    224e:	a9 f7       	brne	.-22     	; 0x223a <.L10^B1>

00002250 <.L11^B1>:
    2250:	9e 3f       	cpi	r25, 0xFE	; 254
    2252:	51 05       	cpc	r21, r1
    2254:	80 f0       	brcs	.+32     	; 0x2276 <.L15^B1>
    2256:	0c 94 7f 10 	jmp	0x20fe	; 0x20fe <__fp_inf>

0000225a <.L12^B1>:
    225a:	0c 94 ca 10 	jmp	0x2194	; 0x2194 <__fp_szero>

0000225e <.L13^B1>:
    225e:	5f 3f       	cpi	r21, 0xFF	; 255
    2260:	e4 f3       	brlt	.-8      	; 0x225a <.L12^B1>
    2262:	98 3e       	cpi	r25, 0xE8	; 232
    2264:	d4 f3       	brlt	.-12     	; 0x225a <.L12^B1>

00002266 <.L14^B1>:
    2266:	86 95       	lsr	r24
    2268:	77 95       	ror	r23
    226a:	67 95       	ror	r22
    226c:	b7 95       	ror	r27
    226e:	f7 95       	ror	r31
    2270:	e7 95       	ror	r30
    2272:	9f 5f       	subi	r25, 0xFF	; 255
    2274:	c1 f7       	brne	.-16     	; 0x2266 <.L14^B1>

00002276 <.L15^B1>:
    2276:	fe 2b       	or	r31, r30
    2278:	88 0f       	add	r24, r24
    227a:	91 1d       	adc	r25, r1
    227c:	96 95       	lsr	r25
    227e:	87 95       	ror	r24
    2280:	97 f9       	bld	r25, 7
    2282:	08 95       	ret

00002284 <_exit>:
    2284:	f8 94       	cli

00002286 <__stop_program>:
    2286:	ff cf       	rjmp	.-2      	; 0x2286 <__stop_program>

00002288 <L0^A>:
    2288:	6a 05       	cpc	r22, r10
    228a:	8f 05       	cpc	r24, r15
    228c:	b4 05       	cpc	r27, r4
    228e:	d3 05       	cpc	r29, r3
    2290:	08 06       	cpc	r0, r24
    2292:	3e 06       	cpc	r3, r30
    2294:	6d 06       	cpc	r6, r29
    2296:	a7 06       	cpc	r10, r23
    2298:	57 07       	cpc	r21, r23
    229a:	34 08       	sbc	r3, r4
