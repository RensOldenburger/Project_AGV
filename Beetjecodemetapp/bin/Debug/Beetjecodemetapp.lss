
bin\Debug\Beetjecodemetapp.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  0000114c  00001200  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000114c  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000008  00800200  00800200  00001200  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  00001200  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      00000012  00000000  00000000  00001203  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001218  2**2
                  CONTENTS, READONLY, OCTETS
  6 .debug_aranges 00000138  00000000  00000000  00001258  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_info   00001218  00000000  00000000  00001390  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_abbrev 00000f25  00000000  00000000  000025a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line   00000fb5  00000000  00000000  000034cd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_frame  00000294  00000000  00000000  00004484  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_str    0000061e  00000000  00000000  00004718  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_line_str 0000017a  00000000  00000000  00004d36  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 84 00 	jmp	0x108	; 0x108 <__ctors_end>
       4:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
       8:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
       c:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      10:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      14:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      18:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      1c:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      20:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      24:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      28:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      2c:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      30:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      34:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      38:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      3c:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      40:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      44:	0c 94 0b 03 	jmp	0x616	; 0x616 <__vector_17>
      48:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      4c:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      50:	0c 94 e0 02 	jmp	0x5c0	; 0x5c0 <__vector_20>
      54:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      58:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      5c:	0c 94 86 03 	jmp	0x70c	; 0x70c <__vector_23>
      60:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      64:	0c 94 9a 00 	jmp	0x134	; 0x134 <__vector_25>
      68:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      6c:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      70:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      74:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      78:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      7c:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      80:	0c 94 5e 03 	jmp	0x6bc	; 0x6bc <__vector_32>
      84:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      88:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      8c:	0c 94 33 03 	jmp	0x666	; 0x666 <__vector_35>
      90:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      94:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      98:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      9c:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      a0:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      a4:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      a8:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      ac:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      b0:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      b4:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      b8:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      bc:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      c0:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      c4:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      c8:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      cc:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      d0:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      d4:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      d8:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      dc:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
      e0:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>

000000e4 <__trampolines_start>:
      e4:	0c 94 a0 05 	jmp	0xb40	; 0xb40 <.L8>
      e8:	0c 94 80 04 	jmp	0x900	; 0x900 <.L14>
      ec:	0c 94 3c 05 	jmp	0xa78	; 0xa78 <.L10>
      f0:	0c 94 a0 04 	jmp	0x940	; 0x940 <.L12>
      f4:	0c 94 4a 06 	jmp	0xc94	; 0xc94 <.L44>
      f8:	0c 94 e1 04 	jmp	0x9c2	; 0x9c2 <.L11>
      fc:	0c 94 64 04 	jmp	0x8c8	; 0x8c8 <.L15>
     100:	0c 94 93 04 	jmp	0x926	; 0x926 <.L13>
     104:	0c 94 6e 05 	jmp	0xadc	; 0xadc <.L9>

00000108 <__ctors_end>:
     108:	11 24       	eor	r1, r1
     10a:	1f be       	out	0x3f, r1	; 63
     10c:	cf ef       	ldi	r28, 0xFF	; 255
     10e:	d1 e2       	ldi	r29, 0x21	; 33
     110:	de bf       	out	0x3e, r29	; 62
     112:	cd bf       	out	0x3d, r28	; 61
     114:	00 e0       	ldi	r16, 0x00	; 0
     116:	0c bf       	out	0x3c, r16	; 60

00000118 <__do_clear_bss>:
     118:	22 e0       	ldi	r18, 0x02	; 2

0000011a <.Loc.1>:
     11a:	a0 e0       	ldi	r26, 0x00	; 0

0000011c <.Loc.2>:
     11c:	b2 e0       	ldi	r27, 0x02	; 2

0000011e <.Loc.3>:
     11e:	01 c0       	rjmp	.+2      	; 0x122 <.Loc.5>

00000120 <.Loc.4>:
     120:	1d 92       	st	X+, r1

00000122 <.Loc.5>:
     122:	a8 30       	cpi	r26, 0x08	; 8

00000124 <.Loc.6>:
     124:	b2 07       	cpc	r27, r18

00000126 <.Loc.7>:
     126:	e1 f7       	brne	.-8      	; 0x120 <.Loc.4>

00000128 <L0^A>:
     128:	0e 94 a4 03 	call	0x748	; 0x748 <main>
     12c:	0c 94 9b 08 	jmp	0x1136	; 0x1136 <_exit>

00000130 <__bad_interrupt>:
     130:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000134 <__vector_25>:
int Bluetooth_Getal = 0;//BLUETOOTH GETAL
int verandergetal = 0;//ONNODIG
int veranderandergetal = 0;//ONNODIG

ISR(USART0_RX_vect)
{
     134:	1f 92       	push	r1
     136:	0f 92       	push	r0
     138:	0f b6       	in	r0, 0x3f	; 63
     13a:	0f 92       	push	r0
     13c:	11 24       	eor	r1, r1
     13e:	0b b6       	in	r0, 0x3b	; 59
     140:	0f 92       	push	r0
     142:	8f 93       	push	r24
     144:	9f 93       	push	r25
     146:	ef 93       	push	r30
     148:	ff 93       	push	r31
     14a:	cf 93       	push	r28
     14c:	df 93       	push	r29
     14e:	cd b7       	in	r28, 0x3d	; 61
     150:	de b7       	in	r29, 0x3e	; 62

00000152 <.Loc.1>:
    Bluetooth_Getal = UDR0;
     152:	86 ec       	ldi	r24, 0xC6	; 198
     154:	90 e0       	ldi	r25, 0x00	; 0
     156:	fc 01       	movw	r30, r24
     158:	80 81       	ld	r24, Z
     15a:	88 2f       	mov	r24, r24
     15c:	90 e0       	ldi	r25, 0x00	; 0

0000015e <.Loc.2>:
     15e:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <Bluetooth_Getal+0x1>
     162:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <Bluetooth_Getal>

00000166 <.Loc.3>:
    if (verandergetal == 0)//ONNODIG
     166:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <verandergetal>
     16a:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <verandergetal+0x1>

0000016e <.Loc.4>:
     16e:	00 97       	sbiw	r24, 0x00	; 0
     170:	51 f4       	brne	.+20     	; 0x186 <.L2>

00000172 <.Loc.5>:
    {//ONNODIG
        verandergetal++;//ONNODIG
     172:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <verandergetal>
     176:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <verandergetal+0x1>
     17a:	01 96       	adiw	r24, 0x01	; 1
     17c:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <verandergetal+0x1>
     180:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <verandergetal>

00000184 <.Loc.6>:
    }//ONNODIG
    else//ONNODIG
    {//ONNODIG
        verandergetal = 0;//ONNODIG
    }//ONNODIG
}
     184:	04 c0       	rjmp	.+8      	; 0x18e <.L4>

00000186 <.L2>:
        verandergetal = 0;//ONNODIG
     186:	10 92 03 02 	sts	0x0203, r1	; 0x800203 <verandergetal+0x1>
     18a:	10 92 02 02 	sts	0x0202, r1	; 0x800202 <verandergetal>

0000018e <.L4>:
}
     18e:	00 00       	nop
     190:	df 91       	pop	r29
     192:	cf 91       	pop	r28
     194:	ff 91       	pop	r31
     196:	ef 91       	pop	r30
     198:	9f 91       	pop	r25
     19a:	8f 91       	pop	r24
     19c:	0f 90       	pop	r0
     19e:	0b be       	out	0x3b, r0	; 59
     1a0:	0f 90       	pop	r0
     1a2:	0f be       	out	0x3f, r0	; 63
     1a4:	0f 90       	pop	r0
     1a6:	1f 90       	pop	r1
     1a8:	18 95       	reti

000001aa <initBluetooth>:

void initBluetooth(void)
{
     1aa:	cf 93       	push	r28
     1ac:	df 93       	push	r29
     1ae:	cd b7       	in	r28, 0x3d	; 61
     1b0:	de b7       	in	r29, 0x3e	; 62

000001b2 <.Loc.10>:
    //Bluetooth
    UBRR0H = (BRC >> 8);
     1b2:	85 ec       	ldi	r24, 0xC5	; 197
     1b4:	90 e0       	ldi	r25, 0x00	; 0

000001b6 <.Loc.11>:
     1b6:	fc 01       	movw	r30, r24
     1b8:	10 82       	st	Z, r1

000001ba <.Loc.12>:
    UBRR0L = BRC;
     1ba:	84 ec       	ldi	r24, 0xC4	; 196
     1bc:	90 e0       	ldi	r25, 0x00	; 0

000001be <.Loc.13>:
     1be:	27 e6       	ldi	r18, 0x67	; 103
     1c0:	fc 01       	movw	r30, r24
     1c2:	20 83       	st	Z, r18

000001c4 <.Loc.14>:

    UCSR0B = (1 << RXEN0) |(1 << RXCIE0) |(1 << TXEN0) | (1 << TXCIE0);
     1c4:	81 ec       	ldi	r24, 0xC1	; 193
     1c6:	90 e0       	ldi	r25, 0x00	; 0

000001c8 <.Loc.15>:
     1c8:	28 ed       	ldi	r18, 0xD8	; 216
     1ca:	fc 01       	movw	r30, r24
     1cc:	20 83       	st	Z, r18

000001ce <.Loc.16>:
    UCSR0C = (1 << UCSZ01) | (1 << UCSZ00);
     1ce:	82 ec       	ldi	r24, 0xC2	; 194
     1d0:	90 e0       	ldi	r25, 0x00	; 0

000001d2 <.Loc.17>:
     1d2:	26 e0       	ldi	r18, 0x06	; 6
     1d4:	fc 01       	movw	r30, r24
     1d6:	20 83       	st	Z, r18

000001d8 <.Loc.18>:

    sei();
     1d8:	78 94       	sei

000001da <.Loc.19>:
}
     1da:	00 00       	nop
     1dc:	df 91       	pop	r29
     1de:	cf 91       	pop	r28
     1e0:	08 95       	ret

000001e2 <signaal_geven>:
#include "Library.h"

volatile int timerteller = 0;

void signaal_geven()
{
     1e2:	cf 93       	push	r28
     1e4:	df 93       	push	r29
     1e6:	cd b7       	in	r28, 0x3d	; 61
     1e8:	de b7       	in	r29, 0x3e	; 62
     1ea:	c4 54       	subi	r28, 0x44	; 68
     1ec:	d1 09       	sbc	r29, r1
     1ee:	0f b6       	in	r0, 0x3f	; 63
     1f0:	f8 94       	cli
     1f2:	de bf       	out	0x3e, r29	; 62
     1f4:	0f be       	out	0x3f, r0	; 63
     1f6:	cd bf       	out	0x3d, r28	; 61

000001f8 <.Loc.1>:
    PORT_LED |= (1<<LED_1);         // LED 1 aan
     1f8:	82 e0       	ldi	r24, 0x02	; 2
     1fa:	91 e0       	ldi	r25, 0x01	; 1
     1fc:	dc 01       	movw	r26, r24
     1fe:	2c 91       	ld	r18, X
     200:	82 e0       	ldi	r24, 0x02	; 2
     202:	91 e0       	ldi	r25, 0x01	; 1

00000204 <.Loc.2>:
     204:	20 61       	ori	r18, 0x10	; 16
     206:	fc 01       	movw	r30, r24
     208:	20 83       	st	Z, r18

0000020a <.Loc.3>:
    PORT_LED &= ~(1<<LED_2);        // LED 2 uit
     20a:	82 e0       	ldi	r24, 0x02	; 2
     20c:	91 e0       	ldi	r25, 0x01	; 1
     20e:	dc 01       	movw	r26, r24
     210:	2c 91       	ld	r18, X

00000212 <.Loc.4>:
     212:	82 e0       	ldi	r24, 0x02	; 2
     214:	91 e0       	ldi	r25, 0x01	; 1

00000216 <.Loc.5>:
     216:	2f 7d       	andi	r18, 0xDF	; 223
     218:	fc 01       	movw	r30, r24
     21a:	20 83       	st	Z, r18

0000021c <.Loc.6>:
    PORT_buzzer |= (1<<buzzer);     // buzzer aan
     21c:	82 e0       	ldi	r24, 0x02	; 2
     21e:	91 e0       	ldi	r25, 0x01	; 1
     220:	dc 01       	movw	r26, r24
     222:	2c 91       	ld	r18, X
     224:	82 e0       	ldi	r24, 0x02	; 2
     226:	91 e0       	ldi	r25, 0x01	; 1

00000228 <.Loc.7>:
     228:	28 60       	ori	r18, 0x08	; 8
     22a:	fc 01       	movw	r30, r24
     22c:	20 83       	st	Z, r18
     22e:	80 e0       	ldi	r24, 0x00	; 0
     230:	90 e0       	ldi	r25, 0x00	; 0
     232:	aa ef       	ldi	r26, 0xFA	; 250
     234:	b3 e4       	ldi	r27, 0x43	; 67
     236:	8f 87       	std	Y+15, r24	; 0x0f
     238:	98 8b       	std	Y+16, r25	; 0x10
     23a:	a9 8b       	std	Y+17, r26	; 0x11
     23c:	ba 8b       	std	Y+18, r27	; 0x12

0000023e <.LBB18>:

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     23e:	20 e0       	ldi	r18, 0x00	; 0
     240:	30 e0       	ldi	r19, 0x00	; 0
     242:	4a e7       	ldi	r20, 0x7A	; 122
     244:	55 e4       	ldi	r21, 0x45	; 69
     246:	6f 85       	ldd	r22, Y+15	; 0x0f
     248:	78 89       	ldd	r23, Y+16	; 0x10
     24a:	89 89       	ldd	r24, Y+17	; 0x11
     24c:	9a 89       	ldd	r25, Y+18	; 0x12
     24e:	0e 94 06 08 	call	0x100c	; 0x100c <__mulsf3>
     252:	6d a3       	std	Y+37, r22	; 0x25
     254:	7e a3       	std	Y+38, r23	; 0x26
     256:	8f a3       	std	Y+39, r24	; 0x27
     258:	98 a7       	std	Y+40, r25	; 0x28
     25a:	8d a1       	ldd	r24, Y+37	; 0x25
     25c:	9e a1       	ldd	r25, Y+38	; 0x26
     25e:	af a1       	ldd	r26, Y+39	; 0x27
     260:	b8 a5       	ldd	r27, Y+40	; 0x28
     262:	8b 8b       	std	Y+19, r24	; 0x13
     264:	9c 8b       	std	Y+20, r25	; 0x14
     266:	ad 8b       	std	Y+21, r26	; 0x15
     268:	be 8b       	std	Y+22, r27	; 0x16

0000026a <.Loc.9>:
	if (__tmp < 1.0)
     26a:	20 e0       	ldi	r18, 0x00	; 0
     26c:	30 e0       	ldi	r19, 0x00	; 0
     26e:	40 e8       	ldi	r20, 0x80	; 128
     270:	5f e3       	ldi	r21, 0x3F	; 63
     272:	6b 89       	ldd	r22, Y+19	; 0x13
     274:	7c 89       	ldd	r23, Y+20	; 0x14
     276:	8d 89       	ldd	r24, Y+21	; 0x15
     278:	9e 89       	ldd	r25, Y+22	; 0x16
     27a:	0e 94 80 07 	call	0xf00	; 0xf00 <__cmpsf2>
     27e:	88 23       	and	r24, r24
     280:	2c f4       	brge	.+10     	; 0x28c <.L22>

00000282 <.Loc.10>:
		__ticks = 1;
     282:	81 e0       	ldi	r24, 0x01	; 1
     284:	90 e0       	ldi	r25, 0x00	; 0
     286:	98 8f       	std	Y+24, r25	; 0x18
     288:	8f 8b       	std	Y+23, r24	; 0x17
     28a:	55 c0       	rjmp	.+170    	; 0x336 <.L4>

0000028c <.L22>:
	else if (__tmp > 65535)
     28c:	20 e0       	ldi	r18, 0x00	; 0
     28e:	3f ef       	ldi	r19, 0xFF	; 255
     290:	4f e7       	ldi	r20, 0x7F	; 127
     292:	57 e4       	ldi	r21, 0x47	; 71
     294:	6b 89       	ldd	r22, Y+19	; 0x13
     296:	7c 89       	ldd	r23, Y+20	; 0x14
     298:	8d 89       	ldd	r24, Y+21	; 0x15
     29a:	9e 89       	ldd	r25, Y+22	; 0x16
     29c:	0e 94 01 08 	call	0x1002	; 0x1002 <__gesf2>
     2a0:	88 23       	and	r24, r24
     2a2:	d9 f1       	breq	.+118    	; 0x31a <.L23>
     2a4:	d4 f1       	brlt	.+116    	; 0x31a <.L23>

000002a6 <.Loc.12>:
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     2a6:	20 e0       	ldi	r18, 0x00	; 0
     2a8:	30 e0       	ldi	r19, 0x00	; 0
     2aa:	40 e2       	ldi	r20, 0x20	; 32
     2ac:	51 e4       	ldi	r21, 0x41	; 65
     2ae:	6f 85       	ldd	r22, Y+15	; 0x0f
     2b0:	78 89       	ldd	r23, Y+16	; 0x10
     2b2:	89 89       	ldd	r24, Y+17	; 0x11
     2b4:	9a 89       	ldd	r25, Y+18	; 0x12
     2b6:	0e 94 06 08 	call	0x100c	; 0x100c <__mulsf3>
     2ba:	69 a7       	std	Y+41, r22	; 0x29
     2bc:	7a a7       	std	Y+42, r23	; 0x2a
     2be:	8b a7       	std	Y+43, r24	; 0x2b
     2c0:	9c a7       	std	Y+44, r25	; 0x2c
     2c2:	89 a5       	ldd	r24, Y+41	; 0x29
     2c4:	9a a5       	ldd	r25, Y+42	; 0x2a
     2c6:	ab a5       	ldd	r26, Y+43	; 0x2b
     2c8:	bc a5       	ldd	r27, Y+44	; 0x2c
     2ca:	89 a3       	std	Y+33, r24	; 0x21
     2cc:	9a a3       	std	Y+34, r25	; 0x22
     2ce:	ab a3       	std	Y+35, r26	; 0x23
     2d0:	bc a3       	std	Y+36, r27	; 0x24

000002d2 <.Loc.13>:
     2d2:	69 a1       	ldd	r22, Y+33	; 0x21
     2d4:	7a a1       	ldd	r23, Y+34	; 0x22
     2d6:	8b a1       	ldd	r24, Y+35	; 0x23
     2d8:	9c a1       	ldd	r25, Y+36	; 0x24
     2da:	0e 94 85 07 	call	0xf0a	; 0xf0a <__fixunssfsi>
     2de:	6d a7       	std	Y+45, r22	; 0x2d
     2e0:	7e a7       	std	Y+46, r23	; 0x2e
     2e2:	8f a7       	std	Y+47, r24	; 0x2f
     2e4:	98 ab       	std	Y+48, r25	; 0x30
     2e6:	ad a5       	ldd	r26, Y+45	; 0x2d
     2e8:	be a5       	ldd	r27, Y+46	; 0x2e
     2ea:	b8 8f       	std	Y+24, r27	; 0x18
     2ec:	af 8b       	std	Y+23, r26	; 0x17

000002ee <.Loc.14>:
		while(__ticks)
     2ee:	10 c0       	rjmp	.+32     	; 0x310 <.L7>

000002f0 <.L8>:
     2f0:	80 e9       	ldi	r24, 0x90	; 144
     2f2:	91 e0       	ldi	r25, 0x01	; 1
     2f4:	9a 8f       	std	Y+26, r25	; 0x1a
     2f6:	89 8f       	std	Y+25, r24	; 0x19

000002f8 <.LBB20>:
		"sbc %B0,__zero_reg__"    "\n\t"
		"brne 1b"
		: "+d" (__count)
	);
#else
	__asm__ volatile (
     2f8:	89 8d       	ldd	r24, Y+25	; 0x19
     2fa:	9a 8d       	ldd	r25, Y+26	; 0x1a

000002fc <.L1^B1>:
     2fc:	01 97       	sbiw	r24, 0x01	; 1
     2fe:	f1 f7       	brne	.-4      	; 0x2fc <.L1^B1>
     300:	9a 8f       	std	Y+26, r25	; 0x1a
     302:	89 8f       	std	Y+25, r24	; 0x19

00000304 <.Loc.16>:
	...

00000306 <.LBE20>:
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     306:	8f 89       	ldd	r24, Y+23	; 0x17
     308:	98 8d       	ldd	r25, Y+24	; 0x18
     30a:	01 97       	sbiw	r24, 0x01	; 1
     30c:	98 8f       	std	Y+24, r25	; 0x18
     30e:	8f 8b       	std	Y+23, r24	; 0x17

00000310 <.L7>:
		while(__ticks)
     310:	8f 89       	ldd	r24, Y+23	; 0x17
     312:	98 8d       	ldd	r25, Y+24	; 0x18
     314:	00 97       	sbiw	r24, 0x00	; 0
     316:	61 f7       	brne	.-40     	; 0x2f0 <.L8>

00000318 <.Loc.19>:
		}
		return;
     318:	19 c0       	rjmp	.+50     	; 0x34c <.L9>

0000031a <.L23>:
	}
	else
		__ticks = (uint16_t)__tmp;
     31a:	6b 89       	ldd	r22, Y+19	; 0x13
     31c:	7c 89       	ldd	r23, Y+20	; 0x14
     31e:	8d 89       	ldd	r24, Y+21	; 0x15
     320:	9e 89       	ldd	r25, Y+22	; 0x16
     322:	0e 94 85 07 	call	0xf0a	; 0xf0a <__fixunssfsi>
     326:	69 ab       	std	Y+49, r22	; 0x31
     328:	7a ab       	std	Y+50, r23	; 0x32
     32a:	8b ab       	std	Y+51, r24	; 0x33
     32c:	9c ab       	std	Y+52, r25	; 0x34
     32e:	e9 a9       	ldd	r30, Y+49	; 0x31
     330:	fa a9       	ldd	r31, Y+50	; 0x32
     332:	f8 8f       	std	Y+24, r31	; 0x18
     334:	ef 8b       	std	Y+23, r30	; 0x17

00000336 <.L4>:
     336:	8f 89       	ldd	r24, Y+23	; 0x17
     338:	98 8d       	ldd	r25, Y+24	; 0x18
     33a:	9c 8f       	std	Y+28, r25	; 0x1c
     33c:	8b 8f       	std	Y+27, r24	; 0x1b

0000033e <.LBB22>:
     33e:	8b 8d       	ldd	r24, Y+27	; 0x1b
     340:	9c 8d       	ldd	r25, Y+28	; 0x1c

00000342 <.L1^B2>:
     342:	01 97       	sbiw	r24, 0x01	; 1
     344:	f1 f7       	brne	.-4      	; 0x342 <.L1^B2>
     346:	9c 8f       	std	Y+28, r25	; 0x1c
     348:	8b 8f       	std	Y+27, r24	; 0x1b

0000034a <.Loc.22>:
	...

0000034c <.L9>:
    _delay_ms(500);
    PORT_LED |= (1<<LED_2);         // LED 2 aan
     34c:	82 e0       	ldi	r24, 0x02	; 2
     34e:	91 e0       	ldi	r25, 0x01	; 1
     350:	dc 01       	movw	r26, r24
     352:	2c 91       	ld	r18, X
     354:	82 e0       	ldi	r24, 0x02	; 2
     356:	91 e0       	ldi	r25, 0x01	; 1

00000358 <.Loc.24>:
     358:	20 62       	ori	r18, 0x20	; 32
     35a:	fc 01       	movw	r30, r24
     35c:	20 83       	st	Z, r18

0000035e <.Loc.25>:
    PORT_LED &= ~(1<<LED_1);        // LED 1 uit
     35e:	82 e0       	ldi	r24, 0x02	; 2
     360:	91 e0       	ldi	r25, 0x01	; 1
     362:	dc 01       	movw	r26, r24
     364:	2c 91       	ld	r18, X

00000366 <.Loc.26>:
     366:	82 e0       	ldi	r24, 0x02	; 2
     368:	91 e0       	ldi	r25, 0x01	; 1

0000036a <.Loc.27>:
     36a:	2f 7e       	andi	r18, 0xEF	; 239
     36c:	fc 01       	movw	r30, r24
     36e:	20 83       	st	Z, r18

00000370 <.Loc.28>:
    PORT_buzzer &= ~(1<<buzzer);    // buzzer uit
     370:	82 e0       	ldi	r24, 0x02	; 2
     372:	91 e0       	ldi	r25, 0x01	; 1
     374:	dc 01       	movw	r26, r24
     376:	2c 91       	ld	r18, X

00000378 <.Loc.29>:
     378:	82 e0       	ldi	r24, 0x02	; 2
     37a:	91 e0       	ldi	r25, 0x01	; 1

0000037c <.Loc.30>:
     37c:	27 7f       	andi	r18, 0xF7	; 247
     37e:	fc 01       	movw	r30, r24
     380:	20 83       	st	Z, r18
     382:	80 e0       	ldi	r24, 0x00	; 0
     384:	90 e0       	ldi	r25, 0x00	; 0
     386:	aa ef       	ldi	r26, 0xFA	; 250
     388:	b3 e4       	ldi	r27, 0x43	; 67
     38a:	89 83       	std	Y+1, r24	; 0x01
     38c:	9a 83       	std	Y+2, r25	; 0x02
     38e:	ab 83       	std	Y+3, r26	; 0x03
     390:	bc 83       	std	Y+4, r27	; 0x04

00000392 <.LBB24>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     392:	20 e0       	ldi	r18, 0x00	; 0
     394:	30 e0       	ldi	r19, 0x00	; 0
     396:	4a e7       	ldi	r20, 0x7A	; 122
     398:	55 e4       	ldi	r21, 0x45	; 69
     39a:	69 81       	ldd	r22, Y+1	; 0x01
     39c:	7a 81       	ldd	r23, Y+2	; 0x02
     39e:	8b 81       	ldd	r24, Y+3	; 0x03
     3a0:	9c 81       	ldd	r25, Y+4	; 0x04
     3a2:	0e 94 06 08 	call	0x100c	; 0x100c <__mulsf3>
     3a6:	6d ab       	std	Y+53, r22	; 0x35
     3a8:	7e ab       	std	Y+54, r23	; 0x36
     3aa:	8f ab       	std	Y+55, r24	; 0x37
     3ac:	98 af       	std	Y+56, r25	; 0x38
     3ae:	8d a9       	ldd	r24, Y+53	; 0x35
     3b0:	9e a9       	ldd	r25, Y+54	; 0x36
     3b2:	af a9       	ldd	r26, Y+55	; 0x37
     3b4:	b8 ad       	ldd	r27, Y+56	; 0x38
     3b6:	8d 83       	std	Y+5, r24	; 0x05
     3b8:	9e 83       	std	Y+6, r25	; 0x06
     3ba:	af 83       	std	Y+7, r26	; 0x07
     3bc:	b8 87       	std	Y+8, r27	; 0x08

000003be <.Loc.32>:
	if (__tmp < 1.0)
     3be:	20 e0       	ldi	r18, 0x00	; 0
     3c0:	30 e0       	ldi	r19, 0x00	; 0
     3c2:	40 e8       	ldi	r20, 0x80	; 128
     3c4:	5f e3       	ldi	r21, 0x3F	; 63
     3c6:	6d 81       	ldd	r22, Y+5	; 0x05
     3c8:	7e 81       	ldd	r23, Y+6	; 0x06
     3ca:	8f 81       	ldd	r24, Y+7	; 0x07
     3cc:	98 85       	ldd	r25, Y+8	; 0x08
     3ce:	0e 94 80 07 	call	0xf00	; 0xf00 <__cmpsf2>
     3d2:	88 23       	and	r24, r24
     3d4:	2c f4       	brge	.+10     	; 0x3e0 <.L24>

000003d6 <.Loc.33>:
		__ticks = 1;
     3d6:	81 e0       	ldi	r24, 0x01	; 1
     3d8:	90 e0       	ldi	r25, 0x00	; 0
     3da:	9a 87       	std	Y+10, r25	; 0x0a
     3dc:	89 87       	std	Y+9, r24	; 0x09
     3de:	5c c0       	rjmp	.+184    	; 0x498 <.L12>

000003e0 <.L24>:
	else if (__tmp > 65535)
     3e0:	20 e0       	ldi	r18, 0x00	; 0
     3e2:	3f ef       	ldi	r19, 0xFF	; 255
     3e4:	4f e7       	ldi	r20, 0x7F	; 127
     3e6:	57 e4       	ldi	r21, 0x47	; 71
     3e8:	6d 81       	ldd	r22, Y+5	; 0x05
     3ea:	7e 81       	ldd	r23, Y+6	; 0x06
     3ec:	8f 81       	ldd	r24, Y+7	; 0x07
     3ee:	98 85       	ldd	r25, Y+8	; 0x08
     3f0:	0e 94 01 08 	call	0x1002	; 0x1002 <__gesf2>
     3f4:	88 23       	and	r24, r24
     3f6:	09 f0       	breq	.+2      	; 0x3fa <L0^A>

000003f8 <L0^A>:
     3f8:	0c f4       	brge	.+2      	; 0x3fc <.Loc.35>

000003fa <L0^A>:
     3fa:	3c c0       	rjmp	.+120    	; 0x474 <.L25>

000003fc <.Loc.35>:
		__ticks = (uint16_t) (__ms * 10.0);
     3fc:	20 e0       	ldi	r18, 0x00	; 0
     3fe:	30 e0       	ldi	r19, 0x00	; 0
     400:	40 e2       	ldi	r20, 0x20	; 32
     402:	51 e4       	ldi	r21, 0x41	; 65
     404:	69 81       	ldd	r22, Y+1	; 0x01
     406:	7a 81       	ldd	r23, Y+2	; 0x02
     408:	8b 81       	ldd	r24, Y+3	; 0x03
     40a:	9c 81       	ldd	r25, Y+4	; 0x04
     40c:	0e 94 06 08 	call	0x100c	; 0x100c <__mulsf3>
     410:	69 af       	std	Y+57, r22	; 0x39
     412:	7a af       	std	Y+58, r23	; 0x3a
     414:	8b af       	std	Y+59, r24	; 0x3b
     416:	9c af       	std	Y+60, r25	; 0x3c
     418:	89 ad       	ldd	r24, Y+57	; 0x39
     41a:	9a ad       	ldd	r25, Y+58	; 0x3a
     41c:	ab ad       	ldd	r26, Y+59	; 0x3b
     41e:	bc ad       	ldd	r27, Y+60	; 0x3c
     420:	8d 8f       	std	Y+29, r24	; 0x1d
     422:	9e 8f       	std	Y+30, r25	; 0x1e
     424:	af 8f       	std	Y+31, r26	; 0x1f
     426:	b8 a3       	std	Y+32, r27	; 0x20

00000428 <.Loc.36>:
     428:	6d 8d       	ldd	r22, Y+29	; 0x1d
     42a:	7e 8d       	ldd	r23, Y+30	; 0x1e
     42c:	8f 8d       	ldd	r24, Y+31	; 0x1f
     42e:	98 a1       	ldd	r25, Y+32	; 0x20
     430:	0e 94 85 07 	call	0xf0a	; 0xf0a <__fixunssfsi>
     434:	21 96       	adiw	r28, 0x01	; 1
     436:	6c af       	std	Y+60, r22	; 0x3c
     438:	7d af       	std	Y+61, r23	; 0x3d
     43a:	8e af       	std	Y+62, r24	; 0x3e
     43c:	9f af       	std	Y+63, r25	; 0x3f
     43e:	21 97       	sbiw	r28, 0x01	; 1
     440:	ad ad       	ldd	r26, Y+61	; 0x3d
     442:	be ad       	ldd	r27, Y+62	; 0x3e
     444:	ba 87       	std	Y+10, r27	; 0x0a
     446:	a9 87       	std	Y+9, r26	; 0x09

00000448 <.Loc.37>:
		while(__ticks)
     448:	10 c0       	rjmp	.+32     	; 0x46a <.L15>

0000044a <.L16>:
     44a:	80 e9       	ldi	r24, 0x90	; 144
     44c:	91 e0       	ldi	r25, 0x01	; 1
     44e:	9c 87       	std	Y+12, r25	; 0x0c
     450:	8b 87       	std	Y+11, r24	; 0x0b

00000452 <.LBB26>:
     452:	8b 85       	ldd	r24, Y+11	; 0x0b
     454:	9c 85       	ldd	r25, Y+12	; 0x0c

00000456 <.L1^B3>:
     456:	01 97       	sbiw	r24, 0x01	; 1
     458:	f1 f7       	brne	.-4      	; 0x456 <.L1^B3>
     45a:	9c 87       	std	Y+12, r25	; 0x0c
     45c:	8b 87       	std	Y+11, r24	; 0x0b

0000045e <.Loc.39>:
	...

00000460 <.LBE26>:
			__ticks --;
     460:	89 85       	ldd	r24, Y+9	; 0x09
     462:	9a 85       	ldd	r25, Y+10	; 0x0a
     464:	01 97       	sbiw	r24, 0x01	; 1
     466:	9a 87       	std	Y+10, r25	; 0x0a
     468:	89 87       	std	Y+9, r24	; 0x09

0000046a <.L15>:
		while(__ticks)
     46a:	89 85       	ldd	r24, Y+9	; 0x09
     46c:	9a 85       	ldd	r25, Y+10	; 0x0a
     46e:	00 97       	sbiw	r24, 0x00	; 0
     470:	61 f7       	brne	.-40     	; 0x44a <.L16>

00000472 <.Loc.42>:
		return;
     472:	1d c0       	rjmp	.+58     	; 0x4ae <.L17>

00000474 <.L25>:
		__ticks = (uint16_t)__tmp;
     474:	6d 81       	ldd	r22, Y+5	; 0x05
     476:	7e 81       	ldd	r23, Y+6	; 0x06
     478:	8f 81       	ldd	r24, Y+7	; 0x07
     47a:	98 85       	ldd	r25, Y+8	; 0x08
     47c:	0e 94 85 07 	call	0xf0a	; 0xf0a <__fixunssfsi>
     480:	25 96       	adiw	r28, 0x05	; 5
     482:	6c af       	std	Y+60, r22	; 0x3c
     484:	7d af       	std	Y+61, r23	; 0x3d
     486:	8e af       	std	Y+62, r24	; 0x3e
     488:	9f af       	std	Y+63, r25	; 0x3f
     48a:	25 97       	sbiw	r28, 0x05	; 5
     48c:	23 96       	adiw	r28, 0x03	; 3
     48e:	ee ad       	ldd	r30, Y+62	; 0x3e
     490:	ff ad       	ldd	r31, Y+63	; 0x3f
     492:	23 97       	sbiw	r28, 0x03	; 3
     494:	fa 87       	std	Y+10, r31	; 0x0a
     496:	e9 87       	std	Y+9, r30	; 0x09

00000498 <.L12>:
     498:	89 85       	ldd	r24, Y+9	; 0x09
     49a:	9a 85       	ldd	r25, Y+10	; 0x0a
     49c:	9e 87       	std	Y+14, r25	; 0x0e
     49e:	8d 87       	std	Y+13, r24	; 0x0d

000004a0 <.LBB28>:
     4a0:	8d 85       	ldd	r24, Y+13	; 0x0d
     4a2:	9e 85       	ldd	r25, Y+14	; 0x0e

000004a4 <.L1^B4>:
     4a4:	01 97       	sbiw	r24, 0x01	; 1
     4a6:	f1 f7       	brne	.-4      	; 0x4a4 <.L1^B4>
     4a8:	9e 87       	std	Y+14, r25	; 0x0e
     4aa:	8d 87       	std	Y+13, r24	; 0x0d

000004ac <.Loc.45>:
	...

000004ae <.L17>:
    _delay_ms(500);
}
     4ae:	00 00       	nop
     4b0:	cc 5b       	subi	r28, 0xBC	; 188
     4b2:	df 4f       	sbci	r29, 0xFF	; 255
     4b4:	0f b6       	in	r0, 0x3f	; 63
     4b6:	f8 94       	cli
     4b8:	de bf       	out	0x3e, r29	; 62
     4ba:	0f be       	out	0x3f, r0	; 63
     4bc:	cd bf       	out	0x3d, r28	; 61
     4be:	df 91       	pop	r29
     4c0:	cf 91       	pop	r28
     4c2:	08 95       	ret

000004c4 <h_bridgeR_set_percentage>:

void h_bridgeR_set_percentage(signed char percentage)
{
     4c4:	0f 93       	push	r16
     4c6:	1f 93       	push	r17
     4c8:	cf 93       	push	r28
     4ca:	df 93       	push	r29
     4cc:	00 d0       	rcall	.+0      	; 0x4ce <L0^A>

000004ce <L0^A>:
     4ce:	0f 92       	push	r0
     4d0:	0f 92       	push	r0
     4d2:	cd b7       	in	r28, 0x3d	; 61
     4d4:	de b7       	in	r29, 0x3e	; 62
     4d6:	89 83       	std	Y+1, r24	; 0x01

000004d8 <.Loc.48>:
	if (percentage >= 0 && percentage <= 100)
     4d8:	89 81       	ldd	r24, Y+1	; 0x01
     4da:	88 23       	and	r24, r24
     4dc:	3c f1       	brlt	.+78     	; 0x52c <.L28>

000004de <.Loc.49>:
     4de:	89 81       	ldd	r24, Y+1	; 0x01
     4e0:	84 36       	cpi	r24, 0x64	; 100
     4e2:	09 f0       	breq	.+2      	; 0x4e6 <.Loc.50>

000004e4 <L0^A>:
     4e4:	1c f5       	brge	.+70     	; 0x52c <.L28>

000004e6 <.Loc.50>:
	{
			OCR1A = (65536*percentage)/100;
     4e6:	89 81       	ldd	r24, Y+1	; 0x01
     4e8:	08 2e       	mov	r0, r24
     4ea:	00 0c       	add	r0, r0
     4ec:	99 0b       	sbc	r25, r25
     4ee:	aa 0b       	sbc	r26, r26
     4f0:	bb 0b       	sbc	r27, r27
     4f2:	ac 01       	movw	r20, r24
     4f4:	33 27       	eor	r19, r19
     4f6:	22 27       	eor	r18, r18
     4f8:	2a 83       	std	Y+2, r18	; 0x02
     4fa:	3b 83       	std	Y+3, r19	; 0x03
     4fc:	4c 83       	std	Y+4, r20	; 0x04
     4fe:	5d 83       	std	Y+5, r21	; 0x05

00000500 <.Loc.51>:
     500:	04 e6       	ldi	r16, 0x64	; 100
     502:	10 e0       	ldi	r17, 0x00	; 0
     504:	20 e0       	ldi	r18, 0x00	; 0
     506:	30 e0       	ldi	r19, 0x00	; 0
     508:	6a 81       	ldd	r22, Y+2	; 0x02
     50a:	7b 81       	ldd	r23, Y+3	; 0x03
     50c:	8c 81       	ldd	r24, Y+4	; 0x04
     50e:	9d 81       	ldd	r25, Y+5	; 0x05
     510:	a9 01       	movw	r20, r18
     512:	98 01       	movw	r18, r16
     514:	0e 94 37 07 	call	0xe6e	; 0xe6e <__divmodsi4>
     518:	da 01       	movw	r26, r20
     51a:	c9 01       	movw	r24, r18
     51c:	ac 01       	movw	r20, r24
     51e:	bd 01       	movw	r22, r26

00000520 <.Loc.52>:
     520:	88 e8       	ldi	r24, 0x88	; 136
     522:	90 e0       	ldi	r25, 0x00	; 0

00000524 <.Loc.53>:
     524:	9a 01       	movw	r18, r20
     526:	fc 01       	movw	r30, r24
     528:	31 83       	std	Z+1, r19	; 0x01
     52a:	20 83       	st	Z, r18

0000052c <.L28>:
	}
}
     52c:	00 00       	nop
     52e:	0f 90       	pop	r0
     530:	0f 90       	pop	r0
     532:	0f 90       	pop	r0
     534:	0f 90       	pop	r0
     536:	0f 90       	pop	r0
     538:	df 91       	pop	r29
     53a:	cf 91       	pop	r28
     53c:	1f 91       	pop	r17
     53e:	0f 91       	pop	r16
     540:	08 95       	ret

00000542 <h_bridgeL_set_percentage>:

void h_bridgeL_set_percentage(signed char percentage)
{
     542:	0f 93       	push	r16
     544:	1f 93       	push	r17
     546:	cf 93       	push	r28
     548:	df 93       	push	r29
     54a:	00 d0       	rcall	.+0      	; 0x54c <L0^A>

0000054c <L0^A>:
     54c:	0f 92       	push	r0
     54e:	0f 92       	push	r0
     550:	cd b7       	in	r28, 0x3d	; 61
     552:	de b7       	in	r29, 0x3e	; 62
     554:	89 83       	std	Y+1, r24	; 0x01

00000556 <.Loc.56>:
	if (percentage >= 0 && percentage <= 100)
     556:	89 81       	ldd	r24, Y+1	; 0x01
     558:	88 23       	and	r24, r24
     55a:	3c f1       	brlt	.+78     	; 0x5aa <.L31>

0000055c <.Loc.57>:
     55c:	89 81       	ldd	r24, Y+1	; 0x01
     55e:	84 36       	cpi	r24, 0x64	; 100
     560:	09 f0       	breq	.+2      	; 0x564 <.Loc.58>

00000562 <L0^A>:
     562:	1c f5       	brge	.+70     	; 0x5aa <.L31>

00000564 <.Loc.58>:
	{
			OCR3A = (65536*percentage)/100;
     564:	89 81       	ldd	r24, Y+1	; 0x01
     566:	08 2e       	mov	r0, r24
     568:	00 0c       	add	r0, r0
     56a:	99 0b       	sbc	r25, r25
     56c:	aa 0b       	sbc	r26, r26
     56e:	bb 0b       	sbc	r27, r27
     570:	ac 01       	movw	r20, r24
     572:	33 27       	eor	r19, r19
     574:	22 27       	eor	r18, r18
     576:	2a 83       	std	Y+2, r18	; 0x02
     578:	3b 83       	std	Y+3, r19	; 0x03
     57a:	4c 83       	std	Y+4, r20	; 0x04
     57c:	5d 83       	std	Y+5, r21	; 0x05

0000057e <.Loc.59>:
     57e:	04 e6       	ldi	r16, 0x64	; 100
     580:	10 e0       	ldi	r17, 0x00	; 0
     582:	20 e0       	ldi	r18, 0x00	; 0
     584:	30 e0       	ldi	r19, 0x00	; 0
     586:	6a 81       	ldd	r22, Y+2	; 0x02
     588:	7b 81       	ldd	r23, Y+3	; 0x03
     58a:	8c 81       	ldd	r24, Y+4	; 0x04
     58c:	9d 81       	ldd	r25, Y+5	; 0x05
     58e:	a9 01       	movw	r20, r18
     590:	98 01       	movw	r18, r16
     592:	0e 94 37 07 	call	0xe6e	; 0xe6e <__divmodsi4>
     596:	da 01       	movw	r26, r20
     598:	c9 01       	movw	r24, r18
     59a:	ac 01       	movw	r20, r24
     59c:	bd 01       	movw	r22, r26

0000059e <.Loc.60>:
     59e:	88 e9       	ldi	r24, 0x98	; 152
     5a0:	90 e0       	ldi	r25, 0x00	; 0

000005a2 <.Loc.61>:
     5a2:	9a 01       	movw	r18, r20
     5a4:	fc 01       	movw	r30, r24
     5a6:	31 83       	std	Z+1, r19	; 0x01
     5a8:	20 83       	st	Z, r18

000005aa <.L31>:
	}
}
     5aa:	00 00       	nop
     5ac:	0f 90       	pop	r0
     5ae:	0f 90       	pop	r0
     5b0:	0f 90       	pop	r0
     5b2:	0f 90       	pop	r0
     5b4:	0f 90       	pop	r0
     5b6:	df 91       	pop	r29
     5b8:	cf 91       	pop	r28
     5ba:	1f 91       	pop	r17
     5bc:	0f 91       	pop	r16
     5be:	08 95       	ret

000005c0 <__vector_20>:

//H-brug PWMR
ISR(TIMER1_OVF_vect)
{
     5c0:	1f 92       	push	r1
     5c2:	0f 92       	push	r0
     5c4:	0f b6       	in	r0, 0x3f	; 63
     5c6:	0f 92       	push	r0
     5c8:	11 24       	eor	r1, r1
     5ca:	0b b6       	in	r0, 0x3b	; 59
     5cc:	0f 92       	push	r0
     5ce:	2f 93       	push	r18
     5d0:	3f 93       	push	r19
     5d2:	8f 93       	push	r24
     5d4:	9f 93       	push	r25
     5d6:	ef 93       	push	r30
     5d8:	ff 93       	push	r31
     5da:	cf 93       	push	r28
     5dc:	df 93       	push	r29
     5de:	cd b7       	in	r28, 0x3d	; 61
     5e0:	de b7       	in	r29, 0x3e	; 62

000005e2 <.Loc.64>:
    PORT ^= (1 << PEN1);
     5e2:	82 e2       	ldi	r24, 0x22	; 34
     5e4:	90 e0       	ldi	r25, 0x00	; 0
     5e6:	fc 01       	movw	r30, r24
     5e8:	30 81       	ld	r19, Z
     5ea:	82 e2       	ldi	r24, 0x22	; 34
     5ec:	90 e0       	ldi	r25, 0x00	; 0

000005ee <.Loc.65>:
     5ee:	20 e8       	ldi	r18, 0x80	; 128
     5f0:	23 27       	eor	r18, r19
     5f2:	fc 01       	movw	r30, r24
     5f4:	20 83       	st	Z, r18

000005f6 <.Loc.66>:
}
     5f6:	00 00       	nop
     5f8:	df 91       	pop	r29
     5fa:	cf 91       	pop	r28
     5fc:	ff 91       	pop	r31
     5fe:	ef 91       	pop	r30
     600:	9f 91       	pop	r25
     602:	8f 91       	pop	r24
     604:	3f 91       	pop	r19
     606:	2f 91       	pop	r18
     608:	0f 90       	pop	r0
     60a:	0b be       	out	0x3b, r0	; 59
     60c:	0f 90       	pop	r0
     60e:	0f be       	out	0x3f, r0	; 63
     610:	0f 90       	pop	r0
     612:	1f 90       	pop	r1
     614:	18 95       	reti

00000616 <__vector_17>:
//H-brug PWMR
ISR(TIMER1_COMPA_vect)
{
     616:	1f 92       	push	r1
     618:	0f 92       	push	r0
     61a:	0f b6       	in	r0, 0x3f	; 63
     61c:	0f 92       	push	r0
     61e:	11 24       	eor	r1, r1
     620:	0b b6       	in	r0, 0x3b	; 59
     622:	0f 92       	push	r0
     624:	2f 93       	push	r18
     626:	8f 93       	push	r24
     628:	9f 93       	push	r25
     62a:	ef 93       	push	r30
     62c:	ff 93       	push	r31
     62e:	cf 93       	push	r28
     630:	df 93       	push	r29
     632:	cd b7       	in	r28, 0x3d	; 61
     634:	de b7       	in	r29, 0x3e	; 62

00000636 <.Loc.68>:
    PORT |= (1 << PEN1);
     636:	82 e2       	ldi	r24, 0x22	; 34
     638:	90 e0       	ldi	r25, 0x00	; 0
     63a:	fc 01       	movw	r30, r24
     63c:	20 81       	ld	r18, Z
     63e:	82 e2       	ldi	r24, 0x22	; 34
     640:	90 e0       	ldi	r25, 0x00	; 0

00000642 <.Loc.69>:
     642:	20 68       	ori	r18, 0x80	; 128
     644:	fc 01       	movw	r30, r24
     646:	20 83       	st	Z, r18

00000648 <.Loc.70>:
}
     648:	00 00       	nop
     64a:	df 91       	pop	r29
     64c:	cf 91       	pop	r28
     64e:	ff 91       	pop	r31
     650:	ef 91       	pop	r30
     652:	9f 91       	pop	r25
     654:	8f 91       	pop	r24
     656:	2f 91       	pop	r18
     658:	0f 90       	pop	r0
     65a:	0b be       	out	0x3b, r0	; 59
     65c:	0f 90       	pop	r0
     65e:	0f be       	out	0x3f, r0	; 63
     660:	0f 90       	pop	r0
     662:	1f 90       	pop	r1
     664:	18 95       	reti

00000666 <__vector_35>:

//H-brug PWML
ISR(TIMER3_OVF_vect)
{
     666:	1f 92       	push	r1
     668:	0f 92       	push	r0
     66a:	0f b6       	in	r0, 0x3f	; 63
     66c:	0f 92       	push	r0
     66e:	11 24       	eor	r1, r1
     670:	0b b6       	in	r0, 0x3b	; 59
     672:	0f 92       	push	r0
     674:	2f 93       	push	r18
     676:	3f 93       	push	r19
     678:	8f 93       	push	r24
     67a:	9f 93       	push	r25
     67c:	ef 93       	push	r30
     67e:	ff 93       	push	r31
     680:	cf 93       	push	r28
     682:	df 93       	push	r29
     684:	cd b7       	in	r28, 0x3d	; 61
     686:	de b7       	in	r29, 0x3e	; 62

00000688 <.Loc.72>:
    PORT ^= (1 << PEN2);
     688:	82 e2       	ldi	r24, 0x22	; 34
     68a:	90 e0       	ldi	r25, 0x00	; 0
     68c:	fc 01       	movw	r30, r24
     68e:	30 81       	ld	r19, Z
     690:	82 e2       	ldi	r24, 0x22	; 34
     692:	90 e0       	ldi	r25, 0x00	; 0

00000694 <.Loc.73>:
     694:	24 e0       	ldi	r18, 0x04	; 4
     696:	23 27       	eor	r18, r19
     698:	fc 01       	movw	r30, r24
     69a:	20 83       	st	Z, r18

0000069c <.Loc.74>:
}
     69c:	00 00       	nop
     69e:	df 91       	pop	r29
     6a0:	cf 91       	pop	r28
     6a2:	ff 91       	pop	r31
     6a4:	ef 91       	pop	r30
     6a6:	9f 91       	pop	r25
     6a8:	8f 91       	pop	r24
     6aa:	3f 91       	pop	r19
     6ac:	2f 91       	pop	r18
     6ae:	0f 90       	pop	r0
     6b0:	0b be       	out	0x3b, r0	; 59
     6b2:	0f 90       	pop	r0
     6b4:	0f be       	out	0x3f, r0	; 63
     6b6:	0f 90       	pop	r0
     6b8:	1f 90       	pop	r1
     6ba:	18 95       	reti

000006bc <__vector_32>:
//H-brug PWML
ISR(TIMER3_COMPA_vect)
{
     6bc:	1f 92       	push	r1
     6be:	0f 92       	push	r0
     6c0:	0f b6       	in	r0, 0x3f	; 63
     6c2:	0f 92       	push	r0
     6c4:	11 24       	eor	r1, r1
     6c6:	0b b6       	in	r0, 0x3b	; 59
     6c8:	0f 92       	push	r0
     6ca:	2f 93       	push	r18
     6cc:	8f 93       	push	r24
     6ce:	9f 93       	push	r25
     6d0:	ef 93       	push	r30
     6d2:	ff 93       	push	r31
     6d4:	cf 93       	push	r28
     6d6:	df 93       	push	r29
     6d8:	cd b7       	in	r28, 0x3d	; 61
     6da:	de b7       	in	r29, 0x3e	; 62

000006dc <.Loc.76>:
    PORT |= (1 << PEN2);
     6dc:	82 e2       	ldi	r24, 0x22	; 34
     6de:	90 e0       	ldi	r25, 0x00	; 0
     6e0:	fc 01       	movw	r30, r24
     6e2:	20 81       	ld	r18, Z
     6e4:	82 e2       	ldi	r24, 0x22	; 34
     6e6:	90 e0       	ldi	r25, 0x00	; 0

000006e8 <.Loc.77>:
     6e8:	24 60       	ori	r18, 0x04	; 4
     6ea:	fc 01       	movw	r30, r24
     6ec:	20 83       	st	Z, r18

000006ee <.Loc.78>:
}
     6ee:	00 00       	nop
     6f0:	df 91       	pop	r29
     6f2:	cf 91       	pop	r28
     6f4:	ff 91       	pop	r31
     6f6:	ef 91       	pop	r30
     6f8:	9f 91       	pop	r25
     6fa:	8f 91       	pop	r24
     6fc:	2f 91       	pop	r18
     6fe:	0f 90       	pop	r0
     700:	0b be       	out	0x3b, r0	; 59
     702:	0f 90       	pop	r0
     704:	0f be       	out	0x3f, r0	; 63
     706:	0f 90       	pop	r0
     708:	1f 90       	pop	r1
     70a:	18 95       	reti

0000070c <__vector_23>:

//Timer doorrijden
ISR(TIMER0_OVF_vect)
{
     70c:	1f 92       	push	r1
     70e:	0f 92       	push	r0
     710:	0f b6       	in	r0, 0x3f	; 63
     712:	0f 92       	push	r0
     714:	11 24       	eor	r1, r1
     716:	8f 93       	push	r24
     718:	9f 93       	push	r25
     71a:	cf 93       	push	r28
     71c:	df 93       	push	r29
     71e:	cd b7       	in	r28, 0x3d	; 61
     720:	de b7       	in	r29, 0x3e	; 62

00000722 <.Loc.80>:
    timerteller ++;
     722:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <timerteller>
     726:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <timerteller+0x1>
     72a:	01 96       	adiw	r24, 0x01	; 1
     72c:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <timerteller+0x1>
     730:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <timerteller>

00000734 <.Loc.81>:
}
     734:	00 00       	nop
     736:	df 91       	pop	r29
     738:	cf 91       	pop	r28
     73a:	9f 91       	pop	r25
     73c:	8f 91       	pop	r24
     73e:	0f 90       	pop	r0
     740:	0f be       	out	0x3f, r0	; 63
     742:	0f 90       	pop	r0
     744:	1f 90       	pop	r1
     746:	18 95       	reti

00000748 <main>:
7: Noodknop ingedrukt
8: Noodknop uitgedrukt
*/

int main(void)
{
     748:	cf 93       	push	r28
     74a:	df 93       	push	r29
     74c:	cd b7       	in	r28, 0x3d	; 61
     74e:	de b7       	in	r29, 0x3e	; 62
     750:	a4 97       	sbiw	r28, 0x24	; 36
     752:	0f b6       	in	r0, 0x3f	; 63
     754:	f8 94       	cli
     756:	de bf       	out	0x3e, r29	; 62
     758:	0f be       	out	0x3f, r0	; 63
     75a:	cd bf       	out	0x3d, r28	; 61

0000075c <.Loc.1>:
    init();
     75c:	0e 94 5e 06 	call	0xcbc	; 0xcbc <init>

00000760 <.Loc.2>:

    int toestand = 0;
     760:	1a 82       	std	Y+2, r1	; 0x02
     762:	19 82       	std	Y+1, r1	; 0x01

00000764 <.Loc.3>:

    DDRH |= (1 << PH6);
     764:	81 e0       	ldi	r24, 0x01	; 1
     766:	91 e0       	ldi	r25, 0x01	; 1
     768:	dc 01       	movw	r26, r24
     76a:	2c 91       	ld	r18, X
     76c:	81 e0       	ldi	r24, 0x01	; 1
     76e:	91 e0       	ldi	r25, 0x01	; 1

00000770 <.Loc.4>:
     770:	20 64       	ori	r18, 0x40	; 64
     772:	fc 01       	movw	r30, r24
     774:	20 83       	st	Z, r18

00000776 <.Loc.5>:
    PORTH &= ~(1<<PH6);
     776:	82 e0       	ldi	r24, 0x02	; 2
     778:	91 e0       	ldi	r25, 0x01	; 1
     77a:	dc 01       	movw	r26, r24
     77c:	2c 91       	ld	r18, X

0000077e <.Loc.6>:
     77e:	82 e0       	ldi	r24, 0x02	; 2
     780:	91 e0       	ldi	r25, 0x01	; 1

00000782 <.Loc.7>:
     782:	2f 7b       	andi	r18, 0xBF	; 191
     784:	fc 01       	movw	r30, r24
     786:	20 83       	st	Z, r18

00000788 <.L39>:
    while(1)
    {
        if(Bluetooth_Getal == 2)//Bluetooth verbroken
     788:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <Bluetooth_Getal>
     78c:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <Bluetooth_Getal+0x1>

00000790 <.Loc.9>:
     790:	82 30       	cpi	r24, 0x02	; 2
     792:	91 05       	cpc	r25, r1
     794:	11 f4       	brne	.+4      	; 0x79a <.L2>

00000796 <.Loc.10>:
        {
            toestand = 0;
     796:	1a 82       	std	Y+2, r1	; 0x02
     798:	19 82       	std	Y+1, r1	; 0x01

0000079a <.L2>:
        }
        if(Bluetooth_Getal == 6)//Uitknop ingedrukt
     79a:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <Bluetooth_Getal>
     79e:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <Bluetooth_Getal+0x1>

000007a2 <.Loc.12>:
     7a2:	86 30       	cpi	r24, 0x06	; 6
     7a4:	91 05       	cpc	r25, r1
     7a6:	21 f4       	brne	.+8      	; 0x7b0 <.L3>

000007a8 <.Loc.13>:
        {
            toestand = 1;
     7a8:	81 e0       	ldi	r24, 0x01	; 1
     7aa:	90 e0       	ldi	r25, 0x00	; 0
     7ac:	9a 83       	std	Y+2, r25	; 0x02
     7ae:	89 83       	std	Y+1, r24	; 0x01

000007b0 <.L3>:
        }
//        if(((Noodknopport & (1<<Noodknoppin)) == 0) || (Bluetooth_Getal == 7))
//        {
//            toestand = 99;
//        }
        switch(toestand)
     7b0:	89 81       	ldd	r24, Y+1	; 0x01
     7b2:	9a 81       	ldd	r25, Y+2	; 0x02
     7b4:	88 30       	cpi	r24, 0x08	; 8
     7b6:	91 05       	cpc	r25, r1
     7b8:	09 f0       	breq	.+2      	; 0x7bc <L0^A+0x2>

000007ba <L0^A>:
     7ba:	bc f4       	brge	.+46     	; 0x7ea <.L4>
     7bc:	89 81       	ldd	r24, Y+1	; 0x01
     7be:	9a 81       	ldd	r25, Y+2	; 0x02
     7c0:	99 23       	and	r25, r25
     7c2:	14 f3       	brlt	.-60     	; 0x788 <.L39>
     7c4:	89 81       	ldd	r24, Y+1	; 0x01
     7c6:	9a 81       	ldd	r25, Y+2	; 0x02
     7c8:	09 2e       	mov	r0, r25
     7ca:	00 0c       	add	r0, r0
     7cc:	aa 0b       	sbc	r26, r26
     7ce:	bb 0b       	sbc	r27, r27
     7d0:	88 30       	cpi	r24, 0x08	; 8
     7d2:	91 05       	cpc	r25, r1
     7d4:	a1 05       	cpc	r26, r1
     7d6:	b1 05       	cpc	r27, r1
     7d8:	09 f0       	breq	.+2      	; 0x7dc <L0^A+0x2>

000007da <L0^A>:
     7da:	b0 f6       	brcc	.-84     	; 0x788 <.L39>
     7dc:	fc 01       	movw	r30, r24
     7de:	88 27       	eor	r24, r24
     7e0:	e3 56       	subi	r30, 0x63	; 99
     7e2:	f7 4f       	sbci	r31, 0xF7	; 247
     7e4:	8f 4f       	sbci	r24, 0xFF	; 255
     7e6:	0c 94 56 07 	jmp	0xeac	; 0xeac <__tablejump2__>

000007ea <.L4>:
     7ea:	89 81       	ldd	r24, Y+1	; 0x01
     7ec:	9a 81       	ldd	r25, Y+2	; 0x02
     7ee:	83 36       	cpi	r24, 0x63	; 99
     7f0:	91 05       	cpc	r25, r1
     7f2:	51 f6       	brne	.-108    	; 0x788 <.L39>

000007f4 <.Loc.15>:
        {
        case 99://Noodtoestand
            if(timerteller <= 30)
     7f4:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <timerteller>
     7f8:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <timerteller+0x1>

000007fc <.Loc.16>:
     7fc:	8e 31       	cpi	r24, 0x1E	; 30
     7fe:	91 05       	cpc	r25, r1
     800:	09 f0       	breq	.+2      	; 0x804 <.Loc.17>

00000802 <L0^A>:
     802:	dc f4       	brge	.+54     	; 0x83a <.L16>

00000804 <.Loc.17>:
            {
                PORT_buzzer &= ~(1<<buzzer);//buzzer
     804:	82 e0       	ldi	r24, 0x02	; 2
     806:	91 e0       	ldi	r25, 0x01	; 1
     808:	dc 01       	movw	r26, r24
     80a:	2c 91       	ld	r18, X

0000080c <.Loc.18>:
     80c:	82 e0       	ldi	r24, 0x02	; 2
     80e:	91 e0       	ldi	r25, 0x01	; 1

00000810 <.Loc.19>:
     810:	27 7f       	andi	r18, 0xF7	; 247
     812:	fc 01       	movw	r30, r24
     814:	20 83       	st	Z, r18

00000816 <.Loc.20>:
                PORT_LED &= ~(1<<LED_1);//LED
     816:	82 e0       	ldi	r24, 0x02	; 2
     818:	91 e0       	ldi	r25, 0x01	; 1
     81a:	dc 01       	movw	r26, r24
     81c:	2c 91       	ld	r18, X

0000081e <.Loc.21>:
     81e:	82 e0       	ldi	r24, 0x02	; 2
     820:	91 e0       	ldi	r25, 0x01	; 1

00000822 <.Loc.22>:
     822:	2f 7e       	andi	r18, 0xEF	; 239
     824:	fc 01       	movw	r30, r24
     826:	20 83       	st	Z, r18

00000828 <.Loc.23>:
                PORT_LED &= ~(1<<LED_2);//LED
     828:	82 e0       	ldi	r24, 0x02	; 2
     82a:	91 e0       	ldi	r25, 0x01	; 1
     82c:	dc 01       	movw	r26, r24
     82e:	2c 91       	ld	r18, X

00000830 <.Loc.24>:
     830:	82 e0       	ldi	r24, 0x02	; 2
     832:	91 e0       	ldi	r25, 0x01	; 1

00000834 <.Loc.25>:
     834:	2f 7d       	andi	r18, 0xDF	; 223
     836:	fc 01       	movw	r30, r24
     838:	20 83       	st	Z, r18

0000083a <.L16>:
            }
            if(timerteller >= 30)
     83a:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <timerteller>
     83e:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <timerteller+0x1>

00000842 <.Loc.27>:
     842:	8d 31       	cpi	r24, 0x1D	; 29
     844:	91 05       	cpc	r25, r1
     846:	41 f1       	breq	.+80     	; 0x898 <.L17>
     848:	3c f1       	brlt	.+78     	; 0x898 <.L17>

0000084a <.Loc.28>:
            {
                PORT_buzzer |= (1<<buzzer);//buzzer
     84a:	82 e0       	ldi	r24, 0x02	; 2
     84c:	91 e0       	ldi	r25, 0x01	; 1
     84e:	dc 01       	movw	r26, r24
     850:	2c 91       	ld	r18, X
     852:	82 e0       	ldi	r24, 0x02	; 2
     854:	91 e0       	ldi	r25, 0x01	; 1

00000856 <.Loc.29>:
     856:	28 60       	ori	r18, 0x08	; 8
     858:	fc 01       	movw	r30, r24
     85a:	20 83       	st	Z, r18

0000085c <.Loc.30>:
                PORT_LED |= (1<<LED_1);//LED
     85c:	82 e0       	ldi	r24, 0x02	; 2
     85e:	91 e0       	ldi	r25, 0x01	; 1
     860:	dc 01       	movw	r26, r24
     862:	2c 91       	ld	r18, X
     864:	82 e0       	ldi	r24, 0x02	; 2
     866:	91 e0       	ldi	r25, 0x01	; 1

00000868 <.Loc.31>:
     868:	20 61       	ori	r18, 0x10	; 16
     86a:	fc 01       	movw	r30, r24
     86c:	20 83       	st	Z, r18

0000086e <.Loc.32>:
                PORT_LED |= (1<<LED_2);//LED
     86e:	82 e0       	ldi	r24, 0x02	; 2
     870:	91 e0       	ldi	r25, 0x01	; 1
     872:	dc 01       	movw	r26, r24
     874:	2c 91       	ld	r18, X
     876:	82 e0       	ldi	r24, 0x02	; 2
     878:	91 e0       	ldi	r25, 0x01	; 1

0000087a <.Loc.33>:
     87a:	20 62       	ori	r18, 0x20	; 32
     87c:	fc 01       	movw	r30, r24
     87e:	20 83       	st	Z, r18

00000880 <.Loc.34>:
                if(timerteller >= 60)
     880:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <timerteller>
     884:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <timerteller+0x1>

00000888 <.Loc.35>:
     888:	8b 33       	cpi	r24, 0x3B	; 59
     88a:	91 05       	cpc	r25, r1
     88c:	29 f0       	breq	.+10     	; 0x898 <.L17>
     88e:	24 f0       	brlt	.+8      	; 0x898 <.L17>

00000890 <.Loc.36>:
                {
                    timerteller = 0;
     890:	10 92 07 02 	sts	0x0207, r1	; 0x800207 <timerteller+0x1>
     894:	10 92 06 02 	sts	0x0206, r1	; 0x800206 <timerteller>

00000898 <.L17>:
                }
            }
            if((Bluetooth_Getal == 8) && ((Noodknopport & (1<<Noodknoppin)) != 0))
     898:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <Bluetooth_Getal>
     89c:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <Bluetooth_Getal+0x1>

000008a0 <.Loc.38>:
     8a0:	88 30       	cpi	r24, 0x08	; 8
     8a2:	91 05       	cpc	r25, r1
     8a4:	09 f0       	breq	.+2      	; 0x8a8 <.Loc.39>

000008a6 <L0^A>:
     8a6:	f8 c1       	rjmp	.+1008   	; 0xc98 <.L45>

000008a8 <.Loc.39>:
     8a8:	80 e3       	ldi	r24, 0x30	; 48
     8aa:	90 e0       	ldi	r25, 0x00	; 0
     8ac:	dc 01       	movw	r26, r24
     8ae:	8c 91       	ld	r24, X

000008b0 <.Loc.40>:
     8b0:	88 2f       	mov	r24, r24
     8b2:	90 e0       	ldi	r25, 0x00	; 0
     8b4:	82 70       	andi	r24, 0x02	; 2
     8b6:	99 27       	eor	r25, r25

000008b8 <.Loc.41>:
     8b8:	00 97       	sbiw	r24, 0x00	; 0
     8ba:	09 f4       	brne	.+2      	; 0x8be <.Loc.42>

000008bc <L0^A>:
     8bc:	ed c1       	rjmp	.+986    	; 0xc98 <.L45>

000008be <.Loc.42>:
            {
                toestand = 2;
     8be:	82 e0       	ldi	r24, 0x02	; 2
     8c0:	90 e0       	ldi	r25, 0x00	; 0
     8c2:	9a 83       	std	Y+2, r25	; 0x02
     8c4:	89 83       	std	Y+1, r24	; 0x01

000008c6 <.Loc.43>:
            }
            break;
     8c6:	e8 c1       	rjmp	.+976    	; 0xc98 <.L45>

000008c8 <.L15>:
        case 0:
            PORTH &= ~(1<<PH6);
     8c8:	82 e0       	ldi	r24, 0x02	; 2
     8ca:	91 e0       	ldi	r25, 0x01	; 1
     8cc:	fc 01       	movw	r30, r24
     8ce:	20 81       	ld	r18, Z

000008d0 <.Loc.45>:
     8d0:	82 e0       	ldi	r24, 0x02	; 2
     8d2:	91 e0       	ldi	r25, 0x01	; 1

000008d4 <.Loc.46>:
     8d4:	2f 7b       	andi	r18, 0xBF	; 191
     8d6:	dc 01       	movw	r26, r24
     8d8:	2c 93       	st	X, r18

000008da <.Loc.47>:
            h_bridgeR_set_percentage(99);//motoren uit
     8da:	83 e6       	ldi	r24, 0x63	; 99
     8dc:	0e 94 62 02 	call	0x4c4	; 0x4c4 <h_bridgeR_set_percentage>

000008e0 <.Loc.48>:
            h_bridgeL_set_percentage(99);
     8e0:	83 e6       	ldi	r24, 0x63	; 99
     8e2:	0e 94 a1 02 	call	0x542	; 0x542 <h_bridgeL_set_percentage>

000008e6 <.Loc.49>:
            if(Bluetooth_Getal == 1)//Bluetooth verbonden
     8e6:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <Bluetooth_Getal>
     8ea:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <Bluetooth_Getal+0x1>

000008ee <.Loc.50>:
     8ee:	81 30       	cpi	r24, 0x01	; 1
     8f0:	91 05       	cpc	r25, r1
     8f2:	09 f0       	breq	.+2      	; 0x8f6 <.Loc.51>

000008f4 <L0^A>:
     8f4:	d3 c1       	rjmp	.+934    	; 0xc9c <.L46>

000008f6 <.Loc.51>:
            {
                toestand = 1;
     8f6:	81 e0       	ldi	r24, 0x01	; 1
     8f8:	90 e0       	ldi	r25, 0x00	; 0
     8fa:	9a 83       	std	Y+2, r25	; 0x02
     8fc:	89 83       	std	Y+1, r24	; 0x01

000008fe <.Loc.52>:
            }
            break;
     8fe:	ce c1       	rjmp	.+924    	; 0xc9c <.L46>

00000900 <.L14>:
        case 1://wachten op aan knop
            h_bridgeR_set_percentage(99);//motoren uit
     900:	83 e6       	ldi	r24, 0x63	; 99
     902:	0e 94 62 02 	call	0x4c4	; 0x4c4 <h_bridgeR_set_percentage>

00000906 <.Loc.54>:
            h_bridgeL_set_percentage(99);
     906:	83 e6       	ldi	r24, 0x63	; 99
     908:	0e 94 a1 02 	call	0x542	; 0x542 <h_bridgeL_set_percentage>

0000090c <.Loc.55>:
            if(Bluetooth_Getal == 3)//Aanknop
     90c:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <Bluetooth_Getal>
     910:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <Bluetooth_Getal+0x1>

00000914 <.Loc.56>:
     914:	83 30       	cpi	r24, 0x03	; 3
     916:	91 05       	cpc	r25, r1
     918:	09 f0       	breq	.+2      	; 0x91c <.Loc.57>

0000091a <L0^A>:
     91a:	c2 c1       	rjmp	.+900    	; 0xca0 <.L47>

0000091c <.Loc.57>:
            {
                toestand = 2;
     91c:	82 e0       	ldi	r24, 0x02	; 2
     91e:	90 e0       	ldi	r25, 0x00	; 0
     920:	9a 83       	std	Y+2, r25	; 0x02
     922:	89 83       	std	Y+1, r24	; 0x01

00000924 <.Loc.58>:
            }
            break;
     924:	bd c1       	rjmp	.+890    	; 0xca0 <.L47>

00000926 <.L13>:
        case 2://toestand keuze case
            if(Bluetooth_Getal == 4)//Autonoomknop
     926:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <Bluetooth_Getal>
     92a:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <Bluetooth_Getal+0x1>

0000092e <.Loc.60>:
     92e:	84 30       	cpi	r24, 0x04	; 4
     930:	91 05       	cpc	r25, r1
     932:	09 f0       	breq	.+2      	; 0x936 <.Loc.61>

00000934 <L0^A>:
     934:	b7 c1       	rjmp	.+878    	; 0xca4 <.L48>

00000936 <.Loc.61>:
            {
                toestand = 3;
     936:	83 e0       	ldi	r24, 0x03	; 3
     938:	90 e0       	ldi	r25, 0x00	; 0
     93a:	9a 83       	std	Y+2, r25	; 0x02
     93c:	89 83       	std	Y+1, r24	; 0x01

0000093e <.Loc.62>:
            }
            break;
     93e:	b2 c1       	rjmp	.+868    	; 0xca4 <.L48>

00000940 <.L12>:
        case 3://rijstrook inrijden
            h_bridgeR_set_percentage(snelheidrechtdoor);
     940:	84 e1       	ldi	r24, 0x14	; 20
     942:	0e 94 62 02 	call	0x4c4	; 0x4c4 <h_bridgeR_set_percentage>

00000946 <.Loc.64>:
            h_bridgeL_set_percentage(snelheidrechtdoor);
     946:	84 e1       	ldi	r24, 0x14	; 20
     948:	0e 94 a1 02 	call	0x542	; 0x542 <h_bridgeL_set_percentage>

0000094c <.Loc.65>:
            PORT |= (1 << PIN11);
     94c:	82 e2       	ldi	r24, 0x22	; 34
     94e:	90 e0       	ldi	r25, 0x00	; 0
     950:	fc 01       	movw	r30, r24
     952:	20 81       	ld	r18, Z
     954:	82 e2       	ldi	r24, 0x22	; 34
     956:	90 e0       	ldi	r25, 0x00	; 0

00000958 <.Loc.66>:
     958:	20 64       	ori	r18, 0x40	; 64
     95a:	dc 01       	movw	r26, r24
     95c:	2c 93       	st	X, r18

0000095e <.Loc.67>:
            PORT &= ~(1 << PIN12);
     95e:	82 e2       	ldi	r24, 0x22	; 34
     960:	90 e0       	ldi	r25, 0x00	; 0
     962:	fc 01       	movw	r30, r24
     964:	20 81       	ld	r18, Z

00000966 <.Loc.68>:
     966:	82 e2       	ldi	r24, 0x22	; 34
     968:	90 e0       	ldi	r25, 0x00	; 0

0000096a <.Loc.69>:
     96a:	2f 7d       	andi	r18, 0xDF	; 223
     96c:	dc 01       	movw	r26, r24
     96e:	2c 93       	st	X, r18

00000970 <.Loc.70>:
            PORT &= ~(1 << PIN21);
     970:	82 e2       	ldi	r24, 0x22	; 34
     972:	90 e0       	ldi	r25, 0x00	; 0
     974:	fc 01       	movw	r30, r24
     976:	20 81       	ld	r18, Z

00000978 <.Loc.71>:
     978:	82 e2       	ldi	r24, 0x22	; 34
     97a:	90 e0       	ldi	r25, 0x00	; 0

0000097c <.Loc.72>:
     97c:	2f 7e       	andi	r18, 0xEF	; 239
     97e:	dc 01       	movw	r26, r24
     980:	2c 93       	st	X, r18

00000982 <.Loc.73>:
            PORT |= (1 << PIN22);
     982:	82 e2       	ldi	r24, 0x22	; 34
     984:	90 e0       	ldi	r25, 0x00	; 0
     986:	fc 01       	movw	r30, r24
     988:	20 81       	ld	r18, Z
     98a:	82 e2       	ldi	r24, 0x22	; 34
     98c:	90 e0       	ldi	r25, 0x00	; 0

0000098e <.Loc.74>:
     98e:	28 60       	ori	r18, 0x08	; 8
     990:	dc 01       	movw	r26, r24
     992:	2c 93       	st	X, r18

00000994 <.Loc.75>:
            if(((IRregister & (1 << IRonderrechts)) == 0) && ((IRregister & (1 << IRonderlinks)) == 0))
     994:	83 e2       	ldi	r24, 0x23	; 35
     996:	90 e0       	ldi	r25, 0x00	; 0
     998:	fc 01       	movw	r30, r24
     99a:	80 81       	ld	r24, Z

0000099c <.Loc.76>:
     99c:	88 23       	and	r24, r24
     99e:	0c f4       	brge	.+2      	; 0x9a2 <.Loc.77>

000009a0 <L0^A>:
     9a0:	83 c1       	rjmp	.+774    	; 0xca8 <.L49>

000009a2 <.Loc.77>:
     9a2:	83 e2       	ldi	r24, 0x23	; 35
     9a4:	90 e0       	ldi	r25, 0x00	; 0
     9a6:	dc 01       	movw	r26, r24
     9a8:	8c 91       	ld	r24, X

000009aa <.Loc.78>:
     9aa:	88 2f       	mov	r24, r24
     9ac:	90 e0       	ldi	r25, 0x00	; 0
     9ae:	80 74       	andi	r24, 0x40	; 64
     9b0:	99 27       	eor	r25, r25

000009b2 <.Loc.79>:
     9b2:	00 97       	sbiw	r24, 0x00	; 0
     9b4:	09 f0       	breq	.+2      	; 0x9b8 <.Loc.80>

000009b6 <L0^A>:
     9b6:	78 c1       	rjmp	.+752    	; 0xca8 <.L49>

000009b8 <.Loc.80>:
            {
                toestand = 4;
     9b8:	84 e0       	ldi	r24, 0x04	; 4
     9ba:	90 e0       	ldi	r25, 0x00	; 0
     9bc:	9a 83       	std	Y+2, r25	; 0x02
     9be:	89 83       	std	Y+1, r24	; 0x01

000009c0 <.Loc.81>:

            }
            break;
     9c0:	73 c1       	rjmp	.+742    	; 0xca8 <.L49>

000009c2 <.L11>:
        case 4://Tussen de balken rechtdoor
            //Motoren naar rechtdoor
            PORT |= (1 << PIN11);
     9c2:	82 e2       	ldi	r24, 0x22	; 34
     9c4:	90 e0       	ldi	r25, 0x00	; 0
     9c6:	fc 01       	movw	r30, r24
     9c8:	20 81       	ld	r18, Z
     9ca:	82 e2       	ldi	r24, 0x22	; 34
     9cc:	90 e0       	ldi	r25, 0x00	; 0

000009ce <.Loc.83>:
     9ce:	20 64       	ori	r18, 0x40	; 64
     9d0:	dc 01       	movw	r26, r24
     9d2:	2c 93       	st	X, r18

000009d4 <.Loc.84>:
            PORT &= ~(1 << PIN12) ;
     9d4:	82 e2       	ldi	r24, 0x22	; 34
     9d6:	90 e0       	ldi	r25, 0x00	; 0
     9d8:	fc 01       	movw	r30, r24
     9da:	20 81       	ld	r18, Z

000009dc <.Loc.85>:
     9dc:	82 e2       	ldi	r24, 0x22	; 34
     9de:	90 e0       	ldi	r25, 0x00	; 0

000009e0 <.Loc.86>:
     9e0:	2f 7d       	andi	r18, 0xDF	; 223
     9e2:	dc 01       	movw	r26, r24
     9e4:	2c 93       	st	X, r18

000009e6 <.Loc.87>:
            PORT &= ~(1 << PIN21);
     9e6:	82 e2       	ldi	r24, 0x22	; 34
     9e8:	90 e0       	ldi	r25, 0x00	; 0
     9ea:	fc 01       	movw	r30, r24
     9ec:	20 81       	ld	r18, Z

000009ee <.Loc.88>:
     9ee:	82 e2       	ldi	r24, 0x22	; 34
     9f0:	90 e0       	ldi	r25, 0x00	; 0

000009f2 <.Loc.89>:
     9f2:	2f 7e       	andi	r18, 0xEF	; 239
     9f4:	dc 01       	movw	r26, r24
     9f6:	2c 93       	st	X, r18

000009f8 <.Loc.90>:
            PORT |= (1 << PIN22);
     9f8:	82 e2       	ldi	r24, 0x22	; 34
     9fa:	90 e0       	ldi	r25, 0x00	; 0
     9fc:	fc 01       	movw	r30, r24
     9fe:	20 81       	ld	r18, Z
     a00:	82 e2       	ldi	r24, 0x22	; 34
     a02:	90 e0       	ldi	r25, 0x00	; 0

00000a04 <.Loc.91>:
     a04:	28 60       	ori	r18, 0x08	; 8
     a06:	dc 01       	movw	r26, r24
     a08:	2c 93       	st	X, r18

00000a0a <.Loc.92>:
            h_bridgeR_set_percentage(snelheidrechtdoor);
     a0a:	84 e1       	ldi	r24, 0x14	; 20
     a0c:	0e 94 62 02 	call	0x4c4	; 0x4c4 <h_bridgeR_set_percentage>

00000a10 <.Loc.93>:
            h_bridgeL_set_percentage(snelheidrechtdoor);
     a10:	84 e1       	ldi	r24, 0x14	; 20
     a12:	0e 94 a1 02 	call	0x542	; 0x542 <h_bridgeL_set_percentage>

00000a16 <.Loc.94>:
            if(IRregister & (1 << IRonderrechts))
     a16:	83 e2       	ldi	r24, 0x23	; 35
     a18:	90 e0       	ldi	r25, 0x00	; 0
     a1a:	fc 01       	movw	r30, r24
     a1c:	80 81       	ld	r24, Z

00000a1e <.Loc.95>:
     a1e:	88 23       	and	r24, r24
     a20:	2c f4       	brge	.+10     	; 0xa2c <.L23>

00000a22 <.Loc.96>:
            {
                toestand = 5;
     a22:	85 e0       	ldi	r24, 0x05	; 5
     a24:	90 e0       	ldi	r25, 0x00	; 0
     a26:	9a 83       	std	Y+2, r25	; 0x02
     a28:	89 83       	std	Y+1, r24	; 0x01

00000a2a <.Loc.97>:
            }
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
            {
                toestand = 7;
            }
            break;
     a2a:	40 c1       	rjmp	.+640    	; 0xcac <.L50>

00000a2c <.L23>:
            else if(IRregister & (1 << IRonderlinks))
     a2c:	83 e2       	ldi	r24, 0x23	; 35
     a2e:	90 e0       	ldi	r25, 0x00	; 0
     a30:	dc 01       	movw	r26, r24
     a32:	8c 91       	ld	r24, X

00000a34 <.Loc.99>:
     a34:	88 2f       	mov	r24, r24
     a36:	90 e0       	ldi	r25, 0x00	; 0
     a38:	80 74       	andi	r24, 0x40	; 64
     a3a:	99 27       	eor	r25, r25

00000a3c <.Loc.100>:
     a3c:	00 97       	sbiw	r24, 0x00	; 0
     a3e:	29 f0       	breq	.+10     	; 0xa4a <.L25>

00000a40 <.Loc.101>:
                toestand = 6;
     a40:	86 e0       	ldi	r24, 0x06	; 6
     a42:	90 e0       	ldi	r25, 0x00	; 0
     a44:	9a 83       	std	Y+2, r25	; 0x02
     a46:	89 83       	std	Y+1, r24	; 0x01

00000a48 <.Loc.102>:
            break;
     a48:	31 c1       	rjmp	.+610    	; 0xcac <.L50>

00000a4a <.L25>:
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
     a4a:	83 e2       	ldi	r24, 0x23	; 35
     a4c:	90 e0       	ldi	r25, 0x00	; 0
     a4e:	fc 01       	movw	r30, r24
     a50:	80 81       	ld	r24, Z

00000a52 <.Loc.104>:
     a52:	88 23       	and	r24, r24
     a54:	0c f0       	brlt	.+2      	; 0xa58 <.Loc.105>

00000a56 <L0^A>:
     a56:	2a c1       	rjmp	.+596    	; 0xcac <.L50>

00000a58 <.Loc.105>:
     a58:	83 e2       	ldi	r24, 0x23	; 35
     a5a:	90 e0       	ldi	r25, 0x00	; 0
     a5c:	dc 01       	movw	r26, r24
     a5e:	8c 91       	ld	r24, X

00000a60 <.Loc.106>:
     a60:	88 2f       	mov	r24, r24
     a62:	90 e0       	ldi	r25, 0x00	; 0
     a64:	80 74       	andi	r24, 0x40	; 64
     a66:	99 27       	eor	r25, r25

00000a68 <.Loc.107>:
     a68:	00 97       	sbiw	r24, 0x00	; 0
     a6a:	09 f4       	brne	.+2      	; 0xa6e <.Loc.108>

00000a6c <L0^A>:
     a6c:	1f c1       	rjmp	.+574    	; 0xcac <.L50>

00000a6e <.Loc.108>:
                toestand = 7;
     a6e:	87 e0       	ldi	r24, 0x07	; 7
     a70:	90 e0       	ldi	r25, 0x00	; 0
     a72:	9a 83       	std	Y+2, r25	; 0x02
     a74:	89 83       	std	Y+1, r24	; 0x01

00000a76 <.Loc.109>:
            break;
     a76:	1a c1       	rjmp	.+564    	; 0xcac <.L50>

00000a78 <.L10>:
        case 5://Naar links rijden
            //Motoren naar links
            h_bridgeR_set_percentage(snelheidhard);
     a78:	8d e2       	ldi	r24, 0x2D	; 45
     a7a:	0e 94 62 02 	call	0x4c4	; 0x4c4 <h_bridgeR_set_percentage>

00000a7e <.Loc.111>:
            h_bridgeL_set_percentage(snelheidzacht);
     a7e:	87 e3       	ldi	r24, 0x37	; 55
     a80:	0e 94 a1 02 	call	0x542	; 0x542 <h_bridgeL_set_percentage>

00000a84 <.Loc.112>:
            if(((IRregister & (1 << IRonderrechts)) == 0) && ((IRregister & (1 << IRonderlinks)) == 0))
     a84:	83 e2       	ldi	r24, 0x23	; 35
     a86:	90 e0       	ldi	r25, 0x00	; 0
     a88:	fc 01       	movw	r30, r24
     a8a:	80 81       	ld	r24, Z

00000a8c <.Loc.113>:
     a8c:	88 23       	and	r24, r24
     a8e:	7c f0       	brlt	.+30     	; 0xaae <.L26>

00000a90 <.Loc.114>:
     a90:	83 e2       	ldi	r24, 0x23	; 35
     a92:	90 e0       	ldi	r25, 0x00	; 0
     a94:	dc 01       	movw	r26, r24
     a96:	8c 91       	ld	r24, X

00000a98 <.Loc.115>:
     a98:	88 2f       	mov	r24, r24
     a9a:	90 e0       	ldi	r25, 0x00	; 0
     a9c:	80 74       	andi	r24, 0x40	; 64
     a9e:	99 27       	eor	r25, r25

00000aa0 <.Loc.116>:
     aa0:	00 97       	sbiw	r24, 0x00	; 0
     aa2:	29 f4       	brne	.+10     	; 0xaae <.L26>

00000aa4 <.Loc.117>:
            {
                toestand = 4;
     aa4:	84 e0       	ldi	r24, 0x04	; 4
     aa6:	90 e0       	ldi	r25, 0x00	; 0
     aa8:	9a 83       	std	Y+2, r25	; 0x02
     aaa:	89 83       	std	Y+1, r24	; 0x01

00000aac <.Loc.118>:
            }
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
            {
                toestand = 7;
            }
            break;
     aac:	01 c1       	rjmp	.+514    	; 0xcb0 <.L51>

00000aae <.L26>:
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
     aae:	83 e2       	ldi	r24, 0x23	; 35
     ab0:	90 e0       	ldi	r25, 0x00	; 0
     ab2:	fc 01       	movw	r30, r24
     ab4:	80 81       	ld	r24, Z

00000ab6 <.Loc.120>:
     ab6:	88 23       	and	r24, r24
     ab8:	0c f0       	brlt	.+2      	; 0xabc <.Loc.121>

00000aba <L0^A>:
     aba:	fa c0       	rjmp	.+500    	; 0xcb0 <.L51>

00000abc <.Loc.121>:
     abc:	83 e2       	ldi	r24, 0x23	; 35
     abe:	90 e0       	ldi	r25, 0x00	; 0
     ac0:	dc 01       	movw	r26, r24
     ac2:	8c 91       	ld	r24, X

00000ac4 <.Loc.122>:
     ac4:	88 2f       	mov	r24, r24
     ac6:	90 e0       	ldi	r25, 0x00	; 0
     ac8:	80 74       	andi	r24, 0x40	; 64
     aca:	99 27       	eor	r25, r25

00000acc <.Loc.123>:
     acc:	00 97       	sbiw	r24, 0x00	; 0
     ace:	09 f4       	brne	.+2      	; 0xad2 <.Loc.124>

00000ad0 <L0^A>:
     ad0:	ef c0       	rjmp	.+478    	; 0xcb0 <.L51>

00000ad2 <.Loc.124>:
                toestand = 7;
     ad2:	87 e0       	ldi	r24, 0x07	; 7
     ad4:	90 e0       	ldi	r25, 0x00	; 0
     ad6:	9a 83       	std	Y+2, r25	; 0x02
     ad8:	89 83       	std	Y+1, r24	; 0x01

00000ada <.Loc.125>:
            break;
     ada:	ea c0       	rjmp	.+468    	; 0xcb0 <.L51>

00000adc <.L9>:
        case 6://Naar rechts rijden
            //Motoren naar rechts
            h_bridgeR_set_percentage(snelheidzacht);
     adc:	87 e3       	ldi	r24, 0x37	; 55
     ade:	0e 94 62 02 	call	0x4c4	; 0x4c4 <h_bridgeR_set_percentage>

00000ae2 <.Loc.127>:
            h_bridgeL_set_percentage(snelheidhard);
     ae2:	8d e2       	ldi	r24, 0x2D	; 45
     ae4:	0e 94 a1 02 	call	0x542	; 0x542 <h_bridgeL_set_percentage>

00000ae8 <.Loc.128>:
            if(((IRregister & (1 << IRonderrechts)) == 0) && ((IRregister & (1 << IRonderlinks)) == 0))
     ae8:	83 e2       	ldi	r24, 0x23	; 35
     aea:	90 e0       	ldi	r25, 0x00	; 0
     aec:	fc 01       	movw	r30, r24
     aee:	80 81       	ld	r24, Z

00000af0 <.Loc.129>:
     af0:	88 23       	and	r24, r24
     af2:	7c f0       	brlt	.+30     	; 0xb12 <.L28>

00000af4 <.Loc.130>:
     af4:	83 e2       	ldi	r24, 0x23	; 35
     af6:	90 e0       	ldi	r25, 0x00	; 0
     af8:	dc 01       	movw	r26, r24
     afa:	8c 91       	ld	r24, X

00000afc <.Loc.131>:
     afc:	88 2f       	mov	r24, r24
     afe:	90 e0       	ldi	r25, 0x00	; 0
     b00:	80 74       	andi	r24, 0x40	; 64
     b02:	99 27       	eor	r25, r25

00000b04 <.Loc.132>:
     b04:	00 97       	sbiw	r24, 0x00	; 0
     b06:	29 f4       	brne	.+10     	; 0xb12 <.L28>

00000b08 <.Loc.133>:
            {
                toestand = 4;
     b08:	84 e0       	ldi	r24, 0x04	; 4
     b0a:	90 e0       	ldi	r25, 0x00	; 0
     b0c:	9a 83       	std	Y+2, r25	; 0x02
     b0e:	89 83       	std	Y+1, r24	; 0x01

00000b10 <.Loc.134>:
            }
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
            {
                toestand = 7;
            }
            break;
     b10:	d1 c0       	rjmp	.+418    	; 0xcb4 <.L52>

00000b12 <.L28>:
            else if((IRregister & (1 << IRonderrechts)) && (IRregister & (1 << IRonderlinks)))
     b12:	83 e2       	ldi	r24, 0x23	; 35
     b14:	90 e0       	ldi	r25, 0x00	; 0
     b16:	fc 01       	movw	r30, r24
     b18:	80 81       	ld	r24, Z

00000b1a <.Loc.136>:
     b1a:	88 23       	and	r24, r24
     b1c:	0c f0       	brlt	.+2      	; 0xb20 <.Loc.137>

00000b1e <L0^A>:
     b1e:	ca c0       	rjmp	.+404    	; 0xcb4 <.L52>

00000b20 <.Loc.137>:
     b20:	83 e2       	ldi	r24, 0x23	; 35
     b22:	90 e0       	ldi	r25, 0x00	; 0
     b24:	dc 01       	movw	r26, r24
     b26:	8c 91       	ld	r24, X

00000b28 <.Loc.138>:
     b28:	88 2f       	mov	r24, r24
     b2a:	90 e0       	ldi	r25, 0x00	; 0
     b2c:	80 74       	andi	r24, 0x40	; 64
     b2e:	99 27       	eor	r25, r25

00000b30 <.Loc.139>:
     b30:	00 97       	sbiw	r24, 0x00	; 0
     b32:	09 f4       	brne	.+2      	; 0xb36 <.Loc.140>

00000b34 <L0^A>:
     b34:	bf c0       	rjmp	.+382    	; 0xcb4 <.L52>

00000b36 <.Loc.140>:
                toestand = 7;
     b36:	87 e0       	ldi	r24, 0x07	; 7
     b38:	90 e0       	ldi	r25, 0x00	; 0
     b3a:	9a 83       	std	Y+2, r25	; 0x02
     b3c:	89 83       	std	Y+1, r24	; 0x01

00000b3e <.Loc.141>:
            break;
     b3e:	ba c0       	rjmp	.+372    	; 0xcb4 <.L52>

00000b40 <.L8>:
     b40:	80 e0       	ldi	r24, 0x00	; 0
     b42:	90 e0       	ldi	r25, 0x00	; 0
     b44:	aa ef       	ldi	r26, 0xFA	; 250
     b46:	b4 e4       	ldi	r27, 0x44	; 68
     b48:	8b 83       	std	Y+3, r24	; 0x03
     b4a:	9c 83       	std	Y+4, r25	; 0x04
     b4c:	ad 83       	std	Y+5, r26	; 0x05
     b4e:	be 83       	std	Y+6, r27	; 0x06

00000b50 <.LBB12>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     b50:	20 e0       	ldi	r18, 0x00	; 0
     b52:	30 e0       	ldi	r19, 0x00	; 0
     b54:	4a e7       	ldi	r20, 0x7A	; 122
     b56:	55 e4       	ldi	r21, 0x45	; 69
     b58:	6b 81       	ldd	r22, Y+3	; 0x03
     b5a:	7c 81       	ldd	r23, Y+4	; 0x04
     b5c:	8d 81       	ldd	r24, Y+5	; 0x05
     b5e:	9e 81       	ldd	r25, Y+6	; 0x06
     b60:	0e 94 06 08 	call	0x100c	; 0x100c <__mulsf3>
     b64:	6d 8b       	std	Y+21, r22	; 0x15
     b66:	7e 8b       	std	Y+22, r23	; 0x16
     b68:	8f 8b       	std	Y+23, r24	; 0x17
     b6a:	98 8f       	std	Y+24, r25	; 0x18
     b6c:	8d 89       	ldd	r24, Y+21	; 0x15
     b6e:	9e 89       	ldd	r25, Y+22	; 0x16
     b70:	af 89       	ldd	r26, Y+23	; 0x17
     b72:	b8 8d       	ldd	r27, Y+24	; 0x18
     b74:	8f 83       	std	Y+7, r24	; 0x07
     b76:	98 87       	std	Y+8, r25	; 0x08
     b78:	a9 87       	std	Y+9, r26	; 0x09
     b7a:	ba 87       	std	Y+10, r27	; 0x0a

00000b7c <.Loc.143>:
	if (__tmp < 1.0)
     b7c:	20 e0       	ldi	r18, 0x00	; 0
     b7e:	30 e0       	ldi	r19, 0x00	; 0
     b80:	40 e8       	ldi	r20, 0x80	; 128
     b82:	5f e3       	ldi	r21, 0x3F	; 63
     b84:	6f 81       	ldd	r22, Y+7	; 0x07
     b86:	78 85       	ldd	r23, Y+8	; 0x08
     b88:	89 85       	ldd	r24, Y+9	; 0x09
     b8a:	9a 85       	ldd	r25, Y+10	; 0x0a
     b8c:	0e 94 80 07 	call	0xf00	; 0xf00 <__cmpsf2>
     b90:	88 23       	and	r24, r24
     b92:	2c f4       	brge	.+10     	; 0xb9e <.L42>

00000b94 <.Loc.144>:
		__ticks = 1;
     b94:	81 e0       	ldi	r24, 0x01	; 1
     b96:	90 e0       	ldi	r25, 0x00	; 0
     b98:	9c 87       	std	Y+12, r25	; 0x0c
     b9a:	8b 87       	std	Y+11, r24	; 0x0b
     b9c:	55 c0       	rjmp	.+170    	; 0xc48 <.L32>

00000b9e <.L42>:
	else if (__tmp > 65535)
     b9e:	20 e0       	ldi	r18, 0x00	; 0
     ba0:	3f ef       	ldi	r19, 0xFF	; 255
     ba2:	4f e7       	ldi	r20, 0x7F	; 127
     ba4:	57 e4       	ldi	r21, 0x47	; 71
     ba6:	6f 81       	ldd	r22, Y+7	; 0x07
     ba8:	78 85       	ldd	r23, Y+8	; 0x08
     baa:	89 85       	ldd	r24, Y+9	; 0x09
     bac:	9a 85       	ldd	r25, Y+10	; 0x0a
     bae:	0e 94 01 08 	call	0x1002	; 0x1002 <__gesf2>
     bb2:	88 23       	and	r24, r24
     bb4:	d9 f1       	breq	.+118    	; 0xc2c <.L43>
     bb6:	d4 f1       	brlt	.+116    	; 0xc2c <.L43>

00000bb8 <.Loc.146>:
		__ticks = (uint16_t) (__ms * 10.0);
     bb8:	20 e0       	ldi	r18, 0x00	; 0
     bba:	30 e0       	ldi	r19, 0x00	; 0
     bbc:	40 e2       	ldi	r20, 0x20	; 32
     bbe:	51 e4       	ldi	r21, 0x41	; 65
     bc0:	6b 81       	ldd	r22, Y+3	; 0x03
     bc2:	7c 81       	ldd	r23, Y+4	; 0x04
     bc4:	8d 81       	ldd	r24, Y+5	; 0x05
     bc6:	9e 81       	ldd	r25, Y+6	; 0x06
     bc8:	0e 94 06 08 	call	0x100c	; 0x100c <__mulsf3>
     bcc:	69 8f       	std	Y+25, r22	; 0x19
     bce:	7a 8f       	std	Y+26, r23	; 0x1a
     bd0:	8b 8f       	std	Y+27, r24	; 0x1b
     bd2:	9c 8f       	std	Y+28, r25	; 0x1c
     bd4:	89 8d       	ldd	r24, Y+25	; 0x19
     bd6:	9a 8d       	ldd	r25, Y+26	; 0x1a
     bd8:	ab 8d       	ldd	r26, Y+27	; 0x1b
     bda:	bc 8d       	ldd	r27, Y+28	; 0x1c
     bdc:	89 8b       	std	Y+17, r24	; 0x11
     bde:	9a 8b       	std	Y+18, r25	; 0x12
     be0:	ab 8b       	std	Y+19, r26	; 0x13
     be2:	bc 8b       	std	Y+20, r27	; 0x14

00000be4 <.Loc.147>:
     be4:	69 89       	ldd	r22, Y+17	; 0x11
     be6:	7a 89       	ldd	r23, Y+18	; 0x12
     be8:	8b 89       	ldd	r24, Y+19	; 0x13
     bea:	9c 89       	ldd	r25, Y+20	; 0x14
     bec:	0e 94 85 07 	call	0xf0a	; 0xf0a <__fixunssfsi>
     bf0:	6d 8f       	std	Y+29, r22	; 0x1d
     bf2:	7e 8f       	std	Y+30, r23	; 0x1e
     bf4:	8f 8f       	std	Y+31, r24	; 0x1f
     bf6:	98 a3       	std	Y+32, r25	; 0x20
     bf8:	ad 8d       	ldd	r26, Y+29	; 0x1d
     bfa:	be 8d       	ldd	r27, Y+30	; 0x1e
     bfc:	bc 87       	std	Y+12, r27	; 0x0c
     bfe:	ab 87       	std	Y+11, r26	; 0x0b

00000c00 <.Loc.148>:
		while(__ticks)
     c00:	10 c0       	rjmp	.+32     	; 0xc22 <.L35>

00000c02 <.L36>:
     c02:	80 e9       	ldi	r24, 0x90	; 144
     c04:	91 e0       	ldi	r25, 0x01	; 1
     c06:	9e 87       	std	Y+14, r25	; 0x0e
     c08:	8d 87       	std	Y+13, r24	; 0x0d

00000c0a <.LBB14>:
     c0a:	8d 85       	ldd	r24, Y+13	; 0x0d
     c0c:	9e 85       	ldd	r25, Y+14	; 0x0e

00000c0e <.L1^B1>:
     c0e:	01 97       	sbiw	r24, 0x01	; 1
     c10:	f1 f7       	brne	.-4      	; 0xc0e <.L1^B1>
     c12:	9e 87       	std	Y+14, r25	; 0x0e
     c14:	8d 87       	std	Y+13, r24	; 0x0d

00000c16 <.Loc.150>:
	...

00000c18 <.LBE14>:
			__ticks --;
     c18:	8b 85       	ldd	r24, Y+11	; 0x0b
     c1a:	9c 85       	ldd	r25, Y+12	; 0x0c
     c1c:	01 97       	sbiw	r24, 0x01	; 1
     c1e:	9c 87       	std	Y+12, r25	; 0x0c
     c20:	8b 87       	std	Y+11, r24	; 0x0b

00000c22 <.L35>:
		while(__ticks)
     c22:	8b 85       	ldd	r24, Y+11	; 0x0b
     c24:	9c 85       	ldd	r25, Y+12	; 0x0c
     c26:	00 97       	sbiw	r24, 0x00	; 0
     c28:	61 f7       	brne	.-40     	; 0xc02 <.L36>

00000c2a <.Loc.153>:
		return;
     c2a:	19 c0       	rjmp	.+50     	; 0xc5e <.L37>

00000c2c <.L43>:
		__ticks = (uint16_t)__tmp;
     c2c:	6f 81       	ldd	r22, Y+7	; 0x07
     c2e:	78 85       	ldd	r23, Y+8	; 0x08
     c30:	89 85       	ldd	r24, Y+9	; 0x09
     c32:	9a 85       	ldd	r25, Y+10	; 0x0a
     c34:	0e 94 85 07 	call	0xf0a	; 0xf0a <__fixunssfsi>
     c38:	69 a3       	std	Y+33, r22	; 0x21
     c3a:	7a a3       	std	Y+34, r23	; 0x22
     c3c:	8b a3       	std	Y+35, r24	; 0x23
     c3e:	9c a3       	std	Y+36, r25	; 0x24
     c40:	e9 a1       	ldd	r30, Y+33	; 0x21
     c42:	fa a1       	ldd	r31, Y+34	; 0x22
     c44:	fc 87       	std	Y+12, r31	; 0x0c
     c46:	eb 87       	std	Y+11, r30	; 0x0b

00000c48 <.L32>:
     c48:	8b 85       	ldd	r24, Y+11	; 0x0b
     c4a:	9c 85       	ldd	r25, Y+12	; 0x0c
     c4c:	98 8b       	std	Y+16, r25	; 0x10
     c4e:	8f 87       	std	Y+15, r24	; 0x0f

00000c50 <.LBB16>:
     c50:	8f 85       	ldd	r24, Y+15	; 0x0f
     c52:	98 89       	ldd	r25, Y+16	; 0x10

00000c54 <.L1^B2>:
     c54:	01 97       	sbiw	r24, 0x01	; 1
     c56:	f1 f7       	brne	.-4      	; 0xc54 <.L1^B2>
     c58:	98 8b       	std	Y+16, r25	; 0x10
     c5a:	8f 87       	std	Y+15, r24	; 0x0f

00000c5c <.Loc.156>:
	...

00000c5e <.L37>:
        case 7://Balken niet meer in zicht
            _delay_ms(2000);
            h_bridgeR_set_percentage(snelheidhard);
     c5e:	8d e2       	ldi	r24, 0x2D	; 45
     c60:	0e 94 62 02 	call	0x4c4	; 0x4c4 <h_bridgeR_set_percentage>

00000c64 <.Loc.158>:
            h_bridgeL_set_percentage(snelheidzacht);
     c64:	87 e3       	ldi	r24, 0x37	; 55
     c66:	0e 94 a1 02 	call	0x542	; 0x542 <h_bridgeL_set_percentage>

00000c6a <.Loc.159>:
            if(((IRregister & (1 << IRonderlinks)) == 0) && ((IRregister & (1 << IRonderrechts)) == 0))
     c6a:	83 e2       	ldi	r24, 0x23	; 35
     c6c:	90 e0       	ldi	r25, 0x00	; 0
     c6e:	dc 01       	movw	r26, r24
     c70:	8c 91       	ld	r24, X

00000c72 <.Loc.160>:
     c72:	88 2f       	mov	r24, r24
     c74:	90 e0       	ldi	r25, 0x00	; 0
     c76:	80 74       	andi	r24, 0x40	; 64
     c78:	99 27       	eor	r25, r25

00000c7a <.Loc.161>:
     c7a:	00 97       	sbiw	r24, 0x00	; 0
     c7c:	e9 f4       	brne	.+58     	; 0xcb8 <.L53>

00000c7e <.Loc.162>:
     c7e:	83 e2       	ldi	r24, 0x23	; 35
     c80:	90 e0       	ldi	r25, 0x00	; 0
     c82:	fc 01       	movw	r30, r24
     c84:	80 81       	ld	r24, Z

00000c86 <.Loc.163>:
     c86:	88 23       	and	r24, r24
     c88:	bc f0       	brlt	.+46     	; 0xcb8 <.L53>

00000c8a <.Loc.164>:
            {
                toestand = 4;
     c8a:	84 e0       	ldi	r24, 0x04	; 4
     c8c:	90 e0       	ldi	r25, 0x00	; 0
     c8e:	9a 83       	std	Y+2, r25	; 0x02
     c90:	89 83       	std	Y+1, r24	; 0x01

00000c92 <.Loc.165>:
            }
            break;
     c92:	12 c0       	rjmp	.+36     	; 0xcb8 <.L53>

00000c94 <.L44>:
        case 8:

            break;
     c94:	00 00       	nop
     c96:	78 cd       	rjmp	.-1296   	; 0x788 <.L39>

00000c98 <.L45>:
            break;
     c98:	00 00       	nop
     c9a:	76 cd       	rjmp	.-1300   	; 0x788 <.L39>

00000c9c <.L46>:
            break;
     c9c:	00 00       	nop
     c9e:	74 cd       	rjmp	.-1304   	; 0x788 <.L39>

00000ca0 <.L47>:
            break;
     ca0:	00 00       	nop
     ca2:	72 cd       	rjmp	.-1308   	; 0x788 <.L39>

00000ca4 <.L48>:
            break;
     ca4:	00 00       	nop
     ca6:	70 cd       	rjmp	.-1312   	; 0x788 <.L39>

00000ca8 <.L49>:
            break;
     ca8:	00 00       	nop
     caa:	6e cd       	rjmp	.-1316   	; 0x788 <.L39>

00000cac <.L50>:
            break;
     cac:	00 00       	nop
     cae:	6c cd       	rjmp	.-1320   	; 0x788 <.L39>

00000cb0 <.L51>:
            break;
     cb0:	00 00       	nop
     cb2:	6a cd       	rjmp	.-1324   	; 0x788 <.L39>

00000cb4 <.L52>:
            break;
     cb4:	00 00       	nop
     cb6:	68 cd       	rjmp	.-1328   	; 0x788 <.L39>

00000cb8 <.L53>:
	...

00000cba <.Loc.176>:
        if(Bluetooth_Getal == 2)//Bluetooth verbroken
     cba:	66 cd       	rjmp	.-1332   	; 0x788 <.L39>

00000cbc <init>:

    return 0;
}

void init()
{
     cbc:	cf 93       	push	r28
     cbe:	df 93       	push	r29
     cc0:	cd b7       	in	r28, 0x3d	; 61
     cc2:	de b7       	in	r29, 0x3e	; 62

00000cc4 <.Loc.178>:
    initBluetooth();
     cc4:	0e 94 d5 00 	call	0x1aa	; 0x1aa <initBluetooth>

00000cc8 <.Loc.179>:
    sei();
     cc8:	78 94       	sei

00000cca <.Loc.180>:

    //timer PWM motorenR
    TCCR1B = (0 << CS12) | (0 << CS11) | (1 << CS10);
     cca:	81 e8       	ldi	r24, 0x81	; 129
     ccc:	90 e0       	ldi	r25, 0x00	; 0

00000cce <.Loc.181>:
     cce:	21 e0       	ldi	r18, 0x01	; 1
     cd0:	fc 01       	movw	r30, r24
     cd2:	20 83       	st	Z, r18

00000cd4 <.Loc.182>:
    TIMSK1 = (1 << OCIE1A) | (1 << TOIE1);
     cd4:	8f e6       	ldi	r24, 0x6F	; 111
     cd6:	90 e0       	ldi	r25, 0x00	; 0

00000cd8 <.Loc.183>:
     cd8:	23 e0       	ldi	r18, 0x03	; 3
     cda:	fc 01       	movw	r30, r24
     cdc:	20 83       	st	Z, r18

00000cde <.Loc.184>:

    OCR1A = 0;
     cde:	88 e8       	ldi	r24, 0x88	; 136
     ce0:	90 e0       	ldi	r25, 0x00	; 0

00000ce2 <.Loc.185>:
     ce2:	fc 01       	movw	r30, r24
     ce4:	11 82       	std	Z+1, r1	; 0x01
     ce6:	10 82       	st	Z, r1

00000ce8 <.Loc.186>:
    //timer PWM motorenL
    TCCR3B = (0 << CS32) | (0 << CS31) | (1 << CS30);
     ce8:	81 e9       	ldi	r24, 0x91	; 145
     cea:	90 e0       	ldi	r25, 0x00	; 0

00000cec <.Loc.187>:
     cec:	21 e0       	ldi	r18, 0x01	; 1
     cee:	fc 01       	movw	r30, r24
     cf0:	20 83       	st	Z, r18

00000cf2 <.Loc.188>:
    TIMSK3 = (1 << OCIE3A) | (1 << TOIE3);
     cf2:	81 e7       	ldi	r24, 0x71	; 113
     cf4:	90 e0       	ldi	r25, 0x00	; 0

00000cf6 <.Loc.189>:
     cf6:	23 e0       	ldi	r18, 0x03	; 3
     cf8:	fc 01       	movw	r30, r24
     cfa:	20 83       	st	Z, r18

00000cfc <.Loc.190>:

    OCR3A = 0;
     cfc:	88 e9       	ldi	r24, 0x98	; 152
     cfe:	90 e0       	ldi	r25, 0x00	; 0

00000d00 <.Loc.191>:
     d00:	fc 01       	movw	r30, r24
     d02:	11 82       	std	Z+1, r1	; 0x01
     d04:	10 82       	st	Z, r1

00000d06 <.Loc.192>:

    //timer buzzer
    TCCR0B = (1 << CS02) | (1 << CS00);
     d06:	85 e4       	ldi	r24, 0x45	; 69
     d08:	90 e0       	ldi	r25, 0x00	; 0

00000d0a <.Loc.193>:
     d0a:	25 e0       	ldi	r18, 0x05	; 5
     d0c:	fc 01       	movw	r30, r24
     d0e:	20 83       	st	Z, r18

00000d10 <.Loc.194>:
    TIMSK0 |= (1 << TOIE0);
     d10:	8e e6       	ldi	r24, 0x6E	; 110
     d12:	90 e0       	ldi	r25, 0x00	; 0
     d14:	fc 01       	movw	r30, r24
     d16:	20 81       	ld	r18, Z
     d18:	8e e6       	ldi	r24, 0x6E	; 110
     d1a:	90 e0       	ldi	r25, 0x00	; 0

00000d1c <.Loc.195>:
     d1c:	21 60       	ori	r18, 0x01	; 1
     d1e:	fc 01       	movw	r30, r24
     d20:	20 83       	st	Z, r18

00000d22 <.Loc.196>:

    //pinout h-brug
    DDR |= (1 << PEN1);
     d22:	81 e2       	ldi	r24, 0x21	; 33
     d24:	90 e0       	ldi	r25, 0x00	; 0
     d26:	fc 01       	movw	r30, r24
     d28:	20 81       	ld	r18, Z
     d2a:	81 e2       	ldi	r24, 0x21	; 33
     d2c:	90 e0       	ldi	r25, 0x00	; 0

00000d2e <.Loc.197>:
     d2e:	20 68       	ori	r18, 0x80	; 128
     d30:	fc 01       	movw	r30, r24
     d32:	20 83       	st	Z, r18

00000d34 <.Loc.198>:
    DDR |= (1 << PIN11);
     d34:	81 e2       	ldi	r24, 0x21	; 33
     d36:	90 e0       	ldi	r25, 0x00	; 0
     d38:	fc 01       	movw	r30, r24
     d3a:	20 81       	ld	r18, Z
     d3c:	81 e2       	ldi	r24, 0x21	; 33
     d3e:	90 e0       	ldi	r25, 0x00	; 0

00000d40 <.Loc.199>:
     d40:	20 64       	ori	r18, 0x40	; 64
     d42:	fc 01       	movw	r30, r24
     d44:	20 83       	st	Z, r18

00000d46 <.Loc.200>:
    DDR |= (1 << PIN12);
     d46:	81 e2       	ldi	r24, 0x21	; 33
     d48:	90 e0       	ldi	r25, 0x00	; 0
     d4a:	fc 01       	movw	r30, r24
     d4c:	20 81       	ld	r18, Z
     d4e:	81 e2       	ldi	r24, 0x21	; 33
     d50:	90 e0       	ldi	r25, 0x00	; 0

00000d52 <.Loc.201>:
     d52:	20 62       	ori	r18, 0x20	; 32
     d54:	fc 01       	movw	r30, r24
     d56:	20 83       	st	Z, r18

00000d58 <.Loc.202>:
    DDR |= (1 << PIN21);
     d58:	81 e2       	ldi	r24, 0x21	; 33
     d5a:	90 e0       	ldi	r25, 0x00	; 0
     d5c:	fc 01       	movw	r30, r24
     d5e:	20 81       	ld	r18, Z
     d60:	81 e2       	ldi	r24, 0x21	; 33
     d62:	90 e0       	ldi	r25, 0x00	; 0

00000d64 <.Loc.203>:
     d64:	20 61       	ori	r18, 0x10	; 16
     d66:	fc 01       	movw	r30, r24
     d68:	20 83       	st	Z, r18

00000d6a <.Loc.204>:
    DDR |= (1 << PIN22);
     d6a:	81 e2       	ldi	r24, 0x21	; 33
     d6c:	90 e0       	ldi	r25, 0x00	; 0
     d6e:	fc 01       	movw	r30, r24
     d70:	20 81       	ld	r18, Z
     d72:	81 e2       	ldi	r24, 0x21	; 33
     d74:	90 e0       	ldi	r25, 0x00	; 0

00000d76 <.Loc.205>:
     d76:	28 60       	ori	r18, 0x08	; 8
     d78:	fc 01       	movw	r30, r24
     d7a:	20 83       	st	Z, r18

00000d7c <.Loc.206>:
    DDR |= (1 << PEN2);
     d7c:	81 e2       	ldi	r24, 0x21	; 33
     d7e:	90 e0       	ldi	r25, 0x00	; 0
     d80:	fc 01       	movw	r30, r24
     d82:	20 81       	ld	r18, Z
     d84:	81 e2       	ldi	r24, 0x21	; 33
     d86:	90 e0       	ldi	r25, 0x00	; 0

00000d88 <.Loc.207>:
     d88:	24 60       	ori	r18, 0x04	; 4
     d8a:	fc 01       	movw	r30, r24
     d8c:	20 83       	st	Z, r18

00000d8e <.Loc.208>:

    //H-brug pinnen LOW
    PORT &= ~(1 << PEN1);
     d8e:	82 e2       	ldi	r24, 0x22	; 34
     d90:	90 e0       	ldi	r25, 0x00	; 0
     d92:	fc 01       	movw	r30, r24
     d94:	20 81       	ld	r18, Z

00000d96 <.Loc.209>:
     d96:	82 e2       	ldi	r24, 0x22	; 34
     d98:	90 e0       	ldi	r25, 0x00	; 0

00000d9a <.Loc.210>:
     d9a:	2f 77       	andi	r18, 0x7F	; 127
     d9c:	fc 01       	movw	r30, r24
     d9e:	20 83       	st	Z, r18

00000da0 <.Loc.211>:
	PORT &= ~(1 << PIN11);
     da0:	82 e2       	ldi	r24, 0x22	; 34
     da2:	90 e0       	ldi	r25, 0x00	; 0
     da4:	fc 01       	movw	r30, r24
     da6:	20 81       	ld	r18, Z

00000da8 <.Loc.212>:
     da8:	82 e2       	ldi	r24, 0x22	; 34
     daa:	90 e0       	ldi	r25, 0x00	; 0

00000dac <.Loc.213>:
     dac:	2f 7b       	andi	r18, 0xBF	; 191
     dae:	fc 01       	movw	r30, r24
     db0:	20 83       	st	Z, r18

00000db2 <.Loc.214>:
	PORT &= ~(1 << PIN12);
     db2:	82 e2       	ldi	r24, 0x22	; 34
     db4:	90 e0       	ldi	r25, 0x00	; 0
     db6:	fc 01       	movw	r30, r24
     db8:	20 81       	ld	r18, Z

00000dba <.Loc.215>:
     dba:	82 e2       	ldi	r24, 0x22	; 34
     dbc:	90 e0       	ldi	r25, 0x00	; 0

00000dbe <.Loc.216>:
     dbe:	2f 7d       	andi	r18, 0xDF	; 223
     dc0:	fc 01       	movw	r30, r24
     dc2:	20 83       	st	Z, r18

00000dc4 <.Loc.217>:
	PORT &= ~(1 << PIN21);
     dc4:	82 e2       	ldi	r24, 0x22	; 34
     dc6:	90 e0       	ldi	r25, 0x00	; 0
     dc8:	fc 01       	movw	r30, r24
     dca:	20 81       	ld	r18, Z

00000dcc <.Loc.218>:
     dcc:	82 e2       	ldi	r24, 0x22	; 34
     dce:	90 e0       	ldi	r25, 0x00	; 0

00000dd0 <.Loc.219>:
     dd0:	2f 7e       	andi	r18, 0xEF	; 239
     dd2:	fc 01       	movw	r30, r24
     dd4:	20 83       	st	Z, r18

00000dd6 <.Loc.220>:
	PORT &= ~(1 << PIN22);
     dd6:	82 e2       	ldi	r24, 0x22	; 34
     dd8:	90 e0       	ldi	r25, 0x00	; 0
     dda:	fc 01       	movw	r30, r24
     ddc:	20 81       	ld	r18, Z

00000dde <.Loc.221>:
     dde:	82 e2       	ldi	r24, 0x22	; 34
     de0:	90 e0       	ldi	r25, 0x00	; 0

00000de2 <.Loc.222>:
     de2:	27 7f       	andi	r18, 0xF7	; 247
     de4:	fc 01       	movw	r30, r24
     de6:	20 83       	st	Z, r18

00000de8 <.Loc.223>:
	PORT &= ~(1 << PEN2);
     de8:	82 e2       	ldi	r24, 0x22	; 34
     dea:	90 e0       	ldi	r25, 0x00	; 0
     dec:	fc 01       	movw	r30, r24
     dee:	20 81       	ld	r18, Z

00000df0 <.Loc.224>:
     df0:	82 e2       	ldi	r24, 0x22	; 34
     df2:	90 e0       	ldi	r25, 0x00	; 0

00000df4 <.Loc.225>:
     df4:	2b 7f       	andi	r18, 0xFB	; 251
     df6:	fc 01       	movw	r30, r24
     df8:	20 83       	st	Z, r18

00000dfa <.Loc.226>:

	//LEDS
    DDR_LED |= (1<<LED_1) | (1<<LED_2);     // enable pins as output
     dfa:	81 e0       	ldi	r24, 0x01	; 1
     dfc:	91 e0       	ldi	r25, 0x01	; 1
     dfe:	fc 01       	movw	r30, r24
     e00:	20 81       	ld	r18, Z
     e02:	81 e0       	ldi	r24, 0x01	; 1
     e04:	91 e0       	ldi	r25, 0x01	; 1

00000e06 <.Loc.227>:
     e06:	20 63       	ori	r18, 0x30	; 48
     e08:	fc 01       	movw	r30, r24
     e0a:	20 83       	st	Z, r18

00000e0c <.Loc.228>:
    PORT_LED &= ~(1<<LED_1) & ~(1<<LED_2);  // put pins low
     e0c:	82 e0       	ldi	r24, 0x02	; 2
     e0e:	91 e0       	ldi	r25, 0x01	; 1
     e10:	fc 01       	movw	r30, r24
     e12:	20 81       	ld	r18, Z

00000e14 <.Loc.229>:
     e14:	82 e0       	ldi	r24, 0x02	; 2
     e16:	91 e0       	ldi	r25, 0x01	; 1

00000e18 <.Loc.230>:
     e18:	2f 7c       	andi	r18, 0xCF	; 207
     e1a:	fc 01       	movw	r30, r24
     e1c:	20 83       	st	Z, r18

00000e1e <.Loc.231>:
    //Buzzer
    DDR_buzzer |= (1<<buzzer);              // enable pins as output
     e1e:	81 e0       	ldi	r24, 0x01	; 1
     e20:	91 e0       	ldi	r25, 0x01	; 1
     e22:	fc 01       	movw	r30, r24
     e24:	20 81       	ld	r18, Z
     e26:	81 e0       	ldi	r24, 0x01	; 1
     e28:	91 e0       	ldi	r25, 0x01	; 1

00000e2a <.Loc.232>:
     e2a:	28 60       	ori	r18, 0x08	; 8
     e2c:	fc 01       	movw	r30, r24
     e2e:	20 83       	st	Z, r18

00000e30 <.Loc.233>:
    PORT_buzzer &= ~(1<<buzzer);            // put pins low
     e30:	82 e0       	ldi	r24, 0x02	; 2
     e32:	91 e0       	ldi	r25, 0x01	; 1
     e34:	fc 01       	movw	r30, r24
     e36:	20 81       	ld	r18, Z

00000e38 <.Loc.234>:
     e38:	82 e0       	ldi	r24, 0x02	; 2
     e3a:	91 e0       	ldi	r25, 0x01	; 1

00000e3c <.Loc.235>:
     e3c:	27 7f       	andi	r18, 0xF7	; 247
     e3e:	fc 01       	movw	r30, r24
     e40:	20 83       	st	Z, r18

00000e42 <.Loc.236>:

    //knoppen
	DDRF &= ~(1<<Noodknoppin);
     e42:	80 e3       	ldi	r24, 0x30	; 48
     e44:	90 e0       	ldi	r25, 0x00	; 0
     e46:	fc 01       	movw	r30, r24
     e48:	20 81       	ld	r18, Z

00000e4a <.Loc.237>:
     e4a:	80 e3       	ldi	r24, 0x30	; 48
     e4c:	90 e0       	ldi	r25, 0x00	; 0

00000e4e <.Loc.238>:
     e4e:	2d 7f       	andi	r18, 0xFD	; 253
     e50:	fc 01       	movw	r30, r24
     e52:	20 83       	st	Z, r18

00000e54 <.Loc.239>:
	PORTF |= (1<<Noodknoppin);   		// enAble alle knoppen voor input
     e54:	81 e3       	ldi	r24, 0x31	; 49
     e56:	90 e0       	ldi	r25, 0x00	; 0
     e58:	fc 01       	movw	r30, r24
     e5a:	20 81       	ld	r18, Z
     e5c:	81 e3       	ldi	r24, 0x31	; 49
     e5e:	90 e0       	ldi	r25, 0x00	; 0

00000e60 <.Loc.240>:
     e60:	22 60       	ori	r18, 0x02	; 2
     e62:	fc 01       	movw	r30, r24
     e64:	20 83       	st	Z, r18

00000e66 <.Loc.241>:
}
     e66:	00 00       	nop
     e68:	df 91       	pop	r29
     e6a:	cf 91       	pop	r28
     e6c:	08 95       	ret

00000e6e <__divmodsi4>:
     e6e:	05 2e       	mov	r0, r21

00000e70 <.Loc.1>:
     e70:	97 fb       	bst	r25, 7

00000e72 <.Loc.2>:
     e72:	1e f4       	brtc	.+6      	; 0xe7a <.L^B1>

00000e74 <.Loc.3>:
     e74:	00 94       	com	r0

00000e76 <.Loc.4>:
     e76:	0e 94 4e 07 	call	0xe9c	; 0xe9c <__negsi2>

00000e7a <.L^B1>:
     e7a:	57 fd       	sbrc	r21, 7

00000e7c <.Loc.6>:
     e7c:	07 d0       	rcall	.+14     	; 0xe8c <__divmodsi4_neg2>

00000e7e <.Loc.7>:
     e7e:	0e 94 5e 07 	call	0xebc	; 0xebc <__udivmodsi4>

00000e82 <.Loc.8>:
     e82:	07 fc       	sbrc	r0, 7

00000e84 <.Loc.9>:
     e84:	03 d0       	rcall	.+6      	; 0xe8c <__divmodsi4_neg2>

00000e86 <.Loc.10>:
     e86:	4e f4       	brtc	.+18     	; 0xe9a <__divmodsi4_exit>

00000e88 <.Loc.11>:
     e88:	0c 94 4e 07 	jmp	0xe9c	; 0xe9c <__negsi2>

00000e8c <__divmodsi4_neg2>:
     e8c:	50 95       	com	r21

00000e8e <.Loc.13>:
     e8e:	40 95       	com	r20

00000e90 <.Loc.14>:
     e90:	30 95       	com	r19

00000e92 <.Loc.15>:
     e92:	21 95       	neg	r18

00000e94 <.Loc.16>:
     e94:	3f 4f       	sbci	r19, 0xFF	; 255

00000e96 <.Loc.17>:
     e96:	4f 4f       	sbci	r20, 0xFF	; 255

00000e98 <.Loc.18>:
     e98:	5f 4f       	sbci	r21, 0xFF	; 255

00000e9a <__divmodsi4_exit>:
     e9a:	08 95       	ret

00000e9c <__negsi2>:
     e9c:	90 95       	com	r25
     e9e:	80 95       	com	r24
     ea0:	70 95       	com	r23
     ea2:	61 95       	neg	r22
     ea4:	7f 4f       	sbci	r23, 0xFF	; 255
     ea6:	8f 4f       	sbci	r24, 0xFF	; 255
     ea8:	9f 4f       	sbci	r25, 0xFF	; 255

00000eaa <.Loc.1>:
     eaa:	08 95       	ret

00000eac <__tablejump2__>:
     eac:	ee 0f       	add	r30, r30

00000eae <.Loc.1>:
     eae:	ff 1f       	adc	r31, r31

00000eb0 <.Loc.2>:
     eb0:	88 1f       	adc	r24, r24

00000eb2 <.Loc.3>:
     eb2:	8b bf       	out	0x3b, r24	; 59

00000eb4 <.Loc.4>:
     eb4:	07 90       	elpm	r0, Z+

00000eb6 <.Loc.5>:
     eb6:	f6 91       	elpm	r31, Z

00000eb8 <.Loc.6>:
     eb8:	e0 2d       	mov	r30, r0

00000eba <.Loc.7>:
     eba:	19 94       	eijmp

00000ebc <__udivmodsi4>:
     ebc:	a1 e2       	ldi	r26, 0x21	; 33

00000ebe <.Loc.1>:
     ebe:	1a 2e       	mov	r1, r26

00000ec0 <.Loc.2>:
     ec0:	aa 1b       	sub	r26, r26

00000ec2 <.Loc.3>:
     ec2:	bb 1b       	sub	r27, r27

00000ec4 <.Loc.4>:
     ec4:	fd 01       	movw	r30, r26

00000ec6 <.Loc.5>:
     ec6:	0d c0       	rjmp	.+26     	; 0xee2 <__udivmodsi4_ep>

00000ec8 <__udivmodsi4_loop>:
     ec8:	aa 1f       	adc	r26, r26

00000eca <.Loc.7>:
     eca:	bb 1f       	adc	r27, r27

00000ecc <.Loc.8>:
     ecc:	ee 1f       	adc	r30, r30

00000ece <.Loc.9>:
     ece:	ff 1f       	adc	r31, r31

00000ed0 <.Loc.10>:
     ed0:	a2 17       	cp	r26, r18

00000ed2 <.Loc.11>:
     ed2:	b3 07       	cpc	r27, r19

00000ed4 <.Loc.12>:
     ed4:	e4 07       	cpc	r30, r20

00000ed6 <.Loc.13>:
     ed6:	f5 07       	cpc	r31, r21

00000ed8 <.Loc.14>:
     ed8:	20 f0       	brcs	.+8      	; 0xee2 <__udivmodsi4_ep>

00000eda <.Loc.15>:
     eda:	a2 1b       	sub	r26, r18

00000edc <.Loc.16>:
     edc:	b3 0b       	sbc	r27, r19

00000ede <.Loc.17>:
     ede:	e4 0b       	sbc	r30, r20

00000ee0 <.Loc.18>:
     ee0:	f5 0b       	sbc	r31, r21

00000ee2 <__udivmodsi4_ep>:
     ee2:	66 1f       	adc	r22, r22

00000ee4 <.Loc.20>:
     ee4:	77 1f       	adc	r23, r23

00000ee6 <.Loc.21>:
     ee6:	88 1f       	adc	r24, r24

00000ee8 <.Loc.22>:
     ee8:	99 1f       	adc	r25, r25

00000eea <.Loc.23>:
     eea:	1a 94       	dec	r1

00000eec <.Loc.24>:
     eec:	69 f7       	brne	.-38     	; 0xec8 <__udivmodsi4_loop>

00000eee <.Loc.25>:
     eee:	60 95       	com	r22

00000ef0 <.Loc.26>:
     ef0:	70 95       	com	r23

00000ef2 <.Loc.27>:
     ef2:	80 95       	com	r24

00000ef4 <.Loc.28>:
     ef4:	90 95       	com	r25

00000ef6 <.Loc.29>:
     ef6:	9b 01       	movw	r18, r22

00000ef8 <.Loc.30>:
     ef8:	ac 01       	movw	r20, r24

00000efa <.Loc.31>:
     efa:	bd 01       	movw	r22, r26

00000efc <.Loc.32>:
     efc:	cf 01       	movw	r24, r30

00000efe <.Loc.33>:
     efe:	08 95       	ret

00000f00 <__cmpsf2>:
     f00:	0e 94 b4 07 	call	0xf68	; 0xf68 <__fp_cmp>
     f04:	08 f4       	brcc	.+2      	; 0xf08 <.L1^B1>
     f06:	81 e0       	ldi	r24, 0x01	; 1

00000f08 <.L1^B1>:
     f08:	08 95       	ret

00000f0a <__fixunssfsi>:
     f0a:	0e 94 e0 07 	call	0xfc0	; 0xfc0 <__fp_splitA>
     f0e:	88 f0       	brcs	.+34     	; 0xf32 <.L_err>
     f10:	9f 57       	subi	r25, 0x7F	; 127
     f12:	98 f0       	brcs	.+38     	; 0xf3a <.L_zr>
     f14:	b9 2f       	mov	r27, r25
     f16:	99 27       	eor	r25, r25
     f18:	b7 51       	subi	r27, 0x17	; 23
     f1a:	b0 f0       	brcs	.+44     	; 0xf48 <.L4^B1>
     f1c:	e1 f0       	breq	.+56     	; 0xf56 <.L_sign>

00000f1e <.L1^B1>:
     f1e:	66 0f       	add	r22, r22
     f20:	77 1f       	adc	r23, r23
     f22:	88 1f       	adc	r24, r24
     f24:	99 1f       	adc	r25, r25
     f26:	1a f0       	brmi	.+6      	; 0xf2e <.L2^B1>
     f28:	ba 95       	dec	r27
     f2a:	c9 f7       	brne	.-14     	; 0xf1e <.L1^B1>
     f2c:	14 c0       	rjmp	.+40     	; 0xf56 <.L_sign>

00000f2e <.L2^B1>:
     f2e:	b1 30       	cpi	r27, 0x01	; 1
     f30:	91 f0       	breq	.+36     	; 0xf56 <.L_sign>

00000f32 <.L_err>:
     f32:	0e 94 fa 07 	call	0xff4	; 0xff4 <__fp_zero>
     f36:	b1 e0       	ldi	r27, 0x01	; 1
     f38:	08 95       	ret

00000f3a <.L_zr>:
     f3a:	0c 94 fa 07 	jmp	0xff4	; 0xff4 <__fp_zero>

00000f3e <.L3^B1>:
     f3e:	67 2f       	mov	r22, r23
     f40:	78 2f       	mov	r23, r24
     f42:	88 27       	eor	r24, r24
     f44:	b8 5f       	subi	r27, 0xF8	; 248
     f46:	39 f0       	breq	.+14     	; 0xf56 <.L_sign>

00000f48 <.L4^B1>:
     f48:	b9 3f       	cpi	r27, 0xF9	; 249
     f4a:	cc f3       	brlt	.-14     	; 0xf3e <.L3^B1>

00000f4c <.L5^B1>:
     f4c:	86 95       	lsr	r24
     f4e:	77 95       	ror	r23
     f50:	67 95       	ror	r22
     f52:	b3 95       	inc	r27
     f54:	d9 f7       	brne	.-10     	; 0xf4c <.L5^B1>

00000f56 <.L_sign>:
     f56:	3e f4       	brtc	.+14     	; 0xf66 <.L6^B1>
     f58:	90 95       	com	r25
     f5a:	80 95       	com	r24
     f5c:	70 95       	com	r23
     f5e:	61 95       	neg	r22
     f60:	7f 4f       	sbci	r23, 0xFF	; 255
     f62:	8f 4f       	sbci	r24, 0xFF	; 255
     f64:	9f 4f       	sbci	r25, 0xFF	; 255

00000f66 <.L6^B1>:
     f66:	08 95       	ret

00000f68 <__fp_cmp>:
     f68:	99 0f       	add	r25, r25
     f6a:	00 08       	sbc	r0, r0
     f6c:	55 0f       	add	r21, r21
     f6e:	aa 0b       	sbc	r26, r26
     f70:	e0 e8       	ldi	r30, 0x80	; 128
     f72:	fe ef       	ldi	r31, 0xFE	; 254
     f74:	16 16       	cp	r1, r22
     f76:	17 06       	cpc	r1, r23
     f78:	e8 07       	cpc	r30, r24
     f7a:	f9 07       	cpc	r31, r25
     f7c:	c0 f0       	brcs	.+48     	; 0xfae <.L9^B1>
     f7e:	12 16       	cp	r1, r18
     f80:	13 06       	cpc	r1, r19
     f82:	e4 07       	cpc	r30, r20
     f84:	f5 07       	cpc	r31, r21
     f86:	98 f0       	brcs	.+38     	; 0xfae <.L9^B1>
     f88:	62 1b       	sub	r22, r18
     f8a:	73 0b       	sbc	r23, r19
     f8c:	84 0b       	sbc	r24, r20
     f8e:	95 0b       	sbc	r25, r21
     f90:	39 f4       	brne	.+14     	; 0xfa0 <.L1^B1>
     f92:	0a 26       	eor	r0, r26
     f94:	61 f0       	breq	.+24     	; 0xfae <.L9^B1>
     f96:	23 2b       	or	r18, r19
     f98:	24 2b       	or	r18, r20
     f9a:	25 2b       	or	r18, r21
     f9c:	21 f4       	brne	.+8      	; 0xfa6 <.L2^B1>
     f9e:	08 95       	ret

00000fa0 <.L1^B1>:
     fa0:	0a 26       	eor	r0, r26
     fa2:	09 f4       	brne	.+2      	; 0xfa6 <.L2^B1>
     fa4:	a1 40       	sbci	r26, 0x01	; 1

00000fa6 <.L2^B1>:
     fa6:	a6 95       	lsr	r26
     fa8:	8f ef       	ldi	r24, 0xFF	; 255
     faa:	81 1d       	adc	r24, r1
     fac:	81 1d       	adc	r24, r1

00000fae <.L9^B1>:
     fae:	08 95       	ret

00000fb0 <__fp_split3>:
     fb0:	57 fd       	sbrc	r21, 7
     fb2:	90 58       	subi	r25, 0x80	; 128
     fb4:	44 0f       	add	r20, r20
     fb6:	55 1f       	adc	r21, r21
     fb8:	59 f0       	breq	.+22     	; 0xfd0 <.L4^B1>
     fba:	5f 3f       	cpi	r21, 0xFF	; 255
     fbc:	71 f0       	breq	.+28     	; 0xfda <.L5^B1>

00000fbe <.L1^B1>:
     fbe:	47 95       	ror	r20

00000fc0 <__fp_splitA>:
     fc0:	88 0f       	add	r24, r24
     fc2:	97 fb       	bst	r25, 7
     fc4:	99 1f       	adc	r25, r25
     fc6:	61 f0       	breq	.+24     	; 0xfe0 <.L6^B1>
     fc8:	9f 3f       	cpi	r25, 0xFF	; 255
     fca:	79 f0       	breq	.+30     	; 0xfea <.L7^B1>

00000fcc <.L3^B1>:
     fcc:	87 95       	ror	r24
     fce:	08 95       	ret

00000fd0 <.L4^B1>:
     fd0:	12 16       	cp	r1, r18
     fd2:	13 06       	cpc	r1, r19
     fd4:	14 06       	cpc	r1, r20
     fd6:	55 1f       	adc	r21, r21
     fd8:	f2 cf       	rjmp	.-28     	; 0xfbe <.L1^B1>

00000fda <.L5^B1>:
     fda:	46 95       	lsr	r20
     fdc:	f1 df       	rcall	.-30     	; 0xfc0 <__fp_splitA>
     fde:	08 c0       	rjmp	.+16     	; 0xff0 <.L8^B1>

00000fe0 <.L6^B1>:
     fe0:	16 16       	cp	r1, r22
     fe2:	17 06       	cpc	r1, r23
     fe4:	18 06       	cpc	r1, r24
     fe6:	99 1f       	adc	r25, r25
     fe8:	f1 cf       	rjmp	.-30     	; 0xfcc <.L3^B1>

00000fea <.L7^B1>:
     fea:	86 95       	lsr	r24
     fec:	71 05       	cpc	r23, r1
     fee:	61 05       	cpc	r22, r1

00000ff0 <.L8^B1>:
     ff0:	08 94       	sec
     ff2:	08 95       	ret

00000ff4 <__fp_zero>:
     ff4:	e8 94       	clt

00000ff6 <__fp_szero>:
     ff6:	bb 27       	eor	r27, r27
     ff8:	66 27       	eor	r22, r22
     ffa:	77 27       	eor	r23, r23
     ffc:	cb 01       	movw	r24, r22
     ffe:	97 f9       	bld	r25, 7
    1000:	08 95       	ret

00001002 <__gesf2>:
    1002:	0e 94 b4 07 	call	0xf68	; 0xf68 <__fp_cmp>
    1006:	08 f4       	brcc	.+2      	; 0x100a <.L1^B1>
    1008:	8f ef       	ldi	r24, 0xFF	; 255

0000100a <.L1^B1>:
    100a:	08 95       	ret

0000100c <__mulsf3>:
    100c:	0e 94 19 08 	call	0x1032	; 0x1032 <__mulsf3x>
    1010:	0c 94 8a 08 	jmp	0x1114	; 0x1114 <__fp_round>

00001014 <.L^B1>:
    1014:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <__fp_pscA>
    1018:	38 f0       	brcs	.+14     	; 0x1028 <.L1^B1>
    101a:	0e 94 83 08 	call	0x1106	; 0x1106 <__fp_pscB>
    101e:	20 f0       	brcs	.+8      	; 0x1028 <.L1^B1>
    1020:	95 23       	and	r25, r21
    1022:	11 f0       	breq	.+4      	; 0x1028 <.L1^B1>
    1024:	0c 94 73 08 	jmp	0x10e6	; 0x10e6 <__fp_inf>

00001028 <.L1^B1>:
    1028:	0c 94 79 08 	jmp	0x10f2	; 0x10f2 <__fp_nan>

0000102c <.L2^B1>:
    102c:	11 24       	eor	r1, r1
    102e:	0c 94 fb 07 	jmp	0xff6	; 0xff6 <__fp_szero>

00001032 <__mulsf3x>:
    1032:	0e 94 d8 07 	call	0xfb0	; 0xfb0 <__fp_split3>
    1036:	70 f3       	brcs	.-36     	; 0x1014 <.L^B1>

00001038 <__mulsf3_pse>:
    1038:	95 9f       	mul	r25, r21
    103a:	c1 f3       	breq	.-16     	; 0x102c <.L2^B1>
    103c:	95 0f       	add	r25, r21
    103e:	50 e0       	ldi	r21, 0x00	; 0
    1040:	55 1f       	adc	r21, r21
    1042:	62 9f       	mul	r22, r18
    1044:	f0 01       	movw	r30, r0
    1046:	72 9f       	mul	r23, r18
    1048:	bb 27       	eor	r27, r27
    104a:	f0 0d       	add	r31, r0
    104c:	b1 1d       	adc	r27, r1
    104e:	63 9f       	mul	r22, r19
    1050:	aa 27       	eor	r26, r26
    1052:	f0 0d       	add	r31, r0
    1054:	b1 1d       	adc	r27, r1
    1056:	aa 1f       	adc	r26, r26
    1058:	64 9f       	mul	r22, r20
    105a:	66 27       	eor	r22, r22
    105c:	b0 0d       	add	r27, r0
    105e:	a1 1d       	adc	r26, r1
    1060:	66 1f       	adc	r22, r22
    1062:	82 9f       	mul	r24, r18
    1064:	22 27       	eor	r18, r18
    1066:	b0 0d       	add	r27, r0
    1068:	a1 1d       	adc	r26, r1
    106a:	62 1f       	adc	r22, r18
    106c:	73 9f       	mul	r23, r19
    106e:	b0 0d       	add	r27, r0
    1070:	a1 1d       	adc	r26, r1
    1072:	62 1f       	adc	r22, r18
    1074:	83 9f       	mul	r24, r19
    1076:	a0 0d       	add	r26, r0
    1078:	61 1d       	adc	r22, r1
    107a:	22 1f       	adc	r18, r18
    107c:	74 9f       	mul	r23, r20
    107e:	33 27       	eor	r19, r19
    1080:	a0 0d       	add	r26, r0
    1082:	61 1d       	adc	r22, r1
    1084:	23 1f       	adc	r18, r19
    1086:	84 9f       	mul	r24, r20
    1088:	60 0d       	add	r22, r0
    108a:	21 1d       	adc	r18, r1
    108c:	82 2f       	mov	r24, r18
    108e:	76 2f       	mov	r23, r22
    1090:	6a 2f       	mov	r22, r26
    1092:	11 24       	eor	r1, r1
    1094:	9f 57       	subi	r25, 0x7F	; 127
    1096:	50 40       	sbci	r21, 0x00	; 0
    1098:	9a f0       	brmi	.+38     	; 0x10c0 <.L13^B1>
    109a:	f1 f0       	breq	.+60     	; 0x10d8 <.L15^B1>

0000109c <.L10^B1>:
    109c:	88 23       	and	r24, r24
    109e:	4a f0       	brmi	.+18     	; 0x10b2 <.L11^B1>
    10a0:	ee 0f       	add	r30, r30
    10a2:	ff 1f       	adc	r31, r31
    10a4:	bb 1f       	adc	r27, r27
    10a6:	66 1f       	adc	r22, r22
    10a8:	77 1f       	adc	r23, r23
    10aa:	88 1f       	adc	r24, r24
    10ac:	91 50       	subi	r25, 0x01	; 1
    10ae:	50 40       	sbci	r21, 0x00	; 0
    10b0:	a9 f7       	brne	.-22     	; 0x109c <.L10^B1>

000010b2 <.L11^B1>:
    10b2:	9e 3f       	cpi	r25, 0xFE	; 254
    10b4:	51 05       	cpc	r21, r1
    10b6:	80 f0       	brcs	.+32     	; 0x10d8 <.L15^B1>
    10b8:	0c 94 73 08 	jmp	0x10e6	; 0x10e6 <__fp_inf>

000010bc <.L12^B1>:
    10bc:	0c 94 fb 07 	jmp	0xff6	; 0xff6 <__fp_szero>

000010c0 <.L13^B1>:
    10c0:	5f 3f       	cpi	r21, 0xFF	; 255
    10c2:	e4 f3       	brlt	.-8      	; 0x10bc <.L12^B1>
    10c4:	98 3e       	cpi	r25, 0xE8	; 232
    10c6:	d4 f3       	brlt	.-12     	; 0x10bc <.L12^B1>

000010c8 <.L14^B1>:
    10c8:	86 95       	lsr	r24
    10ca:	77 95       	ror	r23
    10cc:	67 95       	ror	r22
    10ce:	b7 95       	ror	r27
    10d0:	f7 95       	ror	r31
    10d2:	e7 95       	ror	r30
    10d4:	9f 5f       	subi	r25, 0xFF	; 255
    10d6:	c1 f7       	brne	.-16     	; 0x10c8 <.L14^B1>

000010d8 <.L15^B1>:
    10d8:	fe 2b       	or	r31, r30
    10da:	88 0f       	add	r24, r24
    10dc:	91 1d       	adc	r25, r1
    10de:	96 95       	lsr	r25
    10e0:	87 95       	ror	r24
    10e2:	97 f9       	bld	r25, 7
    10e4:	08 95       	ret

000010e6 <__fp_inf>:
    10e6:	97 f9       	bld	r25, 7
    10e8:	9f 67       	ori	r25, 0x7F	; 127
    10ea:	80 e8       	ldi	r24, 0x80	; 128
    10ec:	70 e0       	ldi	r23, 0x00	; 0
    10ee:	60 e0       	ldi	r22, 0x00	; 0
    10f0:	08 95       	ret

000010f2 <__fp_nan>:
    10f2:	9f ef       	ldi	r25, 0xFF	; 255
    10f4:	80 ec       	ldi	r24, 0xC0	; 192
    10f6:	08 95       	ret

000010f8 <__fp_pscA>:
    10f8:	00 24       	eor	r0, r0
    10fa:	0a 94       	dec	r0
    10fc:	16 16       	cp	r1, r22
    10fe:	17 06       	cpc	r1, r23
    1100:	18 06       	cpc	r1, r24
    1102:	09 06       	cpc	r0, r25
    1104:	08 95       	ret

00001106 <__fp_pscB>:
    1106:	00 24       	eor	r0, r0
    1108:	0a 94       	dec	r0
    110a:	12 16       	cp	r1, r18
    110c:	13 06       	cpc	r1, r19
    110e:	14 06       	cpc	r1, r20
    1110:	05 06       	cpc	r0, r21
    1112:	08 95       	ret

00001114 <__fp_round>:
    1114:	09 2e       	mov	r0, r25
    1116:	03 94       	inc	r0
    1118:	00 0c       	add	r0, r0
    111a:	11 f4       	brne	.+4      	; 0x1120 <.L1^B1>
    111c:	88 23       	and	r24, r24
    111e:	52 f0       	brmi	.+20     	; 0x1134 <.L3^B1>

00001120 <.L1^B1>:
    1120:	bb 0f       	add	r27, r27
    1122:	40 f4       	brcc	.+16     	; 0x1134 <.L3^B1>
    1124:	bf 2b       	or	r27, r31
    1126:	11 f4       	brne	.+4      	; 0x112c <.L2^B1>
    1128:	60 ff       	sbrs	r22, 0
    112a:	04 c0       	rjmp	.+8      	; 0x1134 <.L3^B1>

0000112c <.L2^B1>:
    112c:	6f 5f       	subi	r22, 0xFF	; 255
    112e:	7f 4f       	sbci	r23, 0xFF	; 255
    1130:	8f 4f       	sbci	r24, 0xFF	; 255
    1132:	9f 4f       	sbci	r25, 0xFF	; 255

00001134 <.L3^B1>:
    1134:	08 95       	ret

00001136 <_exit>:
    1136:	f8 94       	cli

00001138 <__stop_program>:
    1138:	ff cf       	rjmp	.-2      	; 0x1138 <__stop_program>

0000113a <L0^A>:
    113a:	64 04       	cpc	r6, r4
    113c:	80 04       	cpc	r8, r0
    113e:	93 04       	cpc	r9, r3
    1140:	a0 04       	cpc	r10, r0
    1142:	e1 04       	cpc	r14, r1
    1144:	3c 05       	cpc	r19, r12
    1146:	6e 05       	cpc	r22, r14
    1148:	a0 05       	cpc	r26, r0
    114a:	4a 06       	cpc	r4, r26
